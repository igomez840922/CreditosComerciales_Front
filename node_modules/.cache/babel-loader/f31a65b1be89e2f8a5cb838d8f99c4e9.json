{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\InformacionAccionosta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\";\nimport moment from \"moment\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacionAccionista = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const history = useHistory();\n  const [botonValidation, setbotonValidation] = useState(false);\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\n  const [dataLocation, setLocationData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [shareholderRows, setShareholderRows] = useState([]);\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [tipo, settipo] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataAcciones, setdataAcciones] = useState({\n    \"transactId\": 0,\n    \"personId\": 0,\n    \"personType\": \"\",\n    \"idType\": \"\",\n    \"clientDocumentId\": \"\",\n    \"customerNumberT24\": \"\",\n    \"name\": \"\",\n    \"secondName\": \"\",\n    \"lastName\": \"\",\n    \"secondSurname\": \"\",\n    \"nationality\": \"\",\n    \"birthDate\": \"1998-08-17\",\n    \"yearsExperience\": 0,\n    \"participation\": 0\n  });\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmInformacionAccionista');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [formValid, setFormValid] = useState(false); // Form Submission\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setFormValid(true);\n  }\n\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    } // Read Api Service data  \n\n\n    loadInitialData(dataSession);\n    setDataReturn(props.jsonAccionistas);\n  }, [props.activeTab == 4]);\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  function loadInitialData(dataLocation) {\n    const api = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    // consultarAccionistaBD\n\n    api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataGeneralIA(resp);\n        dataReturn.datosTablaAccionistas = resp;\n        setDataReturn(dataReturn);\n        setShareholderRows(resp.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.clientDocumentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.nationality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(data.birthDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.participation, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.yearsExperience, \" \", t(\"Year\"), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setShareholderRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, 34567, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  function addAccionist(values, tipo) {\n    const dataSet = dataAcciones;\n    dataSet.participation = Number(values.participation);\n    dataSet.yearsExperience = Number(values.yearsExprience);\n    dataSet.transactId = Number(dataLocation.transactionId);\n    const datos = {\n      \"transactId\": Number(dataLocation.transactionId),\n      \"participation\": Number(values.participation),\n      \"yearsExperience\": Number(values.yearsExprience),\n      \"status\": true\n    };\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Procedemos a guardar el accionista                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    const apiBack = new BackendServices();\n\n    if (tipo == \"guardar\") {\n      // nuevoAccionista\n      apiBack.newShareholder(dataSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          loadInitialData();\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    } else {\n      datos.personId = dataAcciones.personId; // actualizarAccionistaBD\n\n      apiBack.actualizarAccionistaBD(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          loadInitialData();\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function updateData(data) {\n    setdataAcciones(data);\n    settipo(\"editar\");\n    setbotonValidation(true);\n    toggleShowModelAttachment();\n  }\n\n  function procesarDatosTabla(option, value) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                       Aqui procedemos a agregar un accionista a la lista                       */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                         Procedemos a eliminar el accionista de la lista                        */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n    }\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Shareholder Information\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmInformacionAccionista\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ID Number\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Participation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"YearsExprience\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: shareholderRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDetails\",\n              children: t(\"Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              className: \"form-control\",\n              name: \"informacionAccionistaDetails\",\n              id: \"informacionAccionistaDetails\",\n              type: \"textarea\",\n              rows: \"7\",\n              value: props.jsonAccionistas.observations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        loadInitialData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        loadInitialData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarAccionista\n\n        apiBack.deleteShareholder({\n          transactId: dataDelete.transactId,\n          shareholderId: dataDelete.shareholderId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            loadInitialData();\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalInfoAccionistas, {\n      dataGeneralIA: dataGeneralIA,\n      tipo: tipo,\n      addAccionist: addAccionist,\n      botones: botonValidation,\n      dataAcciones: dataAcciones,\n      procesarDatosTabla: procesarDatosTabla,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        toggleShowModelAttachment();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}, \"N6grdbyhPVe2b7yA/sVX8Blv3WU=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = InformacionAccionista;\nInformacionAccionista.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default InformacionAccionista;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InformacionAccionista$React.forwardRef\");\n$RefreshReg$(_c2, \"InformacionAccionista\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/InformacionAccionosta.js"],"names":["React","useState","useTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalInfoAccionistas","moment","ApiServicesCommon","BackendServices","SweetAlert","url","InformacionAccionista","forwardRef","props","ref","t","i18n","location","history","botonValidation","setbotonValidation","dataGeneralIA","setdataGeneralIA","dataLocation","setLocationData","data","showModelAttachment","setShowModelAttachment","shareholderRows","setShareholderRows","accionistasJSON","setAccionistasJson","jsonAccionistas","dataReturn","setDataReturn","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","tipo","settipo","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataAcciones","setdataAcciones","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","setFormValid","handleSubmit","event","errors","values","preventDefault","length","useEffect","dataSession","undefined","transactionId","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadInitialData","activeTab","formatDate","date","format","api","consultarAccionistaBD","then","resp","datosTablaAccionistas","map","index","clientDocumentId","name","secondName","lastName","secondSurname","nationality","birthDate","participation","yearsExperience","textAlign","updateData","addAccionist","dataSet","Number","yearsExprience","transactId","datos","apiBack","newShareholder","toggleShowModelAttachment","catch","error","personId","actualizarAccionistaBD","removeBodyCss","procesarDatosTabla","option","value","body","classList","add","e","observations","target","deleteShareholder","shareholderId","statusCode","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\"\r\nimport moment from \"moment\";\r\n\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\n\r\nconst InformacionAccionista = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const history = useHistory();\r\n\r\n  const [botonValidation, setbotonValidation] = useState(false);\r\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\r\n  const [dataLocation, setLocationData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [shareholderRows, setShareholderRows] = useState([]);\r\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataAcciones, setdataAcciones] = useState({\r\n    \"transactId\": 0,\r\n    \"personId\": 0,\r\n    \"personType\": \"\",\r\n    \"idType\": \"\",\r\n    \"clientDocumentId\": \"\",\r\n    \"customerNumberT24\": \"\",\r\n    \"name\": \"\",\r\n    \"secondName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"secondSurname\": \"\",\r\n    \"nationality\": \"\",\r\n    \"birthDate\": \"1998-08-17\",\r\n    \"yearsExperience\": 0,\r\n    \"participation\": 0\r\n  });\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmInformacionAccionista');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }))\r\n  const [formValid, setFormValid] = useState(false);\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n  }\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n\r\n    // Read Api Service data  \r\n    loadInitialData(dataSession);\r\n    setDataReturn(props.jsonAccionistas)\r\n  }, [props.activeTab == 4]);\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  function loadInitialData(dataLocation) {\r\n    const api = new BackendServices()\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    // consultarAccionistaBD\r\n    api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataGeneralIA(resp);\r\n        dataReturn.datosTablaAccionistas = resp;\r\n        setDataReturn(dataReturn)\r\n        setShareholderRows(resp.map((data, index) => (\r\n          <tr key={index}>\r\n            <td>{data.clientDocumentId}</td>\r\n            <td>{data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname}</td>\r\n            <td>{data.nationality}</td>\r\n            <td>{formatDate(data.birthDate)}</td>\r\n            <td>{data.participation}%</td>\r\n            <td>{data.yearsExperience} {t(\"Year\")}s</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <td></td>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n            </td>\r\n          </tr>)))\r\n      } else {\r\n        setShareholderRows(\r\n          <tr key={34567}>\r\n            <td colSpan=\"5\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    })\r\n\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  function addAccionist(values, tipo) {\r\n    const dataSet = dataAcciones;\r\n    dataSet.participation = Number(values.participation);\r\n    dataSet.yearsExperience = Number(values.yearsExprience);\r\n    dataSet.transactId = Number(dataLocation.transactionId);\r\n    const datos = {\r\n      \"transactId\": Number(dataLocation.transactionId),\r\n      \"participation\": Number(values.participation),\r\n      \"yearsExperience\": Number(values.yearsExprience),\r\n      \"status\": true\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Procedemos a guardar el accionista                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const apiBack = new BackendServices();\r\n    if (tipo == \"guardar\") {\r\n      // nuevoAccionista\r\n      apiBack.newShareholder(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData();\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      datos.personId = dataAcciones.personId;\r\n      // actualizarAccionistaBD\r\n      apiBack.actualizarAccionistaBD(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData();\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function updateData(data) {\r\n    setdataAcciones(data)\r\n    settipo(\"editar\");\r\n    setbotonValidation(true);\r\n    toggleShowModelAttachment()\r\n  }\r\n  function procesarDatosTabla(option, value) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                       Aqui procedemos a agregar un accionista a la lista                       */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                         Procedemos a eliminar el accionista de la lista                        */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Shareholder Information\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmInformacionAccionista\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"ID Number\")}</th>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Nationality\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Participation\")}</th>\r\n                  <th>{t(\"YearsExprience\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {shareholderRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDetails\">{t(\"Details\")}</Label>\r\n              <AvField onChange={(e) => { dataReturn.observations = e.target.value; setDataReturn(dataReturn); }}\r\n                className=\"form-control\"\r\n                name=\"informacionAccionistaDetails\"\r\n                id=\"informacionAccionistaDetails\"\r\n                type=\"textarea\"\r\n                rows=\"7\"\r\n                value={props.jsonAccionistas.observations}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarAccionista\r\n            apiBack.deleteShareholder({ transactId: dataDelete.transactId, shareholderId: dataDelete.shareholderId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                loadInitialData();\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n      <ModalInfoAccionistas dataGeneralIA={dataGeneralIA} tipo={tipo} addAccionist={addAccionist} botones={botonValidation} dataAcciones={dataAcciones} procesarDatosTabla={procesarDatosTabla} isOpen={showModelAttachment} toggle={() => { toggleShowModelAttachment() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n})\r\n\r\nInformacionAccionista.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default InformacionAccionista;\r\n"]},"metadata":{},"sourceType":"module"}