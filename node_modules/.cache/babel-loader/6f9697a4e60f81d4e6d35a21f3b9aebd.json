{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nexport const useManagementModal = () => {\n  _s();\n\n  // hooks\n  const {\n    t,\n    i18n\n  } = useTranslation(); // custom hooks\n\n  const [showModal, setShowModal] = useState(false);\n  const [showModalQuoter, setShowModalQuoter] = useState(false);\n  const [showModalNewClient, setShowModalNewClient] = useState(false);\n  const [dataPrefillClient, setDataPrefillClient] = useState([]);\n\n  const hdlCkShowModal = () => {\n    setShowModal(true);\n  };\n\n  const hdlCkCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const hdlCkShowModalNewClient = () => {\n    setShowModalNewClient(true);\n  };\n\n  const hdlCkCloseModalNewClient = () => {\n    setShowModalNewClient(false);\n    setDataPrefillClient([]);\n  };\n\n  const hdlCkShowModalQuoter = () => {\n    console.log(\"handle click!\");\n    setShowModalQuoter(true);\n  };\n\n  const hdlCkCloseModalQuoter = () => {\n    setDataPrefillClient([]);\n    setShowModalQuoter(false);\n  };\n\n  const hdlTest = data => {\n    // renameKeys({ partyType: \"typePerson\" }, data);\n    helperChangeDataClient(data[0]);\n    setDataPrefillClient(data);\n    hdlCkShowModalNewClient();\n  };\n\n  const helperChangeDataClient = dataClient => {\n    dataClient[\"partyType\"] = dataClient[\"partyType\"] === \"1\" || dataClient[\"partyType\"] === \"Natural\" ? \"Natural\" : \"Juridico\";\n  };\n\n  const renameKeys = (keysMap, obj) => Object.keys(obj).reduce((acc, key) => ({ ...acc,\n    ...{\n      [keysMap[key] || key]: obj[key]\n    }\n  }), {});\n\n  return {\n    hdlTest,\n    showModal,\n    showModalNewClient,\n    showModalQuoter,\n    dataPrefillClient,\n    hdlCkShowModal,\n    hdlCkCloseModal,\n    hdlCkShowModalNewClient,\n    hdlCkCloseModalNewClient,\n    hdlCkShowModalQuoter,\n    hdlCkCloseModalQuoter\n  };\n};\n\n_s(useManagementModal, \"jdiMb85Gz2AWKrEFOVcy09ou6ms=\", false, function () {\n  return [useTranslation];\n});","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/Hooks/useManagementModal.js"],"names":["useState","useTranslation","useManagementModal","t","i18n","showModal","setShowModal","showModalQuoter","setShowModalQuoter","showModalNewClient","setShowModalNewClient","dataPrefillClient","setDataPrefillClient","hdlCkShowModal","hdlCkCloseModal","hdlCkShowModalNewClient","hdlCkCloseModalNewClient","hdlCkShowModalQuoter","console","log","hdlCkCloseModalQuoter","hdlTest","data","helperChangeDataClient","dataClient","renameKeys","keysMap","obj","Object","keys","reduce","acc","key"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AACtC;AACA,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcH,cAAc,EAAlC,CAFsC,CAGtC;;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,kBAAD,EAAqBC,qBAArB,IAA8CV,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMa,cAAc,GAAG,MAAM;AAC3BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,eAAe,GAAG,MAAM;AAC5BR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMS,uBAAuB,GAAG,MAAM;AACpCL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GAFD;;AAIA,QAAMM,wBAAwB,GAAG,MAAM;AACrCN,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACD,GAHD;;AAKA,QAAMK,oBAAoB,GAAG,MAAM;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAHD;;AAKA,QAAMY,qBAAqB,GAAG,MAAM;AAClCR,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAJ,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHD;;AAKA,QAAMa,OAAO,GAAIC,IAAD,IAAU;AACxB;AACAC,IAAAA,sBAAsB,CAACD,IAAI,CAAC,CAAD,CAAL,CAAtB;AACAV,IAAAA,oBAAoB,CAACU,IAAD,CAApB;AACAP,IAAAA,uBAAuB;AACxB,GALD;;AAOA,QAAMQ,sBAAsB,GAAIC,UAAD,IAAgB;AAC7CA,IAAAA,UAAU,CAAC,WAAD,CAAV,GACEA,UAAU,CAAC,WAAD,CAAV,KAA4B,GAA5B,IAAmCA,UAAU,CAAC,WAAD,CAAV,KAA4B,SAA/D,GACI,SADJ,GAEI,UAHN;AAID,GALD;;AAOA,QAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,GAAV,KACjBC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,CACE,CAACC,GAAD,EAAMC,GAAN,MAAe,EACb,GAAGD,GADU;AAEb,OAAG;AAAE,OAACL,OAAO,CAACM,GAAD,CAAP,IAAgBA,GAAjB,GAAuBL,GAAG,CAACK,GAAD;AAA5B;AAFU,GAAf,CADF,EAKE,EALF,CADF;;AASA,SAAO;AACLX,IAAAA,OADK;AAELhB,IAAAA,SAFK;AAGLI,IAAAA,kBAHK;AAILF,IAAAA,eAJK;AAKLI,IAAAA,iBALK;AAMLE,IAAAA,cANK;AAOLC,IAAAA,eAPK;AAQLC,IAAAA,uBARK;AASLC,IAAAA,wBATK;AAULC,IAAAA,oBAVK;AAWLG,IAAAA;AAXK,GAAP;AAaD,CAxEM;;GAAMlB,kB;UAESD,c","sourcesContent":["import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const useManagementModal = () => {\r\n  // hooks\r\n  const { t, i18n } = useTranslation();\r\n  // custom hooks\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showModalQuoter, setShowModalQuoter] = useState(false);\r\n  const [showModalNewClient, setShowModalNewClient] = useState(false);\r\n  const [dataPrefillClient, setDataPrefillClient] = useState([]);\r\n\r\n  const hdlCkShowModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const hdlCkCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const hdlCkShowModalNewClient = () => {\r\n    setShowModalNewClient(true);\r\n  };\r\n\r\n  const hdlCkCloseModalNewClient = () => {\r\n    setShowModalNewClient(false);\r\n    setDataPrefillClient([]);\r\n  };\r\n\r\n  const hdlCkShowModalQuoter = () => {\r\n    console.log(\"handle click!\");\r\n    setShowModalQuoter(true);\r\n  };\r\n\r\n  const hdlCkCloseModalQuoter = () => {\r\n    setDataPrefillClient([]);\r\n    setShowModalQuoter(false);\r\n  };\r\n\r\n  const hdlTest = (data) => {\r\n    // renameKeys({ partyType: \"typePerson\" }, data);\r\n    helperChangeDataClient(data[0]);\r\n    setDataPrefillClient(data);\r\n    hdlCkShowModalNewClient();\r\n  };\r\n\r\n  const helperChangeDataClient = (dataClient) => {\r\n    dataClient[\"partyType\"] =\r\n      dataClient[\"partyType\"] === \"1\" || dataClient[\"partyType\"] === \"Natural\"\r\n        ? \"Natural\"\r\n        : \"Juridico\";\r\n  };\r\n\r\n  const renameKeys = (keysMap, obj) =>\r\n    Object.keys(obj).reduce(\r\n      (acc, key) => ({\r\n        ...acc,\r\n        ...{ [keysMap[key] || key]: obj[key] },\r\n      }),\r\n      {}\r\n    );\r\n\r\n  return {\r\n    hdlTest,\r\n    showModal,\r\n    showModalNewClient,\r\n    showModalQuoter,\r\n    dataPrefillClient,\r\n    hdlCkShowModal,\r\n    hdlCkCloseModal,\r\n    hdlCkShowModalNewClient,\r\n    hdlCkCloseModalNewClient,\r\n    hdlCkShowModalQuoter,\r\n    hdlCkCloseModalQuoter,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}