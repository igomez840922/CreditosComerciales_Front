{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from \"react\";\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\"; // Import Routes all\n\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"; // Import all middleware\n\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"; // layouts Format\n\nimport VerticalLayout from \"./components/VerticalLayout/\";\nimport HorizontalLayout from \"./components/HorizontalLayout/\";\nimport NonAuthLayout from \"./components/NonAuthLayout\"; // Import scss\n\nimport \"./assets/scss/theme.scss\";\nimport \"./assets/scss/custom.scss\";\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\";\nimport packageJson from \"../package.json\"; // Activating fake backend\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend();\n\nconst App = props => {\n  _s();\n\n  //On Mounting (componentDidMount)\n  React.useEffect(() => {\n    CheckCaching();\n  }, []); //Check Version para borrar la caché y actualizar cambios realizados en nueva version\n\n  function CheckCaching() {\n    let version = localStorage.getItem('version');\n\n    if (version) {\n      if (version !== packageJson.version) {\n        if ('caches' in window) {\n          caches.keys().then(names => {\n            // Delete all the cache files\n            names.forEach(name => {\n              caches.delete(name);\n            });\n          });\n        }\n\n        localStorage.clear();\n        localStorage.setItem('version', packageJson.version); // Makes sure the page reloads. Changes are only visible after you refresh.\n\n        window.location.reload(true);\n      }\n    } else {\n      localStorage.clear();\n      localStorage.setItem('version', packageJson.version);\n      window.location.reload(true);\n    }\n\n    console.log(\"version\", version);\n  }\n\n  ;\n\n  function getLayout() {\n    let layoutCls = VerticalLayout;\n\n    switch (props.layout.layoutType) {\n      case \"horizontal\":\n        layoutCls = HorizontalLayout;\n        break;\n\n      default:\n        layoutCls = VerticalLayout;\n        break;\n    }\n\n    return layoutCls;\n  }\n\n  const Layout = getLayout();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [authRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n          path: route.path,\n          layout: NonAuthLayout,\n          component: route.component,\n          isAuthProtected: false\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)), userRoutes.map((route, idx) => /*#__PURE__*/_jsxDEV(Authmiddleware, {\n          path: route.path,\n          layout: Layout,\n          component: route.component,\n          isAuthProtected: true,\n          exact: true\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nApp.propTypes = {\n  layout: PropTypes.any\n};\n\nconst mapStateToProps = state => {\n  return {\n    layout: state.Layout\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/App.js"],"names":["PropTypes","React","Switch","BrowserRouter","Router","connect","userRoutes","authRoutes","Authmiddleware","VerticalLayout","HorizontalLayout","NonAuthLayout","fakeBackend","packageJson","App","props","useEffect","CheckCaching","version","localStorage","getItem","window","caches","keys","then","names","forEach","name","delete","clear","setItem","location","reload","console","log","getLayout","layoutCls","layout","layoutType","Layout","map","route","idx","path","component","propTypes","any","mapStateToProps","state"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React from \"react\"\r\n\r\nimport { Switch, BrowserRouter as Router } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\n// Import Routes all\r\nimport { userRoutes, authRoutes } from \"./routes/allRoutes\"\r\n\r\n// Import all middleware\r\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\"\r\n\r\n// layouts Format\r\nimport VerticalLayout from \"./components/VerticalLayout/\"\r\nimport HorizontalLayout from \"./components/HorizontalLayout/\"\r\nimport NonAuthLayout from \"./components/NonAuthLayout\"\r\n\r\n// Import scss\r\nimport \"./assets/scss/theme.scss\"\r\nimport \"./assets/scss/custom.scss\"\r\n\r\n\r\nimport fakeBackend from \"./helpers/AuthType/fakeBackend\"\r\n\r\nimport packageJson from \"../package.json\";\r\n\r\n// Activating fake backend\r\nfakeBackend()\r\n\r\nconst App = props => {\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    CheckCaching();\r\n  }, []);\r\n\r\n  //Check Version para borrar la caché y actualizar cambios realizados en nueva version\r\n  function CheckCaching() {\r\n    let version = localStorage.getItem('version');\r\n    if (version) {\r\n      if (version !== packageJson.version) {\r\n        if ('caches' in window) {\r\n          caches.keys().then((names) => {\r\n            // Delete all the cache files\r\n            names.forEach(name => {\r\n              caches.delete(name);\r\n            })\r\n          });\r\n        }\r\n\r\n        localStorage.clear();\r\n        localStorage.setItem('version', packageJson.version);\r\n\r\n        // Makes sure the page reloads. Changes are only visible after you refresh.\r\n        window.location.reload(true);\r\n      }\r\n    }\r\n    else {\r\n      localStorage.clear();\r\n      localStorage.setItem('version', packageJson.version);\r\n      window.location.reload(true);\r\n    }\r\n    console.log(\"version\", version);\r\n  };\r\n\r\n\r\n  function getLayout() {\r\n    let layoutCls = VerticalLayout\r\n\r\n    switch (props.layout.layoutType) {\r\n      case \"horizontal\":\r\n        layoutCls = HorizontalLayout\r\n        break\r\n      default:\r\n        layoutCls = VerticalLayout\r\n        break\r\n    }\r\n    return layoutCls\r\n  }\r\n\r\n  const Layout = getLayout();\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n\r\n        <Switch>\r\n          {authRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={NonAuthLayout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={false}\r\n            />\r\n          ))}\r\n\r\n          {userRoutes.map((route, idx) => (\r\n            <Authmiddleware\r\n              path={route.path}\r\n              layout={Layout}\r\n              component={route.component}\r\n              key={idx}\r\n              isAuthProtected={true}\r\n              exact\r\n            />\r\n          ))}\r\n        </Switch>\r\n\r\n      </Router>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n  layout: PropTypes.any\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    layout: state.Layout,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App)"]},"metadata":{},"sourceType":"module"}