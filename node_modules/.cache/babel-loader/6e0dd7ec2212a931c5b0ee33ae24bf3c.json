{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useTranslation,withTranslation}from\"react-i18next\";import{Link}from\"react-router-dom\";import React,{useState}from\"react\";import{useHistory}from'react-router-dom';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,Typography}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskStatus=function TaskStatus(props){var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showSweetAlert=_useState2[0],setshowSweetAlert=_useState2[1];var history=useHistory();function validateStatus(taskStatus,pathname,data){console.log(taskStatus);if(taskStatus==\"Reservado\"){setshowSweetAlert(true);}}function cancelShow(){setshowSweetAlert(false);}function readOnly(){props.data.readOnly=true;console.log(props.data);history.push({pathname:props.pathname,data:props.data});}function claim(){props.data.readOnly=false;console.log(props.data);history.push({pathname:props.pathname,data:props.data});}return/*#__PURE__*/_jsxs(React.Fragment,{children:[props.taskStatus==\"Reservado\"?/*#__PURE__*/_jsx(Link,{onClick:function onClick(e){validateStatus(props.taskStatus,props.pathname,props.data);},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-search-outline mdi-24px\"})}):/*#__PURE__*/_jsx(Link,{to:{pathname:props.pathname,data:props.data},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-search-outline mdi-24px\"})}),/*#__PURE__*/_jsxs(Dialog,{open:showSweetAlert,children:[/*#__PURE__*/_jsx(DialogTitle,{children:t(\"taskStatusTitle\")}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:t(\"taskStatusMessage\")}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\" \",t(\"taskStatusMessageDetail\")]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:cancelShow,variant:\"contained\",className:\"btn btn-danger-dialog\",children:t(\"Cancel\")}),/*#__PURE__*/_jsx(Button,{onClick:claim,variant:\"contained\",className:\"btn btn-success-dialog\",children:t(\"taskStatusClaim\")}),/*#__PURE__*/_jsx(Button,{onClick:readOnly,variant:\"contained\",className:\"btn btn-success-dialog\",children:t(\"taskStatusReadOnly\")})]})]})]});};export default TaskStatus;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/ActivityTask/taskStatus.js"],"names":["useTranslation","withTranslation","Link","React","useState","useHistory","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","TaskStatus","props","t","i18n","showSweetAlert","setshowSweetAlert","history","validateStatus","taskStatus","pathname","data","console","log","cancelShow","readOnly","push","claim","e"],"mappings":"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","sourcesContent":["import { useTranslation, withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nconst TaskStatus = props => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [showSweetAlert, setshowSweetAlert] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function validateStatus(taskStatus, pathname, data) {\r\n        console.log(taskStatus);\r\n        if (taskStatus == \"Reservado\") {\r\n            setshowSweetAlert(true);\r\n        } \r\n    }\r\n\r\n    function cancelShow() {\r\n        setshowSweetAlert(false);\r\n    }\r\n\r\n    function readOnly() {\r\n        props.data.readOnly = true;\r\n        console.log(props.data);\r\n        history.push({\r\n            pathname: props.pathname,\r\n            data: props.data,\r\n        });\r\n    }\r\n\r\n    function claim() {\r\n        props.data.readOnly = false;\r\n        console.log(props.data);\r\n        history.push({\r\n            pathname: props.pathname,\r\n            data: props.data,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.taskStatus == \"Reservado\" ?\r\n                <Link\r\n\r\n                    onClick={(e) => { validateStatus(props.taskStatus, props.pathname, props.data) }}\r\n                >\r\n                    <i className=\"mdi mdi-file-search-outline mdi-24px\"></i>\r\n                </Link> :\r\n                <Link\r\n                    to={{\r\n                        pathname: props.pathname,\r\n                        data: props.data,\r\n                    }}\r\n                >\r\n                    <i className=\"mdi mdi-file-search-outline mdi-24px\"></i>\r\n                </Link>\r\n            }\r\n\r\n            <Dialog\r\n                open={showSweetAlert}\r\n            >\r\n                <DialogTitle>\r\n                    {t(\"taskStatusTitle\")}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"body2\">\r\n                        {t(\"taskStatusMessage\")}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\"> {t(\"taskStatusMessageDetail\")}</Typography>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={cancelShow}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-danger-dialog\">\r\n                        {t(\"Cancel\")}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={claim}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-success-dialog\">\r\n                        {t(\"taskStatusClaim\")}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={readOnly}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-success-dialog\">\r\n                        {t(\"taskStatusReadOnly\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\nTaskStatus.propTypes = {\r\n    taskStatus: PropTypes.any,\r\n    pathname: PropTypes.any,\r\n    data: PropTypes.any\r\n}\r\nexport default TaskStatus;\r\n\r\n"]},"metadata":{},"sourceType":"module"}