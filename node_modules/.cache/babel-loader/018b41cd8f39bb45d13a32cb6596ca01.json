{"ast":null,"code":"import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import TaskListPostownersModel from\"../../models/BPM/TaskListPostownersModel\";import{GetDashBoardModel}from\"../../models\";import ApiServiceBpm from\"../ApiServiceBpm\";import*as url from\"../../helpers/url_helper\";import*as opt from\"../../helpers/options_helper\";import qs from\"qs\";import{result}from\"lodash\";var Services=/*#__PURE__*/function(_ApiServiceBpm){_inherits(Services,_ApiServiceBpm);var _super=_createSuper(Services);function Services(){_classCallCheck(this,Services);return _super.apply(this,arguments);}_createClass(Services,[{key:\"createNewInstance\",value:/* ------------------------------------------------------------------------------------------------------------------ */ /*                                 retorna las actividades para la bandeja de entrada                                 */ /* ------------------------------------------------------------------------------------------------------------------ */ //creamos un nueva instancia de proceso en BPM...    \nfunction(){var _createNewInstance=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var number,result1,result2;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return this.startProcess();case 3:number=_context.sent;if(!(number!==null&&number!==undefined&&number>0)){_context.next=14;break;}_context.next=7;return this.getTasksByPrcess(number);case 7:result1=_context.sent;if(!(result1!==undefined)){_context.next=14;break;}_context.next=11;return this.startedStatusTask(result1.taskId);case 11:result2=_context.sent;if(!(result2!==undefined)){_context.next=14;break;}return _context.abrupt(\"return\",result1);case 14:_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 19:return _context.abrupt(\"return\",undefined);case 20:case\"end\":return _context.stop();}}},_callee,this,[[0,16]]);}));function createNewInstance(){return _createNewInstance.apply(this,arguments);}return createNewInstance;}()//retorna la bandeja de entrada\n},{key:\"getDashBoard\",value:function(){var _getDashBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.get(url.URL_BPM_DASHBOARD);case 2:result=_context2.sent;return _context2.abrupt(\"return\",GetDashBoardModel.fromJson(result));case 4:case\"end\":return _context2.stop();}}},_callee2,this);}));function getDashBoard(_x){return _getDashBoard.apply(this,arguments);}return getDashBoard;}()//Cheque e Inicializa la tarea\n},{key:\"checkAndStartTask\",value:function(){var _checkAndStartTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(locationData){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;console.log('checkAndStartTask',locationData);_context3.next=4;return this.startedStatusTask(locationData.taskId);case 4:return _context3.abrupt(\"return\",true);case 7:_context3.prev=7;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 10:return _context3.abrupt(\"return\",false);case 11:case\"end\":return _context3.stop();}}},_callee3,this,[[0,7]]);}));function checkAndStartTask(_x2){return _checkAndStartTask.apply(this,arguments);}return checkAndStartTask;}()//retorna las tareas de un proceso especifico\n},{key:\"getTasksByPrcess\",value:function(){var _getTasksByPrcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(instanceId){var result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.get(url.URL_BPM_DASHBOARD);case 2:result=_context4.sent;result=GetDashBoardModel.fromJson(result);return _context4.abrupt(\"return\",result.results.filter(function(e){return e.instanceId===instanceId;})[0]);case 5:case\"end\":return _context4.stop();}}},_callee4,this);}));function getTasksByPrcess(_x3){return _getTasksByPrcess.apply(this,arguments);}return getTasksByPrcess;}()//crea e inicia una nueva instancia de Proceso y actividad\n},{key:\"startProcess\",value:function(){var _startProcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var data,result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0://Estructura de la data que se le debe pasar\ndata={\"containerId\":url.WORD_BPM_CONTAINERID,\"processId\":url.WORD_BPM_PROCESSID,\"parametros\":{\"values\":{\"info\":\"\",\"processId\":opt.PROCESS_BUSQUEDADESCARTE.toString(),\"activityId\":\"0\",\"transactionId\":\"\",\"customerId\":\"\",\"applicationNumber\":\"\",\"procedureNumber\":\"\",\"requestId\":\"\",\"facilityId\":\"\",\"dambientalparalelo\":\"\",\"decision\":\"\",\"id\":\"\",\"monto\":0,\"status\":\"\",\"decicionforma\":\"\",\"cargo\":\"cargo\",\"statuscredito\":\"\",\"statusadm\":\"\",\"statusformali\":\"\",\"tiposolicitud\":\"\",\"origensolicitud\":\"\",\"dcreditoparalelo\":\"\",\"regresar\":\"\",\"rol\":\"\"}}};_context5.next=3;return this.post(url.URL_BPM_STARTPROCESS,data);case 3:result=_context5.sent;return _context5.abrupt(\"return\",result.body.processInstanceId);case 5:case\"end\":return _context5.stop();}}},_callee5,this);}));function startProcess(){return _startProcess.apply(this,arguments);}return startProcess;}()},{key:\"authentication\",value:function(){var _authentication=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data){var result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return this.post(url.URL_BPM_LOGIN,data);case 2:result=_context6.sent;return _context6.abrupt(\"return\",result.status);case 4:case\"end\":return _context6.stop();}}},_callee6,this);}));function authentication(_x4){return _authentication.apply(this,arguments);}return authentication;}()},{key:\"startedStatusTask\",value:function(){var _startedStatusTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(taskId){var data,result;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;data={\"containerId\":url.WORD_BPM_CONTAINERID,\"taskId\":taskId,\"taskStatus\":url.WORD_BPM_STARTED};_context7.next=4;return this.put(url.URL_BPM_STATUSTASK,data);case 4:result=_context7.sent;if(!(result.status===\"OK\")){_context7.next=7;break;}return _context7.abrupt(\"return\",result);case 7:_context7.next=12;break;case 9:_context7.prev=9;_context7.t0=_context7[\"catch\"](0);console.error(\"api startedStatusTask:\",_context7.t0);case 12:return _context7.abrupt(\"return\",undefined);case 13:case\"end\":return _context7.stop();}}},_callee7,this,[[0,9]]);}));function startedStatusTask(_x5){return _startedStatusTask.apply(this,arguments);}return startedStatusTask;}()},{key:\"completedStatusTask\",value:function(){var _completedStatusTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(taskId,values){var data,result;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;/* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */data={\"containerId\":url.WORD_BPM_CONTAINERID,\"taskId\":taskId,\"taskStatus\":url.WORD_BPM_COMPLETED,\"parametros\":{\"values\":values}};_context8.next=4;return this.put(url.URL_BPM_STATUSTASK,data);case 4:result=_context8.sent;if(!(result.status===\"OK\")){_context8.next=7;break;}return _context8.abrupt(\"return\",result);case 7:_context8.next=12;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);console.error(\"api completedStatusTask:\",_context8.t0);case 12:return _context8.abrupt(\"return\",undefined);case 13:case\"end\":return _context8.stop();}}},_callee8,this,[[0,9]]);}));function completedStatusTask(_x6,_x7){return _completedStatusTask.apply(this,arguments);}return completedStatusTask;}()},{key:\"abortProcess\",value:function(){var _abortProcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(instanceId){var data,result;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.prev=0;console.log(\"abortProcess\",instanceId);//Estructura de la data que se le debe pasar\ndata={\"containerId\":url.WORD_BPM_CONTAINERID,\"processInstanceId\":instanceId};console.log(\"data\",data);_context9.next=6;return this.del(url.URL_BPM_ABORTPROCESS,data);case 6:result=_context9.sent;if(!(result.status===\"OK\")){_context9.next=9;break;}return _context9.abrupt(\"return\",result);case 9:_context9.next=14;break;case 11:_context9.prev=11;_context9.t0=_context9[\"catch\"](0);console.error(\"api abortProcess:\",_context9.t0);case 14:return _context9.abrupt(\"return\",undefined);case 15:case\"end\":return _context9.stop();}}},_callee9,this,[[0,11]]);}));function abortProcess(_x8){return _abortProcess.apply(this,arguments);}return abortProcess;}()},{key:\"updatevariables\",value:function(){var _updatevariables=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(instanceId,values){var data,result;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:_context10.prev=0;/* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */data={\"containerId\":url.WORD_BPM_CONTAINERID,\"processInstanceId\":instanceId,\"parametros\":{\"values\":values}};_context10.next=4;return this.post(url.URL_BPM_UPDATEVAR,data);case 4:result=_context10.sent;if(!(result.status===\"OK\")){_context10.next=7;break;}return _context10.abrupt(\"return\",result);case 7:_context10.next=12;break;case 9:_context10.prev=9;_context10.t0=_context10[\"catch\"](0);console.error(\"api completedStatusTask:\",_context10.t0);case 12:return _context10.abrupt(\"return\",undefined);case 13:case\"end\":return _context10.stop();}}},_callee10,this,[[0,9]]);}));function updatevariables(_x9,_x10){return _updatevariables.apply(this,arguments);}return updatevariables;}()//Retorna la imagen relacionada a un proceso\n},{key:\"wacthprocess\",value:function(){var _wacthprocess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(processInstanceId){var params,data,result;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.prev=0;params={containerId:url.WORD_BPM_CONTAINERID,processInstanceId:processInstanceId};data=qs.stringify(params);_context11.next=5;return this.get(url.URL_BPM_WATCHPROCESS+\"?\"+data);case 5:result=_context11.sent;console.log(\"wacthprocess\",result);return _context11.abrupt(\"return\",result.body.response);case 10:_context11.prev=10;_context11.t0=_context11[\"catch\"](0);console.error(_context11.t0);case 13:return _context11.abrupt(\"return\",undefined);case 14:case\"end\":return _context11.stop();}}},_callee11,this,[[0,10]]);}));function wacthprocess(_x11){return _wacthprocess.apply(this,arguments);}return wacthprocess;}()}]);return Services;}(ApiServiceBpm);export{Services as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/BpmServices/Services.js"],"names":["TaskListPostownersModel","GetDashBoardModel","ApiServiceBpm","url","opt","qs","result","Services","startProcess","number","undefined","getTasksByPrcess","result1","startedStatusTask","taskId","result2","console","error","params","get","URL_BPM_DASHBOARD","fromJson","locationData","log","instanceId","results","filter","e","data","WORD_BPM_CONTAINERID","WORD_BPM_PROCESSID","PROCESS_BUSQUEDADESCARTE","toString","post","URL_BPM_STARTPROCESS","body","processInstanceId","URL_BPM_LOGIN","status","WORD_BPM_STARTED","put","URL_BPM_STATUSTASK","values","WORD_BPM_COMPLETED","del","URL_BPM_ABORTPROCESS","URL_BPM_UPDATEVAR","containerId","stringify","URL_BPM_WATCHPROCESS","response"],"mappings":"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","sourcesContent":["\r\nimport TaskListPostownersModel from \"../../models/BPM/TaskListPostownersModel\";\r\nimport { GetDashBoardModel } from \"../../models\";\r\nimport ApiServiceBpm from \"../ApiServiceBpm\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport qs from \"qs\";\r\nimport { result } from \"lodash\";\r\n\r\nexport default class Services extends ApiServiceBpm {\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  /*                                 retorna las actividades para la bandeja de entrada                                 */\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  \r\n  \r\n  //creamos un nueva instancia de proceso en BPM...    \r\n  async createNewInstance(){  \r\n    try{\r\n      var number = await this.startProcess(); //iniciamos una nueva instancia de proceso en BPM...    \r\n      if(number!== null && number !==undefined && number > 0){\r\n        var result1 = await this.getTasksByPrcess(number);//buscamos la tarea que crea el nuevo proceso\r\n        if(result1 !== undefined){\r\n            var result2 = await this.startedStatusTask(result1.taskId);//iniciamos la tarea\r\n            if(result2!==undefined){           \r\n              return result1; //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\r\n            }\r\n        }\r\n      }\r\n    }\r\n    catch(err){\r\n      console.error(err);\r\n    }\r\n    return undefined;\r\n  }\r\n  \r\n  //retorna la bandeja de entrada\r\n  async getDashBoard(params) {\r\n    var result = await this.get(url.URL_BPM_DASHBOARD);\r\n    return GetDashBoardModel.fromJson(result);\r\n  }\r\n\r\n  //Cheque e Inicializa la tarea\r\n  async checkAndStartTask(locationData) {\r\n    try {\r\n      console.log('checkAndStartTask',locationData);\r\n      \r\n      await this.startedStatusTask(locationData.taskId)\r\n        return true;\r\n      //chequear si la tarea no ha sido iniciada\r\n      /*if(locationData.taskStatus === \"Ready\" || locationData.taskStatus === \"Listo\"){        \r\n        //Iniciamos la nueva tarea en BPM   \r\n        await this.startedStatusTask(locationData.taskId)\r\n        return true;\r\n      }\r\n      else{\r\n        return true;\r\n      }      */\r\n    }\r\n    catch (err) {console.error(err)}\r\n    return false;\r\n  }\r\n\r\n  //retorna las tareas de un proceso especifico\r\n  async getTasksByPrcess(instanceId) {\r\n\r\n    var result = await this.get(url.URL_BPM_DASHBOARD);\r\n\r\n    result = GetDashBoardModel.fromJson(result);\r\n\r\n    return result.results.filter((e) => e.instanceId === instanceId)[0];\r\n  }\r\n\r\n  //crea e inicia una nueva instancia de Proceso y actividad\r\n  async startProcess() {\r\n    //Estructura de la data que se le debe pasar\r\n    var data = {\r\n      \"containerId\": url.WORD_BPM_CONTAINERID,\r\n      \"processId\": url.WORD_BPM_PROCESSID,\r\n      \"parametros\": {\r\n        \"values\": {\r\n          \"info\":\"\", \r\n          \"processId\":opt.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\":\"0\",                    \r\n          \"transactionId\": \"\",\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"requestId\":\"\",\r\n          \"facilityId\":\"\",\r\n          \"dambientalparalelo\":\"\",\r\n          \"decision\":\"\",\r\n          \"id\":\"\",\r\n          \"monto\":0,\r\n          \"status\":\"\",\r\n          \"decicionforma\":\"\",\r\n          \"cargo\":\"cargo\",\r\n          \"statuscredito\":\"\",\r\n          \"statusadm\":\"\",\r\n          \"statusformali\":\"\",\r\n          \"tiposolicitud\":\"\",\r\n          \"origensolicitud\":\"\",\r\n          \"dcreditoparalelo\":\"\",\r\n          \"regresar\":\"\",\r\n          \"rol\":\"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    var result = await this.post(url.URL_BPM_STARTPROCESS, data);\r\n    /*\r\n    {\r\n    \"body\": {\r\n        \"processInstanceId\": \"8124\",\r\n        \"containers\": null,\r\n        \"response\": null\r\n    },\r\n    \"status\": \"CREATED\",\r\n    \"businessStatus\": \"\",\r\n    \"timeResponse\": \"2021-12-06 13:41:57\",\r\n    \"message\": null,\r\n    \"path\": \"/api-jbpm-0.0.1-SNAPSHOT/soaint-toolbox-eis/bpm-api/v0/processes/startProcess\",\r\n    \"transactionState\": null\r\n    }\r\n    */\r\n\r\n    return result.body.processInstanceId;\r\n  }\r\n\r\n  async authentication(data) {\r\n    var result = await this.post(url.URL_BPM_LOGIN, data);\r\n    return result.status; //OK\r\n  }\r\n\r\n  async startedStatusTask(taskId) {\r\n    try {\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"taskId\": taskId,\r\n        \"taskStatus\": url.WORD_BPM_STARTED,\r\n      }\r\n\r\n      var result = await this.put(url.URL_BPM_STATUSTASK, data);\r\n\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api startedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async completedStatusTask(taskId, values) {\r\n    try {\r\n      /* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"taskId\": taskId,\r\n        \"taskStatus\": url.WORD_BPM_COMPLETED,\r\n        \"parametros\": {\r\n          \"values\": values,\r\n        }\r\n      }\r\n      var result = await this.put(url.URL_BPM_STATUSTASK, data);\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api completedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async abortProcess(instanceId) {\r\n\r\n    try{\r\n      console.log(\"abortProcess\",instanceId);\r\n      //Estructura de la data que se le debe pasar\r\n    var data ={\r\n      \"containerId\":url.WORD_BPM_CONTAINERID,\r\n      \"processInstanceId\": instanceId,\r\n      } \r\n      console.log(\"data\",data);\r\n    var result = await this.del(url.URL_BPM_ABORTPROCESS,data);\r\n    \r\n      if(result.status === \"OK\"){\r\n        return result;\r\n      }\r\n\r\n    } \r\n    catch(err){\r\n      console.error(\"api abortProcess:\",err)\r\n    }   \r\n\r\n    return undefined;\r\n  }\r\n\r\n  async updatevariables(instanceId, values) {\r\n    try {\r\n      /* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"processInstanceId\": instanceId,\r\n        \"parametros\": {\r\n          \"values\": values,\r\n        }\r\n      }\r\n      var result = await this.post(url.URL_BPM_UPDATEVAR, data);\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api completedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  //Retorna la imagen relacionada a un proceso\r\n  async wacthprocess(processInstanceId) {\r\n    try{\r\n\r\n      var params = { containerId: url.WORD_BPM_CONTAINERID, processInstanceId: processInstanceId}\r\n      var data = qs.stringify(params);\r\n          \r\n      var result = await this.get(url.URL_BPM_WATCHPROCESS + \"?\" + data);\r\n\r\n      console.log(\"wacthprocess\",result);\r\n\r\n      return result.body.response;\r\n    }\r\n    catch(err){console.error(err);}\r\n    return undefined;\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}