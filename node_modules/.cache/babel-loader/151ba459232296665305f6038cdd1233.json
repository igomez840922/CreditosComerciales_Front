{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\GobiernoCorporativo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport moment from \"moment\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalGobiernoCorporativo from \"./ModalGobiernoCorporativo\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GobiernoCorporativo = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [botonValidation, setbotonValidation] = useState(true);\n  const location = useLocation();\n  const [dataLocation, setData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [dataAccionistasDataRows, setdataAccionistasDataRows] = useState(null);\n  const [dataReturn, setDataReturn] = useState(props.jsonCorporativo);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [jsonCorporativo, setjsonCorporativo] = useState(props.jsonCorporativo);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [tipo, settipo] = useState(\"\");\n  const [formValid, setFormValid] = useState(false);\n  const [locationData, setLocationData] = useState(null);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmGobiernoCorporativo');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if (props.activeTab == 6) {\n      // Read Api Service data\n      initializeData(dataSession);\n    }\n  }, [props.activeTab == 6]);\n\n  function addGobierno(values, tipo2) {\n    var _locationData$transac, _locationData$transac2;\n\n    dataReturn.name = values.name;\n    dataReturn.position = values.position;\n    dataReturn.birthDate = values.birthDate;\n    dataReturn.transactId = (_locationData$transac = locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _locationData$transac !== void 0 ? _locationData$transac : 0;\n    setDataReturn(dataReturn);\n    let datos = {\n      transactId: Number((_locationData$transac2 = locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _locationData$transac2 !== void 0 ? _locationData$transac2 : 0),\n      name: jsonCorporativo.name,\n      position: values.position,\n      birthDate: values.birthDate\n    };\n    const apiBack = new BackendServices();\n\n    if (tipo2 == \"guardar\") {\n      // nuevoGobiernoCorporativo\n      apiBack.newCorporateGovernance(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      let jsonSet = {\n        \"transactId\": Number(datos.transactId),\n        \"personId\": Number(jsonCorporativo.personId),\n        \"position\": datos.position\n      }; // actualizarGobiernoCorporativo\n\n      apiBack.saveCorporateGovernance(jsonSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  }\n\n  function calculate(fecha) {\n    var today = new Date();\n    var yyyy = today.getFullYear();\n    var today2 = new Date(fecha);\n    var yyyy2 = today2.getFullYear();\n    return parseInt(yyyy) - parseInt(yyyy2);\n  }\n\n  function initializeData(dataLocation) {\n    const api = new BackendServices(); // consultarGobiernoCorpBD\n\n    api.consultarGobiernoCorpBD(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        let arr = [];\n        setdataAccionistasDataRows(resp.map((data, index) => {\n          if (!arr.includes(data.personId)) {\n            arr.push(data.personId);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": t(\"Name\"),\n                children: data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": t(\"Charge\"),\n                children: data.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.birthDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: calculateYear(moment(data.birthDate, 'YYYY-MM-DD').format('YYYY-MM-DD'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-label\": t(\"Actions\"),\n                style: {\n                  textAlign: \"right\",\n                  display: \"flex\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  color: \"link\",\n                  onClick: resp => {\n                    updateData(data);\n                  },\n                  className: \"btn btn-link\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-border-color mdi-24px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 121\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this);\n          } else {\n            return null;\n          }\n        }));\n      } else {\n        setdataAccionistasDataRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, 183, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  function updateData(data) {\n    settipo(\"editar\");\n    setjsonCorporativo(data);\n    setbotonValidation(true);\n    abrirModal();\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function cerrarModal() {\n    setShowModelAttachment(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModelAttachment(true);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n  } // recibe fecha actual y fecha de nacimiento\n\n\n  function calculateYear(fecha_nac) {\n    var a = moment(moment().format('YYYY-MM-DD'));\n    var b = moment(fecha_nac);\n    var years = a.diff(b, 'year');\n    b.add(years, 'years');\n    var months = a.diff(b, 'months');\n    b.add(months, 'months');\n    var days = a.diff(b, 'days');\n    if (isNaN(years) || isNaN(months) || isNaN(days)) return t('InvalidDate');\n    let date;\n\n    if (years == 0) {\n      if (months <= 1) {\n        if (days <= 1) {\n          date = `${months} ${t(\"month\")} ${days} ${t(\"day\")}`;\n        } else {\n          date = `${months} ${t(\"month\")} ${days} ${t(\"days\")}`;\n        }\n      } else {\n        if (days <= 1) {\n          date = `${months} ${t(\"months\")} ${days} ${t(\"day\")}`;\n        } else {\n          date = `${months} ${t(\"months\")} ${days} ${t(\"days\")}`;\n        }\n      }\n    } else {\n      if (years == 1) {\n        date = `${years} ${t(\"year\")}`;\n      } else {\n        date = `${years} ${t(\"years\")}`;\n      }\n    }\n\n    return date;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-title\",\n      children: t(\"CorporateGovernance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive styled-table-div\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table table-striped table-hover styled-table table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Charge\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Age\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Actions\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: shareholderRows !== null && shareholderRows !== undefined && shareholderRows.length > 0 ? shareholderRows : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 7,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-info\",\n                    style: {\n                      textAlign: \"center\"\n                    },\n                    children: t(\"NoData\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataAccionistasDataRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData(locationData);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      cancelButtonText: t(\"Cancel\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarGobiernoCoporativo\n\n        apiBack.deleteCorporateGovernment({\n          transactId: dataDelete.transactId,\n          corporateIdentification: dataDelete.corporateIdentification\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            initializeData(locationData);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalGobiernoCorporativo, {\n      tipo: tipo,\n      jsonCorporativo: jsonCorporativo,\n      botones: botonValidation,\n      addGobierno: addGobierno,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}, \"zWo94klbqrZ83i967vSqqjackLk=\", false, function () {\n  return [useHistory, useTranslation, useLocation, React.useImperativeHandle];\n}));\n/*\r\nGobiernoCorporativo.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\n\n_c2 = GobiernoCorporativo;\nexport default GobiernoCorporativo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GobiernoCorporativo$React.forwardRef\");\n$RefreshReg$(_c2, \"GobiernoCorporativo\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/GobiernoCorporativo.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","url","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","moment","AvForm","AvField","AvGroup","ModalGobiernoCorporativo","BackendServices","SweetAlert","GobiernoCorporativo","forwardRef","props","ref","history","t","i18n","botonValidation","setbotonValidation","location","dataLocation","setData","data","showModelAttachment","setShowModelAttachment","dataAccionistasDataRows","setdataAccionistasDataRows","dataReturn","setDataReturn","jsonCorporativo","dataDelete","setDataDelete","setjsonCorporativo","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","tipo","settipo","formValid","setFormValid","locationData","setLocationData","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","initializeData","addGobierno","values","tipo2","name","position","birthDate","transactId","datos","Number","apiBack","newCorporateGovernance","then","resp","cerrarModal","catch","err","jsonSet","personId","saveCorporateGovernance","calculate","fecha","today","Date","yyyy","getFullYear","today2","yyyy2","parseInt","api","consultarGobiernoCorpBD","arr","map","index","includes","secondName","lastName","secondSurname","calculateYear","format","textAlign","display","updateData","formatDate","date","abrirModal","toggleShowModelAttachment","removeBodyCss","body","classList","add","handleSubmit","event","errors","preventDefault","fecha_nac","a","b","years","diff","months","days","isNaN","shareholderRows","deleteCorporateGovernment","corporateIdentification","statusCode","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\nimport moment from \"moment\";\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalGobiernoCorporativo from \"./ModalGobiernoCorporativo\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nconst GobiernoCorporativo = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const { t, i18n } = useTranslation();\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const location = useLocation()\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [dataAccionistasDataRows, setdataAccionistasDataRows] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonCorporativo);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [jsonCorporativo, setjsonCorporativo] = useState(props.jsonCorporativo);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n\r\n\r\n  React.useImperativeHandle(ref, () => (\r\n    {\r\n      validateForm: () => {\r\n        const form = document.getElementById('frmGobiernoCorporativo');\r\n        form.requestSubmit();\r\n      },\r\n      getFormValidation: () => {\r\n        return formValid;\r\n      },\r\n    }));\r\n  React.useEffect(() => {\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    if (props.activeTab == 6) {\r\n      // Read Api Service data\r\n      initializeData(dataSession);\r\n    }\r\n  }, [props.activeTab == 6]);\r\n  function addGobierno(values, tipo2) {\r\n    dataReturn.name = values.name;\r\n    dataReturn.position = values.position;\r\n    dataReturn.birthDate = values.birthDate;\r\n    dataReturn.transactId = locationData?.transactionId ?? 0;\r\n    setDataReturn(dataReturn);\r\n    let datos = {\r\n      transactId: Number(locationData?.transactionId ?? 0),\r\n      name: jsonCorporativo.name,\r\n      position: values.position,\r\n      birthDate: values.birthDate\r\n    }\r\n    const apiBack = new BackendServices();\r\n    if (tipo2 == \"guardar\") {\r\n      // nuevoGobiernoCorporativo\r\n      apiBack.newCorporateGovernance(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      let jsonSet = {\r\n        \"transactId\": Number(datos.transactId),\r\n        \"personId\": Number(jsonCorporativo.personId),\r\n        \"position\": datos.position,\r\n      }\r\n      // actualizarGobiernoCorporativo\r\n      apiBack.saveCorporateGovernance(jsonSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  function calculate(fecha) {\r\n    var today = new Date();\r\n    var yyyy = today.getFullYear();\r\n    var today2 = new Date(fecha);\r\n    var yyyy2 = today2.getFullYear();\r\n    return (parseInt(yyyy) - parseInt(yyyy2));\r\n  }\r\n  function initializeData(dataLocation) {\r\n\r\n    const api = new BackendServices()\r\n    // consultarGobiernoCorpBD\r\n    api.consultarGobiernoCorpBD(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        let arr = [];\r\n        setdataAccionistasDataRows(resp.map((data, index) => {\r\n          if (!arr.includes(data.personId)) {\r\n            arr.push(data.personId);\r\n            return (\r\n              <tr key={index}>\r\n                <td data-label={t(\"Name\")}>{data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname}</td>\r\n                <td data-label={t(\"Charge\")}>{data.position}</td>\r\n                <td>{(data.birthDate)}</td>\r\n                <td>{calculateYear(\r\n                  moment(data.birthDate, 'YYYY-MM-DD').format('YYYY-MM-DD')\r\n                )}</td>\r\n                <td data-label={t(\"Actions\")} style={{ textAlign: \"right\",display:\"flex\" }}>\r\n                  <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n                </td>\r\n              </tr>)\r\n          } else {\r\n            return null;\r\n          }\r\n        }\r\n        ));\r\n      } else {\r\n        setdataAccionistasDataRows(\r\n          <tr key={183}>\r\n            <td colSpan=\"5\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    })\r\n  }\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  function updateData(data) {\r\n    settipo(\"editar\")\r\n    setjsonCorporativo(data)\r\n    setbotonValidation(true);\r\n    abrirModal()\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function cerrarModal() {\r\n    setShowModelAttachment(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModelAttachment(true);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\n\r\n  // recibe fecha actual y fecha de nacimiento\r\n  function calculateYear(fecha_nac) {\r\n    var a = moment(moment().format('YYYY-MM-DD'));\r\n    var b = moment(fecha_nac);\r\n\r\n    var years = a.diff(b, 'year');\r\n    b.add(years, 'years');\r\n\r\n    var months = a.diff(b, 'months');\r\n    b.add(months, 'months');\r\n\r\n    var days = a.diff(b, 'days');\r\n\r\n    if (isNaN(years) || isNaN(months) || isNaN(days))\r\n      return t('InvalidDate');\r\n\r\n    let date;\r\n\r\n    if (years == 0) {\r\n      if (months <= 1) {\r\n        if (days <= 1) {\r\n          date = `${months} ${t(\"month\")} ${days} ${t(\"day\")}`;\r\n        } else {\r\n          date = `${months} ${t(\"month\")} ${days} ${t(\"days\")}`;\r\n        }\r\n      } else {\r\n        if (days <= 1) {\r\n          date = `${months} ${t(\"months\")} ${days} ${t(\"day\")}`;\r\n        } else {\r\n          date = `${months} ${t(\"months\")} ${days} ${t(\"days\")}`;\r\n        }\r\n      }\r\n\r\n    } else {\r\n      if (years == 1) {\r\n        date = `${years} ${t(\"year\")}`;\r\n      } else {\r\n        date = `${years} ${t(\"years\")}`;\r\n      }\r\n    }\r\n    return date;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5 className=\"card-title\">\r\n        {t(\"CorporateGovernance\")}\r\n      </h5>      \r\n      <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"table-responsive styled-table-div\">\r\n            <Table className=\"table table-striped table-hover styled-table table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Charge\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Age\")}</th>\r\n                  <th>{t(\"Actions\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {shareholderRows !== null && shareholderRows !== undefined && shareholderRows.length > 0 ?\r\n                shareholderRows:\r\n                <tr>\r\n                <td colSpan={7}>\r\n                  <div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div>\r\n                </td>\r\n              </tr>\r\n               }\r\n              </tbody>\r\n              \r\n              <tbody>\r\n                {dataAccionistasDataRows}\r\n              </tbody>\r\n            </Table>\r\n            </div>\r\n            \r\n          </Col>\r\n        </Row>\r\n      \r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          confirmButtonText= {t(\"Confirm\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          confirmButtonText= {t(\"Confirm\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarGobiernoCoporativo\r\n            apiBack.deleteCorporateGovernment({ transactId: dataDelete.transactId, corporateIdentification: dataDelete.corporateIdentification }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                initializeData(locationData);\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n      <ModalGobiernoCorporativo tipo={tipo} jsonCorporativo={jsonCorporativo} botones={botonValidation} addGobierno={addGobierno} isOpen={showModelAttachment} toggle={() => { cerrarModal() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\n\r\n/*\r\nGobiernoCorporativo.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\r\n\r\nexport default GobiernoCorporativo;\r\n"]},"metadata":{},"sourceType":"module"}