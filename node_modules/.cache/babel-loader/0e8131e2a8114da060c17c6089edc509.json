{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\23_bandejaInstructivo\\\\Desembolso\\\\Instructivo\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as url from \"../../../../../helpers/url_helper\";\nimport * as OPTs from \"../../../../../helpers/options_helper\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Col, Button, CardFooter, Row, Alert } from \"reactstrap\";\nimport { Tabs, Tab } from 'react-bootstrap'; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport ModalCreacionLinea from \"./modalCreacionLinea\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport ModalEndProcess from \"../../../../../components/EndProcess/ModalEndProcess\";\nimport { InfoBpmModel } from '../../../../../models/Common/InfoBpmModel';\nimport { LogProcessModel } from '../../../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../../../components/LogProcess/index\";\nimport HorizontalSteeper from \"../../../../../components/Common/HorizontalSteeper\";\nimport { LineUtil } from \"leaflet\";\nimport { saveLogProcess } from \"../../../../../helpers/logs_helper\";\nimport CheckListComponent from '../../../../../components/Common/CheckList';\nimport { AttachmentFileInputModel } from \"../../../../../models/Common/AttachmentFileInputModel\";\nimport ModalBitacora from \"../../../../../components/Common/ModalBitacora\";\nimport Horarios from \"./horarios\";\nimport CreditLine from \"./CreditLine\"; //Chequear pq hay que hacer dos pantallas para mostrar instructivo\n\n/* \r\n  // Camino Feliz No Require Ajustes... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Requiere Ajustes .. regresa a Formalizacion firma de Contrato\r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S_seccions = {\n  \"backgroundColor\": \"#eee\",\n  \"color\": '#187055',\n  \"padding\": '2px',\n  \"borderRadius\": '2px',\n  \"fontSize\": '18px',\n  \"display\": 'flex',\n  \"justifyContent\": 'center'\n};\n\nconst InstructivoNuevo = props => {\n  _s();\n\n  var _props$adminDesembols;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    adminDesembolso,\n    firmarcontrato\n  } = props;\n  const history = useHistory();\n  const location = useLocation();\n  console.log(props);\n  const [instructiveType, setinstructiveType] = useState(null);\n  const [facilityId, setfacilityId] = useState(null);\n  const [tabsFacility, settabsFacility] = useState(null);\n  const [Facility, setFacility] = useState(null);\n  const [datosUsuario, setdatosUsuario] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(true);\n  const [facilityType, setfacilityType] = useState(null);\n  const [faciliadDes, setfaciliadDes] = useState(null);\n  const [ShowModelCreditProposal, setShowModelCreditProposal] = useState(false);\n  const [ShowModelFinancialReport, setShowModelFinancialReport] = useState(false);\n  const [ModalPrevisualizardata, settoogleModalPrevisualizar] = useState(false);\n  const [ModalPrevisualizardataProp, settoogleModalPrevisualizarProp] = useState(false); ///////\n\n  const [locationData, setLocationData] = useState(null); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [DeshabilitarSelect, setDeshabilitarSelect] = useState(false);\n  const [showModalCreacionLinea, setshowModalCreacionLinea] = useState(false);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [messageDlg, setmessageDlg] = useState({\n    msg: \"\",\n    show: false,\n    error: false\n  });\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [msgDataND, setmsgDataND] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [optionSelected, setoptionSelected] = useState(null);\n  const [displayModalBitacora, setdisplayModalBitacora] = useState(false);\n  const [disbursementInstructionNumber, setDisbursementInstructionNumber] = useState(undefined);\n  const [modalCreacionLinea, setmodalCreacionLinea] = useState(false);\n  const [ejecutarDesembolso, setejecutarDesembolso] = useState(props !== undefined && props.ejecutarDesembolso !== undefined ? props.ejecutarDesembolso : true); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    if (locationData.processId == \"450\") {\n      setDeshabilitarSelect(false);\n    }\n\n    setTimeout(() => {\n      if (locationData.processId == \"450\") {\n        document.querySelectorAll('input').forEach(function (item) {\n          item.setAttribute(\"disabled\", \"disabled\");\n        });\n        document.querySelectorAll('textarea').forEach(function (item) {\n          item.setAttribute(\"disabled\", \"disabled\");\n        });\n      }\n    }, 2000); //chequear si la tarea no ha sido iniciada\n\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadUserProspect(locationData.transactionId); // Read Api Service data\n\n    loadData(locationData);\n  }\n\n  function loadUserProspect(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  }\n\n  function loadData(data) {\n    let dataSession = data;\n    setIsActiveLoading(true);\n    Promise.allSettled([backendServices.consultPrincipalDebtor(data.transactionId), backendServices.consultGeneralDataPropCred(data.transactionId), backendServices.retrieveFacilityType()]).then(data => {\n      const [{\n        value: PrincipalDebtor\n      }, {\n        value: GeneralDataPropCred\n      }, {\n        value: FacilityType\n      }] = data;\n      setdatosUsuario(PrincipalDebtor);\n      backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(resp => {\n        if (resp.length > 0) {\n          var _FacilityType$find$de, _FacilityType$find, _FacilityType$find$de2, _FacilityType$find2;\n\n          let facilidad = resp.find(x => {\n            var _ref;\n\n            return (_ref = x.facilityId == (dataSession === null || dataSession === void 0 ? void 0 : dataSession.facilityId)) !== null && _ref !== void 0 ? _ref : 0;\n          });\n          console.log(\"facilidad\", (_FacilityType$find$de = (_FacilityType$find = FacilityType.find(x => {\n            var _ref2;\n\n            return (_ref2 = x.id == (facilidad === null || facilidad === void 0 ? void 0 : facilidad.facilityTypeId)) !== null && _ref2 !== void 0 ? _ref2 : 0;\n          })) === null || _FacilityType$find === void 0 ? void 0 : _FacilityType$find.description) !== null && _FacilityType$find$de !== void 0 ? _FacilityType$find$de : \"\");\n          setfaciliadDes((_FacilityType$find$de2 = (_FacilityType$find2 = FacilityType.find(x => {\n            var _ref3;\n\n            return (_ref3 = x.id == (facilidad === null || facilidad === void 0 ? void 0 : facilidad.facilityTypeId)) !== null && _ref3 !== void 0 ? _ref3 : 0;\n          })) === null || _FacilityType$find2 === void 0 ? void 0 : _FacilityType$find2.description) !== null && _FacilityType$find$de2 !== void 0 ? _FacilityType$find$de2 : \"\");\n          setFacility(resp);\n          setinstructiveType(facilidad.debtor);\n          setfacilityId(facilidad.facilityId);\n          setfacilityType(facilidad);\n        }\n\n        setIsActiveLoading(false);\n      }).catch(err => {\n        console.log(err);\n        setIsActiveLoading(false);\n      });\n    }).catch(err => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  function handleSelect(e) {\n    let data = Facility.at(e);\n    setfacilityType(data);\n    setinstructiveType(data.debtor);\n    setfacilityId(data.facilityId);\n  }\n\n  async function onSaveData(option, values = null) {\n    if (!disbursementInstructionNumber || disbursementInstructionNumber === ' ') {\n      var resp = await backendServices.saveDisbursementInstructiveByFacility(values); // await backendServices.saveDisbursementInstructiveByFacility(values);\n\n      if (resp.status.statusCode === OPTs.ResponseBackend_STATUSOK) {\n        setDisbursementInstructionNumber(resp.disbursementInstructionNumber);\n        return true;\n      } else {\n        showMessage({\n          msg: t(\"ErrorSaveMessage\"),\n          show: true,\n          error: true\n        });\n      }\n\n      return false;\n    } else {\n      var resp = await backendServices.updateDisbursementInstructiveByFacility({ ...values,\n        status: true\n      });\n\n      if (resp.statusCode === OPTs.ResponseBackend_STATUSOK) {\n        return true;\n      } else {\n        showMessage({\n          msg: t(\"ErrorSaveMessage\"),\n          show: true,\n          error: true\n        });\n      }\n\n      return false;\n    }\n  } ////////////////////\n\n\n  async function checkToContinue(option, values = null) {\n    console.log(\"checkToContinue\", locationData.processId);\n\n    if ((await onSaveData(option, values)) === true) {\n      if (+locationData.processId === +OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT) {\n        saveJBPMProcess(OPTs.PROCESS_ADMINDISBURSEMENT);\n      } else if (+locationData.processId === +OPTs.PROCESS_EXECUTEDISBURSEMENT) {\n        console.log(\"GenerateCreditLines\"); //EJECUTAR SERVICIOS DE T24  \n        //Generar Lineas \n\n        await GenerateCreditLines(); //Generar Instructivo\n\n        await GenerateInstructive();\n        return; //Generar Instructivo\n        //Chequear si tiene Garantias ... de lo contrario a expediente\n\n        saveJBPMProcess(OPTs.PROCESS_GUARANTEE);\n      }\n    } else {\n      showMessage({\n        msg: t(\"Debe Guardar todos los desembolsos antes de continuar\"),\n        show: true,\n        error: true\n      });\n    }\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\n  }\n\n  function onSaveProcess(option) {\n    switch (option) {\n      case OPTs.PROCESS_CANCELPROCESS:\n        {\n          break;\n        }\n\n      default:\n        break;\n    }\n\n    saveJBPMProcess(option);\n  }\n\n  async function saveJBPMProcess(option) {\n    console.log(\"saveJBPMProcess\", option);\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.typePerson == \"2\" ? maindebtor.name : maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n    console.log(\"saveJBPMProcess\", option);\n\n    switch (option) {\n      case OPTs.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(infoBpmModel.instanceId).then(data => {\n            if (data !== undefined) {\n              saveAutoLog(OPTs.APPLICATION_STATUS_CANC, \"\");\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage({\n                msg: t(\"TheProcessCouldNotFinish\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT:\n        {\n          infoBpmModel.processId = OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId.toString()\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage({\n                msg: t(\"Datahasbeensavedsuccessfully\"),\n                error: false,\n                show: true\n              });\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_ADMINDISBURSEMENT:\n        {\n          infoBpmModel.processId = OPTs.PROCESS_ADMINDISBURSEMENT;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_ADMINDISBURSEMENT.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"requestId\": locationData.requestId\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              saveAutoLog();\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR              \n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_GUARANTEE:\n        {\n          infoBpmModel.processId = OPTs.PROCESS_GUARANTEE;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_GUARANTEE.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"requestId\": locationData.requestId,\n            \"decision\": \"garantias\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              saveAutoLog();\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR              \n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_VALIDATEFILE:\n        {\n          infoBpmModel.processId = OPTs.PROCESS_VALIDATEFILE;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          infoBpmModel.fromProcess = OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_VALIDATEFILE.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"requestId\": locationData.requestId,\n            \"decision\": \"expediente\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              saveAutoLog();\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR              \n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      /*\r\n      case OPTs.PROCESS_SIGNCONTRACT: {\r\n        infoBpmModel.processId = OPTs.PROCESS_SIGNCONTRACT;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n          var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"requestId\": locationData.requestId,\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog(OPTs.APPLICATION_STATUS_DEVB, \"\");\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR              \r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }*/\n\n      default:\n        break;\n    }\n  }\n\n  function showMessage(data = null) {\n    if (data !== null) {\n      setmessageDlg(data);\n    } else {\n      setmessageDlg({\n        msg: \"\",\n        show: false,\n        error: false\n      });\n    }\n  }\n\n  function toogleModalPrevisualizarProp() {\n    settoogleModalPrevisualizarProp(!ModalPrevisualizardataProp);\n    removeBodyCss();\n  }\n\n  function toggleShowModelFinancialReport() {\n    setShowModelFinancialReport(!ShowModelFinancialReport);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function toogleModalPrevisualizar() {\n    settoogleModalPrevisualizar(!ModalPrevisualizardata);\n    removeBodyCss();\n  }\n\n  async function saveAutoLog(APPLICATION_STATUS = null, observations = null) {\n    var _mainDebtor$personId, _APPLICATION_STATUS$i, _APPLICATION_STATUS$n;\n\n    var mainDebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var log = new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_15);\n    log.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : log.clientId;\n    log.observations = observations !== null ? t(\"ActivityHasBeenFinishedSuccessfully\") : observations;\n    log.requestId = (_APPLICATION_STATUS$i = APPLICATION_STATUS === null || APPLICATION_STATUS === void 0 ? void 0 : APPLICATION_STATUS.id) !== null && _APPLICATION_STATUS$i !== void 0 ? _APPLICATION_STATUS$i : 0;\n    log.statusDescription = (_APPLICATION_STATUS$n = APPLICATION_STATUS === null || APPLICATION_STATUS === void 0 ? void 0 : APPLICATION_STATUS.name) !== null && _APPLICATION_STATUS$n !== void 0 ? _APPLICATION_STATUS$n : \"\";\n    saveLogProcess(log);\n  }\n\n  function showModalBitacora(show = true) {\n    setdisplayModalBitacora(show);\n  }\n\n  async function GenerateCreditLines() {\n    var _locationData$transac, _locationData$facilit;\n\n    var dataResult = await backendServices.getCreditLine((_locationData$transac = locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _locationData$transac !== void 0 ? _locationData$transac : 0, (_locationData$facilit = locationData === null || locationData === void 0 ? void 0 : locationData.facilityId) !== null && _locationData$facilit !== void 0 ? _locationData$facilit : 0);\n    console.log(\"GenerateCreditLines\", dataResult);\n\n    for (const creditLine of dataResult.creditLine) {\n      var _creditLine$actividad, _creditLine$tipoAutor, _creditLine$montoApro, _creditLine$moneda, _creditLine$fechaApro, _creditLine$fechaProp, _creditLine$porcentaj, _creditLine$moneda2, _creditLine$fechaVenc, _creditLine$montoApro2, _creditLine$moneda3, _creditLine$maximoApr, _creditLine$moneda4;\n\n      var prodArray = [];\n\n      for (var dataprod of creditLine.creditLineProds) {\n        var _dataprod$tipoSubProd;\n\n        prodArray.push({\n          \"Product\": {\n            \"Cod\": (_dataprod$tipoSubProd = dataprod === null || dataprod === void 0 ? void 0 : dataprod.tipoSubProducto) !== null && _dataprod$tipoSubProd !== void 0 ? _dataprod$tipoSubProd : \"\" // Preguntar a Yamari, parce que no es el mismo del tipo de linea\n\n          }\n        });\n      }\n\n      let datoSetCore = {\n        \"CreditLine\": {\n          \"Activity\": {\n            \"Cod\": (_creditLine$actividad = creditLine.actividadEconomica.split(\"-\")[1]) !== null && _creditLine$actividad !== void 0 ? _creditLine$actividad : \"\" //codigo de subactividad economica\n\n          },\n          \"AuthType\": (_creditLine$tipoAutor = creditLine === null || creditLine === void 0 ? void 0 : creditLine.tipoAutorizacion) !== null && _creditLine$tipoAutor !== void 0 ? _creditLine$tipoAutor : \"\",\n          \"AutonomyCode\": {\n            \"Cod\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.autonomia,\n            \"Desc\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.descAutonomia\n          },\n          \"AutonomyUser\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.usuarioAutonomia,\n          \"CreditLimit\": {\n            \"AdviseAmt\": {\n              \"Amt\": (_creditLine$montoApro = creditLine === null || creditLine === void 0 ? void 0 : creditLine.montoAprobado.toString()) !== null && _creditLine$montoApro !== void 0 ? _creditLine$montoApro : \"0\",\n              //-> Monto de La Linea\n              \"CurCode\": (_creditLine$moneda = creditLine === null || creditLine === void 0 ? void 0 : creditLine.moneda) !== null && _creditLine$moneda !== void 0 ? _creditLine$moneda : \"\" //-> Codigo Moneda\n\n            },\n            \"Allow\": {\n              \"CurrencyData\": {\n                \"CurAmt\": {\n                  \"Amt\": {\n                    \"-self-closing\": \"true\"\n                  },\n                  \"CurCode\": {\n                    \"-self-closing\": \"true\"\n                  }\n                }\n              },\n              \"Party\": {\n                \"PartyId\": {\n                  \"-self-closing\": \"true\"\n                }\n              },\n              \"ProductData\": prodArray\n              /*[\r\n                {\r\n                  \"Product\": {\r\n                    // \"Cod\":1000\r\n                    \"Cod\": datosJson?.lineTypeCode.toString() ?? \"\"// Preguntar a Yamari, parce que no es el mismo del tipo de linea\r\n                  }\r\n                }\r\n              ]*/\n\n            },\n            \"AllowNetting\": (creditLine === null || creditLine === void 0 ? void 0 : creditLine.permiteCompensacion) ? \"Y\" : \"N\",\n            // -> ?? FIJO\n            \"ApprovalDt\": (_creditLine$fechaApro = creditLine === null || creditLine === void 0 ? void 0 : creditLine.fechaAprobada) !== null && _creditLine$fechaApro !== void 0 ? _creditLine$fechaApro : moment().format(\"YYYY-MM-DD\"),\n            // -> Fecha de Aprobacion\n            \"AvailDt\": (_creditLine$fechaProp = creditLine === null || creditLine === void 0 ? void 0 : creditLine.fechaPropuesta) !== null && _creditLine$fechaProp !== void 0 ? _creditLine$fechaProp : moment().format(\"YYYY-MM-DD\"),\n            // -> Fecha de Propuesta\n            \"AvailMarker\": (creditLine === null || creditLine === void 0 ? void 0 : creditLine.marcadorDisponible) ? \"Y\" : \"N\",\n            // -> ?? FIJO\n            \"CountryRisk\": {\n              \"Country\": {\n                \"CountryCode\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.riesgoPais,\n                \"CountryName\": {\n                  \"-self-closing\": \"true\"\n                }\n              },\n              \"Percent\": (_creditLine$porcentaj = creditLine === null || creditLine === void 0 ? void 0 : creditLine.porcentajeRiesgo.toString()) !== null && _creditLine$porcentaj !== void 0 ? _creditLine$porcentaj : \"0\"\n            },\n            \"CreditLimitKey\": {\n              \"CreditLimitId\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.numeroLinea\n            },\n            \"CurCode\": (_creditLine$moneda2 = creditLine === null || creditLine === void 0 ? void 0 : creditLine.moneda) !== null && _creditLine$moneda2 !== void 0 ? _creditLine$moneda2 : \"\",\n            //-> Codigo Moneda\n            \"DeadLineDt\": moment().format(\"YYYY-MM-DD\"),\n            \"DueDt\": (_creditLine$fechaVenc = creditLine === null || creditLine === void 0 ? void 0 : creditLine.fechaVencimiento) !== null && _creditLine$fechaVenc !== void 0 ? _creditLine$fechaVenc : moment().format(\"YYYY-MM-DD\"),\n            \"LimitAmt\": {\n              \"Amt\": (_creditLine$montoApro2 = creditLine === null || creditLine === void 0 ? void 0 : creditLine.montoAprobado.toString()) !== null && _creditLine$montoApro2 !== void 0 ? _creditLine$montoApro2 : \"0\",\n              \"CurCode\": (_creditLine$moneda3 = creditLine === null || creditLine === void 0 ? void 0 : creditLine.moneda) !== null && _creditLine$moneda3 !== void 0 ? _creditLine$moneda3 : \"\" //-> Codigo Moneda\n\n            },\n            \"LimitAmtType\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.tipoLimite,\n            \"LimitReject\": creditLine.rechazarLimite,\n            \"MaxCurAmt\": {\n              \"Amt\": (_creditLine$maximoApr = creditLine === null || creditLine === void 0 ? void 0 : creditLine.maximoAprobado.toString()) !== null && _creditLine$maximoApr !== void 0 ? _creditLine$maximoApr : \"0\",\n              \"CurCode\": (_creditLine$moneda4 = creditLine === null || creditLine === void 0 ? void 0 : creditLine.moneda) !== null && _creditLine$moneda4 !== void 0 ? _creditLine$moneda4 : \"\" //-> Codigo Moneda\n\n            },\n            \"ProposalDt\": creditLine.fechaPropuesta,\n            \"ReviewFreq\": {\n              \"FreqValue\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.frecuenciaRevision\n            },\n            \"Signatories\": {\n              \"Signatory\": {\n                \"PartyKey\": {\n                  \"PartyId\": creditLine === null || creditLine === void 0 ? void 0 : creditLine.idDeudor.toString()\n                }\n              }\n            }\n          }\n        }\n      };\n      var result = await coreServices.newline(datoSetCore);\n\n      if (result === undefined) {\n        return;\n      }\n    }\n  }\n\n  async function GenerateInstructive() {\n    var _dataResult$actividad, _dataResult$tipoAutor, _dataResult$montoApro, _dataResult$moneda, _dataResult$fechaApro, _dataResult$fechaProp, _dataResult$porcentaj, _dataResult$moneda2, _dataResult$fechaVenc, _dataResult$montoApro2, _dataResult$moneda3, _dataResult$maximoApr, _dataResult$moneda4;\n\n    var dataResult = await backendServices.getDisbursementInstructiveByFacility(locationData.transactionId, locationData.facilityId);\n    console.log(\"GenerateInstructive\", dataResult);\n    var data = {\n      AcctLoan: {\n        AcctSubtype: {\n          Cod: dataResult.subProductTypeCode //\"AL.COMPANY.PRIVATE\"  // Subproducto\n\n        },\n        AutonomyCode: dataResult.autonomyCode,\n        // ******** Codigo de la autonomia\n        AutonomyUser: dataResult.autonomyCode,\n        //La autonomia o usuario que esta logueado\n        //ClosedDt:\"2029-10-03\", //\n        //ClubBanesco:\"false\",\n        CurCode: \"USD\",\n        //codigo de Moneda\n        SubCategory: \"1623\",\n        //dataResult.provinceDesc.split(\"*\")[1] ?? \"\", //Codigo de Subcategoria??\n        Variation: {\n          //variacion -> Puede ir vacía\n          \"Cod\": \"CLIENTE\"\n        },\n        \"AcctOpeningInfo\": {\n          BusinessUnit: \"SUCURSAL\",\n          //dataResult.branchDesc ?? \"\", // Banca viene de IGR\n          \"InitialAmt\": {\n            \"Amt\": \"5950\" //dataResult.disbursementApprovedAmount //monto\n\n          },\n          OpenDt: \"2022-02-07\",\n          //dataResult.disbursementDate // Fecha de Inicio del desembolso\n          SaleOfficer: \"3766\" //dataResult.saleChannel //Canal de venta .... ****** no está en pantalla\n\n        },\n        CreditAcctData: {\n          AuthType: \"06\",\n          //dataResult.authType, -> ?? ************ no esta en pantalla\n          BillsCombined: \"true\",\n          //dataResult.billsCombined, // Capital de Interes ... ********** no esta en pantalla\n          CodeDestination: \"PA10\",\n          //dataResult.provinceCode, // codigo de Destino ... Provincia de Destino\n          CollOfficer: \"9999\",\n          /// campo fijo siempre\n          CountryDestination: \"PA\",\n          //dataResult.countryCode, // codigo Pais de Destino\n          CreditDestination: \"LOCAL\",\n          //dataResult.creditDestination, // ********* Destino del Credito : LOCAL 1 /EXTRANJERO 2\n          FundsDestination: \"1\",\n          //dataResult.fundsDestination, // ********* Destino de los Fondos: LOCAL 1 / EXTRANJERO 2\n          FundsPurpose: \"2103\",\n          //dataResult.fundsPurposeCode, // ********** Proposito de los Fondos viene de un catalogo\n          OriginationRef: \"99986\",\n          //dataResult.originationRef, // ********** referencia de Orientacion , viene de un catalodo\n          RefinanceNum: {\n            // QUEDA FIJO\n            \"self-closing\": \"true\"\n          },\n          SourceSales: {\n            // ********* Viene de Catalogo\n            \"Cod\": \"14\",\n            //dataResult.sourceSalesCod,\n            \"Desc\": \"REFERIDO POR EMPLEADO\" //dataResult.sourceSalesDesc,\n\n          },\n          WritingType: \"PAG\",\n          //dataResult.writingType, // *********** Tipo de Escritura .. PAG/WRT .. Pagaré o Escritura\n          Charge: [//cargos \n          {\n            ChargeType: \"LENDCOMMISSION\",\n            //Instrucciones Operativas -> Monto por Comision\n            \"CurAmt\": {\n              \"Amt\": \"392.7\" //dataResult.disbursementComisionAmount,\n\n            }\n          }, {\n            \"ChargeType\": \"TAX\",\n            //Instrucciones Operativas -> ITBMs\n            \"CurAmt\": {\n              \"Amt\": \"2.18\" //dataResult.disbursementItbms,\n\n            }\n          }, {\n            \"ChargeType\": \"ALLEGALFEE\",\n            //Instrucciones Operativas -> Notaría\n            \"CurAmt\": {\n              \"Amt\": \"4.36\" //dataResult.disbursementItbms,\n\n            }\n          }, {\n            \"ChargeType\": \"TFISCAL\",\n            //Instrucciones Operativas -> Timbre Fisical\n            \"CurAmt\": {\n              \"Amt\": \"3\"\n            }\n          }],\n          \"CreditRegularPmt\": {\n            // La podemos Omitir no es obligatorio\n            \"BillType\": \"INSTALLMENT\",\n            \"Freq\": {\n              \"NoPaymentMonth\": \"1\",\n              \"OnDayNumber\": \"3\"\n            },\n            \"PmtClass\": \"DUE\",\n            \"PmtType\": \"CONSTANT\",\n            \"PmtTargetDetail\": {\n              \"ActualAmt\": {\n                \"Amt\": \"114.9\"\n              },\n              \"StartDate\": \"2022-04-03\"\n            }\n          },\n          Term: {\n            //*********** Termino o Plazo de desembolso ... + Tipo de Termino D/M/A\n            ProposedTerm: \"91M\"\n          },\n          SettleInstruction: {\n            PayIn: [{\n              ACDBRule: \"PARTIAL\",\n              //Constante\n              PmtType: \"CONSTANT\",\n              //Constante\n              SettleActivity: {\n                //Constante\n                Cod: \"LENDING-APPLYPAYMENT-PR.REPAYMENT\"\n              },\n              Settlement: \"false\",\n              //************* desembolso en cuenta TRUE/FALSE\n              PayInAcctRef: {\n                Activity: {\n                  //Constante\n                  Cod: \"ACCOUNTS-DEBIT-ARRANGEMENT\"\n                },\n                PayInAcct: {\n                  // Número de Línea de Crédito\n                  \"AcctReference\": \"USD1273300020014\"\n                }\n              }\n            }],\n            PayOut: {\n              PayOutAcct: {\n                // Número de Línea de Crédito, el numero de la cuenta\n                \"AcctReference\": \"USD1273300020014\"\n              },\n              Property: \"ACCOUNT\",\n              // Si es una cuenta \"ACCOUNT\"\n              SettleActivity: {\n                //Constante\n                Cod: \"LENDING-APPLYPAYMENT-PR.REPAYMENT\"\n              },\n              Settlement: \"true\" //Constante\n\n            }\n          },\n          CreditAcctPmtInfo: {\n            PmtMethod: \"DD\" // ******** Metodo de Pago ... DC/PV  Descuento Directo - Pago Voluntario\n\n          }\n        },\n        IntRateData: [{\n          IntRate: \"11.50\",\n          // Tasa de Interes\n          IntRateType: \"PRINCIPALINT\"\n        }, {\n          \"IntRate\": \"12.50\",\n          \"IntRateType\": \"LT.DPF.BASE\"\n        }, {\n          \"IntRate\": \"13.50\",\n          \"IntRateType\": \"LT.SPREAD.POINT\"\n        }],\n        AcctMember: {\n          \"PartyKey\": {\n            \"PartyId\": \"990091561\" //Numero de Cliente T24\n\n          },\n          \"PartyRole\": {\n            \"Cod\": \"OWNER\"\n          }\n        }\n      }\n    };\n    let datoSetCore = {\n      \"CreditLine\": {\n        \"Activity\": {\n          \"Cod\": (_dataResult$actividad = dataResult.actividadEconomica.split(\"-\")[1]) !== null && _dataResult$actividad !== void 0 ? _dataResult$actividad : \"\" //codigo de subactividad economica\n\n        },\n        \"AuthType\": (_dataResult$tipoAutor = dataResult === null || dataResult === void 0 ? void 0 : dataResult.tipoAutorizacion) !== null && _dataResult$tipoAutor !== void 0 ? _dataResult$tipoAutor : \"\",\n        \"AutonomyCode\": {\n          \"Cod\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.autonomia,\n          \"Desc\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.descAutonomia\n        },\n        \"AutonomyUser\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.usuarioAutonomia,\n        \"CreditLimit\": {\n          \"AdviseAmt\": {\n            \"Amt\": (_dataResult$montoApro = dataResult === null || dataResult === void 0 ? void 0 : dataResult.montoAprobado.toString()) !== null && _dataResult$montoApro !== void 0 ? _dataResult$montoApro : \"0\",\n            //-> Monto de La Linea\n            \"CurCode\": (_dataResult$moneda = dataResult === null || dataResult === void 0 ? void 0 : dataResult.moneda) !== null && _dataResult$moneda !== void 0 ? _dataResult$moneda : \"\" //-> Codigo Moneda\n\n          },\n          \"Allow\": {\n            \"CurrencyData\": {\n              \"CurAmt\": {\n                \"Amt\": {\n                  \"-self-closing\": \"true\"\n                },\n                \"CurCode\": {\n                  \"-self-closing\": \"true\"\n                }\n              }\n            },\n            \"Party\": {\n              \"PartyId\": {\n                \"-self-closing\": \"true\"\n              }\n            }\n          },\n          \"AllowNetting\": (dataResult === null || dataResult === void 0 ? void 0 : dataResult.permiteCompensacion) ? \"Y\" : \"N\",\n          // -> ?? FIJO\n          \"ApprovalDt\": (_dataResult$fechaApro = dataResult === null || dataResult === void 0 ? void 0 : dataResult.fechaAprobada) !== null && _dataResult$fechaApro !== void 0 ? _dataResult$fechaApro : moment().format(\"YYYY-MM-DD\"),\n          // -> Fecha de Aprobacion\n          \"AvailDt\": (_dataResult$fechaProp = dataResult === null || dataResult === void 0 ? void 0 : dataResult.fechaPropuesta) !== null && _dataResult$fechaProp !== void 0 ? _dataResult$fechaProp : moment().format(\"YYYY-MM-DD\"),\n          // -> Fecha de Propuesta\n          \"AvailMarker\": (dataResult === null || dataResult === void 0 ? void 0 : dataResult.marcadorDisponible) ? \"Y\" : \"N\",\n          // -> ?? FIJO\n          \"CountryRisk\": {\n            \"Country\": {\n              \"CountryCode\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.riesgoPais,\n              \"CountryName\": {\n                \"-self-closing\": \"true\"\n              }\n            },\n            \"Percent\": (_dataResult$porcentaj = dataResult === null || dataResult === void 0 ? void 0 : dataResult.porcentajeRiesgo.toString()) !== null && _dataResult$porcentaj !== void 0 ? _dataResult$porcentaj : \"0\"\n          },\n          \"CreditLimitKey\": {\n            \"CreditLimitId\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.numeroLinea\n          },\n          \"CurCode\": (_dataResult$moneda2 = dataResult === null || dataResult === void 0 ? void 0 : dataResult.moneda) !== null && _dataResult$moneda2 !== void 0 ? _dataResult$moneda2 : \"\",\n          //-> Codigo Moneda\n          \"DeadLineDt\": moment().format(\"YYYY-MM-DD\"),\n          \"DueDt\": (_dataResult$fechaVenc = dataResult === null || dataResult === void 0 ? void 0 : dataResult.fechaVencimiento) !== null && _dataResult$fechaVenc !== void 0 ? _dataResult$fechaVenc : moment().format(\"YYYY-MM-DD\"),\n          \"LimitAmt\": {\n            \"Amt\": (_dataResult$montoApro2 = dataResult === null || dataResult === void 0 ? void 0 : dataResult.montoAprobado.toString()) !== null && _dataResult$montoApro2 !== void 0 ? _dataResult$montoApro2 : \"0\",\n            \"CurCode\": (_dataResult$moneda3 = dataResult === null || dataResult === void 0 ? void 0 : dataResult.moneda) !== null && _dataResult$moneda3 !== void 0 ? _dataResult$moneda3 : \"\" //-> Codigo Moneda\n\n          },\n          \"LimitAmtType\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.tipoLimite,\n          \"LimitReject\": dataResult.rechazarLimite,\n          \"MaxCurAmt\": {\n            \"Amt\": (_dataResult$maximoApr = dataResult === null || dataResult === void 0 ? void 0 : dataResult.maximoAprobado.toString()) !== null && _dataResult$maximoApr !== void 0 ? _dataResult$maximoApr : \"0\",\n            \"CurCode\": (_dataResult$moneda4 = dataResult === null || dataResult === void 0 ? void 0 : dataResult.moneda) !== null && _dataResult$moneda4 !== void 0 ? _dataResult$moneda4 : \"\" //-> Codigo Moneda\n\n          },\n          \"ProposalDt\": dataResult.fechaPropuesta,\n          \"ReviewFreq\": {\n            \"FreqValue\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.frecuenciaRevision\n          },\n          \"Signatories\": {\n            \"Signatory\": {\n              \"PartyKey\": {\n                \"PartyId\": dataResult === null || dataResult === void 0 ? void 0 : dataResult.idDeudor.toString()\n              }\n            }\n          }\n        }\n      }\n    };\n    return;\n    var result = await coreServices.newline(datoSetCore);\n\n    if (result === undefined) {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: ejecutarDesembolso === false ? \"\" : \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mb-3\",\n                style: S_seccions,\n                children: faciliadDes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 13\n          }, this), facilityType && /*#__PURE__*/_jsxDEV(DatosGenerales // firmarcontrato={props?.firmarcontrato ?? true}\n          , {\n            adminDesembolso: (_props$adminDesembols = props === null || props === void 0 ? void 0 : props.adminDesembolso) !== null && _props$adminDesembols !== void 0 ? _props$adminDesembols : true,\n            ejecutarDesembolso: ejecutarDesembolso,\n            facilityId: facilityId,\n            facilityType: facilityType,\n            DeshabilitarSelect: DeshabilitarSelect,\n            instructiveType: instructiveType,\n            onSaveProcess: checkToContinue,\n            ejecutivoDesembolso: (props === null || props === void 0 ? void 0 : props.ejecutivoDesembolso) ? true : false,\n            disbursementInstructionNumber: disbursementInstructionNumber,\n            setDisbursementInstructionNumber: setDisbursementInstructionNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 827,\n        columnNumber: 9\n      }, this), ejecutarDesembolso === false ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: locationData ? /*#__PURE__*/_jsxDEV(CheckListComponent, {\n          attachmentFileInputModel: new AttachmentFileInputModel(locationData.transactionId, OPTs.CHECKLIST_PROCESS_DESEMBOLSO, OPTs.ACT_NONE)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false), ejecutarDesembolso === false ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n          logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_14)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: \"0px\",\n            marginBottom: \"15px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            style: {\n              textAlign: \"left\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              style: {\n                margin: '5px 0px'\n              },\n              type: \"button\",\n              onClick: () => {\n                onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 146\n              }, this), \" \", t(\"CancelProcess\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              style: {\n                margin: '0px 5px'\n              },\n              type: \"button\",\n              onClick: () => {\n                setoptionSelected(OPTs.PROCESS_SIGNCONTRACT);\n                showModalBitacora();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-backspace-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 171\n              }, this), \" \", t(\"AdjustRequired\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            style: {\n              textAlign: \"right\",\n              marginTop: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                onSaveProcess(Number(OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 161\n              }, this), \" \", t(\"Exit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"button\",\n              onClick: () => {\n                checkToContinue();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 57\n              }, this), \" \", t(\"Continue\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 877,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n        onSaveEndProcess: onSaveEndProcess,\n        isOpen: displayModalEndProcess,\n        toggle: () => {\n          showModalEndProcess(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 9\n      }, this), messageDlg && messageDlg.show ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        type: messageDlg.error ? \"error\" : \"success\",\n        confirmButtonText: t(\"Confirm\"),\n        cancelButtonText: t(\"Cancel\"),\n        title: messageDlg.error ? t(\"Error\") : t(\"Message\"),\n        onConfirm: () => {\n          showMessage();\n        },\n        children: messageDlg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 7\n    }, this), locationData && displayModalBitacora ? /*#__PURE__*/_jsxDEV(ModalBitacora, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_ANALISISCREDITO, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_04),\n      successSaved: () => {\n        onSaveProcess(optionSelected);\n      },\n      isOpen: displayModalBitacora,\n      toggle: () => {\n        showModalBitacora(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 825,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InstructivoNuevo, \"XfUdrgMcAElfl0IvhFRtgyxxnFU=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = InstructivoNuevo;\nInstructivoNuevo.propTypes = {// selectedId: PropTypes.any,\n  // onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(InstructivoNuevo);\n\nvar _c;\n\n$RefreshReg$(_c, \"InstructivoNuevo\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/23_bandejaInstructivo/Desembolso/Instructivo/index.js"],"names":["React","useState","PropTypes","useHistory","useLocation","url","OPTs","moment","Link","Card","CardHeader","CardBody","Col","Button","CardFooter","Row","Alert","Tabs","Tab","Breadcrumbs","withTranslation","DatosGenerales","ModalCreacionLinea","SweetAlert","BackendServices","CoreServices","BpmServices","AvForm","AvField","useTranslation","LoadingOverlay","ModalEndProcess","InfoBpmModel","LogProcessModel","LogProcess","HorizontalSteeper","LineUtil","saveLogProcess","CheckListComponent","AttachmentFileInputModel","ModalBitacora","Horarios","CreditLine","S_seccions","InstructivoNuevo","props","t","i18n","adminDesembolso","firmarcontrato","history","location","console","log","instructiveType","setinstructiveType","facilityId","setfacilityId","tabsFacility","settabsFacility","Facility","setFacility","datosUsuario","setdatosUsuario","isActiveLoading","setIsActiveLoading","facilityType","setfacilityType","faciliadDes","setfaciliadDes","ShowModelCreditProposal","setShowModelCreditProposal","ShowModelFinancialReport","setShowModelFinancialReport","ModalPrevisualizardata","settoogleModalPrevisualizar","ModalPrevisualizardataProp","settoogleModalPrevisualizarProp","locationData","setLocationData","backendServices","setbackendServices","bpmServices","setbpmServices","coreServices","setcoreServices","mainDebtor","setmainDebtor","DeshabilitarSelect","setDeshabilitarSelect","showModalCreacionLinea","setshowModalCreacionLinea","displayModalEndProcess","setdisplayModalEndProcess","messageDlg","setmessageDlg","msg","show","error","msgData","setmsgData","isError","msgDataND","setmsgDataND","optionSelected","setoptionSelected","displayModalBitacora","setdisplayModalBitacora","disbursementInstructionNumber","setDisbursementInstructionNumber","undefined","modalCreacionLinea","setmodalCreacionLinea","ejecutarDesembolso","setejecutarDesembolso","useEffect","data","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","processId","setTimeout","document","querySelectorAll","forEach","item","setAttribute","checkAndStartTask","then","iniresult","loadUserProspect","loadData","consultPrincipalDebtor","dataSession","Promise","allSettled","consultGeneralDataPropCred","retrieveFacilityType","value","PrincipalDebtor","GeneralDataPropCred","FacilityType","consultarFacilidades","requestId","resp","facilidad","find","x","id","facilityTypeId","description","debtor","catch","err","handleSelect","e","at","onSaveData","option","values","saveDisbursementInstructiveByFacility","status","statusCode","ResponseBackend_STATUSOK","showMessage","updateDisbursementInstructiveByFacility","checkToContinue","PROCESS_INSTRUCTIVEDISBURSEMENT","saveJBPMProcess","PROCESS_ADMINDISBURSEMENT","PROCESS_EXECUTEDISBURSEMENT","GenerateCreditLines","GenerateInstructive","PROCESS_GUARANTEE","showModalEndProcess","onSaveEndProcess","onSaveProcess","PROCESS_CANCELPROCESS","maindebtor","infoBpmModel","instanceId","ACT_NONE","personId","personName","typePerson","name","name2","lastName","lastName2","abortProcess","saveAutoLog","APPLICATION_STATUS_CANC","activityId","toString","updatevariables","completedStatusTask","taskId","PROCESS_VALIDATEFILE","fromProcess","toogleModalPrevisualizarProp","removeBodyCss","toggleShowModelFinancialReport","body","classList","add","toogleModalPrevisualizar","APPLICATION_STATUS","observations","BPM_ACTIVITY_15","clientId","statusDescription","showModalBitacora","dataResult","getCreditLine","creditLine","prodArray","dataprod","creditLineProds","tipoSubProducto","datoSetCore","actividadEconomica","split","tipoAutorizacion","autonomia","descAutonomia","usuarioAutonomia","montoAprobado","moneda","permiteCompensacion","fechaAprobada","format","fechaPropuesta","marcadorDisponible","riesgoPais","porcentajeRiesgo","numeroLinea","fechaVencimiento","tipoLimite","rechazarLimite","maximoAprobado","frecuenciaRevision","idDeudor","newline","getDisbursementInstructiveByFacility","AcctLoan","AcctSubtype","Cod","subProductTypeCode","AutonomyCode","autonomyCode","AutonomyUser","CurCode","SubCategory","Variation","BusinessUnit","OpenDt","SaleOfficer","CreditAcctData","AuthType","BillsCombined","CodeDestination","CollOfficer","CountryDestination","CreditDestination","FundsDestination","FundsPurpose","OriginationRef","RefinanceNum","SourceSales","WritingType","Charge","ChargeType","Term","ProposedTerm","SettleInstruction","PayIn","ACDBRule","PmtType","SettleActivity","Settlement","PayInAcctRef","Activity","PayInAcct","PayOut","PayOutAcct","Property","CreditAcctPmtInfo","PmtMethod","IntRateData","IntRate","IntRateType","AcctMember","ejecutivoDesembolso","CHECKLIST_PROCESS_DESEMBOLSO","BPM_ACTIVITY_14","marginTop","marginBottom","textAlign","margin","PROCESS_SIGNCONTRACT","Number","PROCESS_ANALISISCREDITO","BPM_ACTIVITY_04","propTypes"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport * as OPTs from \"../../../../../helpers/options_helper\";\r\nimport moment from \"moment\";\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card, CardHeader,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n  Row,\r\n  Alert,\r\n} from \"reactstrap\"\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport ModalCreacionLinea from \"./modalCreacionLinea\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport LoadingOverlay from \"react-loading-overlay\"\r\n\r\nimport ModalEndProcess from \"../../../../../components/EndProcess/ModalEndProcess\"\r\nimport { InfoBpmModel } from '../../../../../models/Common/InfoBpmModel';\r\nimport { LogProcessModel } from '../../../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../../../components/LogProcess/index\";\r\nimport HorizontalSteeper from \"../../../../../components/Common/HorizontalSteeper\";\r\nimport { LineUtil } from \"leaflet\";\r\nimport { saveLogProcess } from \"../../../../../helpers/logs_helper\";\r\nimport CheckListComponent from '../../../../../components/Common/CheckList';\r\nimport { AttachmentFileInputModel } from \"../../../../../models/Common/AttachmentFileInputModel\"\r\nimport ModalBitacora from \"../../../../../components/Common/ModalBitacora\";\r\nimport Horarios from \"./horarios\";\r\nimport CreditLine from \"./CreditLine\";\r\n//Chequear pq hay que hacer dos pantallas para mostrar instructivo\r\n\r\n/* \r\n  // Camino Feliz No Require Ajustes... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Requiere Ajustes .. regresa a Formalizacion firma de Contrato\r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\r\nconst S_seccions = {\r\n  \"backgroundColor\": \"#eee\",\r\n  \"color\": '#187055',\r\n  \"padding\": '2px',\r\n  \"borderRadius\": '2px',\r\n  \"fontSize\": '18px',\r\n  \"display\": 'flex',\r\n  \"justifyContent\": 'center',\r\n};\r\nconst InstructivoNuevo = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const { adminDesembolso, firmarcontrato } = props;\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  console.log(props);\r\n  const [instructiveType, setinstructiveType] = useState(null);\r\n  const [facilityId, setfacilityId] = useState(null);\r\n  const [tabsFacility, settabsFacility] = useState(null);\r\n  const [Facility, setFacility] = useState(null);\r\n  const [datosUsuario, setdatosUsuario] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(true);\r\n  const [facilityType, setfacilityType] = useState(null);\r\n  const [faciliadDes, setfaciliadDes] = useState(null);\r\n  const [ShowModelCreditProposal, setShowModelCreditProposal] = useState(false);\r\n  const [ShowModelFinancialReport, setShowModelFinancialReport] = useState(false);\r\n  const [ModalPrevisualizardata, settoogleModalPrevisualizar] = useState(false);\r\n  const [ModalPrevisualizardataProp, settoogleModalPrevisualizarProp] = useState(false);\r\n  ///////\r\n  const [locationData, setLocationData] = useState(null);\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  const [DeshabilitarSelect, setDeshabilitarSelect] = useState(false);\r\n\r\n  const [showModalCreacionLinea, setshowModalCreacionLinea] = useState(false);\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [messageDlg, setmessageDlg] = useState({ msg: \"\", show: false, error: false });\r\n\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  const [msgDataND, setmsgDataND] = useState({ show: false, msg: \"\", isError: false });\r\n\r\n  const [optionSelected, setoptionSelected] = useState(null);\r\n  const [displayModalBitacora, setdisplayModalBitacora] = useState(false);\r\n\r\n  const [disbursementInstructionNumber, setDisbursementInstructionNumber] = useState(undefined)\r\n  const [modalCreacionLinea, setmodalCreacionLinea] = useState(false);\r\n  const [ejecutarDesembolso, setejecutarDesembolso] = useState(props !== undefined && props.ejecutarDesembolso !== undefined ? props.ejecutarDesembolso : true)\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    if (locationData.processId == \"450\") {\r\n      setDeshabilitarSelect(false)\r\n    }\r\n    setTimeout(() => {\r\n      if (locationData.processId == \"450\") {\r\n        document.querySelectorAll('input').forEach(function (item) {\r\n          item.setAttribute(\"disabled\", \"disabled\");\r\n        });\r\n        document.querySelectorAll('textarea').forEach(function (item) {\r\n          item.setAttribute(\"disabled\", \"disabled\");\r\n        });\r\n      }\r\n    }, 2000);\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n\r\n    loadUserProspect(locationData.transactionId)\r\n    // Read Api Service data\r\n    loadData(locationData)\r\n  }\r\n  function loadUserProspect(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  function loadData(data) {\r\n    let dataSession = data\r\n    setIsActiveLoading(true);\r\n    Promise.allSettled([\r\n      backendServices.consultPrincipalDebtor(data.transactionId),\r\n      backendServices.consultGeneralDataPropCred(data.transactionId),\r\n      backendServices.retrieveFacilityType()\r\n    ]).then(data => {\r\n      const [{ value: PrincipalDebtor }, { value: GeneralDataPropCred }, { value: FacilityType }] = data;\r\n      setdatosUsuario(PrincipalDebtor)\r\n      backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(resp => {\r\n        if (resp.length > 0) {\r\n          let facilidad = resp.find(x => x.facilityId == dataSession?.facilityId ?? 0)\r\n          console.log(\"facilidad\", FacilityType.find(x => x.id == facilidad?.facilityTypeId ?? 0)?.description ?? \"\");\r\n          setfaciliadDes(FacilityType.find(x => x.id == facilidad?.facilityTypeId ?? 0)?.description ?? \"\");\r\n\r\n          setFacility(resp);\r\n          setinstructiveType(facilidad.debtor)\r\n          setfacilityId(facilidad.facilityId)\r\n          setfacilityType(facilidad);\r\n        }\r\n        setIsActiveLoading(false)\r\n      }).catch(err => {\r\n        console.log(err);\r\n        setIsActiveLoading(false)\r\n      });\r\n\r\n    }).catch(err => {\r\n      setIsActiveLoading(false)\r\n    })\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    let data = Facility.at(e);\r\n    setfacilityType(data);\r\n    setinstructiveType(data.debtor)\r\n    setfacilityId(data.facilityId)\r\n  }\r\n\r\n  async function onSaveData(option, values = null) {\r\n    if (!disbursementInstructionNumber || disbursementInstructionNumber === ' ') {\r\n      var resp = await backendServices.saveDisbursementInstructiveByFacility(values);\r\n      // await backendServices.saveDisbursementInstructiveByFacility(values);\r\n      if (resp.status.statusCode === OPTs.ResponseBackend_STATUSOK) {\r\n        setDisbursementInstructionNumber(resp.disbursementInstructionNumber)\r\n        return true;\r\n      }\r\n      else {\r\n        showMessage({ msg: t(\"ErrorSaveMessage\"), show: true, error: true })\r\n      }\r\n      return false;\r\n    }\r\n    else {\r\n      var resp = await backendServices.updateDisbursementInstructiveByFacility({ ...values, status: true });\r\n      if (resp.statusCode === OPTs.ResponseBackend_STATUSOK) {\r\n        return true;\r\n      } else {\r\n        showMessage({ msg: t(\"ErrorSaveMessage\"), show: true, error: true })\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  ////////////////////\r\n  async function checkToContinue(option, values = null) {\r\n\r\n    console.log(\"checkToContinue\",locationData.processId);\r\n    if ((await onSaveData(option, values)) === true) {\r\n      if (+locationData.processId === +OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT) {\r\n        saveJBPMProcess(OPTs.PROCESS_ADMINDISBURSEMENT);      \r\n      }\r\n      else if (+locationData.processId === +OPTs.PROCESS_EXECUTEDISBURSEMENT) {  \r\n        console.log(\"GenerateCreditLines\");\r\n    \r\n        //EJECUTAR SERVICIOS DE T24  \r\n        //Generar Lineas \r\n        await GenerateCreditLines();   \r\n        \r\n        //Generar Instructivo\r\n        await GenerateInstructive();\r\n        return;        \r\n        //Generar Instructivo\r\n\r\n\r\n        //Chequear si tiene Garantias ... de lo contrario a expediente\r\n        saveJBPMProcess(OPTs.PROCESS_GUARANTEE);        \r\n      }\r\n    }\r\n    else {\r\n      showMessage({ msg: t(\"Debe Guardar todos los desembolsos antes de continuar\"), show: true, error: true })\r\n    }\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\r\n  }\r\n  function onSaveProcess(option) {\r\n\r\n    switch (option) {\r\n      case OPTs.PROCESS_CANCELPROCESS: {\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    saveJBPMProcess(option);\r\n  }\r\n  async function saveJBPMProcess(option) {\r\n\r\n    console.log(\"saveJBPMProcess\", option);\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId,\r\n      OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE,\r\n      maindebtor?.personId\r\n    );\r\n    infoBpmModel.personName = maindebtor !== undefined ? (maindebtor.typePerson == \"2\" ? maindebtor.name : (maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2)) : \"\";\r\n\r\n    console.log(\"saveJBPMProcess\", option);\r\n\r\n    switch (option) {\r\n      case OPTs.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(infoBpmModel.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog(OPTs.APPLICATION_STATUS_CANC, \"\");\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage({ msg: t(\"TheProcessCouldNotFinish\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT: {\r\n        infoBpmModel.processId = OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId.toString(),\r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage({ msg: t(\"Datahasbeensavedsuccessfully\"), error: false, show: true });\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.PROCESS_ADMINDISBURSEMENT: {\r\n        infoBpmModel.processId = OPTs.PROCESS_ADMINDISBURSEMENT;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_ADMINDISBURSEMENT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"requestId\": locationData.requestId,\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog();\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR              \r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }      \r\n      case OPTs.PROCESS_GUARANTEE: {\r\n        infoBpmModel.processId = OPTs.PROCESS_GUARANTEE;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_GUARANTEE.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"requestId\": locationData.requestId,\r\n          \"decision\": \"garantias\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog();\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR              \r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.PROCESS_VALIDATEFILE: {\r\n        infoBpmModel.processId = OPTs.PROCESS_VALIDATEFILE;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n        infoBpmModel.fromProcess = OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT;\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_VALIDATEFILE.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"requestId\": locationData.requestId,\r\n          \"decision\": \"expediente\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog();\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR              \r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      /*\r\n      case OPTs.PROCESS_SIGNCONTRACT: {\r\n        infoBpmModel.processId = OPTs.PROCESS_SIGNCONTRACT;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"requestId\": locationData.requestId,\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog(OPTs.APPLICATION_STATUS_DEVB, \"\");\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR              \r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }*/\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  function showMessage(data = null) {\r\n    if (data !== null) {\r\n      setmessageDlg(data)\r\n    }\r\n    else {\r\n      setmessageDlg({ msg: \"\", show: false, error: false })\r\n    }\r\n  }\r\n  function toogleModalPrevisualizarProp() {\r\n    settoogleModalPrevisualizarProp(!ModalPrevisualizardataProp);\r\n    removeBodyCss()\r\n  }\r\n  function toggleShowModelFinancialReport() {\r\n    setShowModelFinancialReport(!ShowModelFinancialReport)\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function toogleModalPrevisualizar() {\r\n    settoogleModalPrevisualizar(!ModalPrevisualizardata);\r\n    removeBodyCss()\r\n  }\r\n\r\n  async function saveAutoLog(APPLICATION_STATUS = null, observations = null) {\r\n    var mainDebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\r\n    var log = new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_15)\r\n    log.clientId = mainDebtor?.personId ?? log.clientId;\r\n    log.observations = observations !== null ? t(\"ActivityHasBeenFinishedSuccessfully\") : observations;\r\n    log.requestId = APPLICATION_STATUS?.id ?? 0;\r\n    log.statusDescription = APPLICATION_STATUS?.name ?? \"\";\r\n    saveLogProcess(log);\r\n  }\r\n  function showModalBitacora(show = true) {\r\n    setdisplayModalBitacora(show);\r\n  }\r\n\r\n  async function GenerateCreditLines(){\r\n    var dataResult = await backendServices.getCreditLine(locationData?.transactionId??0, locationData?.facilityId ?? 0);\r\n    console.log(\"GenerateCreditLines\",dataResult);\r\n\r\n       for( const creditLine of dataResult.creditLine ) {\r\n        var prodArray = [];\r\n        for (var dataprod of creditLine.creditLineProds) {\r\n          prodArray.push(\r\n            {\r\n              \"Product\": {\r\n                \"Cod\": dataprod?.tipoSubProducto ?? \"\"// Preguntar a Yamari, parce que no es el mismo del tipo de linea\r\n              }\r\n            }\r\n          );\r\n        }    \r\n        let datoSetCore = {\r\n          \"CreditLine\": {\r\n            \"Activity\": {\r\n              \"Cod\": creditLine.actividadEconomica.split(\"-\")[1] ?? \"\" //codigo de subactividad economica\r\n            },\r\n            \"AuthType\": creditLine?.tipoAutorizacion ?? \"\",\r\n            \"AutonomyCode\": {\r\n              \"Cod\": creditLine?.autonomia,\r\n              \"Desc\": creditLine?.descAutonomia,\r\n            },\r\n            \"AutonomyUser\": creditLine?.usuarioAutonomia,\r\n            \"CreditLimit\": {\r\n              \"AdviseAmt\": {\r\n                \"Amt\": creditLine?.montoAprobado.toString() ?? \"0\", //-> Monto de La Linea\r\n                \"CurCode\": creditLine?.moneda ?? \"\" //-> Codigo Moneda\r\n              },\r\n              \"Allow\": {\r\n                \"CurrencyData\": {\r\n                  \"CurAmt\": {\r\n                    \"Amt\": {\r\n                      \"-self-closing\": \"true\"\r\n                    },\r\n                    \"CurCode\": {\r\n                      \"-self-closing\": \"true\"\r\n                    }\r\n                  }\r\n                },\r\n                \"Party\": {\r\n                  \"PartyId\": {\r\n                    \"-self-closing\": \"true\"\r\n                  }\r\n                },\r\n                \"ProductData\": prodArray\r\n                /*[\r\n                  {\r\n                    \"Product\": {\r\n                      // \"Cod\":1000\r\n                      \"Cod\": datosJson?.lineTypeCode.toString() ?? \"\"// Preguntar a Yamari, parce que no es el mismo del tipo de linea\r\n                    }\r\n                  }\r\n                ]*/\r\n              },\r\n              \"AllowNetting\": creditLine?.permiteCompensacion ? \"Y\" : \"N\", // -> ?? FIJO\r\n              \"ApprovalDt\": creditLine?.fechaAprobada ?? moment().format(\"YYYY-MM-DD\"), // -> Fecha de Aprobacion\r\n              \"AvailDt\": creditLine?.fechaPropuesta ?? moment().format(\"YYYY-MM-DD\"),    // -> Fecha de Propuesta\r\n              \"AvailMarker\": creditLine?.marcadorDisponible ? \"Y\" : \"N\", // -> ?? FIJO\r\n              \"CountryRisk\": {\r\n                \"Country\": {\r\n                  \"CountryCode\": creditLine?.riesgoPais,\r\n                  \"CountryName\": {\r\n                    \"-self-closing\": \"true\"\r\n                  }\r\n                },\r\n                \"Percent\": creditLine?.porcentajeRiesgo.toString() ?? \"0\"\r\n              },\r\n              \"CreditLimitKey\": {\r\n                \"CreditLimitId\": creditLine?.numeroLinea\r\n              },\r\n              \"CurCode\": creditLine?.moneda ?? \"\", //-> Codigo Moneda\r\n              \"DeadLineDt\": moment().format(\"YYYY-MM-DD\"),\r\n              \"DueDt\": creditLine?.fechaVencimiento ?? moment().format(\"YYYY-MM-DD\"),\r\n              \"LimitAmt\": {\r\n                \"Amt\": creditLine?.montoAprobado.toString() ?? \"0\",\r\n                \"CurCode\": creditLine?.moneda ?? \"\", //-> Codigo Moneda\r\n              },\r\n              \"LimitAmtType\": creditLine?.tipoLimite,\r\n              \"LimitReject\": creditLine.rechazarLimite,\r\n              \"MaxCurAmt\": {\r\n                \"Amt\": creditLine?.maximoAprobado.toString() ?? \"0\",\r\n                \"CurCode\": creditLine?.moneda ?? \"\", //-> Codigo Moneda\r\n              },\r\n              \"ProposalDt\": creditLine.fechaPropuesta,\r\n              \"ReviewFreq\": {\r\n                \"FreqValue\": creditLine?.frecuenciaRevision\r\n              },\r\n              \"Signatories\": {\r\n                \"Signatory\": {\r\n                  \"PartyKey\": {\r\n                    \"PartyId\": creditLine?.idDeudor.toString()\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n       var result = await coreServices.newline(datoSetCore);\r\n       if(result === undefined){\r\n          return;\r\n       }\r\n    } \r\n  }\r\n\r\n  async function GenerateInstructive(){\r\n\r\n    var dataResult = await backendServices.getDisbursementInstructiveByFacility(locationData.transactionId, locationData.facilityId);\r\n    console.log(\"GenerateInstructive\",dataResult);\r\n\r\n    var data ={\r\n            AcctLoan: {\r\n                AcctSubtype: {\r\n                    Cod: dataResult.subProductTypeCode//\"AL.COMPANY.PRIVATE\"  // Subproducto\r\n                },\r\n                AutonomyCode: dataResult.autonomyCode, // ******** Codigo de la autonomia\r\n                AutonomyUser: dataResult.autonomyCode, //La autonomia o usuario que esta logueado\r\n                //ClosedDt:\"2029-10-03\", //\r\n                //ClubBanesco:\"false\",\r\n                CurCode: \"USD\", //codigo de Moneda\r\n                SubCategory: \"1623\",//dataResult.provinceDesc.split(\"*\")[1] ?? \"\", //Codigo de Subcategoria??\r\n                Variation: { //variacion -> Puede ir vacía\r\n                    \"Cod\": \"CLIENTE\"\r\n                },\r\n                \"AcctOpeningInfo\": {\r\n                    BusinessUnit: \"SUCURSAL\",//dataResult.branchDesc ?? \"\", // Banca viene de IGR\r\n                    \"InitialAmt\": {\r\n                        \"Amt\": \"5950\" //dataResult.disbursementApprovedAmount //monto\r\n                    },\r\n                    OpenDt: \"2022-02-07\",//dataResult.disbursementDate // Fecha de Inicio del desembolso\r\n                    SaleOfficer: \"3766\" //dataResult.saleChannel //Canal de venta .... ****** no está en pantalla\r\n                },\r\n                CreditAcctData: {\r\n                    AuthType: \"06\", //dataResult.authType, -> ?? ************ no esta en pantalla\r\n                    BillsCombined: \"true\",//dataResult.billsCombined, // Capital de Interes ... ********** no esta en pantalla\r\n                    CodeDestination: \"PA10\",//dataResult.provinceCode, // codigo de Destino ... Provincia de Destino\r\n                    CollOfficer: \"9999\", /// campo fijo siempre\r\n                    CountryDestination: \"PA\",//dataResult.countryCode, // codigo Pais de Destino\r\n                    CreditDestination: \"LOCAL\",//dataResult.creditDestination, // ********* Destino del Credito : LOCAL 1 /EXTRANJERO 2\r\n                    FundsDestination: \"1\",//dataResult.fundsDestination, // ********* Destino de los Fondos: LOCAL 1 / EXTRANJERO 2\r\n                    FundsPurpose: \"2103\",//dataResult.fundsPurposeCode, // ********** Proposito de los Fondos viene de un catalogo\r\n                    OriginationRef: \"99986\",//dataResult.originationRef, // ********** referencia de Orientacion , viene de un catalodo\r\n                    RefinanceNum: { // QUEDA FIJO\r\n                        \"self-closing\": \"true\"\r\n                    },\r\n                    SourceSales: { // ********* Viene de Catalogo\r\n                        \"Cod\": \"14\", //dataResult.sourceSalesCod,\r\n                        \"Desc\": \"REFERIDO POR EMPLEADO\" //dataResult.sourceSalesDesc,\r\n                    },\r\n                    WritingType: \"PAG\",//dataResult.writingType, // *********** Tipo de Escritura .. PAG/WRT .. Pagaré o Escritura\r\n                    Charge: [ //cargos \r\n                        {\r\n                            ChargeType: \"LENDCOMMISSION\", //Instrucciones Operativas -> Monto por Comision\r\n                            \"CurAmt\": {\r\n                                \"Amt\": \"392.7\" //dataResult.disbursementComisionAmount,\r\n                            }\r\n                        },\r\n                        {\r\n                            \"ChargeType\": \"TAX\", //Instrucciones Operativas -> ITBMs\r\n                            \"CurAmt\": {\r\n                                \"Amt\": \"2.18\" //dataResult.disbursementItbms,\r\n                            }\r\n                        },\r\n                        {\r\n                            \"ChargeType\": \"ALLEGALFEE\", //Instrucciones Operativas -> Notaría\r\n                            \"CurAmt\": {\r\n                                \"Amt\": \"4.36\" //dataResult.disbursementItbms,\r\n                            }\r\n                        },\r\n                        {\r\n                            \"ChargeType\": \"TFISCAL\", //Instrucciones Operativas -> Timbre Fisical\r\n                            \"CurAmt\": {\r\n                                \"Amt\": \"3\"\r\n                            }\r\n                        },\r\n                    ],\r\n                    \"CreditRegularPmt\": { // La podemos Omitir no es obligatorio\r\n                        \"BillType\": \"INSTALLMENT\",\r\n                        \"Freq\": {\r\n                            \"NoPaymentMonth\": \"1\",\r\n                            \"OnDayNumber\": \"3\"\r\n                        },\r\n                        \"PmtClass\": \"DUE\",\r\n                        \"PmtType\": \"CONSTANT\",\r\n                        \"PmtTargetDetail\": {\r\n                            \"ActualAmt\": {\r\n                                \"Amt\": \"114.9\"\r\n                            },\r\n                            \"StartDate\": \"2022-04-03\"\r\n                        }\r\n                    },\r\n                    Term: {    //*********** Termino o Plazo de desembolso ... + Tipo de Termino D/M/A\r\n                        ProposedTerm: \"91M\"\r\n                    },\r\n                    SettleInstruction: {\r\n                        PayIn: [\r\n                            {\r\n                                ACDBRule: \"PARTIAL\", //Constante\r\n                                PmtType: \"CONSTANT\",//Constante\r\n                                SettleActivity: { //Constante\r\n                                    Cod: \"LENDING-APPLYPAYMENT-PR.REPAYMENT\"\r\n                                },\r\n                                Settlement: \"false\", //************* desembolso en cuenta TRUE/FALSE\r\n                                PayInAcctRef: {\r\n                                    Activity: {  //Constante\r\n                                        Cod: \"ACCOUNTS-DEBIT-ARRANGEMENT\"\r\n                                    },\r\n                                    PayInAcct: { // Número de Línea de Crédito\r\n                                        \"AcctReference\": \"USD1273300020014\"\r\n                                    }\r\n                                }\r\n                            },\r\n                        ],\r\n                        PayOut: {\r\n                            PayOutAcct: { // Número de Línea de Crédito, el numero de la cuenta\r\n                                \"AcctReference\": \"USD1273300020014\"\r\n                            },\r\n                            Property: \"ACCOUNT\", // Si es una cuenta \"ACCOUNT\"\r\n                            SettleActivity: { //Constante\r\n                                Cod: \"LENDING-APPLYPAYMENT-PR.REPAYMENT\"\r\n                            },\r\n                            Settlement: \"true\" //Constante\r\n                        }\r\n                    },\r\n                    CreditAcctPmtInfo: {\r\n                        PmtMethod: \"DD\" // ******** Metodo de Pago ... DC/PV  Descuento Directo - Pago Voluntario\r\n                    }\r\n                },\r\n                IntRateData: [\r\n                    {\r\n                        IntRate: \"11.50\", // Tasa de Interes\r\n                        IntRateType: \"PRINCIPALINT\"\r\n                    },\r\n                    {\r\n                        \"IntRate\": \"12.50\",\r\n                        \"IntRateType\": \"LT.DPF.BASE\"\r\n                    },\r\n                    {\r\n                        \"IntRate\": \"13.50\",\r\n                        \"IntRateType\": \"LT.SPREAD.POINT\"\r\n                    }\r\n                ],\r\n                AcctMember: {\r\n                    \"PartyKey\": {\r\n                        \"PartyId\": \"990091561\" //Numero de Cliente T24\r\n                    },\r\n                    \"PartyRole\": {\r\n                        \"Cod\": \"OWNER\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        let datoSetCore = {\r\n          \"CreditLine\": {\r\n            \"Activity\": {\r\n              \"Cod\": dataResult.actividadEconomica.split(\"-\")[1] ?? \"\" //codigo de subactividad economica\r\n            },\r\n            \"AuthType\": dataResult?.tipoAutorizacion ?? \"\",\r\n            \"AutonomyCode\": {\r\n              \"Cod\": dataResult?.autonomia,\r\n              \"Desc\": dataResult?.descAutonomia,\r\n            },\r\n            \"AutonomyUser\": dataResult?.usuarioAutonomia,\r\n            \"CreditLimit\": {\r\n              \"AdviseAmt\": {\r\n                \"Amt\": dataResult?.montoAprobado.toString() ?? \"0\", //-> Monto de La Linea\r\n                \"CurCode\": dataResult?.moneda ?? \"\" //-> Codigo Moneda\r\n              },\r\n              \"Allow\": {\r\n                \"CurrencyData\": {\r\n                  \"CurAmt\": {\r\n                    \"Amt\": {\r\n                      \"-self-closing\": \"true\"\r\n                    },\r\n                    \"CurCode\": {\r\n                      \"-self-closing\": \"true\"\r\n                    }\r\n                  }\r\n                },\r\n                \"Party\": {\r\n                  \"PartyId\": {\r\n                    \"-self-closing\": \"true\"\r\n                  }\r\n                },\r\n              },\r\n              \"AllowNetting\": dataResult?.permiteCompensacion ? \"Y\" : \"N\", // -> ?? FIJO\r\n              \"ApprovalDt\": dataResult?.fechaAprobada ?? moment().format(\"YYYY-MM-DD\"), // -> Fecha de Aprobacion\r\n              \"AvailDt\": dataResult?.fechaPropuesta ?? moment().format(\"YYYY-MM-DD\"),    // -> Fecha de Propuesta\r\n              \"AvailMarker\": dataResult?.marcadorDisponible ? \"Y\" : \"N\", // -> ?? FIJO\r\n              \"CountryRisk\": {\r\n                \"Country\": {\r\n                  \"CountryCode\": dataResult?.riesgoPais,\r\n                  \"CountryName\": {\r\n                    \"-self-closing\": \"true\"\r\n                  }\r\n                },\r\n                \"Percent\": dataResult?.porcentajeRiesgo.toString() ?? \"0\"\r\n              },\r\n              \"CreditLimitKey\": {\r\n                \"CreditLimitId\": dataResult?.numeroLinea\r\n              },\r\n              \"CurCode\": dataResult?.moneda ?? \"\", //-> Codigo Moneda\r\n              \"DeadLineDt\": moment().format(\"YYYY-MM-DD\"),\r\n              \"DueDt\": dataResult?.fechaVencimiento ?? moment().format(\"YYYY-MM-DD\"),\r\n              \"LimitAmt\": {\r\n                \"Amt\": dataResult?.montoAprobado.toString() ?? \"0\",\r\n                \"CurCode\": dataResult?.moneda ?? \"\", //-> Codigo Moneda\r\n              },\r\n              \"LimitAmtType\": dataResult?.tipoLimite,\r\n              \"LimitReject\": dataResult.rechazarLimite,\r\n              \"MaxCurAmt\": {\r\n                \"Amt\": dataResult?.maximoAprobado.toString() ?? \"0\",\r\n                \"CurCode\": dataResult?.moneda ?? \"\", //-> Codigo Moneda\r\n              },\r\n              \"ProposalDt\": dataResult.fechaPropuesta,\r\n              \"ReviewFreq\": {\r\n                \"FreqValue\": dataResult?.frecuenciaRevision\r\n              },\r\n              \"Signatories\": {\r\n                \"Signatory\": {\r\n                  \"PartyKey\": {\r\n                    \"PartyId\": dataResult?.idDeudor.toString()\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return;\r\n       var result = await coreServices.newline(datoSetCore);\r\n       if(result === undefined){\r\n          return;\r\n       }\r\n       \r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={ejecutarDesembolso === false ? \"\" : \"page-content\"}>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <span className=\"mb-3\" style={S_seccions}>{faciliadDes}</span>\r\n              </Col>\r\n            </Row>\r\n            {facilityType &&\r\n              <DatosGenerales\r\n                // firmarcontrato={props?.firmarcontrato ?? true}\r\n                adminDesembolso={props?.adminDesembolso ?? true}\r\n                ejecutarDesembolso={ejecutarDesembolso}\r\n                facilityId={facilityId}\r\n                facilityType={facilityType}\r\n                DeshabilitarSelect={DeshabilitarSelect}\r\n                instructiveType={instructiveType}\r\n                onSaveProcess={checkToContinue}\r\n                ejecutivoDesembolso={props?.ejecutivoDesembolso ? true : false}\r\n                disbursementInstructionNumber={disbursementInstructionNumber}\r\n                setDisbursementInstructionNumber={setDisbursementInstructionNumber}\r\n              />}\r\n\r\n\r\n\r\n          </CardBody>\r\n\r\n        </Card>\r\n\r\n        {ejecutarDesembolso === false ? null :\r\n          <>\r\n            {locationData ?\r\n              <CheckListComponent attachmentFileInputModel={new AttachmentFileInputModel(locationData.transactionId, OPTs.CHECKLIST_PROCESS_DESEMBOLSO, OPTs.ACT_NONE)} />\r\n              : null}\r\n          </>\r\n        }\r\n\r\n        {ejecutarDesembolso === false ? null :\r\n          <>\r\n            {locationData ?\r\n              <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_14)} />\r\n              : null}\r\n\r\n            <Row style={{ marginTop: \"0px\", marginBottom: \"15px\" }}>\r\n              <Col md={4} style={{ textAlign: \"left\" }}>\r\n                <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={() => { onSaveProcess(OPTs.PROCESS_CANCELPROCESS) }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"CancelProcess\")}</Button>\r\n                <Button color=\"primary\" style={{ margin: '0px 5px' }} type=\"button\" onClick={() => { setoptionSelected(OPTs.PROCESS_SIGNCONTRACT); showModalBitacora() }}><i className=\"mdi mdi-backspace-outline mid-12px\"></i> {t(\"AdjustRequired\")}</Button>\r\n              </Col>\r\n              <Col md={8} style={{ textAlign: \"right\", marginTop: \"10px\" }}>\r\n                <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(Number(OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT)) }}><i className=\"mdi mdi-content-save-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n                {/* <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(OPTs.PROCESS_SIGNCONTRACT) }}><i className=\"mdi mdi-backspace-outline mid-12px\"></i> {t(\"ReturnToExecutive\")}</Button> */}\r\n                <Button color=\"success\" type=\"button\"\r\n                  onClick={() => { checkToContinue() }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Continue\")}</Button>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        }\r\n        <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n        {/* <ModalPrevicualizarIGR isOpen={ModalPrevisualizardata} toggle={() => { toogleModalPrevisualizar() }} />\r\n        <ModalPrevisualizarPropCred isOpen={ModalPrevisualizardataProp} toggle={() => { toogleModalPrevisualizarProp() }} /> */}\r\n        {/* <ModalPrevicualizarAIF isOpen={ShowModelFinancialReport} toggle={() => { toggleShowModelFinancialReport() }} /> */}\r\n        {\r\n          messageDlg && messageDlg.show ? (\r\n            <SweetAlert\r\n              type={messageDlg.error ? \"error\" : \"success\"}\r\n              confirmButtonText={t(\"Confirm\")}\r\n              cancelButtonText={t(\"Cancel\")}\r\n              title={messageDlg.error ? t(\"Error\") : t(\"Message\")}\r\n              onConfirm={() => { showMessage(); }}>\r\n              {messageDlg.msg}\r\n            </SweetAlert>\r\n          ) : null\r\n        }\r\n\r\n\r\n      </div>\r\n      {locationData && displayModalBitacora ?\r\n        <ModalBitacora logProcessModel={new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_ANALISISCREDITO, OPTs.ACT_NONE, OPTs.BPM_ACTIVITY_04)}\r\n          successSaved={() => { onSaveProcess(optionSelected); }}\r\n          isOpen={displayModalBitacora} toggle={() => { showModalBitacora(false) }} />\r\n        : null}\r\n\r\n    </React.Fragment >\r\n  )\r\n}\r\n\r\nInstructivoNuevo.propTypes = {\r\n  // selectedId: PropTypes.any,\r\n  // onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(InstructivoNuevo))\r\n"]},"metadata":{},"sourceType":"module"}