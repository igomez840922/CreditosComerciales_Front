{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\FacilityListBpm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelper } from '../../helpers';\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { Table, Card, CardBody, Row, Col, Label } from \"reactstrap\";\nimport HeaderSections from '../Common/HeaderSections';\nimport { useTranslation } from \"react-i18next\";\nimport { BackendServices, CoreServices } from \"../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FacilityListBpm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataReturn, setdataReturn] = useState(null);\n  const [debtorList, setdebtorList] = useState([]);\n  const [facilityTypeList, setfacilityTypeList] = useState([]);\n  const [proposalTypeList, setproposalTypeList] = useState([]); //Servicios\n\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  useEffect(() => {\n    if (props.transactionId != null) {\n      initializeData();\n    }\n  }, []);\n\n  async function initializeData() {\n    //los deudores\n    var result = await backendServices.consultarDeudores(props.transactionId);\n\n    if (result !== undefined) {\n      setdebtorList(result);\n    } //catalogo de facilidades\n\n\n    result = await backendServices.retrieveFacilityType();\n\n    if (result !== undefined) {\n      setfacilityTypeList(result);\n    } //catalogo de Propuestas\n\n\n    result = await backendServices.retrieveProposalType();\n\n    if (result !== undefined) {\n      setproposalTypeList(result);\n    } // consultarPropuesta de Credito\n\n\n    backendServices.consultGeneralDataPropCred(props.transactionId).then(resp => {\n      if (resp !== undefined || (resp === null || resp === void 0 ? void 0 : resp.length) > 0) {\n        //Consultar Lista de Facilidades\n        backendServices.consultarFacilidades(resp[0].requestId).then(resp => {\n          setdataReturn(resp);\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n          title: \"FacilityActual\",\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table mt-1\",\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Debtor\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Facility Type\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Proposal\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"ProposedRisk\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"ProposedRate\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataReturn ? dataReturn.filter(item => item.facilityType !== \"1\").map((item, index) => {\n              var _facilityTypeList$fin, _proposalTypeList$fin;\n\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.debtor\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_facilityTypeList$fin = facilityTypeList.find(x => x.id === item.facilityType)) === null || _facilityTypeList$fin === void 0 ? void 0 : _facilityTypeList$fin.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_proposalTypeList$fin = proposalTypeList.find(x => x.id === item.proposedType)) === null || _proposalTypeList$fin === void 0 ? void 0 : _proposalTypeList$fin.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: [\"$\", item.amount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-end\",\n                  children: [\"$\", item.proposedRate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, 'row-' + index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this);\n            }) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FacilityListBpm, \"O7jl5bGZXxbGigYU9uYpV7amdjM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FacilityListBpm;\nFacilityListBpm.propTypes = {\n  transactionId: PropTypes.string\n};\nexport default FacilityListBpm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityListBpm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/FacilityListBpm.js"],"names":["React","useState","useEffect","PropTypes","translationHelper","AvForm","AvGroup","AvField","AvFeedback","Table","Card","CardBody","Row","Col","Label","HeaderSections","useTranslation","BackendServices","CoreServices","FacilityListBpm","props","t","i18n","dataReturn","setdataReturn","debtorList","setdebtorList","facilityTypeList","setfacilityTypeList","proposalTypeList","setproposalTypeList","coreServices","setcoreServices","backendServices","setbackendServices","transactionId","initializeData","result","consultarDeudores","undefined","retrieveFacilityType","retrieveProposalType","consultGeneralDataPropCred","then","resp","length","consultarFacilidades","requestId","filter","item","facilityType","map","index","debtor","find","x","id","description","proposedType","amount","proposedRate","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelper } from '../../helpers';\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\"\r\n\r\nimport HeaderSections from '../Common/HeaderSections';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BackendServices, CoreServices } from \"../../services\";\r\n\r\nconst FacilityListBpm = (props) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [dataReturn, setdataReturn] = useState(null);\r\n  const [debtorList, setdebtorList] = useState([]);\r\n  const [facilityTypeList, setfacilityTypeList] = useState([]);\r\n  const [proposalTypeList, setproposalTypeList] = useState([]);\r\n\r\n  //Servicios\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n\r\n  useEffect(() => {\r\n    if (props.transactionId != null) {\r\n      initializeData();\r\n    }\r\n  }, []);\r\n\r\n  async function initializeData() {\r\n\r\n    //los deudores\r\n    var result = await backendServices.consultarDeudores(props.transactionId);\r\n    if (result !== undefined) {\r\n      setdebtorList(result);\r\n    }\r\n\r\n    //catalogo de facilidades\r\n    result = await backendServices.retrieveFacilityType();\r\n    if (result !== undefined) {\r\n      setfacilityTypeList(result);\r\n    }\r\n\r\n    //catalogo de Propuestas\r\n    result = await backendServices.retrieveProposalType();\r\n    if (result !== undefined) {\r\n      setproposalTypeList(result);\r\n    }\r\n\r\n    // consultarPropuesta de Credito\r\n    backendServices.consultGeneralDataPropCred(props.transactionId).then((resp) => {\r\n      if (resp !== undefined || resp?.length > 0) {\r\n        //Consultar Lista de Facilidades\r\n        backendServices.consultarFacilidades(resp[0].requestId).then((resp) => {\r\n          setdataReturn(resp)\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <>\r\n        <CardBody>\r\n          <HeaderSections title={\"FacilityActual\"} t={t}></HeaderSections>\r\n          <p className=\"card-title-desc\">\r\n          </p>\r\n          <Table className=\"table mt-1\" responsive>\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th>{t(\"Debtor\")}</th>\r\n                <th>{t(\"Facility Type\")}</th>\r\n                <th>{t(\"Proposal\")}</th>\r\n                <th className=\"text-end\">{t(\"ProposedRisk\")}</th>\r\n                <th className=\"text-end\">{t(\"ProposedRate\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dataReturn ?\r\n                dataReturn.filter(item => item.facilityType !== \"1\").map((item, index) => (\r\n                  <tr key={'row-' + index}>\r\n                    <td>\r\n                      {\r\n                        item.debtor\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      {\r\n                        facilityTypeList.find(x => x.id === item.facilityType)?.description\r\n                      }\r\n                    </td>\r\n                    <td>\r\n                      {\r\n                        proposalTypeList.find(x => x.id === item.proposedType)?.description\r\n                      }\r\n                    </td>\r\n                    <td className=\"text-end\">${item.amount}</td>\r\n                    <td className=\"text-end\">${item.proposedRate}</td>\r\n                  </tr>\r\n                ))\r\n                : null}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </>\r\n    </React.Fragment >\r\n\r\n  );\r\n};\r\nFacilityListBpm.propTypes = {\r\n  transactionId: PropTypes.string,\r\n};\r\nexport default FacilityListBpm;\r\n"]},"metadata":{},"sourceType":"module"}