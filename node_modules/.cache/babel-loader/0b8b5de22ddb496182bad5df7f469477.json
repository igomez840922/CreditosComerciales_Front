{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalInformacionClientes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalInformacionClientes = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [paises, setPaises] = useState([]);\n  const [dataReturn, setDataReturn] = useState(props.jsonClientes);\n  const [campoRequeridoCustomType, setcampoRequeridoCustomType] = useState(false);\n  const [campoRequeridoTipoVenta, setcampoRequeridoTipoVenta] = useState(false);\n  const [campoRequeridoPais, setcampoRequeridoPais] = useState(false);\n  const [paisSelect, setpaisSelect] = useState(undefined);\n  const [tipoClienteSelect, settipoClienteSelect] = useState(undefined);\n  const [tipoVentaSelect, settipoVentaSelect] = useState(undefined);\n  const clienteTipo = [{\n    label: \"Privado\",\n    value: \"1\"\n  }, {\n    label: \"Gobierno\",\n    value: \"2\"\n  }];\n  const tipoVentaData = [{\n    label: \"Credito\",\n    value: \"1\"\n  }, {\n    label: \"Contado\",\n    value: \"2\"\n  }];\n  React.useEffect(() => {\n    // Read Api Service data\n    loadCountry();\n    setcampoRequeridoCustomType(false);\n    setcampoRequeridoTipoVenta(false);\n    setcampoRequeridoPais(false);\n  }, [props.isOpen]);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setpaisSelect(undefined);\n    settipoClienteSelect(undefined);\n    settipoVentaSelect(undefined);\n\n    try {\n      if (paises.length > 0 && props.jsonClientes.country !== null && paisSelect === undefined) {\n        defaultVal = paises.find(x => x.label === props.jsonClientes.country);\n\n        if (defaultVal !== undefined) {\n          setpaisSelect(defaultVal);\n        }\n      }\n\n      if (clienteTipo.length > 0 && props.jsonClientes.customerType !== null && tipoClienteSelect === undefined) {\n        defaultVal = clienteTipo.find(x => x.label === props.jsonClientes.customerType);\n\n        if (defaultVal !== undefined) {\n          settipoClienteSelect(defaultVal);\n        }\n      }\n\n      if (tipoVentaData.length > 0 && props.jsonClientes.salesType !== null && tipoVentaSelect === undefined) {\n        defaultVal = tipoVentaData.find(x => x.label === props.jsonClientes.salesType);\n\n        if (defaultVal !== undefined) {\n          settipoVentaSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n\n    setDataReturn(props.jsonClientes);\n  }, [props.isOpen, paises]); // Submitimos formulario para busqueda de clientes\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    props.addCliente(dataReturn, props.tipo);\n  }\n\n  function loadCountry() {\n    const api = new CoreServices(); // getPaisesCatalogo\n\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setPaises(json);\n    });\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"name\") {\n      dataReturn.name = e.target.value;\n    }\n\n    if (tipo == \"country\") {\n      dataReturn.country = e.label;\n    }\n\n    if (tipo == \"salePercentage\") {\n      dataReturn.salePercentage = Number(e.target.value);\n    }\n\n    if (tipo == \"customerType\") {\n      dataReturn.customerType = e.label;\n    }\n\n    if (tipo == \"salesType\") {\n      dataReturn.salesType = e.label;\n    }\n\n    if (tipo == \"termDays\") {\n      dataReturn.termDays = Number(e.target.value);\n    }\n\n    if (tipo == \"delayReason\") {\n      dataReturn.delayReason = e.target.value;\n    }\n\n    setDataReturn(dataReturn);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"ClientsInfo\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"8\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"name\",\n                        children: t(\"FullName\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 137,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        onChange: e => {\n                          changeAll(e, \"name\");\n                        },\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"name\",\n                        id: \"name\",\n                        value: props.jsonClientes.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idcountry\",\n                        children: t(\"Country\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setpaisSelect(paises.find(x => x.label === e.label));\n                          changeAll(e, \"country\");\n                        },\n                        options: paises,\n                        id: \"paises\",\n                        value: paisSelect,\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"SelectCountry\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this), campoRequeridoPais ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"salePercent\",\n                        children: t(\"SalePercent\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        onChange: e => {\n                          changeAll(e, \"salePercentage\");\n                        },\n                        className: \"form-control\",\n                        name: \"salePercent\",\n                        type: \"number\",\n                        validate: {\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        },\n                        value: props.jsonClientes.salePercentage,\n                        id: \"salePercent\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"customerType\",\n                        children: t(\"ClientType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          settipoClienteSelect(clienteTipo.find(x => x.label === e.label));\n                          changeAll(e, \"customerType\");\n                        },\n                        options: clienteTipo,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: tipoClienteSelect\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 25\n                      }, this), campoRequeridoCustomType ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"termDays\",\n                        children: t(\"Crterm(days)\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        onChange: e => {\n                          changeAll(e, \"termDays\");\n                        },\n                        className: \"form-control\",\n                        name: \"termDays\",\n                        type: \"number\",\n                        validate: {\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        },\n                        value: props.jsonClientes.termDays,\n                        id: \"termDays\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"salesType\",\n                        children: t(\"SaleType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          settipoVentaSelect(tipoVentaData.find(x => x.label === e.label));\n                          changeAll(e, \"salesType\");\n                        },\n                        options: tipoVentaData,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: tipoVentaSelect\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 25\n                      }, this), campoRequeridoTipoVenta ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"companyHistoryDescription\",\n                        children: t(\"IncaseofCollectionDelayindicateReasonforCollectionDelayandStartegia\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 240,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        onChange: e => {\n                          changeAll(e, \"delayReason\");\n                        },\n                        value: props.jsonClientes.delayReason,\n                        type: \"textarea\",\n                        name: \"companyHistoryDescription\",\n                        id: \"companyHistoryDescription\",\n                        maxLength: \"1000\",\n                        rows: \"7\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"dark\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: t(\"Cancel\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalInformacionClientes, \"Ut42iLPFcumvTsd6mxgbPIZ1t6s=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalInformacionClientes;\nModalInformacionClientes.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default withTranslation()(ModalInformacionClientes);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalInformacionClientes\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalInformacionClientes.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","Select","AvForm","AvField","AvGroup","CoreServices","ModalInformacionClientes","props","t","i18n","paises","setPaises","dataReturn","setDataReturn","jsonClientes","campoRequeridoCustomType","setcampoRequeridoCustomType","campoRequeridoTipoVenta","setcampoRequeridoTipoVenta","campoRequeridoPais","setcampoRequeridoPais","paisSelect","setpaisSelect","undefined","tipoClienteSelect","settipoClienteSelect","tipoVentaSelect","settipoVentaSelect","clienteTipo","label","value","tipoVentaData","useEffect","loadCountry","isOpen","defaultVal","length","country","find","x","customerType","salesType","err","handleSubmit","event","errors","values","preventDefault","addCliente","tipo","api","getPaisesCatalogo","then","response","json","i","Records","push","changeAll","e","name","target","salePercentage","Number","termDays","delayReason","toggle","backgroundColor","number","errorMessage","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport Select from \"react-select\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\nconst ModalInformacionClientes = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [paises, setPaises] = useState([]);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonClientes);\r\n  const [campoRequeridoCustomType, setcampoRequeridoCustomType] = useState(false);\r\n  const [campoRequeridoTipoVenta, setcampoRequeridoTipoVenta] = useState(false);\r\n  const [campoRequeridoPais, setcampoRequeridoPais] = useState(false);\r\n  const [paisSelect, setpaisSelect] = useState(undefined);\r\n  const [tipoClienteSelect, settipoClienteSelect] = useState(undefined);\r\n  const [tipoVentaSelect, settipoVentaSelect] = useState(undefined);\r\n  const clienteTipo = [{ label: \"Privado\", value: \"1\" }, { label: \"Gobierno\", value: \"2\" }];\r\n  const tipoVentaData = [{ label: \"Credito\", value: \"1\" }, { label: \"Contado\", value: \"2\" }];\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    loadCountry()\r\n    setcampoRequeridoCustomType(false);\r\n    setcampoRequeridoTipoVenta(false);\r\n    setcampoRequeridoPais(false);\r\n  }, [props.isOpen]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setpaisSelect(undefined)\r\n    settipoClienteSelect(undefined)\r\n    settipoVentaSelect(undefined)\r\n    try {\r\n      if (paises.length > 0 && props.jsonClientes.country !== null && paisSelect === undefined) {\r\n        defaultVal = paises.find(x => x.label === props.jsonClientes.country);\r\n        if (defaultVal !== undefined) {\r\n          setpaisSelect(defaultVal);\r\n        }\r\n      }\r\n      if (clienteTipo.length > 0 && props.jsonClientes.customerType !== null && tipoClienteSelect === undefined) {\r\n        defaultVal = clienteTipo.find(x => x.label === props.jsonClientes.customerType);\r\n        if (defaultVal !== undefined) {\r\n          settipoClienteSelect(defaultVal);\r\n        }\r\n      }\r\n      if (tipoVentaData.length > 0 && props.jsonClientes.salesType !== null && tipoVentaSelect === undefined) {\r\n        defaultVal = tipoVentaData.find(x => x.label === props.jsonClientes.salesType);\r\n        if (defaultVal !== undefined) {\r\n          settipoVentaSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n    setDataReturn(props.jsonClientes)\r\n\r\n  }, [props.isOpen, paises]);\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    props.addCliente(dataReturn, props.tipo);\r\n  }\r\n  function loadCountry() {\r\n    const api = new CoreServices();\r\n    // getPaisesCatalogo\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        setPaises(json);\r\n      });\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"name\") {\r\n      dataReturn.name = e.target.value;\r\n    }\r\n    if (tipo == \"country\") {\r\n      dataReturn.country = e.label;\r\n    }\r\n    if (tipo == \"salePercentage\") {\r\n      dataReturn.salePercentage = Number(e.target.value);\r\n    }\r\n    if (tipo == \"customerType\") {\r\n      dataReturn.customerType = e.label;\r\n    }\r\n    if (tipo == \"salesType\") {\r\n      dataReturn.salesType = e.label;\r\n    }\r\n    if (tipo == \"termDays\") {\r\n      dataReturn.termDays = Number(e.target.value);\r\n    }\r\n    if (tipo == \"delayReason\") {\r\n      dataReturn.delayReason = e.target.value;\r\n    }\r\n    setDataReturn(dataReturn)\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"ClientsInfo\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"8\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"name\">{t(\"FullName\")}</Label>\r\n                        <AvField\r\n                          onChange={(e) => {\r\n                            changeAll(e, \"name\");\r\n                          }}\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={props.jsonClientes.name}                          \r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idcountry\">{t(\"Country\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => {\r\n                            setpaisSelect(paises.find(x => x.label === e.label)); changeAll(e, \"country\");\r\n                          }}\r\n                          options={paises}\r\n                          id=\"paises\"\r\n                          value={paisSelect}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"SelectCountry\")}\r\n                        />\r\n                        {campoRequeridoPais ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"salePercent\">{t(\"SalePercent\")}</Label>\r\n                        <AvField\r\n                          onChange={(e) => {\r\n                            changeAll(e, \"salePercentage\");\r\n                          }}\r\n                          className=\"form-control\"\r\n                          name=\"salePercent\"\r\n                          type=\"number\"\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          value={props.jsonClientes.salePercentage}\r\n                          id=\"salePercent\" />\r\n                      </AvGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"customerType\">{t(\"ClientType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { settipoClienteSelect(clienteTipo.find(x => x.label === e.label)); changeAll(e, \"customerType\"); }}\r\n                          options={clienteTipo}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={tipoClienteSelect}\r\n                        />\r\n                        {campoRequeridoCustomType ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"termDays\">{t(\"Crterm(days)\")}</Label>\r\n                        <AvField\r\n                          onChange={(e) => {\r\n                            changeAll(e, \"termDays\");\r\n                          }}\r\n                          className=\"form-control\"\r\n                          name=\"termDays\"\r\n                          type=\"number\"\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          value={props.jsonClientes.termDays}\r\n                          id=\"termDays\" />\r\n                      </AvGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"salesType\">{t(\"SaleType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { settipoVentaSelect(tipoVentaData.find(x => x.label === e.label)); changeAll(e, \"salesType\"); }}\r\n                          options={tipoVentaData}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={tipoVentaSelect}\r\n                        />\r\n                        {campoRequeridoTipoVenta ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"companyHistoryDescription\">{t(\"IncaseofCollectionDelayindicateReasonforCollectionDelayandStartegia\")}</Label>\r\n                        <AvField\r\n                          onChange={(e) => {\r\n                            changeAll(e, \"delayReason\");\r\n                          }}\r\n                          value={props.jsonClientes.delayReason}\r\n                          type=\"textarea\"\r\n                          name=\"companyHistoryDescription\"\r\n                          id=\"companyHistoryDescription\"\r\n                          maxLength=\"1000\"\r\n                          rows=\"7\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    {t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalInformacionClientes.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\nexport default (withTranslation()(ModalInformacionClientes));\r\n"]},"metadata":{},"sourceType":"module"}