{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { BackendServices } from \"../../../../services/\";\nimport Currency from '../../../../helpers/currency';\nconst services = new BackendServices();\nconst currencyValidation = new Currency();\nexport const useFormQuoter = initialForm => {\n  _s();\n\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [typePerson, setTypePerson] = useState(true);\n  const [disableFeci, setDisableFeci] = useState(true);\n  const [disableDefinedFee, setDisableDefinedFee] = useState(true);\n  const [disableTerm, setDisableTerm] = useState(false);\n  const [disableGracePeriod, setDisableGracePeriod] = useState(true);\n  const refForm = useRef(null);\n\n  const hdlOnChange = (evt, selectField) => {\n    console.group('Before');\n    console.info(evt, selectField);\n    console.groupEnd();\n    const name = (evt === null || evt === void 0 ? void 0 : evt.target) ? evt.target.name : selectField.name;\n    let value = (evt === null || evt === void 0 ? void 0 : evt.target) ? evt.target.value : evt.value;\n\n    if (name === \"amountDebt\" || name === \"customerDefinedPayment\") {\n      value = currencyValidation.getRealValue(evt.target.value);\n      console.info(\"value\", value);\n    }\n\n    if (name === \"anualRate\" || name === \"feciRate\") {\n      value = currencyValidation.getRealPercent(evt.target.value);\n      console.info(\"value\", value);\n    }\n\n    console.group('After');\n    console.info(name, value);\n    console.groupEnd();\n\n    if (selectField === null || selectField === void 0 ? void 0 : selectField.name) {\n      auxSelectFields(selectField.name, value);\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const hdlOnKeyUpRealNumber = e => {\n    let input = currencyValidation.getRealValue(e.target.value);\n    e.target.value = currencyValidation.format(input);\n    console.info(\"real number:\", input);\n    console.info(\"real number:\", Number(input));\n  };\n\n  const hdlOnKeyUpPercentageNumber = e => {\n    let input = currencyValidation.getRealPercent(e.target.value);\n    e.target.value = currencyValidation.formatPercent(input);\n    console.info(\"percentage number:\", input);\n  };\n\n  const hdlOnSubmit = evt => {\n    console.group('FORM SUBMIT');\n    console.info(\"evt:\", evt);\n    console.groupEnd();\n  };\n\n  const hdlOnValidSubmit = async () => {\n    console.group('VALID FORM');\n    console.info(\"Data submitted!\", form);\n    setLoading(true);\n    const resp = await services.getQuoterPaymentPlan(form.loanType, form.amountDebt, form.anualRate, form.feciRate, form.term, form.paymentPeriod, form.gracePeriod, form.gracePeriodType, form.customerDefinedPayment);\n    setLoading(false);\n    console.info('Service response', resp);\n    setResponse(resp.payments); // .then(resp => {\n    //   setLoading(false)\n    //   console.info('Service response', resp)\n    //   setResponse(resp.payments)\n    // })\n\n    console.info(response);\n    console.groupEnd();\n  };\n\n  const hdlOnInvalidSubmit = (evt, errors, values) => {\n    console.group('INVALID FORM');\n    console.info(\"Not working!\");\n    console.groupEnd();\n  };\n\n  const hdlTest = evt => {\n    // evt.preventDefault()\n    console.group('HANDLE TEST'); // evt.target[16].value = \"\"\n\n    console.groupEnd(); // setForm({\n    //   amountDebt: \" \"\n    // })\n  };\n\n  const auxSelectFields = (selectFieldName, selectedValue) => {\n    switch (selectFieldName) {\n      case 'feciSelect':\n        const disableFeci = selectedValue == \"Si\" ? false : true;\n        setDisableFeci(disableFeci);\n        return;\n\n      case 'personType':\n        const type = selectedValue == \"Natural\" ? \"Natural\" : \"Juridica\";\n        setTypePerson(type);\n        return;\n\n      case 'definedPayment':\n        const definedFee = selectedValue == \"Si\" ? false : true;\n        setDisableDefinedFee(definedFee);\n        setDisableTerm(!definedFee);\n        return;\n\n      case 'gracePeriodType':\n        const disableGracePeriod = selectedValue == \"p\" ? false : true;\n        setDisableGracePeriod(disableGracePeriod);\n        return;\n\n      default:\n        break;\n    }\n  };\n\n  const changeSelectOptions = (valueCheck, option) => {\n    const activateOption = valueCheck === option ? false : true;\n    return activateOption;\n  };\n\n  return {\n    form,\n    errors,\n    loading,\n    response,\n    hdlTest,\n    hdlOnKeyUpRealNumber,\n    hdlOnKeyUpPercentageNumber,\n    hdlOnChange,\n    hdlOnSubmit,\n    hdlOnInvalidSubmit,\n    hdlOnValidSubmit,\n    disableFeci,\n    disableDefinedFee,\n    disableTerm,\n    disableGracePeriod,\n    refForm\n  };\n};\n\n_s(useFormQuoter, \"unZVdn+UcXj1ENIg0pI0bBb55sM=\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/Hooks/useFormQuoter.js"],"names":["useRef","useState","BackendServices","Currency","services","currencyValidation","useFormQuoter","initialForm","form","setForm","errors","setErrors","loading","setLoading","response","setResponse","typePerson","setTypePerson","disableFeci","setDisableFeci","disableDefinedFee","setDisableDefinedFee","disableTerm","setDisableTerm","disableGracePeriod","setDisableGracePeriod","refForm","hdlOnChange","evt","selectField","console","group","info","groupEnd","name","target","value","getRealValue","getRealPercent","auxSelectFields","hdlOnKeyUpRealNumber","e","input","format","Number","hdlOnKeyUpPercentageNumber","formatPercent","hdlOnSubmit","hdlOnValidSubmit","resp","getQuoterPaymentPlan","loanType","amountDebt","anualRate","feciRate","term","paymentPeriod","gracePeriod","gracePeriodType","customerDefinedPayment","payments","hdlOnInvalidSubmit","values","hdlTest","selectFieldName","selectedValue","type","definedFee","changeSelectOptions","valueCheck","option","activateOption"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react'\r\nimport { BackendServices } from \"../../../../services/\";\r\nimport Currency from '../../../../helpers/currency';\r\n\r\nconst services = new BackendServices()\r\nconst currencyValidation = new Currency()\r\n\r\nexport const useFormQuoter = (initialForm) => {\r\n  const [form, setForm] = useState(initialForm)\r\n  const [errors, setErrors] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n  const [response, setResponse] = useState(null)\r\n  const [typePerson, setTypePerson] = useState(true)\r\n  const [disableFeci, setDisableFeci] = useState(true)\r\n  const [disableDefinedFee, setDisableDefinedFee] = useState(true)\r\n  const [disableTerm, setDisableTerm] = useState(false)\r\n  const [disableGracePeriod, setDisableGracePeriod] = useState(true)\r\n  const refForm = useRef(null)\r\n\r\n  const hdlOnChange = (evt, selectField) => {\r\n    console.group('Before')\r\n    console.info(evt, selectField)\r\n    console.groupEnd()\r\n\r\n    const name = evt?.target\r\n      ? evt.target.name\r\n      : selectField.name\r\n\r\n\r\n    let value = evt?.target\r\n      ? evt.target.value\r\n      : evt.value\r\n\r\n    if (name === \"amountDebt\" || name === \"customerDefinedPayment\") {\r\n      value = currencyValidation.getRealValue(evt.target.value)\r\n      console.info(\"value\", value)\r\n    }\r\n\r\n    if (name === \"anualRate\" || name === \"feciRate\") {\r\n      value = currencyValidation.getRealPercent(evt.target.value)\r\n      console.info(\"value\", value)\r\n    }\r\n\r\n    console.group('After')\r\n    console.info(name, value)\r\n    console.groupEnd()\r\n\r\n    if (selectField?.name) {\r\n      auxSelectFields(selectField.name, value)\r\n    }\r\n\r\n    setForm({\r\n      ...form,\r\n      [name]: value\r\n    })\r\n\r\n  }\r\n\r\n  const hdlOnKeyUpRealNumber = (e) => {\r\n    let input = currencyValidation.getRealValue(e.target.value)\r\n    e.target.value = currencyValidation.format(input)\r\n    console.info(\"real number:\", input)\r\n    console.info(\"real number:\", Number(input))\r\n  }\r\n\r\n  const hdlOnKeyUpPercentageNumber = (e) => {\r\n    let input = currencyValidation.getRealPercent(e.target.value)\r\n    e.target.value = currencyValidation.formatPercent(input)\r\n    console.info(\"percentage number:\", input)\r\n  }\r\n\r\n  const hdlOnSubmit = (evt) => {\r\n    console.group('FORM SUBMIT')\r\n    console.info(\"evt:\", evt)\r\n    console.groupEnd()\r\n  }\r\n\r\n  const hdlOnValidSubmit = async () => {\r\n    console.group('VALID FORM')\r\n    console.info(\"Data submitted!\", form)\r\n\r\n    setLoading(true)\r\n    const resp = await services.getQuoterPaymentPlan(\r\n      form.loanType,\r\n      form.amountDebt,\r\n      form.anualRate,\r\n      form.feciRate,\r\n      form.term,\r\n      form.paymentPeriod,\r\n      form.gracePeriod,\r\n      form.gracePeriodType,\r\n      form.customerDefinedPayment\r\n    )\r\n    setLoading(false)\r\n    console.info('Service response', resp)\r\n    setResponse(resp.payments)\r\n    // .then(resp => {\r\n    //   setLoading(false)\r\n    //   console.info('Service response', resp)\r\n    //   setResponse(resp.payments)\r\n    // })\r\n    console.info(response)\r\n    console.groupEnd()\r\n  }\r\n\r\n  const hdlOnInvalidSubmit = (evt, errors, values) => {\r\n    console.group('INVALID FORM')\r\n    console.info(\"Not working!\")\r\n    console.groupEnd()\r\n\r\n  }\r\n\r\n  const hdlTest = (evt) => {\r\n    // evt.preventDefault()\r\n    console.group('HANDLE TEST')\r\n    // evt.target[16].value = \"\"\r\n    console.groupEnd()\r\n    // setForm({\r\n    //   amountDebt: \" \"\r\n    // })\r\n  }\r\n\r\n  const auxSelectFields = (selectFieldName, selectedValue) => {\r\n    switch (selectFieldName) {\r\n      case 'feciSelect':\r\n        const disableFeci = selectedValue == \"Si\"\r\n          ? false\r\n          : true\r\n        setDisableFeci(disableFeci)\r\n        return\r\n      case 'personType':\r\n        const type = selectedValue == \"Natural\"\r\n          ? \"Natural\"\r\n          : \"Juridica\"\r\n        setTypePerson(type)\r\n        return\r\n      case 'definedPayment':\r\n        const definedFee = selectedValue == \"Si\"\r\n          ? false\r\n          : true\r\n        setDisableDefinedFee(definedFee)\r\n        setDisableTerm(!definedFee)\r\n        return\r\n      case 'gracePeriodType':\r\n        const disableGracePeriod = selectedValue == \"p\"\r\n          ? false\r\n          : true\r\n        setDisableGracePeriod(disableGracePeriod)\r\n        return\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const changeSelectOptions = (valueCheck, option) => {\r\n    const activateOption = valueCheck === option ? false : true\r\n\r\n    return activateOption\r\n  }\r\n\r\n\r\n  return {\r\n    form,\r\n    errors,\r\n    loading,\r\n    response,\r\n    hdlTest,\r\n    hdlOnKeyUpRealNumber,\r\n    hdlOnKeyUpPercentageNumber,\r\n    hdlOnChange,\r\n    hdlOnSubmit,\r\n    hdlOnInvalidSubmit,\r\n    hdlOnValidSubmit,\r\n    disableFeci,\r\n    disableDefinedFee,\r\n    disableTerm,\r\n    disableGracePeriod,\r\n    refForm,\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}