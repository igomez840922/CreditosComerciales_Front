{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\modal\\\\ModalPreviewHistorical.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Modal } from \"reactstrap\";\nimport { translationHelpers } from \"../../../helpers\";\nimport PreviewHistorical from \"./PreviewHistorical\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalPreviewHistorical = props => {\n  _s();\n\n  const [t] = translationHelpers('translation');\n  React.useEffect(() => {\n    console.log(props);\n  }, [props.closingPreview]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (props === null || props === void 0 ? void 0 : props.page) ? /*#__PURE__*/_jsxDEV(PreviewHistorical, {\n      title: props.title,\n      transactId: props.transactId,\n      instanceId: props.instanceId,\n      closingPreview: props.closingPreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"xl\",\n      isOpen: props.isOpen,\n      toggle: props.toggle,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title mt-0\",\n          children: t(props.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.toggle,\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(PreviewHistorical, {\n          title: props.title,\n          transactId: props.transactId,\n          instanceId: props.instanceId,\n          closingPreview: props.closingPreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModalPreviewHistorical, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ModalPreviewHistorical;\nModalPreviewHistorical.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onAttach: PropTypes.func\n};\nexport default ModalPreviewHistorical;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPreviewHistorical\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/modal/ModalPreviewHistorical.js"],"names":["React","useState","PropTypes","Modal","translationHelpers","PreviewHistorical","ModalPreviewHistorical","props","t","useEffect","console","log","closingPreview","page","title","transactId","instanceId","isOpen","toggle","propTypes","bool","func","onAttach"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACIC,KADJ,QAEO,YAFP;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;;AAGA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,CAAD,IAAMJ,kBAAkB,CAAC,aAAD,CAA9B;AACAJ,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFD,EAEG,CAACA,KAAK,CAACK,cAAP,CAFH;AAIA,sBACI;AAAA,cACK,CAAAL,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,IAAP,iBAAc,QAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEN,KAAK,CAACO,KAAhC;AAAuC,MAAA,UAAU,EAAEP,KAAK,CAACQ,UAAzD;AAAqE,MAAA,UAAU,EAAER,KAAK,CAACS,UAAvF;AAAmG,MAAA,cAAc,EAAET,KAAK,CAACK;AAAzH;AAAA;AAAA;AAAA;AAAA,YAAd,gBACG,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,IADT;AAEI,MAAA,MAAM,EAAEL,KAAK,CAACU,MAFlB;AAGI,MAAA,MAAM,EAAEV,KAAK,CAACW,MAHlB;AAII,MAAA,QAAQ,EAAE,IAJd;AAAA,8BAKI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBAAkCV,CAAC,CAACD,KAAK,CAACO,KAAP;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAEP,KAAK,CAACW,MAFnB;AAGI,UAAA,SAAS,EAAC,OAHd;AAII,0BAAa,OAJjB;AAKI,wBAAW,OALf;AAAA,iCAMI;AAAM,2BAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,KAAK,EAAEX,KAAK,CAACO,KAAhC;AAAuC,UAAA,UAAU,EAAEP,KAAK,CAACQ,UAAzD;AAAqE,UAAA,UAAU,EAAER,KAAK,CAACS,UAAvF;AAAmG,UAAA,cAAc,EAAET,KAAK,CAACK;AAAzH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AA0BH,CAhCD;;GAAMN,sB;;KAAAA,sB;AAkCNA,sBAAsB,CAACa,SAAvB,GAAmC;AAC/BF,EAAAA,MAAM,EAAEf,SAAS,CAACkB,IADa;AAE/BF,EAAAA,MAAM,EAAEhB,SAAS,CAACmB,IAFa;AAG/BC,EAAAA,QAAQ,EAAEpB,SAAS,CAACmB;AAHW,CAAnC;AAMA,eAAef,sBAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Modal,\r\n} from \"reactstrap\"\r\nimport { translationHelpers } from \"../../../helpers\";\r\nimport PreviewHistorical from \"./PreviewHistorical\";\r\n\r\n\r\nconst ModalPreviewHistorical = (props) => {\r\n    const [t] = translationHelpers('translation');\r\n    React.useEffect(() => {\r\n        console.log(props)\r\n    }, [props.closingPreview])\r\n\r\n    return (\r\n        <>\r\n            {props?.page ? <PreviewHistorical title={props.title} transactId={props.transactId} instanceId={props.instanceId} closingPreview={props.closingPreview} /> :\r\n                <Modal\r\n                    size=\"xl\"\r\n                    isOpen={props.isOpen}\r\n                    toggle={props.toggle}\r\n                    centered={true}>\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title mt-0\">{t(props.title)}</h5>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={props.toggle}\r\n                            className=\"close\"\r\n                            data-dismiss=\"modal\"\r\n                            aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <PreviewHistorical title={props.title} transactId={props.transactId} instanceId={props.instanceId} closingPreview={props.closingPreview} />\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nModalPreviewHistorical.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    toggle: PropTypes.func,\r\n    onAttach: PropTypes.func\r\n};\r\n\r\nexport default ModalPreviewHistorical;\r\n"]},"metadata":{},"sourceType":"module"}