{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport Select from \"react-select\";\nimport { Row, Col, Label } from \"reactstrap\";\nimport moment from \"moment\";\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { BackendServices, CoreServices } from \"../../../../services\";\nimport Switch from \"react-switch\";\nimport { useLocation } from \"react-router-dom\";\nimport { translationHelpers } from \"../../../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst DatosGeneralesPropuesta = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [context, setcontext] = useState(location.data);\n  const [formValid, setFormValid] = useState(false);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\n  const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\n  const [paises, setPais] = useState([]);\n  const [paisesRiesgo, setPaisRiesgo] = useState([]);\n  const [listaRevisionSet, setlistaRevisionSet] = useState(null);\n  const [listaRevision, setlistaRevision] = useState(null);\n  const [datosIGR, setdatosIGR] = useState(null);\n  const [datosAmbientales, setdatosAmbientales] = useState(null);\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\n  const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\n  const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\n  const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\n  const [transactId, setTransactId] = useState('');\n  const [customerNumber, setCustomerNumber] = useState('');\n  const [revisionType, setRevisionType] = useState('');\n  const [preapproval, setPreapproval] = useState(false);\n  const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\n  const [economicGroup, setEconomicGroup] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [countrySelect, setCountrySelect] = useState(undefined);\n  const [activityCompany, setActivityCompany] = useState('');\n  const [riskClassification, setRiskClassification] = useState('');\n  const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\n  const [relatedPart, setRelatedPart] = useState(false);\n  const [accountExecutive, setAccountExecutive] = useState('');\n  const [approvalLevel, setApprovalLevel] = useState('');\n  const [responsibleUnit, setResponsibleUnit] = useState('');\n  const [countryRisk, setCountryRisk] = useState(null);\n  const [dataReturn, setdataReturn] = useState(null);\n  const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\n  const [datosDeudorPrincipal, setdatosDeudorPrincipal] = useState(null);\n  const [requestDate, setRequestDate] = useState('');\n  const [lastRequestDate, setLastRequestDate] = useState('');\n  const [proposedExpirationDate, setProposedExpirationDate] = useState('');\n  const [nextRevisionDate, setNextRevisionDate] = useState('');\n  const [dataRequest, setdataRequest] = useState('');\n  const [flow, setFlow] = useState('');\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmDatosGeneralesPropuesta');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  useEffect(() => {\n    updateDefaults();\n    loadListCountry();\n    loadListGroupEconomic();\n    loadActivityEconomic();\n    loadDataRisk();\n  }, []);\n  useEffect(() => {\n    var _ref, _location$data$transa, _location$data;\n\n    const backendServices = new BackendServices();\n    backendServices.consultGeneralDataPropCred((_ref = (_location$data$transa = location === null || location === void 0 ? void 0 : (_location$data = location.data) === null || _location$data === void 0 ? void 0 : _location$data.transactionId) !== null && _location$data$transa !== void 0 ? _location$data$transa : locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _ref !== void 0 ? _ref : 0).then(data => {\n      if (data !== undefined) {\n        setdataRequest(data[0].requestId);\n      }\n    });\n  }, [props]);\n  useEffect(() => {\n    updateDefaults();\n  }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\n\n  function updateDefaults() {\n    setTransactId(props.values.transactId || context.transactionId);\n    setCustomerNumber(props.values.customerNumber || context.customerId);\n    setRevisionType(props.values.revisionType || 'Bimensual');\n    setPreapproval(props.values.preapproval || false);\n    setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\n    setRelatedPart(props.values.relatedPart || false);\n    setAccountExecutive(props.values.accountExecutive || '');\n    setApprovalLevel(props.values.approvalLevel || '');\n    setResponsibleUnit(props.values.responsibleUnit || '');\n    setRequestDate(props.values.requestDate || '');\n    setLastRequestDate(props.values.lastRequestDate || '');\n    setNextRevisionDate(props.values.nextRevisionDate || '');\n    setProposedExpirationDate(props.values.proposedExpirationDate || '');\n    setFlow(props.values.flow || '');\n    loadDataGeneral();\n    setrelatedPartSwitch(props.values.relatedPart);\n    setpreapprovalSwitch(props.values.preapproval);\n\n    try {\n      var defaultVal = null;\n\n      if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\n        defaultVal = listaRevision.find(x => x.label === props.values.revision);\n\n        if (defaultVal !== undefined) {\n          setlistaRevisionSelect(defaultVal);\n          console.log(defaultVal);\n          setlistaRevisionSet(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\n        defaultVal = paises.find(x => x.label === props.values.country);\n\n        if (defaultVal !== undefined) {\n          setCountrySelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\n        defaultVal = paises.find(x => x.label === props.values.countryRisk);\n\n        if (defaultVal !== undefined) {\n          setCountryRiskSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  } // cargarListaPaises\n\n\n  function loadListCountry() {\n    const api = new CoreServices(); // getPaisesCatalogo\n\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      const json = response.Records ? response.Records.map(item => ({\n        label: item[\"Description\"],\n        value: item[\"Code\"]\n      })) : [];\n      setPais(json);\n      setPaisRiesgo(json);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // cargarActividadEconomica\n\n\n  function loadActivityEconomic() {\n    const api = new CoreServices(); // getActividadEconomicaCatalogo\n\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setActividadEmpresa(json);\n    });\n  } // cargarListaGrupoEconomico\n\n\n  function loadListGroupEconomic() {\n    const api = new CoreServices(); // getGrupoEconomicoCatalogo\n\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setGruposEconomicos(json);\n    });\n  } // cargarListaRevision\n\n\n  function loadDataRisk() {\n    const api = new BackendServices();\n    api.retrieveRevisionType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      setlistaRevision(json);\n    });\n  } // Cargar datos generales\n\n\n  function loadDataGeneral() {\n    const apiBack = new BackendServices(); // consultarDeudorPrincipal\n\n    apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\n      if (resp != undefined) {\n        setdatosDeudorPrincipal(resp);\n      }\n    });\n    apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\n      setdatosIGR(resp);\n\n      try {\n        var defaultVal = null;\n        seteconomicGroupSelect(undefined);\n\n        if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\n          defaultVal = gruposEconomicos.find(x => x.label === resp.economicGroup.name);\n          console.log(defaultVal);\n\n          if (defaultVal !== undefined) {\n            seteconomicGroupSelect(defaultVal);\n          }\n        } else {\n          seteconomicGroupSelect(gruposEconomicos[0]);\n        }\n\n        setActividadEmpresaSet(resp.economicActivity);\n\n        if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\n          defaultVal = actividadEmpresa.find(x => x.label === resp.economicActivity.name);\n\n          if (defaultVal !== undefined) {\n            setActividadEmpresaSelect(defaultVal);\n          }\n        } else {\n          setActividadEmpresaSelect(actividadEmpresa[0]);\n        }\n      } catch (err) {}\n    }).catch(error => {});\n    apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\n      setdatosAmbientales(resp.environmentalAspectsDTO);\n    }).catch(error => {});\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault(); // if (event.target.id !== 'DatosGeneralesPropuesta') {\n    //     return;\n    // }\n\n    values.minimumProvisionSIB = Number(values.minimumProvisionSIB);\n    const data = Object.assign({\n      country: countrySelect != undefined ? countrySelect.label : '',\n      countryRisk: countryRiskSelect != undefined ? countryRiskSelect.label : '',\n      economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\n      activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.label : '',\n      revision: listaRevisionSet ? listaRevisionSet.label : '',\n      preapproval: preapprovalSwitch,\n      relatedPart: relatedPartSwitch,\n      transactId: Number(locationData.transactionId),\n      approvalLevel: \"\",\n      requestId: props.dataGlobal != null ? props.dataGlobal.requestId : \"\"\n    }, values);\n    setdataReturn(data);\n    setFormValid(true);\n  }\n\n  function handleDropdownChange(name, event) {\n    switch (name) {\n      case 'country':\n        setCountry(event);\n        break;\n\n      case 'countryRisk':\n        setCountryRisk(event);\n        break;\n\n      case 'economicGroupName':\n        setEconomicGroup(event);\n        break;\n\n      case 'activityCompany':\n        setActivityCompany(event);\n        break;\n\n      default:\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AvForm, {\n    id: \"frmDatosGeneralesPropuesta\",\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"transactId\",\n            children: t(\"Procedure Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"requestId\",\n            type: \"text\",\n            id: \"requestId\",\n            value: dataRequest,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"customerNumber\",\n            children: t(\"Customer ID\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"customerNumber\",\n            type: \"number\",\n            readOnly: true,\n            id: \"customerNumber\",\n            value: datosDeudorPrincipal != null ? datosDeudorPrincipal.customerNumberT24 : \"\",\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"revisionType\",\n          children: t(\"Revision Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => {\n            setlistaRevisionSelect(listaRevision.find(x => x.label === e.label));\n            setlistaRevisionSet(e);\n          },\n          options: listaRevision,\n          id: \"revision\",\n          classNamePrefix: \"select2-selection\",\n          placeholder: t(\"Select\"),\n          value: listaRevisionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"preapproval\",\n          children: t(\"Pre Approved\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"preapproval\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setpreapprovalSwitch(!preapprovalSwitch);\n            },\n            checked: preapprovalSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"relatedPart\",\n          children: t(\"Related Part\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"relatedPart\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setrelatedPartSwitch(!relatedPartSwitch);\n            },\n            checked: relatedPartSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"economicGroupName\",\n          children: t(\"Economic Group Name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"economicGroupName\",\n          name: \"economicGroupName\",\n          onChange: e => {\n            seteconomicGroupSelect(gruposEconomicos.find(x => x.label === e.label));\n            handleDropdownChange('economicGroupName', e);\n          },\n          options: gruposEconomicos,\n          classNamePrefix: \"select2-selection\",\n          isDisabled: true,\n          value: economicGroupSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"economicGroupNumber\",\n            children: t(\"Economic Group Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"economicGroupNumber\",\n            type: \"text\",\n            disabled: true,\n            id: \"economicGroupNumber\",\n            value: economicGroupSelect != undefined ? economicGroupSelect.value : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"country\",\n          children: t(\"Country Class\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"country\",\n          name: \"country\",\n          onChange: e => {\n            setCountrySelect(paises.find(x => x.label === e.label));\n            handleDropdownChange('country', e);\n          },\n          placeholder: t(\"Select\"),\n          options: paises,\n          classNamePrefix: \"select2-selection\",\n          value: countrySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"riskClassification\",\n            children: t(\"Risk Assesment\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"riskClassification\",\n            type: \"text\",\n            readOnly: true,\n            id: \"riskClassification\",\n            value: datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"activityCompany\",\n          children: t(\"Company Activity\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"activityCompany\",\n          onChange: e => {\n            setActividadEmpresaSelect(actividadEmpresa.find(x => x.label === e.label));\n            setActividadEmpresaSet(e);\n          },\n          placeholder: t(\"Selectcompanyactivity\"),\n          options: actividadEmpresa,\n          classNamePrefix: \"select2-selection\",\n          value: actividadEmpresaSelect,\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"minimumProvisionSIB\",\n            children: t(\"SIB Minimum Provision\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"minimumProvisionSIB\",\n            type: \"text\",\n            id: \"minimumProvisionSIB\",\n            validate: {\n              number: {\n                value: true,\n                errorMessage: c(\"Validation.Numeric\")\n              }\n            },\n            value: minimumProvisionSIB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"9\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"accountExecutive\",\n            children: t(\"Account Executive\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"accountExecutive\",\n            type: \"text\",\n            id: \"accountExecutive\",\n            value: accountExecutive,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"flow\",\n            children: t(\"Flow Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"flow\",\n            type: \"select\",\n            id: \"flow\",\n            value: flow,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Urgente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"responsibleUnit\",\n            children: t(\"Responsible Unit\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"responsibleUnit\",\n            type: \"text\",\n            id: \"responsibleUnit\",\n            value: responsibleUnit,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"countryRisk\",\n          children: t(\"Country Risk\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          required: true,\n          onChange: e => {\n            setCountryRiskSelect(paises.find(x => x.label === e.label));\n            handleDropdownChange('countryRisk', e);\n          },\n          defaultValue: paisesRiesgo.label,\n          placeholder: t(\"Selectacountry\"),\n          options: paisesRiesgo,\n          classNamePrefix: \"select2-selection\",\n          value: countryRiskSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"requestDate\",\n            children: t(\"Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"requestDate\",\n            type: \"date\",\n            id: \"requestDate\",\n            value: requestDate == \"\" || requestDate == null ? moment().format(\"YYYY-MM-DD\") : requestDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"lastRequestDate\",\n            children: t(\"Last Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"lastRequestDate\",\n            type: \"date\",\n            id: \"lastRequestDate\",\n            value: lastRequestDate == \"\" || lastRequestDate == null ? moment().format(\"YYYY-MM-DD\") : lastRequestDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"nextRevisionDate\",\n            children: t(\"Next Revision Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"nextRevisionDate\",\n            type: \"date\",\n            id: \"nextRevisionDate\",\n            value: nextRevisionDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"proposedExpirationDate\",\n            children: t(\"Expiration Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"proposedExpirationDate\",\n            type: \"date\",\n            id: \"proposedExpirationDate\",\n            value: proposedExpirationDate == \"\" || proposedExpirationDate == null ? moment().add(6, \"M\").format(\"YYYY-MM-DD\") : proposedExpirationDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n}, \"1gIkZHRfvSrPqINHdgqxYjHmLlg=\", false, function () {\n  return [useLocation, React.useImperativeHandle];\n}));\n_c4 = DatosGeneralesPropuesta;\nDatosGeneralesPropuesta.propTypes = {\n  values: PropTypes.object\n};\nDatosGeneralesPropuesta.defaultProps = {\n  values: {}\n};\nexport default DatosGeneralesPropuesta;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"DatosGeneralesPropuesta$React.forwardRef\");\n$RefreshReg$(_c4, \"DatosGeneralesPropuesta\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/DatosGenerales.js"],"names":["React","useState","useEffect","useContext","PropTypes","Select","Row","Col","Label","moment","AvForm","AvGroup","AvField","AvFeedback","BackendServices","CoreServices","Switch","useLocation","translationHelpers","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","DatosGeneralesPropuesta","forwardRef","props","ref","location","locationData","setLocationData","data","context","setcontext","formValid","setFormValid","gruposEconomicos","setGruposEconomicos","actividadEmpresa","setActividadEmpresa","actividadEmpresaSet","setActividadEmpresaSet","actividadEmpresaSelect","setActividadEmpresaSelect","undefined","paises","setPais","paisesRiesgo","setPaisRiesgo","listaRevisionSet","setlistaRevisionSet","listaRevision","setlistaRevision","datosIGR","setdatosIGR","datosAmbientales","setdatosAmbientales","listaRevisionSelect","setlistaRevisionSelect","listaRevisionRequerido","setlistaRevisionRequerido","preapprovalSwitch","setpreapprovalSwitch","relatedPartSwitch","setrelatedPartSwitch","transactId","setTransactId","customerNumber","setCustomerNumber","revisionType","setRevisionType","preapproval","setPreapproval","economicGroupSelect","seteconomicGroupSelect","economicGroup","setEconomicGroup","country","setCountry","countrySelect","setCountrySelect","activityCompany","setActivityCompany","riskClassification","setRiskClassification","minimumProvisionSIB","setMinimunProvisionSIB","relatedPart","setRelatedPart","accountExecutive","setAccountExecutive","approvalLevel","setApprovalLevel","responsibleUnit","setResponsibleUnit","countryRisk","setCountryRisk","dataReturn","setdataReturn","countryRiskSelect","setCountryRiskSelect","datosDeudorPrincipal","setdatosDeudorPrincipal","requestDate","setRequestDate","lastRequestDate","setLastRequestDate","proposedExpirationDate","setProposedExpirationDate","nextRevisionDate","setNextRevisionDate","dataRequest","setdataRequest","flow","setFlow","t","c","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","updateDefaults","loadListCountry","loadListGroupEconomic","loadActivityEconomic","loadDataRisk","backendServices","consultGeneralDataPropCred","transactionId","then","requestId","values","customerId","loadDataGeneral","defaultVal","length","revision","find","x","label","console","log","err","api","getPaisesCatalogo","response","json","Records","map","item","value","catch","getActividadEconomicaCatalogo","i","push","getGrupoEconomicoCatalogo","retrieveRevisionType","apiBack","consultPrincipalDebtor","resp","consultGeneralDataIGR","name","economicActivity","error","consultEnvironmentalAspectsIGR","environmentalAspectsDTO","handleSubmit","event","errors","preventDefault","Number","Object","assign","economicGroupName","dataGlobal","handleDropdownChange","title","customerNumberT24","required","errorMessage","e","riskPreClassification","number","format","add","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\nimport Select from \"react-select\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\nimport moment from \"moment\";\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport { BackendServices, CoreServices } from \"../../../../services\";\r\nimport Switch from \"react-switch\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { translationHelpers } from \"../../../../helpers\";\r\nconst Offsymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            No\r\n        </div>\r\n    );\r\n};\r\nconst OnSymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            Si\r\n        </div>\r\n    );\r\n};\r\nconst DatosGeneralesPropuesta = React.forwardRef((props, ref) => {\r\n    const location = useLocation();\r\n    const [locationData, setLocationData] = useState(location.data);\r\n    const [context, setcontext] = useState(location.data);\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n    const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n    const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\r\n    const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\r\n    const [paises, setPais] = useState([]);\r\n    const [paisesRiesgo, setPaisRiesgo] = useState([]);\r\n    const [listaRevisionSet, setlistaRevisionSet] = useState(null);\r\n    const [listaRevision, setlistaRevision] = useState(null);\r\n    const [datosIGR, setdatosIGR] = useState(null);\r\n    const [datosAmbientales, setdatosAmbientales] = useState(null);\r\n    const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\r\n    const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\r\n    const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\r\n    const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\r\n    const [transactId, setTransactId] = useState('');\r\n    const [customerNumber, setCustomerNumber] = useState('');\r\n    const [revisionType, setRevisionType] = useState('');\r\n    const [preapproval, setPreapproval] = useState(false);\r\n    const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\r\n    const [economicGroup, setEconomicGroup] = useState(null);\r\n    const [country, setCountry] = useState(null);\r\n    const [countrySelect, setCountrySelect] = useState(undefined);\r\n    const [activityCompany, setActivityCompany] = useState('');\r\n    const [riskClassification, setRiskClassification] = useState('');\r\n    const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\r\n    const [relatedPart, setRelatedPart] = useState(false);\r\n    const [accountExecutive, setAccountExecutive] = useState('');\r\n    const [approvalLevel, setApprovalLevel] = useState('');\r\n    const [responsibleUnit, setResponsibleUnit] = useState('');\r\n    const [countryRisk, setCountryRisk] = useState(null);\r\n    const [dataReturn, setdataReturn] = useState(null);\r\n    const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\r\n    const [datosDeudorPrincipal, setdatosDeudorPrincipal] = useState(null);\r\n    const [requestDate, setRequestDate] = useState('');\r\n    const [lastRequestDate, setLastRequestDate] = useState('');\r\n    const [proposedExpirationDate, setProposedExpirationDate] = useState('');\r\n    const [nextRevisionDate, setNextRevisionDate] = useState('');\r\n    const [dataRequest, setdataRequest] = useState('');\r\n    const [flow, setFlow] = useState('');\r\n    const [t, c] = translationHelpers('commercial_credit', 'common');\r\n    React.useImperativeHandle(ref, () => ({\r\n        validateForm: () => {\r\n            const form = document.getElementById('frmDatosGeneralesPropuesta');\r\n            form.requestSubmit();\r\n        },\r\n        getFormValidation: () => {\r\n            return formValid;\r\n        }, dataReturn\r\n    }));\r\n    useEffect(() => {\r\n        updateDefaults();\r\n        loadListCountry();\r\n        loadListGroupEconomic();\r\n        loadActivityEconomic();\r\n        loadDataRisk();\r\n    }, []);\r\n    useEffect(() => {\r\n        const backendServices = new BackendServices();\r\n        backendServices.consultGeneralDataPropCred(location?.data?.transactionId ?? locationData?.transactionId ?? 0)\r\n            .then((data) => {\r\n                if (data !== undefined) {\r\n                    setdataRequest(data[0].requestId);\r\n                }\r\n            });\r\n    }, [props]);\r\n    useEffect(() => {\r\n        updateDefaults();\r\n    }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\r\n\r\n    function updateDefaults() {\r\n        setTransactId(props.values.transactId || context.transactionId);\r\n        setCustomerNumber(props.values.customerNumber || context.customerId);\r\n        setRevisionType(props.values.revisionType || 'Bimensual');\r\n        setPreapproval(props.values.preapproval || false);\r\n        setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\r\n        setRelatedPart(props.values.relatedPart || false);\r\n        setAccountExecutive(props.values.accountExecutive || '');\r\n        setApprovalLevel(props.values.approvalLevel || '');\r\n        setResponsibleUnit(props.values.responsibleUnit || '');\r\n        setRequestDate(props.values.requestDate || '');\r\n        setLastRequestDate(props.values.lastRequestDate || '');\r\n        setNextRevisionDate(props.values.nextRevisionDate || '');\r\n        setProposedExpirationDate(props.values.proposedExpirationDate || '');\r\n        setFlow(props.values.flow || '');\r\n        loadDataGeneral();\r\n        setrelatedPartSwitch(props.values.relatedPart)\r\n        setpreapprovalSwitch(props.values.preapproval)\r\n        try {\r\n            var defaultVal = null;\r\n            if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\r\n                defaultVal = listaRevision.find(x => x.label === props.values.revision);\r\n                if (defaultVal !== undefined) {\r\n                    setlistaRevisionSelect(defaultVal);\r\n                    console.log(defaultVal);\r\n                    setlistaRevisionSet(defaultVal)\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\r\n                defaultVal = paises.find(x => x.label === props.values.country);\r\n                if (defaultVal !== undefined) {\r\n                    setCountrySelect(defaultVal);\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\r\n                defaultVal = paises.find(x => x.label === props.values.countryRisk);\r\n                if (defaultVal !== undefined) {\r\n                    setCountryRiskSelect(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n    }\r\n    // cargarListaPaises\r\n    function loadListCountry() {\r\n        const api = new CoreServices();\r\n        // getPaisesCatalogo\r\n        api.getPaisesCatalogo().then(response => {\r\n            if (response === null) { return; }\r\n            const json = response.Records ? response.Records.map(item => ({\r\n                label: item[\"Description\"],\r\n                value: item[\"Code\"]\r\n            })) : [];\r\n            setPais(json);\r\n            setPaisRiesgo(json);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    // cargarActividadEconomica\r\n    function loadActivityEconomic() {\r\n        const api = new CoreServices();\r\n        // getActividadEconomicaCatalogo\r\n        api.getActividadEconomicaCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                setActividadEmpresa(json);\r\n            });\r\n    }\r\n    // cargarListaGrupoEconomico\r\n    function loadListGroupEconomic() {\r\n        const api = new CoreServices();\r\n        // getGrupoEconomicoCatalogo\r\n        api.getGrupoEconomicoCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                setGruposEconomicos(json);\r\n            });\r\n    }\r\n    // cargarListaRevision\r\n    function loadDataRisk() {\r\n        const api = new BackendServices();\r\n        api.retrieveRevisionType()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.length; i++) {\r\n                    json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n                }\r\n                setlistaRevision(json);\r\n            });\r\n    }\r\n    // Cargar datos generales\r\n    function loadDataGeneral() {\r\n        const apiBack = new BackendServices();\r\n        // consultarDeudorPrincipal\r\n        apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\r\n            if (resp != undefined) {\r\n                setdatosDeudorPrincipal(resp);\r\n            }\r\n        })\r\n        apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\r\n            setdatosIGR(resp)\r\n            try {\r\n                var defaultVal = null;\r\n                seteconomicGroupSelect(undefined);\r\n                if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\r\n                    defaultVal = gruposEconomicos.find(x => x.label === resp.economicGroup.name);\r\n                    console.log(defaultVal);\r\n                    if (defaultVal !== undefined) {\r\n                        seteconomicGroupSelect(defaultVal);\r\n                    }\r\n                } else {\r\n                    seteconomicGroupSelect(gruposEconomicos[0])\r\n                }\r\n                setActividadEmpresaSet(resp.economicActivity);\r\n                if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\r\n                    defaultVal = actividadEmpresa.find(x => x.label === resp.economicActivity.name);\r\n                    if (defaultVal !== undefined) {\r\n                        setActividadEmpresaSelect(defaultVal);\r\n                    }\r\n                }\r\n                else {\r\n                    setActividadEmpresaSelect(actividadEmpresa[0]);\r\n                }\r\n            }\r\n            catch (err) { }\r\n        }).catch((error) => {\r\n\r\n        });\r\n        apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\r\n            setdatosAmbientales(resp.environmentalAspectsDTO)\r\n        }).catch((error) => {\r\n\r\n        });\r\n    }\r\n    function handleSubmit(event, errors, values) {\r\n        event.preventDefault();\r\n        // if (event.target.id !== 'DatosGeneralesPropuesta') {\r\n        //     return;\r\n        // }\r\n        values.minimumProvisionSIB = Number(values.minimumProvisionSIB)\r\n        const data = Object.assign({\r\n            country: countrySelect != undefined ? countrySelect.label : '',\r\n            countryRisk: countryRiskSelect != undefined ? countryRiskSelect.label : '',\r\n            economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\r\n            activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.label : '',\r\n            revision: listaRevisionSet ? listaRevisionSet.label : '',\r\n            preapproval: preapprovalSwitch,\r\n            relatedPart: relatedPartSwitch,\r\n            transactId: Number(locationData.transactionId),\r\n            approvalLevel: \"\",\r\n            requestId: props.dataGlobal != null ? props.dataGlobal.requestId : \"\"\r\n        }, values);\r\n        setdataReturn(data)\r\n        setFormValid(true);\r\n\r\n    }\r\n    function handleDropdownChange(name, event) {\r\n        switch (name) {\r\n            case 'country':\r\n                setCountry(event);\r\n                break;\r\n            case 'countryRisk':\r\n                setCountryRisk(event);\r\n                break;\r\n            case 'economicGroupName':\r\n                setEconomicGroup(event);\r\n                break;\r\n            case 'activityCompany':\r\n                setActivityCompany(event);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    return (\r\n        <AvForm id=\"frmDatosGeneralesPropuesta\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n            <h5>{props.title}</h5>\r\n            <p className=\"card-title-desc\"></p>\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"transactId\">{t(\"Procedure Number\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"requestId\"\r\n                            type=\"text\"\r\n                            id=\"requestId\"\r\n                            value={dataRequest}\r\n                            readOnly />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"customerNumber\">{t(\"Customer ID\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"customerNumber\"\r\n                            type=\"number\"\r\n                            readOnly\r\n                            id=\"customerNumber\"\r\n                            value={datosDeudorPrincipal != null ? datosDeudorPrincipal.customerNumberT24 : \"\"}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <Label htmlFor=\"revisionType\">{t(\"Revision Type\")}</Label>\r\n                    <Select\r\n                        onChange={(e) => { setlistaRevisionSelect(listaRevision.find(x => x.label === e.label)); setlistaRevisionSet(e); }}\r\n                        options={listaRevision}\r\n                        id=\"revision\"\r\n                        classNamePrefix=\"select2-selection\"\r\n                        placeholder={t(\"Select\")}\r\n                        value={listaRevisionSelect}\r\n                    />\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"2\">\r\n                    <Label htmlFor=\"preapproval\">{t(\"Pre Approved\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"preapproval\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setpreapprovalSwitch(!preapprovalSwitch)\r\n                            }}\r\n                            checked={preapprovalSwitch}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"2\">\r\n                    <Label htmlFor=\"relatedPart\">{t(\"Related Part\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"relatedPart\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setrelatedPartSwitch(!relatedPartSwitch)\r\n                            }}\r\n                            checked={relatedPartSwitch}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"economicGroupName\">{t(\"Economic Group Name\")}</Label>\r\n                    <Select\r\n                        id=\"economicGroupName\"\r\n                        name=\"economicGroupName\"\r\n                        onChange={(e) => { seteconomicGroupSelect(gruposEconomicos.find(x => x.label === e.label)); handleDropdownChange('economicGroupName', e); }}\r\n                        options={gruposEconomicos}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        isDisabled={true}\r\n                        value={economicGroupSelect} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"economicGroupNumber\">{t(\"Economic Group Number\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"economicGroupNumber\"\r\n                            type=\"text\"\r\n                            disabled={true}\r\n                            id=\"economicGroupNumber\"\r\n                            value={economicGroupSelect != undefined ? economicGroupSelect.value : ''}\r\n\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"country\">{t(\"Country Class\")}</Label>\r\n                    <Select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        onChange={(e) => { setCountrySelect(paises.find(x => x.label === e.label)); handleDropdownChange('country', e) }}\r\n                        placeholder={t(\"Select\")}\r\n                        options={paises}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countrySelect}\r\n                    />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"riskClassification\">{t(\"Risk Assesment\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"riskClassification\"\r\n                            type=\"text\"\r\n                            readOnly\r\n                            id=\"riskClassification\"\r\n                            value={datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"activityCompany\">{t(\"Company Activity\")}</Label>\r\n                    <Select\r\n                        name=\"activityCompany\"\r\n                        onChange={(e) => { setActividadEmpresaSelect(actividadEmpresa.find(x => x.label === e.label)); setActividadEmpresaSet(e); }}\r\n                        placeholder={t(\"Selectcompanyactivity\")}\r\n                        options={actividadEmpresa}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={actividadEmpresaSelect}\r\n                        isDisabled={true} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"minimumProvisionSIB\">{t(\"SIB Minimum Provision\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"minimumProvisionSIB\"\r\n                            type=\"text\"\r\n                            id=\"minimumProvisionSIB\"\r\n                            validate={{\r\n                                number: { value: true, errorMessage: c(\"Validation.Numeric\") },\r\n                            }}\r\n                            value={minimumProvisionSIB} />\r\n                    </AvGroup>\r\n                </Col>\r\n                {/* <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"approvalLevel\">{t(\"Approval Level\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"approvalLevel\"\r\n                            type=\"select\"\r\n                            id=\"approvalLevel\"\r\n                            value={approvalLevel}>\r\n                            <option value=\"1\">Nivel 1</option>\r\n                            <option value=\"2\">Nivel 2</option>\r\n                            <option value=\"3\">Nivel 3</option>\r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col> */}\r\n\r\n                <Col md=\"9\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"accountExecutive\">{t(\"Account Executive\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"accountExecutive\"\r\n                            type=\"text\"\r\n                            id=\"accountExecutive\"\r\n                            value={accountExecutive}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"flow\">{t(\"Flow Type\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"flow\"\r\n                            type=\"select\"\r\n                            id=\"flow\"\r\n                            value={flow}>\r\n                            <option value=\"1\">Normal</option>\r\n                            <option value=\"2\">Urgente</option>\r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"responsibleUnit\">{t(\"Responsible Unit\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"responsibleUnit\"\r\n                            type=\"text\"\r\n                            id=\"responsibleUnit\"\r\n                            value={responsibleUnit}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"countryRisk\">{t(\"Country Risk\")}</Label>\r\n                    <Select required\r\n                        onChange={(e) => { setCountryRiskSelect(paises.find(x => x.label === e.label)); handleDropdownChange('countryRisk', e) }}\r\n                        defaultValue={paisesRiesgo.label}\r\n                        placeholder={t(\"Selectacountry\")}\r\n                        options={paisesRiesgo}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countryRiskSelect} />\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"requestDate\">{t(\"Application Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"requestDate\"\r\n                            type=\"date\"\r\n                            id=\"requestDate\"\r\n                            value={requestDate == \"\" || requestDate == null ? moment().format(\"YYYY-MM-DD\") : requestDate}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"lastRequestDate\">{t(\"Last Application Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"lastRequestDate\"\r\n                            type=\"date\"\r\n                            id=\"lastRequestDate\"\r\n                            value={lastRequestDate == \"\" || lastRequestDate == null ? moment().format(\"YYYY-MM-DD\") : lastRequestDate}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"nextRevisionDate\">{t(\"Next Revision Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"nextRevisionDate\"\r\n                            type=\"date\"\r\n                            id=\"nextRevisionDate\"\r\n                            value={nextRevisionDate}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"proposedExpirationDate\">{t(\"Expiration Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"proposedExpirationDate\"\r\n                            type=\"date\"\r\n                            id=\"proposedExpirationDate\"\r\n                            value={proposedExpirationDate == \"\" || proposedExpirationDate == null ? moment().add(6, \"M\").format(\"YYYY-MM-DD\") : proposedExpirationDate}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n            </Row>\r\n        </AvForm>\r\n    );\r\n});\r\n\r\nDatosGeneralesPropuesta.propTypes = {\r\n    values: PropTypes.object\r\n};\r\n\r\nDatosGeneralesPropuesta.defaultProps = {\r\n    values: {}\r\n};\r\n\r\n\r\nexport default DatosGeneralesPropuesta;\r\n"]},"metadata":{},"sourceType":"module"}