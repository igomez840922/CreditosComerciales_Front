{"ast":null,"code":"import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import TaskListPostownersModel from\"../../models/BPM/TaskListPostownersModel\";import{GetDashBoardModel}from\"../../models\";import ApiServiceBpm from\"../ApiServiceBpm\";import*as url from\"../../helpers/url_helper\";import*as opt from\"../../helpers/options_helper\";import qs from\"qs\";var Services=/*#__PURE__*/function(_ApiServiceBpm){_inherits(Services,_ApiServiceBpm);var _super=_createSuper(Services);function Services(){_classCallCheck(this,Services);return _super.apply(this,arguments);}_createClass(Services,[{key:\"getDashBoard\",value:/* ------------------------------------------------------------------------------------------------------------------ */ /*                                 retorna las actividades para la bandeja de entrada                                 */ /* ------------------------------------------------------------------------------------------------------------------ */ //retorna la bandeja de entrada\nfunction(){var _getDashBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(params){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.get(url.URL_BPM_DASHBOARD);case 2:result=_context.sent;return _context.abrupt(\"return\",GetDashBoardModel.fromJson(result));case 4:case\"end\":return _context.stop();}}},_callee,this);}));function getDashBoard(_x){return _getDashBoard.apply(this,arguments);}return getDashBoard;}()//retorna las tareas de un proceso especifico\n},{key:\"getTasksByPrcess\",value:function(){var _getTasksByPrcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(instanceId){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.get(url.URL_BPM_DASHBOARD);case 2:result=_context2.sent;result=GetDashBoardModel.fromJson(result);return _context2.abrupt(\"return\",result.results.filter(function(e){return e.instanceId===instanceId;})[0]);case 5:case\"end\":return _context2.stop();}}},_callee2,this);}));function getTasksByPrcess(_x2){return _getTasksByPrcess.apply(this,arguments);}return getTasksByPrcess;}()//crea e inicia una nueva instancia de Proceso y actividad\n},{key:\"startProcess\",value:function(){var _startProcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var data,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://Estructura de la data que se le debe pasar\ndata={\"containerId\":url.WORD_BPM_CONTAINERID,\"processId\":url.WORD_BPM_PROCESSID,\"parametros\":{\"values\":{\"processId\":opt.PROCESS_BUSQUEDADESCARTE.toString(),\"activityId\":\"0\",\"transactionId\":\"\",\"customerId\":\"\",\"applicationNumber\":\"\",\"procedureNumber\":\"\",\"requestId\":\"\",\"facilityId\":\"\"}}};_context3.next=3;return this.post(url.URL_BPM_STARTPROCESS,data);case 3:result=_context3.sent;return _context3.abrupt(\"return\",result.body.processInstanceId);case 5:case\"end\":return _context3.stop();}}},_callee3,this);}));function startProcess(){return _startProcess.apply(this,arguments);}return startProcess;}()},{key:\"authentication\",value:function(){var _authentication=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data){var result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.post(url.URL_BPM_LOGIN,data);case 2:result=_context4.sent;return _context4.abrupt(\"return\",result.status);case 4:case\"end\":return _context4.stop();}}},_callee4,this);}));function authentication(_x3){return _authentication.apply(this,arguments);}return authentication;}()},{key:\"startedStatusTask\",value:function(){var _startedStatusTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(taskId){var data,result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;data={\"containerId\":url.WORD_BPM_CONTAINERID,\"taskId\":taskId,\"taskStatus\":url.WORD_BPM_STARTED};_context5.next=4;return this.put(url.URL_BPM_STATUSTASK,data);case 4:result=_context5.sent;if(!(result.status===\"OK\")){_context5.next=7;break;}return _context5.abrupt(\"return\",result);case 7:_context5.next=12;break;case 9:_context5.prev=9;_context5.t0=_context5[\"catch\"](0);console.error(\"api completedStatusTask:\",_context5.t0);case 12:return _context5.abrupt(\"return\",undefined);case 13:case\"end\":return _context5.stop();}}},_callee5,this,[[0,9]]);}));function startedStatusTask(_x4){return _startedStatusTask.apply(this,arguments);}return startedStatusTask;}()},{key:\"completedStatusTask\",value:function(){var _completedStatusTask=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(taskId,values){var data,result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;/* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */data={\"containerId\":url.WORD_BPM_CONTAINERID,\"taskId\":taskId,\"taskStatus\":url.WORD_BPM_COMPLETED,\"parametros\":{\"values\":values}};_context6.next=4;return this.put(url.URL_BPM_STATUSTASK,data);case 4:result=_context6.sent;if(!(result.status===\"OK\")){_context6.next=7;break;}return _context6.abrupt(\"return\",result);case 7:_context6.next=12;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](0);console.error(\"api completedStatusTask:\",_context6.t0);case 12:return _context6.abrupt(\"return\",undefined);case 13:case\"end\":return _context6.stop();}}},_callee6,this,[[0,9]]);}));function completedStatusTask(_x5,_x6){return _completedStatusTask.apply(this,arguments);}return completedStatusTask;}()},{key:\"abortProcess\",value:function(){var _abortProcess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(instanceId){var data,result;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;console.log(\"abortProcess\",instanceId);//Estructura de la data que se le debe pasar\ndata={\"containerId\":url.WORD_BPM_CONTAINERID,\"processInstanceId\":instanceId};console.log(\"data\",data);_context7.next=6;return this.del(url.URL_BPM_ABORTPROCESS,data);case 6:result=_context7.sent;if(!(result.status===\"OK\")){_context7.next=9;break;}return _context7.abrupt(\"return\",result);case 9:_context7.next=14;break;case 11:_context7.prev=11;_context7.t0=_context7[\"catch\"](0);console.error(\"api abortProcess:\",_context7.t0);case 14:return _context7.abrupt(\"return\",undefined);case 15:case\"end\":return _context7.stop();}}},_callee7,this,[[0,11]]);}));function abortProcess(_x7){return _abortProcess.apply(this,arguments);}return abortProcess;}()},{key:\"updatevariables\",value:function(){var _updatevariables=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(instanceId,values){var data,result;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;/* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */data={\"containerId\":url.WORD_BPM_CONTAINERID,\"processInstanceId\":instanceId,\"parametros\":{\"values\":values}};_context8.next=4;return this.post(url.URL_BPM_UPDATEVAR,data);case 4:result=_context8.sent;if(!(result.status===\"OK\")){_context8.next=7;break;}return _context8.abrupt(\"return\",result);case 7:_context8.next=12;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);console.error(\"api completedStatusTask:\",_context8.t0);case 12:return _context8.abrupt(\"return\",undefined);case 13:case\"end\":return _context8.stop();}}},_callee8,this,[[0,9]]);}));function updatevariables(_x8,_x9){return _updatevariables.apply(this,arguments);}return updatevariables;}()}]);return Services;}(ApiServiceBpm);export{Services as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/BpmServices/Services.js"],"names":["TaskListPostownersModel","GetDashBoardModel","ApiServiceBpm","url","opt","qs","Services","params","get","URL_BPM_DASHBOARD","result","fromJson","instanceId","results","filter","e","data","WORD_BPM_CONTAINERID","WORD_BPM_PROCESSID","PROCESS_BUSQUEDADESCARTE","toString","post","URL_BPM_STARTPROCESS","body","processInstanceId","URL_BPM_LOGIN","status","taskId","WORD_BPM_STARTED","put","URL_BPM_STATUSTASK","console","error","undefined","values","WORD_BPM_COMPLETED","log","del","URL_BPM_ABORTPROCESS","URL_BPM_UPDATEVAR"],"mappings":"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","sourcesContent":["\r\nimport TaskListPostownersModel from \"../../models/BPM/TaskListPostownersModel\";\r\nimport { GetDashBoardModel } from \"../../models\";\r\nimport ApiServiceBpm from \"../ApiServiceBpm\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport qs from \"qs\";\r\n\r\nexport default class Services extends ApiServiceBpm {\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  /*                                 retorna las actividades para la bandeja de entrada                                 */\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  //retorna la bandeja de entrada\r\n  async getDashBoard(params) {\r\n    var result = await this.get(url.URL_BPM_DASHBOARD);\r\n    return GetDashBoardModel.fromJson(result);\r\n  }\r\n\r\n  //retorna las tareas de un proceso especifico\r\n  async getTasksByPrcess(instanceId) {\r\n\r\n    var result = await this.get(url.URL_BPM_DASHBOARD);\r\n\r\n    result = GetDashBoardModel.fromJson(result);\r\n\r\n    return result.results.filter((e) => e.instanceId === instanceId)[0];\r\n  }\r\n\r\n  //crea e inicia una nueva instancia de Proceso y actividad\r\n  async startProcess() {\r\n    //Estructura de la data que se le debe pasar\r\n    var data = {\r\n      \"containerId\": url.WORD_BPM_CONTAINERID,\r\n      \"processId\": url.WORD_BPM_PROCESSID,\r\n      \"parametros\": {\r\n        \"values\": {\r\n              \"processId\":opt.PROCESS_BUSQUEDADESCARTE.toString(),\r\n              \"activityId\":\"0\",                    \r\n          \"transactionId\": \"\",\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"requestId\":\"\",\r\n          \"facilityId\":\"\"\r\n        }\r\n      }\r\n    }\r\n\r\n    var result = await this.post(url.URL_BPM_STARTPROCESS, data);\r\n    /*\r\n    {\r\n    \"body\": {\r\n        \"processInstanceId\": \"8124\",\r\n        \"containers\": null,\r\n        \"response\": null\r\n    },\r\n    \"status\": \"CREATED\",\r\n    \"businessStatus\": \"\",\r\n    \"timeResponse\": \"2021-12-06 13:41:57\",\r\n    \"message\": null,\r\n    \"path\": \"/api-jbpm-0.0.1-SNAPSHOT/soaint-toolbox-eis/bpm-api/v0/processes/startProcess\",\r\n    \"transactionState\": null\r\n    }\r\n    */\r\n\r\n    return result.body.processInstanceId;\r\n  }\r\n\r\n  async authentication(data) {\r\n    var result = await this.post(url.URL_BPM_LOGIN, data);\r\n    return result.status; //OK\r\n  }\r\n\r\n  async startedStatusTask(taskId) {\r\n    try {\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"taskId\": taskId,\r\n        \"taskStatus\": url.WORD_BPM_STARTED,\r\n      }\r\n\r\n      var result = await this.put(url.URL_BPM_STATUSTASK, data);\r\n\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api completedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async completedStatusTask(taskId, values) {\r\n    try {\r\n      /* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"taskId\": taskId,\r\n        \"taskStatus\": url.WORD_BPM_COMPLETED,\r\n        \"parametros\": {\r\n          \"values\": values,\r\n        }\r\n      }\r\n      var result = await this.put(url.URL_BPM_STATUSTASK, data);\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api completedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async abortProcess(instanceId) {\r\n\r\n    try{\r\n      console.log(\"abortProcess\",instanceId);\r\n      //Estructura de la data que se le debe pasar\r\n    var data ={\r\n      \"containerId\":url.WORD_BPM_CONTAINERID,\r\n      \"processInstanceId\": instanceId,\r\n      } \r\n      console.log(\"data\",data);\r\n    var result = await this.del(url.URL_BPM_ABORTPROCESS,data);\r\n    \r\n      if(result.status === \"OK\"){\r\n        return result;\r\n      }\r\n\r\n    } \r\n    catch(err){\r\n      console.error(\"api abortProcess:\",err)\r\n    }   \r\n\r\n    return undefined;\r\n  }\r\n\r\n  async updatevariables(instanceId, values) {\r\n    try {\r\n      /* \"values\":{\r\n          \"decision\":\"si\"  \r\n      } */\r\n      var data = {\r\n        \"containerId\": url.WORD_BPM_CONTAINERID,\r\n        \"processInstanceId\": instanceId,\r\n        \"parametros\": {\r\n          \"values\": values,\r\n        }\r\n      }\r\n      var result = await this.post(url.URL_BPM_UPDATEVAR, data);\r\n      if (result.status === \"OK\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api completedStatusTask:\", err)\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}