{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\ChangeSummaryReadOnly.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelper } from '../../helpers';\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { Table, Card, CardBody, Row, Col, Label } from \"reactstrap\";\nimport { useTranslation } from \"react-i18next\";\nimport { BackendServices, CoreServices } from \"../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChangeSummaryReadOnly = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataReturn, setdataReturn] = useState(null);\n  const [formValid, setformValid] = useState(false);\n  useEffect(() => {\n    if (props.requestId != null) {\n      initializeData();\n    }\n  }, [props.requestId]);\n\n  function initializeData() {\n    const apiBack = new BackendServices(); // consultarResumenCambios\n\n    apiBack.consultarResumenCambios(props.requestId).then(resp => {\n      setdataReturn(resp);\n    });\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setformValid(false);\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n          title: t(\"ChangeSummary\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangeSummaryReadOnly, \"db7i64DDXD/UuQF4rIgG9eiaB8U=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ChangeSummaryReadOnly;\nChangeSummaryReadOnly.propTypes = {\n  requestId: PropTypes.string\n};\nexport default ChangeSummaryReadOnly;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeSummaryReadOnly\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/ChangeSummaryReadOnly.js"],"names":["React","useState","useEffect","PropTypes","translationHelper","AvForm","AvGroup","AvField","AvFeedback","Table","Card","CardBody","Row","Col","Label","useTranslation","BackendServices","CoreServices","ChangeSummaryReadOnly","props","t","i18n","dataReturn","setdataReturn","formValid","setformValid","requestId","initializeData","apiBack","consultarResumenCambios","then","resp","handleSubmit","event","errors","values","preventDefault","length","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,EAAmCC,UAAnC,QAAqD,gCAArD;AACA,SACIC,KADJ,EAEIC,IAFJ,EAGIC,QAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAMIC,KANJ,QAOO,YAPP;AAQA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,gBAA9C;;;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAErC,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcN,cAAc,EAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,KAAK,CAACO,SAAN,IAAmB,IAAvB,EAA6B;AACzBC,MAAAA,cAAc;AACjB;AACJ,GAJQ,EAIN,CAACR,KAAK,CAACO,SAAP,CAJM,CAAT;;AAMA,WAASC,cAAT,GAA0B;AACtB,UAAMC,OAAO,GAAG,IAAIZ,eAAJ,EAAhB,CADsB,CAEtB;;AACAY,IAAAA,OAAO,CAACC,uBAAR,CAAgCV,KAAK,CAACO,SAAtC,EAAiDI,IAAjD,CAAuDC,IAAD,IAAU;AAC5DR,MAAAA,aAAa,CAACQ,IAAD,CAAb;AACH,KAFD;AAGH;;AACD,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6C;AACzCF,IAAAA,KAAK,CAACG,cAAN;;AACA,QAAIF,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACnBZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA;AACH;AACJ;;AACD,sBAEI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACF;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,cAAD;AAAgB,UAAA,KAAK,EAAEL,CAAC,CAAC,eAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AADE;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH,CAzCD;;GAAMF,qB;UAEkBH,c;;;KAFlBG,qB;AA0CNA,qBAAqB,CAACoB,SAAtB,GAAkC;AAC9BZ,EAAAA,SAAS,EAAEvB,SAAS,CAACoC;AADS,CAAlC;AAGA,eAAerB,qBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelper } from '../../helpers';\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport {\r\n    Table,\r\n    Card,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BackendServices, CoreServices } from \"../../services\";\r\n\r\nconst ChangeSummaryReadOnly = (props) => {\r\n    \r\n    const { t, i18n } = useTranslation();\r\n    const [dataReturn, setdataReturn] = useState(null);\r\n    const [formValid, setformValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.requestId != null) {\r\n            initializeData();\r\n        }\r\n    }, [props.requestId]);\r\n\r\n    function initializeData() {\r\n        const apiBack = new BackendServices();\r\n        // consultarResumenCambios\r\n        apiBack.consultarResumenCambios(props.requestId).then((resp) => {\r\n            setdataReturn(resp)\r\n        });\r\n    }\r\n    function handleSubmit(event, errors, values) {\r\n        event.preventDefault();\r\n        if (errors.length > 0) {\r\n            setformValid(false);\r\n            return;\r\n        }\r\n    }\r\n    return (\r\n\r\n        <React.Fragment>\r\n      <>\r\n        <CardBody>\r\n          <HeaderSections title={t(\"ChangeSummary\")}></HeaderSections>\r\n          <p className=\"card-title-desc\">\r\n          </p>\r\n          \r\n        </CardBody>\r\n      </>\r\n    </React.Fragment >\r\n    \r\n       \r\n    );\r\n};\r\nChangeSummaryReadOnly.propTypes = {\r\n    requestId: PropTypes.string,\r\n};\r\nexport default ChangeSummaryReadOnly;\r\n"]},"metadata":{},"sourceType":"module"}