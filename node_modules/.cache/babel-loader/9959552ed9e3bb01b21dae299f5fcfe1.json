{"ast":null,"code":"import moment from \"moment\";\nexport default class DocumentModel {\n  static fromJson(json) {\n    this.results = [];\n    this.searchValue('Result', json);\n    const items = new DocumentModel();\n    items.results = this.results;\n    return items;\n  }\n\n  static searchValue(mainkey, json) {\n    try {\n      for (let [key, value] of Object.entries(json)) {\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (key !== mainkey) {\n              this.searchValue(mainkey, value);\n            } else {\n              switch (key) {\n                case \"Result\":\n                  {\n                    this.results.push({\n                      id: this.results.length + 1,\n                      docName: value['DocName'],\n                      documentId: value['DocumentID'],\n                      formType: value['FormType']\n                    });\n                    break;\n                  }\n\n                default:\n                  {\n                    break;\n                  }\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {}\n  }\n\n  static getRequestModel(filedata) {\n    const item = {\n      ApplicationNumber: \"456\",\n      ClientName: \"JoseGarcia\",\n      ClientNumber: \"98765432\",\n      ClientType: \"N\",\n      DocumentTypeId: \"1067\",\n      ExpirationDate: moment().format(\"DD/MM/YYYY\"),\n      FileExtension: filedata.fileExtension,\n      Identification: \"9-728-1643\",\n      ImageBase64: filedata.fileBase64,\n      ProcessCode: \"7\",\n      Token: \"34543\",\n      UploadDate: moment().format(\"DD/MM/YYYY\") //ProductNumber:\"456\"\n\n    };\n    return item;\n  }\n\n}\nDocumentModel.results = [];","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/models/Core/DocumentModel.js"],"names":["moment","DocumentModel","fromJson","json","results","searchValue","items","mainkey","key","value","Object","entries","undefined","push","id","length","docName","documentId","formType","err","getRequestModel","filedata","item","ApplicationNumber","ClientName","ClientNumber","ClientType","DocumentTypeId","ExpirationDate","format","FileExtension","fileExtension","Identification","ImageBase64","fileBase64","ProcessCode","Token","UploadDate"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,aAAN,CAAoB;AAIhB,SAARC,QAAQ,CAACC,IAAD,EAAO;AAElB,SAAKC,OAAL,GAAe,EAAf;AAEA,SAAKC,WAAL,CAAiB,QAAjB,EAA0BF,IAA1B;AAEA,UAAMG,KAAK,GAAG,IAAIL,aAAJ,EAAd;AAEAK,IAAAA,KAAK,CAACF,OAAN,GAAc,KAAKA,OAAnB;AAEA,WAAOE,KAAP;AACH;;AAEiB,SAAXD,WAAW,CAACE,OAAD,EAAUJ,IAAV,EAAgB;AAE9B,QAAG;AACC,WAAK,IAAI,CAACK,GAAD,EAAMC,KAAN,CAAT,IAAyBC,MAAM,CAACC,OAAP,CAAeR,IAAf,CAAzB,EAA+C;AAC3C,YAAGM,KAAK,KAAG,IAAR,IAAgBA,KAAK,KAAGG,SAA3B,EAAqC;AACjC,cAAG,OAAOH,KAAP,KAAiB,QAApB,EAA6B;AACzB,gBAAGD,GAAG,KAAKD,OAAX,EAAmB;AACf,mBAAKF,WAAL,CAAiBE,OAAjB,EAAyBE,KAAzB;AACH,aAFD,MAGI;AACA,sBAAOD,GAAP;AACI,qBAAK,QAAL;AAAc;AACV,yBAAKJ,OAAL,CAAaS,IAAb,CAAkB;AAACC,sBAAAA,EAAE,EAAC,KAAKV,OAAL,CAAaW,MAAb,GAAsB,CAA1B;AAA6BC,sBAAAA,OAAO,EAACP,KAAK,CAAC,SAAD,CAA1C;AAAsDQ,sBAAAA,UAAU,EAACR,KAAK,CAAC,YAAD,CAAtE;AAAqFS,sBAAAA,QAAQ,EAACT,KAAK,CAAC,UAAD;AAAnG,qBAAlB;AACA;AACH;;AACD;AAAQ;AAAC;AAAO;AALpB;AAOH;AACJ;AACJ;AACJ;AACJ,KAnBD,CAoBA,OAAMU,GAAN,EAAU,CAAE;AACb;;AAEmB,SAAfC,eAAe,CAACC,QAAD,EAAW;AAE7B,UAAMC,IAAI,GAAG;AACTC,MAAAA,iBAAiB,EAAC,KADT;AAETC,MAAAA,UAAU,EAAC,YAFF;AAGTC,MAAAA,YAAY,EAAC,UAHJ;AAITC,MAAAA,UAAU,EAAC,GAJF;AAKTC,MAAAA,cAAc,EAAC,MALN;AAMTC,MAAAA,cAAc,EAAC5B,MAAM,GAAG6B,MAAT,CAAgB,YAAhB,CANN;AAOTC,MAAAA,aAAa,EAAET,QAAQ,CAACU,aAPf;AAQTC,MAAAA,cAAc,EAAC,YARN;AASTC,MAAAA,WAAW,EAAEZ,QAAQ,CAACa,UATb;AAUTC,MAAAA,WAAW,EAAC,GAVH;AAWTC,MAAAA,KAAK,EAAC,OAXG;AAYTC,MAAAA,UAAU,EAACrC,MAAM,GAAG6B,MAAT,CAAgB,YAAhB,CAZF,CAaT;;AAbS,KAAb;AAgBA,WAAOP,IAAP;AACH;;AA7D8B;AAAdrB,a,CAEVG,O,GAAQ,E","sourcesContent":["import moment from \"moment\";\r\n\r\nexport default class DocumentModel {\r\n\r\n    static results=[];\r\n\r\n    static fromJson(json) {\r\n                                \r\n        this.results = [];\r\n        \r\n        this.searchValue('Result',json);\r\n\r\n        const items = new DocumentModel();\r\n\r\n        items.results=this.results;        \r\n        \r\n        return items;\r\n    }\r\n\r\n    static searchValue(mainkey, json) {\r\n\r\n        try{ \r\n            for (let [key, value] of Object.entries(json)) {\r\n                if(value!==null && value!==undefined){\r\n                    if(typeof value === 'object'){\r\n                        if(key !== mainkey){\r\n                            this.searchValue(mainkey,value);                            \r\n                        }                        \r\n                        else{\r\n                            switch(key){\r\n                                case \"Result\":{\r\n                                    this.results.push({id:this.results.length + 1, docName:value['DocName'],documentId:value['DocumentID'],formType:value['FormType']});                                    \r\n                                    break;\r\n                                }\r\n                                default:{break;}\r\n                            }            \r\n                        }\r\n                    }\r\n                }                \r\n            }\r\n        }\r\n        catch(err){}\r\n      }\r\n    \r\n    static getRequestModel(filedata) {\r\n                \r\n        const item = {\r\n            ApplicationNumber:\"456\",\r\n            ClientName:\"JoseGarcia\",\r\n            ClientNumber:\"98765432\",\r\n            ClientType:\"N\",\r\n            DocumentTypeId:\"1067\",\r\n            ExpirationDate:moment().format(\"DD/MM/YYYY\"),\r\n            FileExtension: filedata.fileExtension,\r\n            Identification:\"9-728-1643\",\r\n            ImageBase64: filedata.fileBase64,\r\n            ProcessCode:\"7\",\r\n            Token:\"34543\",\r\n            UploadDate:moment().format(\"DD/MM/YYYY\"),\r\n            //ProductNumber:\"456\"\r\n          };\r\n        \r\n        return item;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}