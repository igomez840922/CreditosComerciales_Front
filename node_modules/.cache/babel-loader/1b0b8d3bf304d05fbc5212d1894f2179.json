{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\20_Cotizador\\\\FormQuoterScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Row, Col, Form, Container } from \"react-bootstrap\";\nimport Select from 'react-select';\nimport FormContainerQuoter from './FormContainerQuoter';\nimport FormQuoterTypeNatural from './FormQuoterTypeNatural';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormQuoterScreen = () => {\n  _s();\n\n  // hooks\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [typePerson, setTypePerson] = useState({\n    value: '1',\n    label: 'Natural'\n  });\n  const [personTypeSelected, setPersonTypeSelected] = useState(\"\");\n  const options = [{\n    value: '1',\n    label: 'Natural'\n  }, {\n    value: '2',\n    label: 'Jurídica'\n  }];\n  const optionsIdType = [{\n    value: '1',\n    label: 'RUC'\n  }, {\n    value: '2',\n    label: 'RIF'\n  }, {\n    value: '3',\n    label: 'Cédula'\n  }];\n\n  const handleChangeTypePerson = personSelected => {\n    console.log(personSelected.label);\n    setPersonTypeSelected(personSelected.label);\n    console.log(\"Handle type person\", personSelected.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainerQuoter, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: t(\"ClientData\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            lg: 4,\n            children: [console.log(\"personTypeSelected:\", personTypeSelected), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"personType\",\n                children: t(\"PersonType\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                defaultValue: {\n                  label: \"Natural\",\n                  value: \"1\"\n                },\n                options: options,\n                name: \"personType\",\n                onChange: handleChangeTypePerson\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"idType\",\n                children: t(\"IdType\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                options: optionsIdType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                htmlFor: \"idnumber\",\n                children: t(\"IdNumber\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormQuoterTypeNatural, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormQuoterScreen, \"gAcggMYso+aymF6xt6yS+30PM2A=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FormQuoterScreen;\nexport default FormQuoterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormQuoterScreen\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/FormQuoterScreen.js"],"names":["useState","useTranslation","Card","Row","Col","Form","Container","Select","FormContainerQuoter","FormQuoterTypeNatural","FormQuoterScreen","t","i18n","typePerson","setTypePerson","value","label","personTypeSelected","setPersonTypeSelected","options","optionsIdType","handleChangeTypePerson","personSelected","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Container\r\n} from \"react-bootstrap\";\r\nimport Select from 'react-select'\r\n\r\nimport FormContainerQuoter from './FormContainerQuoter'\r\nimport FormQuoterTypeNatural from './FormQuoterTypeNatural';\r\n\r\nconst FormQuoterScreen = () => {\r\n    // hooks\r\n    const { t, i18n } = useTranslation();\r\n    const [typePerson, setTypePerson] = useState({\r\n        value: '1', label: 'Natural'\r\n     })\r\n    const [personTypeSelected, setPersonTypeSelected] = useState(\"\")\r\n\r\n    const options = [\r\n        { value: '1', label: 'Natural' },\r\n        { value: '2', label: 'Jurídica' }\r\n    ]\r\n    const optionsIdType = [\r\n        { value: '1', label: 'RUC' },\r\n        { value: '2', label: 'RIF' },\r\n        { value: '3', label: 'Cédula' },\r\n    ]\r\n\r\n    const handleChangeTypePerson = (personSelected) => {\r\n        console.log(personSelected.label);\r\n        setPersonTypeSelected(personSelected.label)\r\n        console.log(\"Handle type person\", personSelected.value);\r\n    }\r\n\r\n    return (\r\n        <FormContainerQuoter>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {t(\"ClientData\")}\r\n                    </Card.Title>\r\n                    <Row>\r\n                        <Col md={6} lg={4}>\r\n                            {console.log(\"personTypeSelected:\", personTypeSelected)}\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"personType\">{t(\"PersonType\")}</Form.Label>\r\n                                <Select\r\n                                    defaultValue={{ label: \"Natural\", value: \"1\" }}\r\n                                    options={options}\r\n                                    name=\"personType\"\r\n                                    onChange={handleChangeTypePerson}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"idType\">{t(\"IdType\")}</Form.Label>\r\n                                <Select options={optionsIdType} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={12} lg={4}>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Form.Label>\r\n                                <Form.Control></Form.Control>\r\n                            </div>\r\n                        </Col>\r\n                        <FormQuoterTypeNatural />\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </FormContainerQuoter>\r\n    )\r\n}\r\n\r\nexport default FormQuoterScreen"]},"metadata":{},"sourceType":"module"}