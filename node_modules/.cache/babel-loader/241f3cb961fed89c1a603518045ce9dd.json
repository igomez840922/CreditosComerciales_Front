{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as opt from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport moment from \"moment\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { setDefaults, useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"./ClientForm\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\nimport SessionHelper from \"../../../helpers/SessionHelper\";\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../components/LogProcess/index\";\nimport ErrorHandler from \"../../../components/Common/ErrorHandler\";\nimport LocalStorageHelper from \"../../../helpers/LocalStorageHelper\";\nimport ModalSearchClient from \"./ModalSearchClient\";\nimport ModalClientForm from \"./ModalClientForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false);\n  const [dataClientList, setdataClientList] = useState([]);\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  const [showModalSearchClient, setshowModalSearchClient] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    var data = location.data !== undefined ? location.data : sessionHelper.get(opt.VARNAME_LOCATIONDATA);\n\n    if (data !== null && data !== undefined) {\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\n        data.transactionId = 0;\n        checkAndCreateProcedure(data);\n      } else {\n        setLocationData(data);\n        fetchData(data);\n      }\n    } else {\n      history.push(url.URL_DASHBOARD);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    }); //checkAndCreateProcedure(locationData);\n\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\n\n\n  function checkAndCreateProcedure(locationData) {\n    var _credentials$usr;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\", \"0\").then(data => {\n      if (data !== null && data !== undefined) {\n        locationData.transactionId = data.transactId;\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\n        setLocationData(locationData);\n        fetchData(locationData);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n        /*if (data.length <= 0) {\r\n          setselectedClient(new PersonModel());\r\n          onOpenNewClient();\r\n        }*/\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    dataClient[\"isNew\"] = false;\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    if (idType !== undefined && idType !== null && idType.length > 0) {\n      return identificationTypeList.find(x => x.value === idType);\n    }\n\n    return \"\";\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    console.log(\"loadClientDataT24\", loadClientDataT24);\n    var clientPerson = new PersonModel();\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname !== undefined ? dataClientT24.firstname : \"\";\n    clientPerson.secondName = dataClientT24.secondname !== undefined ? dataClientT24.secondname : \"\";\n    clientPerson.lastName = dataClientT24.lastname !== undefined ? dataClientT24.lastname : \"\";\n    clientPerson.secondSurname = dataClientT24.secondlastname !== undefined ? dataClientT24.secondlastname : \"\";\n    clientPerson.phone = dataClientT24.phoneNumber;\n    clientPerson.email = dataClientT24.email;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    clientPerson.isNew = false;\n    clientPerson.birthDate = dataClientT24[\"birthdate\"] !== undefined ? moment(dataClientT24[\"birthdate\"]).format(\"YYYY-MM-DD\") : clientPerson.birthDate;\n    onEditClient(clientPerson);\n  }\n\n  function showSearchClient(show = true) {\n    setshowModalSearchClient(show);\n  } //Chequear si el deudor principal tiene accionistas y otros y agregarlos automaticamente\n\n\n  async function checkDebtorShareholders() {\n    setIsActiveLoading(true);\n\n    try {\n      var lDdebtors = await backendServices.consultarDeudores(locationData.transactionId);\n\n      if (lDdebtors === null || lDdebtors === undefined || lDdebtors.length <= 0) {\n        showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n        return;\n      }\n\n      for (let p = 0; p < lDdebtors.length; p++) {\n        var maindebtor = lDdebtors[p]; //buscamos a los accionistas de este deudor\n\n        var data = await coreServices.getPartiesStaff(maindebtor.customerNumberT24);\n\n        if (data !== null && data !== undefined && data.results.length > 0) {\n          data = data.results;\n\n          for (let i = 0; i < data.length; i++) {\n            try {\n              var _data$i$Identificatio, _data$i$Identificatio2, _data$i$Phone$0$Phone, _data$i$Phone$;\n\n              var clientPerson = new PersonModel();\n              clientPerson.transactId = locationData.transactionId;\n              clientPerson.personType = data[i].PartyType; // \"1\"; //tipo de Persona\n\n              clientPerson.idType = data[i].PartyType !== undefined && data[i].PartyType === \"1\" ? \"CED\" : \"RUC\"; //tipo de Identificacion\n\n              clientPerson.clientDocumentId = data[i].Identification !== undefined ? (_data$i$Identificatio = (_data$i$Identificatio2 = data[i].Identification[0]) === null || _data$i$Identificatio2 === void 0 ? void 0 : _data$i$Identificatio2.Ident.IssuedIdentValue) !== null && _data$i$Identificatio !== void 0 ? _data$i$Identificatio : \"\" : \"\"; //No. de identificacion\n\n              clientPerson.customerNumberT24 = \"\"; //No. de Cliente T24\n\n              clientPerson.name = data[i].PersonName.FirstName !== undefined ? data[i].PersonName.FirstName : \"\"; //1er Nombre\n\n              clientPerson.secondName = data[i].PersonName.LastName !== undefined ? data[i].PersonName.LastName : \"\"; //2do Nombre\n\n              clientPerson.lastName = data[i].PersonName.SecondLastName !== undefined ? data[i].PersonName.SecondLastName : \"\"; //1er Apellido\n\n              clientPerson.secondSurname = data[i].PersonName.SecondName !== undefined ? data[i].PersonName.SecondName : \"\"; //2do Apellido\n\n              clientPerson.nationality = data[i].Nationality !== undefined ? data[i].Nationality : \"\"; //Nacionalidad\n\n              clientPerson.birthDate = data[i].BirthDt !== undefined ? moment(data[i].BirthDt).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"); //Fecha nacimiento \"1998-08-17\",\n\n              clientPerson.address = \"\"; //direccion\n\n              clientPerson.phone = data[i].Phone !== undefined ? (_data$i$Phone$0$Phone = (_data$i$Phone$ = data[i].Phone[0]) === null || _data$i$Phone$ === void 0 ? void 0 : _data$i$Phone$.PhoneNum) !== null && _data$i$Phone$0$Phone !== void 0 ? _data$i$Phone$0$Phone : \"\" : \"\"; //Telefono,\n              //clientPerson.email=data[i].Phone[0]?.PhoneNum??\"\";//Email\n\n              clientPerson.countryOfResidence = \"PA\"; //pais de residencia\n\n              clientPerson.comments = \"\";\n              clientPerson.roles = [{\n                roleId: data[i].StaffPosition\n              }];\n              clientPerson.blacklist = [{\n                blackList: false,\n                comment: \"\",\n                date: moment().format(\"YYYY-MM-DD\"),\n                personId: 0,\n                roleId: data[i].StaffPosition,\n                status: true,\n                transactId: locationData.transactionId\n              }];\n              console.log(\"sharehold\", data[i]);\n              var resultPerson = await backendServices.nuevoOrquestadoListaPersonaSolicitud(clientPerson);\n\n              if (resultPerson !== undefined && data[i].StaffPosition === \"ACC\") {\n                var sharehold = {\n                  \"transactId\": clientPerson.transactId,\n                  \"personId\": resultPerson.personId,\n                  \"participation\": Number(data[i].Shareholding),\n                  \"yearsExperience\": 1,\n                  \"status\": true\n                };\n                await backendServices.salvarAccionistaBD(sharehold);\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }\n\n          getProcessClients(locationData.transactionId);\n        } else {//showMessage(t(\"NoResults\"), true);\n          //return;\n        }\n      }\n    } catch (err) {} finally {\n      setIsActiveLoading(false);\n    }\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    var person = null;\n\n    for (var i = 0; i < dataClientList.length; i++) {\n      console.log(dataClientList[i]);\n\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\n        person = dataClientList[i];\n        break;\n      }\n    }\n\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\n      option = opt.PROCESS_CUMPLIMIENTO;\n    }\n\n    switch (option) {\n      case opt.PROCESS_LISTAEXCLUSION:\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          //chequear si existe algun deudor para poder continuar\n          backendServices.consultPrincipalDebtor(locationData.transactionId).then(data => {\n            if (data !== null && data !== undefined) {\n              saveJBPMProcess(option);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n            }\n          }).catch(error => {});\n          break;\n        }\n\n      case opt.PROCESS_BUSQUEDADESCARTE:\n        {\n          if (dataClientList.length > 0) {\n            saveJBPMProcess(option);\n            break;\n          } else {\n            showMessage(t(\"Youmustenteratleastoneclient\"), true);\n            return;\n          }\n        }\n\n      default:\n        {\n          saveJBPMProcess(option);\n          break;\n        }\n    }\n  }\n\n  async function saveJBPMProcess(option) {\n    if (locationData.instanceId === undefined || locationData.instanceId.length <= 0) {\n      var result = await bpmServices.createNewInstance();\n\n      if (result !== undefined) {\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\n        locationData.instanceId = result.instanceId;\n        locationData.taskId = result.taskId;\n        locationData.taskStatus = result.status;\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData); //Actualizamos Variables\n\n        var values = {\n          \"transactionId\": locationData.transactionId\n        };\n        await bpmServices.updatevariables(locationData.instanceId, values);\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\n        return;\n      }\n    }\n\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n    infoBpmModel.personName = infoBpmModel.personName.trim();\n    console.log(\"infoBpmModel\", infoBpmModel, maindebtor);\n\n    switch (option) {\n      case opt.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_BUSQUEDADESCARTE:\n        {\n          infoBpmModel.processId = opt.PROCESS_BUSQUEDADESCARTE;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\n            \"activityId\": opt.ACT_DATOSGENERALES.toString(),\n            \"transactionId\": locationData.transactionId.toString()\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"no\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\n  }\n\n  function setError() {\n    throw new Error(\"erro fatal\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"PreRequest\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-sub-title\",\n                  children: t(\"ParticipantsList\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn\",\n                  color: \"success\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    showSearchClient();\n                  },\n                  title: t(\"Add\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-lg fa-plus-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 159\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive styled-table-div\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table table-striped table-hover styled-table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 505,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 506,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 508,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 509,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 510,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 511,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 504,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.length > 0 ? dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 519,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 520,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 521,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 522,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 523,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined && item.blacklist.length > 0 ? item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\" : \"No Aplica\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 529,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onEditClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-border-color mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 534,\n                              columnNumber: 88\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 534,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onDeleteClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-trash-can-outline mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 535,\n                              columnNumber: 90\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 535,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 533,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 518,\n                        columnNumber: 31\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        colspan: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"alert alert-info\",\n                          style: {\n                            textAlign: \"center\"\n                          },\n                          children: t(\"NoData\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 539,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 539,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CardFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    showModalEndProcess();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 573,\n                    columnNumber: 126\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    onSaveProcess(opt.PROCESS_BUSQUEDADESCARTE);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save-outline mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 149\n                  }, this), \" \", t(\"Exit\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    onSaveProcess(opt.PROCESS_LISTAEXCLUSION);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 577,\n                    columnNumber: 147\n                  }, this), \" \", t(\"Advance\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE, opt.BPM_ACTIVITY_01)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this), showModalSearchClient ? /*#__PURE__*/_jsxDEV(ModalSearchClient, {\n      isOpen: showModalSearchClient,\n      toggle: () => {\n        showSearchClient(!showModalSearchClient);\n      },\n      onClientSelect: data => {\n        loadClientDataT24(data);\n        showSearchClient(false);\n      },\n      onNewClientSelect: () => {\n        setselectedClient(undefined);\n        onOpenNewClient();\n        showSearchClient(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 9\n    }, this) : null, locationData ? /*#__PURE__*/_jsxDEV(ModalClientForm, {\n      isOpen: openNewClient,\n      toggle: () => {\n        onOpenNewClient(!openNewClient);\n      },\n      transactId: locationData.transactionId,\n      clientSelected: selectedClient,\n      onCancel: () => {\n        onOpenNewClient(false);\n        getProcessClients(locationData.transactionId);\n      },\n      checkDebtorShareholders: checkDebtorShareholders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 462,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreRequest, \"esb2+/hr8TskmS47qumqtGHR7cA=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index2.js"],"names":["React","useState","PropTypes","useLocation","useHistory","opt","url","moment","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","Link","Breadcrumbs","setDefaults","useTranslation","LoadingOverlay","ClientForm","ModalEndProcess","BackendServices","CoreServices","BpmServices","PersonModel","InfoBpmModel","SearchClientCore","SessionHelper","LogProcessModel","LogProcess","ErrorHandler","LocalStorageHelper","ModalSearchClient","ModalClientForm","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","setbackendServices","coreServices","setcoreServices","bpmServices","setbpmServices","sessionHelper","setsessionHelper","localStorageHelper","setlocalStorageHelper","showModalSearchClient","setshowModalSearchClient","useEffect","data","get","VARNAME_LOCATIONDATA","transactionId","length","checkAndCreateProcedure","fetchData","push","URL_DASHBOARD","checkAndStartTask","then","iniresult","loadIdentificationTypes","loadPersonTypes","getProcessClients","credentials","VARNAME_USRCREDENTIAL","nuevoTramite","instanceId","PROCESS_BUSQUEDADESCARTE","usr","transactId","save","catch","error","consultarCatalogoTipoIdentificacion","json","i","label","value","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","getPersnoType","pType","find","x","getIdentificationType","idType","loadClientDataT24","dataClientT24","console","log","clientPerson","customerNumberT24","id","clientDocumentId","idnumber","name","firstname","secondName","secondname","lastName","lastname","secondSurname","secondlastname","phone","phoneNumber","email","personType","Number","partyType","idtype","isNew","birthDate","format","showSearchClient","checkDebtorShareholders","lDdebtors","consultarDeudores","showMessage","p","maindebtor","getPartiesStaff","results","PartyType","Identification","Ident","IssuedIdentValue","PersonName","FirstName","LastName","SecondLastName","SecondName","nationality","Nationality","BirthDt","address","Phone","PhoneNum","countryOfResidence","comments","roles","roleId","StaffPosition","blacklist","blackList","comment","date","personId","status","resultPerson","nuevoOrquestadoListaPersonaSolicitud","sharehold","Shareholding","salvarAccionistaBD","err","message","showModalEndProcess","onSaveProcess","option","person","PROCESS_LISTAEXCLUSION","PROCESS_CUMPLIMIENTO","consultPrincipalDebtor","saveJBPMProcess","result","createNewInstance","taskId","taskStatus","values","updatevariables","infoBpmModel","ACT_NONE","personName","name2","lastName2","trim","PROCESS_CANCELPROCESS","abortProcess","processId","activityId","JSON","stringify","toString","ACT_DATOSGENERALES","completedStatusTask","onSaveEndProcess","setError","Error","textAlign","margin","map","item","index","rol","roleDescription","e","BPM_ACTIVITY_01"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as opt from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport moment from \"moment\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { setDefaults, useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"./ClientForm\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\r\n\r\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\r\nimport SessionHelper from \"../../../helpers/SessionHelper\";\r\n\r\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../components/LogProcess/index\";\r\nimport ErrorHandler from \"../../../components/Common/ErrorHandler\";\r\n\r\nimport LocalStorageHelper from \"../../../helpers/LocalStorageHelper\";\r\nimport ModalSearchClient from \"./ModalSearchClient\";\r\nimport ModalClientForm from \"./ModalClientForm\"\r\n\r\nconst PreRequest = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\r\n\r\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n  const [showModalSearchClient, setshowModalSearchClient] = useState(false);\r\n\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    var data = location.data !== undefined ? location.data : sessionHelper.get(opt.VARNAME_LOCATIONDATA);\r\n    if (data !== null && data !== undefined) {\r\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\r\n        data.transactionId = 0;\r\n        checkAndCreateProcedure(data);\r\n      }\r\n      else {\r\n        setLocationData(data);\r\n        fetchData(data);\r\n      }\r\n    }\r\n    else {\r\n      history.push(url.URL_DASHBOARD);\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    //checkAndCreateProcedure(locationData);\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n  }\r\n  //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\r\n  function checkAndCreateProcedure(locationData) {\r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, credentials?.usr ?? \"admin\", \"0\")\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          locationData.transactionId = data.transactId;\r\n          sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\r\n          setLocationData(locationData);\r\n          fetchData(locationData);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          /*if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }*/\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    dataClient[\"isNew\"] = false;\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    if (idType !== undefined && idType !== null && idType.length > 0) {\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n    return \"\";\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    console.log(\"loadClientDataT24\",loadClientDataT24);\r\n    var clientPerson = new PersonModel();\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name =  dataClientT24.firstname!==undefined?dataClientT24.firstname:\"\"; \r\n    clientPerson.secondName = dataClientT24.secondname!==undefined?dataClientT24.secondname:\"\";\r\n    clientPerson.lastName = dataClientT24.lastname!==undefined?dataClientT24.lastname:\"\";\r\n    clientPerson.secondSurname = dataClientT24.secondlastname!==undefined?dataClientT24.secondlastname:\"\";\r\n    clientPerson.phone = dataClientT24.phoneNumber;\r\n    clientPerson.email = dataClientT24.email;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    clientPerson.isNew = false;\r\n    clientPerson.birthDate= dataClientT24[\"birthdate\"]!==undefined?moment(dataClientT24[\"birthdate\"]).format(\"YYYY-MM-DD\"):clientPerson.birthDate;\r\n    onEditClient(clientPerson);\r\n  }\r\n\r\n  function showSearchClient(show = true) {\r\n    setshowModalSearchClient(show);\r\n  }\r\n\r\n  //Chequear si el deudor principal tiene accionistas y otros y agregarlos automaticamente\r\n  async function checkDebtorShareholders() {\r\n    setIsActiveLoading(true)\r\n    try {\r\n      var lDdebtors = await backendServices.consultarDeudores(locationData.transactionId)\r\n      if (lDdebtors === null || lDdebtors === undefined || lDdebtors.length <= 0) {\r\n        showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n        return;\r\n      }\r\n\r\n      for (let p = 0; p < lDdebtors.length; p++) {\r\n        var maindebtor = lDdebtors[p];\r\n\r\n        //buscamos a los accionistas de este deudor\r\n        var data = await coreServices.getPartiesStaff(maindebtor.customerNumberT24);\r\n        if (data !== null && data !== undefined && data.results.length > 0) {\r\n          data = data.results;\r\n          for (let i = 0; i < data.length; i++) {\r\n            try {\r\n              var clientPerson = new PersonModel();\r\n              clientPerson.transactId = locationData.transactionId;\r\n              clientPerson.personType = data[i].PartyType;// \"1\"; //tipo de Persona\r\n              clientPerson.idType = data[i].PartyType !== undefined && data[i].PartyType === \"1\"? \"CED\":\"RUC\"; //tipo de Identificacion\r\n              clientPerson.clientDocumentId = data[i].Identification !== undefined ? data[i].Identification[0]?.Ident.IssuedIdentValue ?? \"\" : \"\";//No. de identificacion\r\n              clientPerson.customerNumberT24 = \"\"; //No. de Cliente T24\r\n              clientPerson.name = data[i].PersonName.FirstName !== undefined ? data[i].PersonName.FirstName : \"\";//1er Nombre\r\n              clientPerson.secondName = data[i].PersonName.LastName !== undefined ? data[i].PersonName.LastName : \"\";//2do Nombre\r\n              clientPerson.lastName = data[i].PersonName.SecondLastName !== undefined ? data[i].PersonName.SecondLastName : \"\"; //1er Apellido\r\n              clientPerson.secondSurname = data[i].PersonName.SecondName !== undefined ? data[i].PersonName.SecondName : \"\";//2do Apellido\r\n              clientPerson.nationality = data[i].Nationality !== undefined ? data[i].Nationality : \"\";//Nacionalidad\r\n              clientPerson.birthDate = data[i].BirthDt !== undefined ? moment(data[i].BirthDt).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\");//Fecha nacimiento \"1998-08-17\",\r\n              clientPerson.address = \"\"; //direccion\r\n              clientPerson.phone = data[i].Phone !== undefined ? data[i].Phone[0]?.PhoneNum ?? \"\" : \"\"; //Telefono,\r\n              //clientPerson.email=data[i].Phone[0]?.PhoneNum??\"\";//Email\r\n              clientPerson.countryOfResidence = \"PA\";//pais de residencia\r\n              clientPerson.comments = \"\";\r\n              clientPerson.roles = [{ roleId: data[i].StaffPosition }];\r\n              clientPerson.blacklist = [{\r\n                blackList: false, comment: \"\", date: moment().format(\"YYYY-MM-DD\"),\r\n                personId: 0, roleId: data[i].StaffPosition, status: true, transactId: locationData.transactionId\r\n              }];\r\n\r\n              console.log(\"sharehold\",data[i]);\r\n              var resultPerson = await backendServices.nuevoOrquestadoListaPersonaSolicitud(clientPerson);\r\n              if(resultPerson!==undefined && data[i].StaffPosition===\"ACC\"){\r\n                var sharehold = {\r\n                                  \"transactId\": clientPerson.transactId,\r\n                                  \"personId\": resultPerson.personId,\r\n                                  \"participation\": Number(data[i].Shareholding),\r\n                                  \"yearsExperience\": 1,\r\n                                  \"status\": true\r\n                                }\r\n                await backendServices.salvarAccionistaBD(sharehold);\r\n              }\r\n            }\r\n            catch (err) { console.error(err) }\r\n          }\r\n          getProcessClients(locationData.transactionId)\r\n        }\r\n        else {\r\n          //showMessage(t(\"NoResults\"), true);\r\n          //return;\r\n        }\r\n      }\r\n\r\n    }\r\n    catch (err) { }\r\n    finally {\r\n      setIsActiveLoading(false)\r\n    }\r\n  }\r\n\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n\r\n    var person = null;\r\n    for (var i = 0; i < dataClientList.length; i++) {\r\n      console.log(dataClientList[i])\r\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\r\n        person = dataClientList[i];\r\n        break;\r\n      }\r\n    }\r\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\r\n      option = opt.PROCESS_CUMPLIMIENTO;\r\n    }\r\n    switch (option) {\r\n      case opt.PROCESS_LISTAEXCLUSION:\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        //chequear si existe algun deudor para poder continuar\r\n        backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              saveJBPMProcess(option);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n            }\r\n          }).catch((error) => { });\r\n        break;\r\n      }\r\n      case opt.PROCESS_BUSQUEDADESCARTE: {\r\n        if (dataClientList.length > 0) {\r\n          saveJBPMProcess(option);\r\n          break;\r\n        }\r\n        else {\r\n          showMessage(t(\"Youmustenteratleastoneclient\"), true);\r\n          return;\r\n        }\r\n      }\r\n      default: {\r\n        saveJBPMProcess(option);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async function saveJBPMProcess(option) {\r\n\r\n    if (locationData.instanceId === undefined || locationData.instanceId.length <= 0) {\r\n      var result = await bpmServices.createNewInstance();\r\n      if (result !== undefined) {\r\n\r\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\r\n        locationData.instanceId = result.instanceId;\r\n        locationData.taskId = result.taskId;\r\n        locationData.taskStatus = result.status;\r\n\r\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\r\n\r\n        //Actualizamos Variables\r\n        var values = { \"transactionId\": locationData.transactionId };\r\n        await bpmServices.updatevariables(locationData.instanceId, values);\r\n      }\r\n      else {\r\n        //Mensaje ERROR\r\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n        return;\r\n      }\r\n    }\r\n\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId,\r\n      opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE, maindebtor?.personId);\r\n    infoBpmModel.personName = maindebtor !== undefined ? (maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2) : \"\";\r\n    infoBpmModel.personName = infoBpmModel.personName.trim();\r\n\r\n    console.log(\"infoBpmModel\", infoBpmModel, maindebtor);\r\n\r\n    switch (option) {\r\n      case opt.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_BUSQUEDADESCARTE: {\r\n        infoBpmModel.processId = opt.PROCESS_BUSQUEDADESCARTE;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\": opt.ACT_DATOSGENERALES.toString(),\r\n          \"transactionId\": locationData.transactionId.toString()\r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n\r\n        infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_LISTAEXCLUSION: {\r\n\r\n        infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"no\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\r\n  }\r\n\r\n  function setError() {\r\n    throw new Error(\"erro fatal\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"PreRequest\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md={6}>\r\n                <h4 className=\"card-title\">{t(\"PreRequest\")}</h4>\r\n                <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Row>\r\n                  <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                    <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n\r\n            <React.Fragment>\r\n              {/*<Row>\r\n                  <Col md=\"12\">\r\n                    <SearchClientCore onClientSelect={loadClientDataT24} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient() }}/>      \r\n                  </Col>\r\n            </Row>*/}\r\n              \r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <h5 className=\"card-sub-title\">{t(\"ParticipantsList\")}</h5>\r\n                  </Col>\r\n                  <Col md={6} style={{ textAlign: \"right\", }}>\r\n                      <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showSearchClient() }} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n                      \r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <div className=\"table-responsive styled-table-div\">\r\n                      <Table className=\"table table-striped table-hover styled-table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"PersonType\")}</th>\r\n                            <th>{t(\"FullName\")}</th>\r\n                            <th>{t(\"IdentificationType\")}</th>\r\n                            <th>{t(\"IdentificationNumber\")}</th>\r\n                            <th>{t(\"Roles\")}</th>\r\n                            <th>{t(\"WatchList\")}</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                          {dataClientList.length > 0 ?\r\n                            dataClientList.map((item, index) => (\r\n                              <tr>\r\n                                <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                                <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                                <td>{getIdentificationType(item.idType).label}</td>\r\n                                <td>{item.clientDocumentId}</td>\r\n                                <td>\r\n                                  {item.roles !== undefined ?\r\n                                    item.roles.map((rol, index) => (\r\n                                      rol.roleDescription + \" - \"\r\n                                    )) : null}\r\n                                </td>\r\n                                <td>\r\n                                  {item.blacklist !== undefined && item.blacklist.length > 0 ?\r\n                                    (item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"}\r\n                                </td>\r\n                                <td style={{ textAlign: \"right\" }}>\r\n                                  <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                  <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                                </td>\r\n                              </tr>\r\n                            )) :\r\n                            <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td>\r\n                          }\r\n                        </tbody>\r\n                      </Table>\r\n                    </div>\r\n                  </Col>\r\n\r\n                </Row>\r\n              \r\n            </React.Fragment>\r\n\r\n            {/*openNewClient ?\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n                </Col>\r\n              </Row>\r\n                          :*/}\r\n          </CardBody>\r\n\r\n          {!openNewClient ?\r\n            <React.Fragment>\r\n\r\n              <CardFooter>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md=\"3\" style={{ textAlign: \"left\" }}>\r\n                    <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  </Col>\r\n                  <Col md=\"9\" style={{ textAlign: \"right\" }}>\r\n                    <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_BUSQUEDADESCARTE) }}><i className=\"mdi mdi-content-save-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n                    <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardFooter>\r\n            </React.Fragment>\r\n            : null\r\n          }\r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      {locationData ?\r\n        <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE,opt.BPM_ACTIVITY_01)} />\r\n        : null}        \r\n\r\n      <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n\r\n      {showModalSearchClient ?\r\n        <ModalSearchClient isOpen={showModalSearchClient} toggle={() => { showSearchClient(!showModalSearchClient) }} onClientSelect={(data) => { loadClientDataT24(data); showSearchClient(false); }} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient(); showSearchClient(false) }} />\r\n        : null}\r\n\r\n      {locationData ?\r\n        <ModalClientForm isOpen={openNewClient} toggle={() => { onOpenNewClient(!openNewClient) }} transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }} checkDebtorShareholders={checkDebtorShareholders} />\r\n        : null}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}