{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as opt from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { setDefaults, useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"./ClientForm\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\nimport SessionHelper from \"../../../helpers/SessionHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false);\n  const [dataClientList, setdataClientList] = useState([]);\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper()); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== undefined) {\n      data = location.data;\n    }\n\n    var data = sessionHelper.get(opt.SESSION_LOCATIONDATA);\n\n    if (data !== null && data !== undefined) {\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\n        data.transactionId = 0;\n        checkAndCreateProcedure(data);\n      } else {\n        setLocationData(data);\n        fetchData(data);\n      }\n    } else {\n      history.push(url.URL_DASHBOARD);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    }); //checkAndCreateProcedure(locationData);\n\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\n\n\n  function checkAndCreateProcedure(locationData) {\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, \"admin\", \"0\").then(data => {\n      if (data !== null && data !== undefined) {\n        locationData.transactionId = data.transactId;\n        sessionHelper.save(opt.SESSION_LOCATIONDATA, locationData);\n        setLocationData(locationData);\n        fetchData(locationData);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n        /*if (data.length <= 0) {\r\n          setselectedClient(new PersonModel());\r\n          onOpenNewClient();\r\n        }*/\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    console.log(\"getIdentificationType\");\n\n    if (idType !== undefined && idType !== null && idType.length > 0) {\n      return identificationTypeList.find(x => x.value === idType);\n    }\n\n    return \"\";\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    onEditClient(clientPerson);\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    var person = null;\n\n    for (var i = 0; i < dataClientList.length; i++) {\n      console.log(dataClientList[i]);\n\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\n        person = dataClientList[i];\n        break;\n      }\n    }\n\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\n      option = opt.PROCESS_CUMPLIMIENTO;\n    }\n\n    switch (option) {\n      case opt.PROCESS_LISTAEXCLUSION:\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          //chequear si existe algun deudor para poder continuar\n          backendServices.consultPrincipalDebtor(locationData.transactionId).then(data => {\n            if (data !== null && data !== undefined) {\n              saveJBPMProcess(option);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n            }\n          }).catch(error => {});\n          break;\n        }\n\n      default:\n        {\n          saveJBPMProcess(option);\n          break;\n        }\n    }\n  }\n\n  async function saveJBPMProcess(option) {\n    var _locationData$infoBpm, _locationData$infoBpm2, _locationData$infoBpm3, _locationData$infoBpm4;\n\n    console.log(\"saveJBPMProcess\", locationData);\n    return; //creamos el proceso en BPM\n\n    if (locationData.instanceId === undefined || locationData.instanceId.length <= 0) {\n      var result = await backendServices.createNewInstance();\n\n      if (result !== undefined) {\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\n        locationData.instanceId = result.instanceId;\n        locationData.taskId = result.taskId;\n        locationData.taskStatus = result.status;\n        sessionHelper.save(opt.SESSION_LOCATIONDATA, locationData); //Actualizamos Variables\n\n        var values = {\n          \"transactionId\": locationData.transactionId\n        };\n        await bpmServices.updatevariables(locationData.instanceId, values);\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\n        return;\n      }\n    }\n\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel((_locationData$infoBpm = (_locationData$infoBpm2 = locationData.infoBpmModel) === null || _locationData$infoBpm2 === void 0 ? void 0 : _locationData$infoBpm2.instanceId) !== null && _locationData$infoBpm !== void 0 ? _locationData$infoBpm : locationData.instanceId, (_locationData$infoBpm3 = (_locationData$infoBpm4 = locationData.infoBpmModel) === null || _locationData$infoBpm4 === void 0 ? void 0 : _locationData$infoBpm4.transactId) !== null && _locationData$infoBpm3 !== void 0 ? _locationData$infoBpm3 : locationData.transactionId, 0, 0, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n\n    switch (option) {\n      case opt.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_BUSQUEDADESCARTE:\n        {\n          infoBpmModel.processId = opt.PROCESS_BUSQUEDADESCARTE;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"no\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: [t(\"PreRequest\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 58\n            }, this), \" \", t(\"Process\") + \": #\" + (locationData === null || locationData === void 0 ? void 0 : locationData.instanceId)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\",\n            children: t(\"This form is official and must be filled out correctly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(ClientForm, {\n                transactId: locationData.transactionId,\n                clientSelected: selectedClient,\n                onCancel: () => {\n                  onOpenNewClient(false);\n                  getProcessClients(locationData.transactionId);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(SearchClientCore, {\n                  onClientSelect: loadClientDataT24,\n                  onNewClientSelect: () => {\n                    setselectedClient(undefined);\n                    onOpenNewClient();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: t(\"ParticipantsList\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"table-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 396,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 397,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 398,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 399,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 400,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 401,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 402,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 408,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 409,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 410,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined && item.blacklist.length > 0 ? item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\" : \"No Aplica\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 418,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onEditClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-border-color mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 423,\n                              columnNumber: 86\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 423,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onDeleteClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-trash-can-outline mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 424,\n                              columnNumber: 88\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 424,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 422,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 407,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: dataClientList.length > 0 ? /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                showModalEndProcess();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 124\n              }, this), \" \", t(\"Cancel\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                onSaveProcess(opt.PROCESS_LISTAEXCLUSION);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 145\n              }, this), \" \", t(\"Advance\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(CardFooter, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-info\",\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: t(\"NoData\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreRequest, \"23kUe6ynAleXu9OS7PHBfEItBXs=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","opt","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","Link","Breadcrumbs","setDefaults","useTranslation","LoadingOverlay","ClientForm","ModalEndProcess","BackendServices","CoreServices","BpmServices","PersonModel","InfoBpmModel","SearchClientCore","SessionHelper","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","setbackendServices","bpmServices","setbpmServices","sessionHelper","setsessionHelper","useEffect","data","get","SESSION_LOCATIONDATA","transactionId","length","checkAndCreateProcedure","fetchData","push","URL_DASHBOARD","checkAndStartTask","then","iniresult","loadIdentificationTypes","loadPersonTypes","getProcessClients","nuevoTramite","instanceId","PROCESS_BUSQUEDADESCARTE","transactId","save","catch","error","consultarCatalogoTipoIdentificacion","json","i","label","value","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","getPersnoType","pType","find","x","getIdentificationType","idType","console","log","loadClientDataT24","dataClientT24","clientPerson","customerNumberT24","id","clientDocumentId","idnumber","name","firstname","secondName","secondname","lastName","lastname","secondSurname","secondlastname","personType","Number","partyType","idtype","showMessage","message","showModalEndProcess","onSaveProcess","option","person","blacklist","blackList","PROCESS_LISTAEXCLUSION","PROCESS_CUMPLIMIENTO","consultPrincipalDebtor","saveJBPMProcess","result","createNewInstance","taskId","taskStatus","status","values","updatevariables","maindebtor","infoBpmModel","personId","personName","name2","lastName2","PROCESS_CANCELPROCESS","abortProcess","processId","activityId","ACT_NONE","JSON","stringify","toString","completedStatusTask","onSaveEndProcess","map","item","index","roles","rol","roleDescription","textAlign","e","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as opt from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { setDefaults, useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"./ClientForm\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\r\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\r\nimport SessionHelper from \"../../../helpers/SessionHelper\";\r\n\r\nconst PreRequest = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();  \r\n  const location = useLocation();\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if(location.data!==undefined){\r\n      data = location.data\r\n    }\r\n    var data = sessionHelper.get(opt.SESSION_LOCATIONDATA);\r\n    if (data !== null && data !== undefined) {\r\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\r\n        data.transactionId = 0;\r\n        checkAndCreateProcedure(data);\r\n      }\r\n      else {\r\n        setLocationData(data);\r\n        fetchData(data);\r\n      }\r\n    }\r\n    else {      \r\n      history.push(url.URL_DASHBOARD);\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    //checkAndCreateProcedure(locationData);\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n  }\r\n  //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\r\n  function checkAndCreateProcedure(locationData) {\r\n    \r\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, \"admin\", \"0\")\r\n      .then((data) => {        \r\n        if (data !== null && data !== undefined) {\r\n          locationData.transactionId = data.transactId;\r\n          sessionHelper.save(opt.SESSION_LOCATIONDATA,locationData);\r\n          setLocationData(locationData);\r\n          fetchData(locationData);          \r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          /*if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }*/\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    console.log(\"getIdentificationType\",)\r\n    if (idType !== undefined && idType !== null && idType.length > 0) {\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n    return \"\";\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    \r\n    var clientPerson = new PersonModel();\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    onEditClient(clientPerson);\r\n  }\r\n  \r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n    \r\n    var person = null;\r\n    for (var i = 0; i < dataClientList.length; i++) {\r\n      console.log(dataClientList[i])\r\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\r\n        person = dataClientList[i];\r\n        break;\r\n      }\r\n    }\r\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\r\n      option = opt.PROCESS_CUMPLIMIENTO;\r\n    }\r\n    switch (option) {\r\n      case opt.PROCESS_LISTAEXCLUSION:\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        //chequear si existe algun deudor para poder continuar\r\n        backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              saveJBPMProcess(option);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n            }\r\n          }).catch((error) => { });\r\n        break;\r\n      }\r\n      default: {\r\n        saveJBPMProcess(option);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  async function saveJBPMProcess(option) {\r\n        \r\n    console.log(\"saveJBPMProcess\",locationData);\r\n    return;\r\n    \r\n    //creamos el proceso en BPM\r\n    if(locationData.instanceId === undefined || locationData.instanceId.length<=0){       \r\n      var result = await backendServices.createNewInstance();\r\n      if(result!==undefined){\r\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\r\n        locationData.instanceId = result.instanceId;\r\n        locationData.taskId = result.taskId;\r\n        locationData.taskStatus = result.status;\r\n        \r\n        sessionHelper.save(opt.SESSION_LOCATIONDATA,locationData);\r\n\r\n        //Actualizamos Variables\r\n        var values = { \"transactionId\": locationData.transactionId };\r\n        await bpmServices.updatevariables(locationData.instanceId, values);\r\n      }\r\n      else{\r\n        //Mensaje ERROR\r\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n        return;\r\n      }      \r\n    }\r\n  \r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n    var infoBpmModel = new InfoBpmModel(\r\n      locationData.infoBpmModel?.instanceId??locationData.instanceId,\r\n      locationData.infoBpmModel?.transactId??locationData.transactionId,\r\n      0,0,\r\n      maindebtor?.personId\r\n    );\r\n    infoBpmModel.personName=maindebtor!==undefined?(maindebtor.name + \" \" +maindebtor.name2 + \" \" +maindebtor.lastName + \" \" +maindebtor.lastName2 ):\"\";\r\n    \r\n    switch (option) {\r\n      case opt.PROCESS_CANCELPROCESS: {    \r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_BUSQUEDADESCARTE: {\r\n    \r\n        infoBpmModel.processId=opt.PROCESS_BUSQUEDADESCARTE;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        \r\n        infoBpmModel.processId=opt.PROCESS_CUMPLIMIENTO;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n    \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_LISTAEXCLUSION: {\r\n    \r\n        infoBpmModel.processId=opt.PROCESS_LISTAEXCLUSION;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n    \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"no\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\r\n  }\r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"PreRequest\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <Card>\r\n          <CardHeader>\r\n            <h4 className=\"card-title\">{t(\"PreRequest\")} <br /> {t(\"Process\") + \": #\" + locationData?.instanceId}</h4>\r\n            <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n          </CardHeader>\r\n          <CardBody>            \r\n\r\n            {openNewClient ?\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n                </Col>\r\n              </Row>\r\n              :\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <SearchClientCore onClientSelect={loadClientDataT24} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient() }}/>      \r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <h5>{t(\"ParticipantsList\")}</h5>\r\n                    <p className=\"card-title-desc\"></p>\r\n                    <div className=\"table-responsive\">\r\n                      <Table className=\"table mb-0\">\r\n                        <thead className=\"table-light\">\r\n                          <tr>\r\n                            <th>{t(\"PersonType\")}</th>\r\n                            <th>{t(\"FullName\")}</th>\r\n                            <th>{t(\"IdentificationType\")}</th>\r\n                            <th>{t(\"IdentificationNumber\")}</th>\r\n                            <th>{t(\"Roles\")}</th>\r\n                            <th>{t(\"WatchList\")}</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {dataClientList.map((item, index) => (\r\n                            <tr>\r\n                              <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                              <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                              <td>{getIdentificationType(item.idType).label}</td>\r\n                              <td>{item.clientDocumentId}</td>\r\n                              <td>\r\n                                {item.roles !== undefined ?\r\n                                  item.roles.map((rol, index) => (\r\n                                    rol.roleDescription + \" - \"\r\n                                  )) : null}\r\n                              </td>\r\n                              <td>\r\n                                {item.blacklist !== undefined && item.blacklist.length > 0 ?                                \r\n                                  (item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"}\r\n                              </td>\r\n                              <td style={{ textAlign: \"right\" }}>\r\n                                <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </div>\r\n\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            }\r\n          </CardBody>\r\n\r\n          {!openNewClient ?\r\n            <React.Fragment>\r\n              {dataClientList.length > 0 ?\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n                </CardFooter>\r\n                : \r\n                <CardFooter>\r\n                  <Row>\r\n                  <Col md=\"12\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></Col>\r\n                </Row>\r\n                </CardFooter>  \r\n              }\r\n            </React.Fragment>  \r\n            :null                    \r\n          }\r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}