{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport Select from \"react-select\";\nimport { Row, Col, Label } from \"reactstrap\";\nimport moment from \"moment\";\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { BackendServices, CoreServices } from \"../../../../services\";\nimport Switch from \"react-switch\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { translationHelpers } from \"../../../../helpers\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport { useTranslation } from \"react-i18next/\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport Currency from \"../../../../helpers/currency\";\nimport * as OPTs from \"../../../../helpers/options_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst DatosGeneralesPropuesta = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const currencyData = new Currency();\n  const location = useLocation();\n  const history = useHistory();\n  const [fechaSet, setfechaSet] = useState(null);\n  const [fechaSet2, setfechaSet2] = useState(null);\n  const [fechaSet3, setfechaSet3] = useState(null);\n  const [fechaSet4, setfechaSet4] = useState(null);\n  const [CambioDatos, setCambioDatos] = useState(false);\n  const [locationData, setLocationData] = useState(location.data);\n  const [context, setcontext] = useState(location.data);\n  const [formValid, setFormValid] = useState(false);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\n  const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\n  const [paises, setPais] = useState([]);\n  const [paisesRiesgo, setPaisRiesgo] = useState([]);\n  const [listaRevisionSet, setlistaRevisionSet] = useState(null);\n  const [listaRevision, setlistaRevision] = useState(null);\n  const [datosIGR, setdatosIGR] = useState(null);\n  const [datosAmbientales, setdatosAmbientales] = useState(null);\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\n  const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\n  const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\n  const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\n  const [transactId, setTransactId] = useState('');\n  const [customerNumber, setCustomerNumber] = useState('');\n  const [revisionType, setRevisionType] = useState('');\n  const [preapproval, setPreapproval] = useState(false);\n  const [economicGroupSelect, seteconomicGroupSelect] = useState(undefined);\n  const [economicGroup, setEconomicGroup] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [countrySelect, setCountrySelect] = useState(undefined);\n  const [activityCompany, setActivityCompany] = useState('');\n  const [riskClassification, setRiskClassification] = useState('');\n  const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\n  const [relatedPart, setRelatedPart] = useState(false);\n  const [accountExecutive, setAccountExecutive] = useState('');\n  const [approvalLevel, setApprovalLevel] = useState('');\n  const [responsibleUnit, setResponsibleUnit] = useState('');\n  const [countryRisk, setCountryRisk] = useState(null);\n  const [dataReturn, setdataReturn] = useState(null);\n  const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\n  const [datosDeudorPrincipal, setdatosDeudorPrincipal] = useState(null);\n  const [requestDate, setRequestDate] = useState('');\n  const [lastRequestDate, setLastRequestDate] = useState('');\n  const [proposedExpirationDate, setProposedExpirationDate] = useState('');\n  const [nextRevisionDate, setNextRevisionDate] = useState('');\n  const [dataRequest, setdataRequest] = useState('');\n  const [flow, setFlow] = useState(''); //const [t, c] = translationHelpers('commercial_credit', 'common');    \n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmDatosGeneralesPropuesta');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    loadListCountry();\n    loadListGroupEconomic();\n    loadActivityEconomic();\n    loadDataRisk();\n  }, []);\n  useEffect(() => {\n    var _ref, _location$data$transa, _location$data;\n\n    const backendServices = new BackendServices();\n    backendServices.consultGeneralDataPropCred((_ref = (_location$data$transa = location === null || location === void 0 ? void 0 : (_location$data = location.data) === null || _location$data === void 0 ? void 0 : _location$data.transactionId) !== null && _location$data$transa !== void 0 ? _location$data$transa : locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _ref !== void 0 ? _ref : 0).then(data => {\n      if (data !== undefined) {\n        setdataRequest(data[0].requestId);\n      }\n    });\n  }, [props]);\n  useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if ((gruposEconomicos === null || gruposEconomicos === void 0 ? void 0 : gruposEconomicos.length) > 0 && (actividadEmpresa === null || actividadEmpresa === void 0 ? void 0 : actividadEmpresa.length) > 0) loadDataGeneral(dataSession);\n  }, [gruposEconomicos, actividadEmpresa]);\n  useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    } // if (props?.dataGlobal?.requestId != null&&props?.values!={}) {\n    // setfechaSet(() => { return null })\n    // setfechaSet2(() => { return null })\n    // setfechaSet3(() => { return null })\n    // setfechaSet4(() => { return null })\n\n\n    updateDefaults(dataSession); // }\n  }, [props.values]);\n  useEffect(() => {\n    cargarCatalogos();\n  }, [paises, gruposEconomicos, actividadEmpresa]);\n\n  function cargarCatalogos() {\n    try {\n      var defaultVal = null;\n\n      if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\n        defaultVal = listaRevision.find(x => x.label.toUpperCase() === props.values.revision.toUpperCase());\n\n        if (defaultVal !== undefined) {\n          setlistaRevisionSelect(defaultVal);\n          setlistaRevisionSet(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\n        defaultVal = paises.find(x => x.label.toUpperCase() === props.values.country.toUpperCase());\n\n        if (defaultVal !== undefined) {\n          setCountrySelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\n        defaultVal = paises.find(x => x.label.toUpperCase() === props.values.countryRisk.toUpperCase());\n\n        if (defaultVal !== undefined) {\n          setCountryRiskSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n\n    if (props.values.transactId != undefined) setCambioDatos(() => {\n      return true;\n    });\n  }\n\n  function updateDefaults(context) {\n    var _props$values$transac;\n\n    setTransactId((_props$values$transac = props.values.transactId) !== null && _props$values$transac !== void 0 ? _props$values$transac : context.transactionId);\n    setCustomerNumber(props.values.customerNumber || context.customerId);\n    setRevisionType(props.values.revisionType || 'Bimensual');\n    setPreapproval(props.values.preapproval || false);\n    setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\n    setRelatedPart(props.values.relatedPart || false);\n    setAccountExecutive(props.values.accountExecutive || '');\n    setApprovalLevel(props.values.approvalLevel || '');\n    setResponsibleUnit(props.values.responsibleUnit || '');\n    setRequestDate(props.values.requestDate || '');\n    setLastRequestDate(props.values.lastRequestDate || '');\n    setNextRevisionDate(props.values.nextRevisionDate || '');\n    setProposedExpirationDate(props.values.proposedExpirationDate || '');\n    setFlow(props.values.flow || '');\n    setfechaSet(props.values.requestDate == \"\" || props.values.requestDate == null || props.values.requestDate == undefined ? moment().format(\"DD-MM-YYYY\") : moment(props.values.requestDate).format(\"DD-MM-YYYY\"));\n    setfechaSet2(props.values.lastRequestDate == \"\" || props.values.lastRequestDate == null || props.values.lastRequestDate == undefined ? moment().format(\"DD-MM-YYYY\") : moment(props.values.lastRequestDate).format(\"DD-MM-YYYY\"));\n    setfechaSet3(props.values.nextRevisionDate == \"\" || props.values.nextRevisionDate == null || props.values.nextRevisionDate == undefined ? moment().add(1, 'years').format(\"DD-MM-YYYY\") : moment(props.values.nextRevisionDate).format(\"DD-MM-YYYY\"));\n    setfechaSet4(props.values.proposedExpirationDate == \"\" || props.values.proposedExpirationDate == null || props.values.proposedExpirationDate == undefined ? moment().add(6, 'months').format(\"DD-MM-YYYY\") : moment(props.values.proposedExpirationDate).format(\"DD-MM-YYYY\")); // loadDataGeneral(context);\n\n    setrelatedPartSwitch(props.values.relatedPart);\n    setpreapprovalSwitch(props.values.preapproval);\n  } // cargarListaPaises\n\n\n  async function loadListCountry() {\n    const api = new CoreServices(); // getPaisesCatalogo\n\n    await api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      const json = response.Records ? response.Records.map(item => ({\n        label: item[\"Description\"],\n        value: item[\"Code\"]\n      })) : [];\n      setPais(json);\n      setPaisRiesgo(json);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // cargarActividadEconomica\n\n\n  function loadActivityEconomic() {\n    const api = new CoreServices(); // getActividadEconomicaCatalogo\n\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        //json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\n        json.push({\n          label2: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"],\n          label: response.Records[i][\"Code\"] + \" - \" + response.Records[i][\"Description\"]\n        });\n      }\n\n      setActividadEmpresa(json);\n    });\n  } // cargarListaGrupoEconomico\n\n\n  function loadListGroupEconomic() {\n    const api = new CoreServices(); // getGrupoEconomicoCatalogo\n\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setGruposEconomicos(json);\n    });\n  } // cargarListaRevision\n\n\n  function loadDataRisk() {\n    const api = new BackendServices();\n    api.retrieveRevisionType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      setlistaRevision(json);\n    });\n  } // Cargar datos generales\n\n\n  function loadDataGeneral(locationData) {\n    const apiBack = new BackendServices(); // consultarDeudorPrincipal\n\n    apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\n      if (resp != undefined) {\n        setdatosDeudorPrincipal(resp);\n      }\n    });\n    apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\n      setdatosIGR(resp);\n\n      try {\n        var defaultVal = null; // seteconomicGroupSelect(undefined);\n\n        if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\n          defaultVal = gruposEconomicos.find(x => x.label.toUpperCase() === resp.economicGroup.name.toUpperCase());\n\n          if (defaultVal !== undefined) {\n            seteconomicGroupSelect(defaultVal);\n          }\n        }\n\n        console.log(\"setActividadEmpresaSet\", resp.economicActivity, actividadEmpresa);\n        setActividadEmpresaSet(resp.economicActivity);\n\n        if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\n          defaultVal = actividadEmpresa.find(x => x.code.toUpperCase() === resp.economicActivity.code.toUpperCase());\n\n          if (defaultVal !== undefined) {\n            setActividadEmpresaSelect(defaultVal);\n          }\n        }\n      } catch (err) {}\n    }).catch(error => {\n      console.log(error);\n    });\n    apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\n      setdatosAmbientales(resp.environmentalAspectsDTO);\n    }).catch(error => {});\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault(); // if (errors.length > 0) {\n    //     values.status = true;\n    // }\n    // if (event.target.id !== 'DatosGeneralesPropuesta') {\n    //     return;\n    // }\n\n    if (listaRevisionSelect == undefined) {\n      setFormValid(false);\n      values.status = true;\n      return;\n    }\n\n    if (countrySelect == undefined) {\n      setFormValid(false);\n      values.status = true;\n      return;\n    }\n\n    if (countryRiskSelect == undefined) {\n      setFormValid(false);\n      values.status = true;\n      return;\n    }\n\n    values.minimumProvisionSIB = Number(currencyData.getRealValue(values.minimumProvisionSIB));\n    values.requestDate = moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet : moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    values.lastRequestDate = moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet2 : moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    values.nextRevisionDate = moment(fechaSet3, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet3 : moment(fechaSet3, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    values.proposedExpirationDate = moment(fechaSet4, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet4 : moment(fechaSet4, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    const data = Object.assign({\n      country: countrySelect != undefined ? countrySelect.label : '',\n      countryRisk: countryRiskSelect != undefined ? countryRiskSelect.label : '',\n      economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\n      activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.label : '',\n      revision: listaRevisionSet ? listaRevisionSet.label : '',\n      preapproval: preapprovalSwitch,\n      relatedPart: relatedPartSwitch,\n      transactId: Number(locationData.transactionId),\n      approvalLevel: \"\",\n      requestId: props.dataGlobal != null ? props.dataGlobal.requestId : \"\"\n    }, values);\n    setdataReturn(data);\n    setFormValid(true); // props.saveDataCreditProposal(true,props.activeTab);\n  }\n\n  function handleDropdownChange(name, event) {\n    switch (name) {\n      case 'country':\n        setCountry(event);\n        break;\n\n      case 'countryRisk':\n        setCountryRisk(event);\n        break;\n\n      case 'economicGroupName':\n        setEconomicGroup(event);\n        break;\n\n      case 'activityCompany':\n        setActivityCompany(event);\n        break;\n\n      default:\n    }\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla === 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AvForm, {\n    id: \"frmDatosGeneralesPropuesta\",\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"transactId\",\n            children: t(\"RequestNumber\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"requestId\",\n            type: \"text\",\n            id: \"requestId\",\n            value: dataRequest,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"customerNumber\",\n            children: t(\"Customer ID\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"customerNumber\",\n            min: 0,\n            type: \"number\",\n            onKeyPress: e => {\n              return check(e);\n            },\n            readOnly: true,\n            id: \"customerNumber\",\n            value: datosDeudorPrincipal != null && datosDeudorPrincipal != \"\" && datosDeudorPrincipal != undefined ? datosDeudorPrincipal.customerNumberT24 : \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"4\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"revisionType\",\n          children: t(\"Revision Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          onChange: e => {\n            setlistaRevisionSelect(listaRevision.find(x => x.label === e.label));\n            setlistaRevisionSet(e);\n          },\n          options: listaRevision,\n          id: \"revision\",\n          classNamePrefix: \"select2-selection\",\n          placeholder: t(\"Select\"),\n          value: listaRevisionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }, this), listaRevisionSelect == undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-error-parrafo\",\n          children: t(\"Required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"preapproval\",\n          children: t(\"Pre Approved\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"preapproval\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setpreapprovalSwitch(!preapprovalSwitch);\n            },\n            checked: preapprovalSwitch !== null && preapprovalSwitch !== void 0 ? preapprovalSwitch : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"relatedPart\",\n          children: t(\"Related Part\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"relatedPart\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setrelatedPartSwitch(!relatedPartSwitch);\n            },\n            checked: relatedPartSwitch !== null && relatedPartSwitch !== void 0 ? relatedPartSwitch : false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"economicGroupName\",\n          children: t(\"Economic Group Name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          id: \"economicGroupName\",\n          name: \"economicGroupName\",\n          onChange: e => {\n            seteconomicGroupSelect(gruposEconomicos.find(x => x.label === e.label));\n            handleDropdownChange('economicGroupName', e);\n          },\n          options: gruposEconomicos,\n          classNamePrefix: \"select2-selection\",\n          isDisabled: true,\n          value: economicGroupSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"economicGroupNumber\",\n            children: t(\"Economic Group Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"economicGroupNumber\",\n            type: \"text\",\n            disabled: true,\n            id: \"economicGroupNumber\",\n            value: economicGroupSelect != undefined ? economicGroupSelect.value : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"country\",\n          children: t(\"Country Class\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          id: \"country\",\n          name: \"country\",\n          onChange: e => {\n            setCountrySelect(paises.find(x => x.label === e.label));\n            handleDropdownChange('country', e);\n          },\n          placeholder: t(\"Select\"),\n          options: paises,\n          classNamePrefix: \"select2-selection\",\n          value: countrySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this), countrySelect == undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-error-parrafo\",\n          children: t(\"Required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"riskClassification\",\n            children: t(\"Risk Assesment\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"riskClassification\",\n            type: \"text\",\n            readOnly: true,\n            id: \"riskClassification\",\n            value: datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"activityCompany\",\n          children: t(\"Company Activity\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          name: \"activityCompany\",\n          onChange: e => {\n            setActividadEmpresaSelect(actividadEmpresa.find(x => x.label === e.label));\n            setActividadEmpresaSet(e);\n          },\n          placeholder: t(\"Selectcompanyactivity\"),\n          options: actividadEmpresa,\n          classNamePrefix: \"select2-selection\",\n          value: actividadEmpresaSelect,\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"minimumProvisionSIB\",\n            children: t(\"SIB Minimum Provision\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"minimumProvisionSIB\",\n            type: \"text\",\n            id: \"minimumProvisionSIB\",\n            pattern: \"^[0-9,.]*$\",\n            onKeyUp: e => {\n              let x = currencyData.getRealValue(e.target.value);\n              e.target.value = currencyData.format(x);\n            },\n            value: currencyData.format(minimumProvisionSIB !== null && minimumProvisionSIB !== void 0 ? minimumProvisionSIB : 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"9\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"accountExecutive\",\n          children: t(\"Account Executive\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"accountExecutive\",\n          type: \"text\",\n          id: \"accountExecutive\",\n          value: accountExecutive,\n          validate: {\n            required: {\n              value: true,\n              errorMessage: t(\"Required Field\")\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"flow\",\n            children: t(\"Flow Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"flow\",\n            type: \"select\",\n            id: \"flow\",\n            value: flow,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Urgente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"responsibleUnit\",\n            children: t(\"Responsible Unit\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"responsibleUnit\",\n            type: \"text\",\n            id: \"responsibleUnit\",\n            value: responsibleUnit,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: t(\"Required Field\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"countryRisk\",\n          children: t(\"Country Risk\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          required: true,\n          onChange: e => {\n            setCountryRiskSelect(paises.find(x => x.label === e.label));\n            handleDropdownChange('countryRisk', e);\n          },\n          defaultValue: paisesRiesgo.label,\n          placeholder: t(\"Selectacountry\"),\n          options: paisesRiesgo,\n          classNamePrefix: \"select2-selection\",\n          value: countryRiskSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 21\n        }, this), countryRiskSelect == undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-error-parrafo\",\n          children: t(\"Required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"requestDate\",\n          children: t(\"Application Date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this), fechaSet && /*#__PURE__*/_jsxDEV(Flatpickr, {\n          name: \"requestDate\",\n          id: \"requestDate\",\n          className: \"form-control d-block\",\n          placeholder: OPTs.FORMAT_DATE_SHOW,\n          options: {\n            dateFormat: OPTs.FORMAT_DATE,\n            defaultDate: fechaSet //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n          },\n          onChange: (selectedDates, dateStr, instance) => {\n            setfechaSet(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n          } // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"lastRequestDate\",\n          children: t(\"Last Application Date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }, this), fechaSet2 && /*#__PURE__*/_jsxDEV(Flatpickr, {\n          name: \"lastRequestDate\",\n          id: \"lastRequestDate\",\n          className: \"form-control d-block\",\n          placeholder: OPTs.FORMAT_DATE_SHOW,\n          options: {\n            dateFormat: OPTs.FORMAT_DATE,\n            defaultDate: fechaSet2 //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n          },\n          onChange: (selectedDates, dateStr, instance) => {\n            setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n          } // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"nextRevisionDate\",\n          children: t(\"Next Revision Date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }, this), fechaSet3 && /*#__PURE__*/_jsxDEV(Flatpickr, {\n          name: \"nextRevisionDate\",\n          id: \"nextRevisionDate\",\n          className: \"form-control d-block\",\n          placeholder: OPTs.FORMAT_DATE_SHOW,\n          options: {\n            dateFormat: OPTs.FORMAT_DATE,\n            defaultDate: fechaSet3 //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n          },\n          onChange: (selectedDates, dateStr, instance) => {\n            setfechaSet3(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n          } // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"proposedExpirationDate\",\n          children: t(\"Expiration Date\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 21\n        }, this), fechaSet4 && /*#__PURE__*/_jsxDEV(Flatpickr, {\n          name: \"proposedExpirationDate\",\n          id: \"proposedExpirationDate\",\n          className: \"form-control d-block\",\n          placeholder: OPTs.FORMAT_DATE_SHOW,\n          options: {\n            dateFormat: OPTs.FORMAT_DATE,\n            defaultDate: fechaSet4 //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n          },\n          onChange: (selectedDates, dateStr, instance) => {\n            setfechaSet4(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n          } // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 9\n  }, this);\n}, \"OwnOQyBi7KhtkF6f69/pPLCSfxg=\", false, function () {\n  return [useLocation, useHistory, useTranslation, React.useImperativeHandle];\n}));\n_c4 = DatosGeneralesPropuesta;\nDatosGeneralesPropuesta.propTypes = {\n  values: PropTypes.object\n};\nDatosGeneralesPropuesta.defaultProps = {\n  values: {}\n};\nexport default DatosGeneralesPropuesta;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"DatosGeneralesPropuesta$React.forwardRef\");\n$RefreshReg$(_c4, \"DatosGeneralesPropuesta\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/DatosGenerales.js"],"names":["React","useState","useEffect","useContext","PropTypes","Select","Row","Col","Label","moment","AvForm","AvGroup","AvField","AvFeedback","BackendServices","CoreServices","Switch","useLocation","useHistory","translationHelpers","Flatpickr","useTranslation","url","Currency","OPTs","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","DatosGeneralesPropuesta","forwardRef","props","ref","currencyData","location","history","fechaSet","setfechaSet","fechaSet2","setfechaSet2","fechaSet3","setfechaSet3","fechaSet4","setfechaSet4","CambioDatos","setCambioDatos","locationData","setLocationData","data","context","setcontext","formValid","setFormValid","gruposEconomicos","setGruposEconomicos","actividadEmpresa","setActividadEmpresa","actividadEmpresaSet","setActividadEmpresaSet","actividadEmpresaSelect","setActividadEmpresaSelect","undefined","paises","setPais","paisesRiesgo","setPaisRiesgo","listaRevisionSet","setlistaRevisionSet","listaRevision","setlistaRevision","datosIGR","setdatosIGR","datosAmbientales","setdatosAmbientales","listaRevisionSelect","setlistaRevisionSelect","listaRevisionRequerido","setlistaRevisionRequerido","preapprovalSwitch","setpreapprovalSwitch","relatedPartSwitch","setrelatedPartSwitch","transactId","setTransactId","customerNumber","setCustomerNumber","revisionType","setRevisionType","preapproval","setPreapproval","economicGroupSelect","seteconomicGroupSelect","economicGroup","setEconomicGroup","country","setCountry","countrySelect","setCountrySelect","activityCompany","setActivityCompany","riskClassification","setRiskClassification","minimumProvisionSIB","setMinimunProvisionSIB","relatedPart","setRelatedPart","accountExecutive","setAccountExecutive","approvalLevel","setApprovalLevel","responsibleUnit","setResponsibleUnit","countryRisk","setCountryRisk","dataReturn","setdataReturn","countryRiskSelect","setCountryRiskSelect","datosDeudorPrincipal","setdatosDeudorPrincipal","requestDate","setRequestDate","lastRequestDate","setLastRequestDate","proposedExpirationDate","setProposedExpirationDate","nextRevisionDate","setNextRevisionDate","dataRequest","setdataRequest","flow","setFlow","t","i18n","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","dataSession","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadListCountry","loadListGroupEconomic","loadActivityEconomic","loadDataRisk","backendServices","consultGeneralDataPropCred","then","requestId","loadDataGeneral","updateDefaults","values","cargarCatalogos","defaultVal","revision","find","x","label","toUpperCase","err","customerId","format","add","api","getPaisesCatalogo","response","json","Records","map","item","value","catch","console","log","getActividadEconomicaCatalogo","i","label2","getGrupoEconomicoCatalogo","retrieveRevisionType","apiBack","consultPrincipalDebtor","resp","consultGeneralDataIGR","name","economicActivity","code","error","consultEnvironmentalAspectsIGR","environmentalAspectsDTO","handleSubmit","event","errors","preventDefault","status","Number","getRealValue","Object","assign","economicGroupName","dataGlobal","handleDropdownChange","check","e","tecla","all","keyCode","which","title","customerNumberT24","riskPreClassification","target","required","errorMessage","FORMAT_DATE_SHOW","dateFormat","FORMAT_DATE","defaultDate","selectedDates","dateStr","instance","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\nimport Select from \"react-select\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\nimport moment from \"moment\";\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport { BackendServices, CoreServices } from \"../../../../services\";\r\nimport Switch from \"react-switch\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { translationHelpers } from \"../../../../helpers\";\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport { useTranslation } from \"react-i18next/\";\r\nimport * as url from \"../../../../helpers/url_helper\"\r\nimport Currency from \"../../../../helpers/currency\";\r\nimport * as OPTs from \"../../../../helpers/options_helper\"\r\nconst Offsymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            No\r\n        </div>\r\n    );\r\n};\r\nconst OnSymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            Si\r\n        </div>\r\n    );\r\n};\r\nconst DatosGeneralesPropuesta = React.forwardRef((props, ref) => {\r\n    const currencyData = new Currency();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [fechaSet, setfechaSet] = useState(null);\r\n    const [fechaSet2, setfechaSet2] = useState(null);\r\n    const [fechaSet3, setfechaSet3] = useState(null);\r\n    const [fechaSet4, setfechaSet4] = useState(null);\r\n    const [CambioDatos, setCambioDatos] = useState(false);\r\n\r\n    const [locationData, setLocationData] = useState(location.data);\r\n    const [context, setcontext] = useState(location.data);\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n    const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n    const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\r\n    const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\r\n    const [paises, setPais] = useState([]);\r\n    const [paisesRiesgo, setPaisRiesgo] = useState([]);\r\n    const [listaRevisionSet, setlistaRevisionSet] = useState(null);\r\n    const [listaRevision, setlistaRevision] = useState(null);\r\n    const [datosIGR, setdatosIGR] = useState(null);\r\n    const [datosAmbientales, setdatosAmbientales] = useState(null);\r\n    const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\r\n    const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\r\n    const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\r\n    const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\r\n    const [transactId, setTransactId] = useState('');\r\n    const [customerNumber, setCustomerNumber] = useState('');\r\n    const [revisionType, setRevisionType] = useState('');\r\n    const [preapproval, setPreapproval] = useState(false);\r\n    const [economicGroupSelect, seteconomicGroupSelect] = useState(undefined);\r\n    const [economicGroup, setEconomicGroup] = useState(null);\r\n    const [country, setCountry] = useState(null);\r\n    const [countrySelect, setCountrySelect] = useState(undefined);\r\n    const [activityCompany, setActivityCompany] = useState('');\r\n    const [riskClassification, setRiskClassification] = useState('');\r\n    const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\r\n    const [relatedPart, setRelatedPart] = useState(false);\r\n    const [accountExecutive, setAccountExecutive] = useState('');\r\n    const [approvalLevel, setApprovalLevel] = useState('');\r\n    const [responsibleUnit, setResponsibleUnit] = useState('');\r\n    const [countryRisk, setCountryRisk] = useState(null);\r\n    const [dataReturn, setdataReturn] = useState(null);\r\n    const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\r\n    const [datosDeudorPrincipal, setdatosDeudorPrincipal] = useState(null);\r\n    const [requestDate, setRequestDate] = useState('');\r\n    const [lastRequestDate, setLastRequestDate] = useState('');\r\n    const [proposedExpirationDate, setProposedExpirationDate] = useState('');\r\n    const [nextRevisionDate, setNextRevisionDate] = useState('');\r\n    const [dataRequest, setdataRequest] = useState('');\r\n    const [flow, setFlow] = useState('');\r\n    //const [t, c] = translationHelpers('commercial_credit', 'common');    \r\n    const { t, i18n } = useTranslation();\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n        validateForm: () => {\r\n            const form = document.getElementById('frmDatosGeneralesPropuesta');\r\n            form.requestSubmit();\r\n        },\r\n        getFormValidation: () => {\r\n            return formValid;\r\n        },\r\n        dataReturn\r\n    }));\r\n    useEffect(() => {\r\n        let dataSession;\r\n        if (location.data !== null && location.data !== undefined) {\r\n            if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n                //location.data.transactionId = 0;\r\n                //checkAndCreateProcedure(location.data);\r\n                history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n                sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n                setLocationData(location.data);\r\n                dataSession = location.data;\r\n            }\r\n        }\r\n        else {\r\n            //chequeamos si tenemos guardado en session\r\n            var result = sessionStorage.getItem('locationData');\r\n            if (result !== undefined && result !== null) {\r\n                result = JSON.parse(result);\r\n                setLocationData(result);\r\n                dataSession = result;\r\n            }\r\n        }\r\n        loadListCountry();\r\n        loadListGroupEconomic();\r\n        loadActivityEconomic();\r\n        loadDataRisk();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const backendServices = new BackendServices();\r\n        backendServices.consultGeneralDataPropCred(location?.data?.transactionId ?? locationData?.transactionId ?? 0)\r\n            .then((data) => {\r\n                if (data !== undefined) {\r\n                    setdataRequest(data[0].requestId);\r\n                }\r\n            });\r\n    }, [props]);\r\n\r\n\r\n    useEffect(() => {\r\n        let dataSession;\r\n        if (location.data !== null && location.data !== undefined) {\r\n            if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n                //location.data.transactionId = 0;\r\n                //checkAndCreateProcedure(location.data);\r\n                history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n                sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n                setLocationData(location.data);\r\n                dataSession = location.data;\r\n            }\r\n        }\r\n        else {\r\n            //chequeamos si tenemos guardado en session\r\n            var result = sessionStorage.getItem('locationData');\r\n            if (result !== undefined && result !== null) {\r\n                result = JSON.parse(result);\r\n                setLocationData(result);\r\n                dataSession = result;\r\n            }\r\n        }\r\n\r\n        if (gruposEconomicos?.length > 0 && actividadEmpresa?.length > 0)\r\n            loadDataGeneral(dataSession);\r\n\r\n    }, [gruposEconomicos, actividadEmpresa]);\r\n\r\n    useEffect(() => {\r\n\r\n        let dataSession;\r\n        if (location.data !== null && location.data !== undefined) {\r\n            if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n                //location.data.transactionId = 0;\r\n                //checkAndCreateProcedure(location.data);\r\n                history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n                sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n                setLocationData(location.data);\r\n                dataSession = location.data;\r\n            }\r\n        }\r\n        else {\r\n            //chequeamos si tenemos guardado en session\r\n            var result = sessionStorage.getItem('locationData');\r\n            if (result !== undefined && result !== null) {\r\n                result = JSON.parse(result);\r\n                setLocationData(result);\r\n                dataSession = result;\r\n            }\r\n        }\r\n        // if (props?.dataGlobal?.requestId != null&&props?.values!={}) {\r\n        // setfechaSet(() => { return null })\r\n        // setfechaSet2(() => { return null })\r\n        // setfechaSet3(() => { return null })\r\n        // setfechaSet4(() => { return null })\r\n        updateDefaults(dataSession);\r\n        // }\r\n    }, [props.values]);\r\n    useEffect(() => {\r\n        cargarCatalogos()\r\n    }, [paises, gruposEconomicos, actividadEmpresa]);\r\n    function cargarCatalogos() {\r\n        try {\r\n            var defaultVal = null;\r\n            if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\r\n                defaultVal = listaRevision.find(x => (x.label).toUpperCase() === (props.values.revision).toUpperCase());\r\n                if (defaultVal !== undefined) {\r\n                    setlistaRevisionSelect(defaultVal);\r\n                    setlistaRevisionSet(defaultVal)\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\r\n                defaultVal = paises.find(x => (x.label).toUpperCase() === (props.values.country).toUpperCase());\r\n                if (defaultVal !== undefined) {\r\n                    setCountrySelect(defaultVal);\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\r\n                defaultVal = paises.find(x => (x.label).toUpperCase() === (props.values.countryRisk).toUpperCase());\r\n                if (defaultVal !== undefined) {\r\n                    setCountryRiskSelect(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n        if (props.values.transactId != undefined) setCambioDatos(() => { return true });\r\n    }\r\n    function updateDefaults(context) {\r\n        setTransactId(props.values.transactId ?? context.transactionId);\r\n        setCustomerNumber(props.values.customerNumber || context.customerId);\r\n        setRevisionType(props.values.revisionType || 'Bimensual');\r\n        setPreapproval(props.values.preapproval || false);\r\n        setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\r\n        setRelatedPart(props.values.relatedPart || false);\r\n        setAccountExecutive(props.values.accountExecutive || '');\r\n        setApprovalLevel(props.values.approvalLevel || '');\r\n        setResponsibleUnit(props.values.responsibleUnit || '');\r\n        setRequestDate(props.values.requestDate || '');\r\n        setLastRequestDate(props.values.lastRequestDate || '');\r\n        setNextRevisionDate(props.values.nextRevisionDate || '');\r\n        setProposedExpirationDate(props.values.proposedExpirationDate || '');\r\n        setFlow(props.values.flow || '');\r\n        setfechaSet(props.values.requestDate == \"\" || props.values.requestDate == null || props.values.requestDate == undefined ? moment().format(\"DD-MM-YYYY\") : moment(props.values.requestDate).format(\"DD-MM-YYYY\"))\r\n        setfechaSet2(props.values.lastRequestDate == \"\" || props.values.lastRequestDate == null || props.values.lastRequestDate == undefined ? moment().format(\"DD-MM-YYYY\") : moment(props.values.lastRequestDate).format(\"DD-MM-YYYY\"))\r\n        setfechaSet3(props.values.nextRevisionDate == \"\" || props.values.nextRevisionDate == null || props.values.nextRevisionDate == undefined ? moment().add(1, 'years').format(\"DD-MM-YYYY\") : moment(props.values.nextRevisionDate).format(\"DD-MM-YYYY\"))\r\n        setfechaSet4(props.values.proposedExpirationDate == \"\" || props.values.proposedExpirationDate == null || props.values.proposedExpirationDate == undefined ? moment().add(6, 'months').format(\"DD-MM-YYYY\") : moment(props.values.proposedExpirationDate).format(\"DD-MM-YYYY\"))\r\n        // loadDataGeneral(context);\r\n        setrelatedPartSwitch(props.values.relatedPart)\r\n        setpreapprovalSwitch(props.values.preapproval)\r\n\r\n\r\n    }\r\n    // cargarListaPaises\r\n    async function loadListCountry() {\r\n        const api = new CoreServices();\r\n        // getPaisesCatalogo\r\n        await api.getPaisesCatalogo().then(response => {\r\n            if (response === null) { return; }\r\n            const json = response.Records ? response.Records.map(item => ({\r\n                label: item[\"Description\"],\r\n                value: item[\"Code\"]\r\n            })) : [];\r\n            setPais(json);\r\n            setPaisRiesgo(json);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n    // cargarActividadEconomica\r\n    function loadActivityEconomic() {\r\n        const api = new CoreServices();\r\n        // getActividadEconomicaCatalogo\r\n        api.getActividadEconomicaCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    //json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                    json.push({ label2: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"], label: response.Records[i][\"Code\"] + \" - \"+ response.Records[i][\"Description\"] })\r\n                }\r\n                setActividadEmpresa(json);\r\n            });\r\n    }\r\n    // cargarListaGrupoEconomico\r\n    function loadListGroupEconomic() {\r\n        const api = new CoreServices();\r\n        // getGrupoEconomicoCatalogo\r\n        api.getGrupoEconomicoCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                setGruposEconomicos(json);\r\n            });\r\n    }\r\n    // cargarListaRevision\r\n    function loadDataRisk() {\r\n        const api = new BackendServices();\r\n        api.retrieveRevisionType()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.length; i++) {\r\n                    json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n                }\r\n                setlistaRevision(json);\r\n            });\r\n    }\r\n    // Cargar datos generales\r\n    function loadDataGeneral(locationData) {\r\n\r\n        const apiBack = new BackendServices();\r\n        // consultarDeudorPrincipal\r\n        apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\r\n            if (resp != undefined) {\r\n                setdatosDeudorPrincipal(resp);\r\n            }\r\n        })\r\n        apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\r\n            setdatosIGR(resp);\r\n            try {\r\n                var defaultVal = null;\r\n                // seteconomicGroupSelect(undefined);\r\n\r\n                if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\r\n                    defaultVal = gruposEconomicos.find(x => (x.label).toUpperCase() === (resp.economicGroup.name).toUpperCase());\r\n                    if (defaultVal !== undefined) {\r\n                        seteconomicGroupSelect(defaultVal);\r\n                    }\r\n                }\r\n                console.log(\"setActividadEmpresaSet\",resp.economicActivity,actividadEmpresa);\r\n                \r\n                setActividadEmpresaSet(resp.economicActivity);\r\n                if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\r\n                    defaultVal = actividadEmpresa.find(x => (x.code).toUpperCase() === (resp.economicActivity.code).toUpperCase());\r\n                    if (defaultVal !== undefined) {\r\n                        setActividadEmpresaSelect(defaultVal);\r\n                    }\r\n                }\r\n\r\n            }\r\n            catch (err) { }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n        apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\r\n            setdatosAmbientales(resp.environmentalAspectsDTO)\r\n        }).catch((error) => {\r\n\r\n        });\r\n    }\r\n    function handleSubmit(event, errors, values) {\r\n        event.preventDefault();\r\n        // if (errors.length > 0) {\r\n        //     values.status = true;\r\n        // }\r\n        // if (event.target.id !== 'DatosGeneralesPropuesta') {\r\n        //     return;\r\n        // }\r\n        if (listaRevisionSelect == undefined) {\r\n            setFormValid(false);\r\n            values.status = true;\r\n            return\r\n        }\r\n        if (countrySelect == undefined) {\r\n            setFormValid(false);\r\n            values.status = true;\r\n            return\r\n        }\r\n        if (countryRiskSelect == undefined) {\r\n            setFormValid(false);\r\n            values.status = true;\r\n            return\r\n        }\r\n        values.minimumProvisionSIB = Number(currencyData.getRealValue(values.minimumProvisionSIB));\r\n        values.requestDate = moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet : (moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n        values.lastRequestDate = moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet2 : (moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n        values.nextRevisionDate = moment(fechaSet3, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet3 : (moment(fechaSet3, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n        values.proposedExpirationDate = moment(fechaSet4, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet4 : (moment(fechaSet4, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n        const data = Object.assign({\r\n            country: countrySelect != undefined ? countrySelect.label : '',\r\n            countryRisk: countryRiskSelect != undefined ? countryRiskSelect.label : '',\r\n            economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\r\n            activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.label : '',\r\n            revision: listaRevisionSet ? listaRevisionSet.label : '',\r\n            preapproval: preapprovalSwitch,\r\n            relatedPart: relatedPartSwitch,\r\n            transactId: Number(locationData.transactionId),\r\n            approvalLevel: \"\",\r\n            requestId: props.dataGlobal != null ? props.dataGlobal.requestId : \"\"\r\n        }, values);\r\n        setdataReturn(data)\r\n        setFormValid(true);\r\n        // props.saveDataCreditProposal(true,props.activeTab);\r\n\r\n    }\r\n    function handleDropdownChange(name, event) {\r\n        switch (name) {\r\n            case 'country':\r\n                setCountry(event);\r\n                break;\r\n            case 'countryRisk':\r\n                setCountryRisk(event);\r\n                break;\r\n            case 'economicGroupName':\r\n                setEconomicGroup(event);\r\n                break;\r\n            case 'activityCompany':\r\n                setActivityCompany(event);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    function check(e) {\r\n        let tecla = (document.all) ? e.keyCode : e.which;\r\n        //Tecla de retroceso para borrar, siempre la permite\r\n        if (tecla === 45) {\r\n            e.preventDefault();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <AvForm id=\"frmDatosGeneralesPropuesta\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n            <h5>{props.title}</h5>\r\n            <p className=\"card-title-desc\"></p>\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"transactId\">{t(\"RequestNumber\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"requestId\"\r\n                            type=\"text\"\r\n                            id=\"requestId\"\r\n                            value={dataRequest}\r\n                            readOnly />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"customerNumber\">{t(\"Customer ID\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"customerNumber\"\r\n                            min={0}\r\n                            type=\"number\"\r\n                            onKeyPress={(e) => { return check(e) }}\r\n                            readOnly\r\n                            id=\"customerNumber\"\r\n                            value={datosDeudorPrincipal != null && datosDeudorPrincipal != \"\" && datosDeudorPrincipal != undefined ? datosDeudorPrincipal.customerNumberT24 : \"0\"}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"4\">\r\n                    <Label htmlFor=\"revisionType\">{t(\"Revision Type\")}</Label>\r\n                    <Select noOptionsMessage={() => \"\"}\r\n                        onChange={(e) => { setlistaRevisionSelect(listaRevision.find(x => x.label === e.label)); setlistaRevisionSet(e); }}\r\n                        options={listaRevision}\r\n                        id=\"revision\"\r\n                        classNamePrefix=\"select2-selection\"\r\n                        placeholder={t(\"Select\")}\r\n                        value={listaRevisionSelect}\r\n                    />\r\n                    {listaRevisionSelect == undefined ?\r\n                        <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n                        : null}\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"2\">\r\n                    <Label htmlFor=\"preapproval\">{t(\"Pre Approved\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"preapproval\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setpreapprovalSwitch(!preapprovalSwitch)\r\n                            }}\r\n                            checked={preapprovalSwitch ?? false}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"2\">\r\n                    <Label htmlFor=\"relatedPart\">{t(\"Related Part\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"relatedPart\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setrelatedPartSwitch(!relatedPartSwitch)\r\n                            }}\r\n                            checked={relatedPartSwitch ?? false}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"economicGroupName\">{t(\"Economic Group Name\")}</Label>\r\n                    <Select noOptionsMessage={() => \"\"}\r\n                        id=\"economicGroupName\"\r\n                        name=\"economicGroupName\"\r\n                        onChange={(e) => { seteconomicGroupSelect(gruposEconomicos.find(x => x.label === e.label)); handleDropdownChange('economicGroupName', e); }}\r\n                        options={gruposEconomicos}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        isDisabled={true}\r\n                        value={economicGroupSelect} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"economicGroupNumber\">{t(\"Economic Group Number\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"economicGroupNumber\"\r\n                            type=\"text\"\r\n                            disabled={true}\r\n                            id=\"economicGroupNumber\"\r\n                            value={economicGroupSelect != undefined ? economicGroupSelect.value : ''}\r\n\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"country\">{t(\"Country Class\")}</Label>\r\n                    <Select noOptionsMessage={() => \"\"}\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        onChange={(e) => { setCountrySelect(paises.find(x => x.label === e.label)); handleDropdownChange('country', e) }}\r\n                        placeholder={t(\"Select\")}\r\n                        options={paises}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countrySelect}\r\n                    />\r\n                    {countrySelect == undefined ?\r\n                        <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n                        : null}\r\n\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"riskClassification\">{t(\"Risk Assesment\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"riskClassification\"\r\n                            type=\"text\"\r\n                            readOnly\r\n                            id=\"riskClassification\"\r\n                            value={datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"}\r\n                        />\r\n\r\n\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"activityCompany\">{t(\"Company Activity\")}</Label>\r\n                    <Select noOptionsMessage={() => \"\"}\r\n                        name=\"activityCompany\"\r\n                        onChange={(e) => { setActividadEmpresaSelect(actividadEmpresa.find(x => x.label === e.label)); setActividadEmpresaSet(e); }}\r\n                        placeholder={t(\"Selectcompanyactivity\")}\r\n                        options={actividadEmpresa}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={actividadEmpresaSelect}\r\n                        isDisabled={true} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"minimumProvisionSIB\">{t(\"SIB Minimum Provision\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"minimumProvisionSIB\"\r\n                            type=\"text\"\r\n                            id=\"minimumProvisionSIB\"\r\n                            pattern=\"^[0-9,.]*$\"\r\n                            onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                            value={currencyData.format(minimumProvisionSIB ?? 0)} />\r\n                    </AvGroup>\r\n                </Col>\r\n                {/* <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"approvalLevel\">{t(\"Approval Level\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"approvalLevel\"\r\n                            type=\"select\"\r\n                            id=\"approvalLevel\"\r\n                            value={approvalLevel}>\r\n                            <option value=\"1\">Nivel 1</option>\r\n                            <option value=\"2\">Nivel 2</option>\r\n                            <option value=\"3\">Nivel 3</option>\r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col> */}\r\n\r\n                <Col md=\"9\">\r\n\r\n                    <Label htmlFor=\"accountExecutive\">{t(\"Account Executive\")}</Label>\r\n                    <AvField\r\n                        className=\"form-control\"\r\n                        name=\"accountExecutive\"\r\n                        type=\"text\"\r\n                        id=\"accountExecutive\"\r\n                        value={accountExecutive}\r\n                        validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        }} />\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"flow\">{t(\"Flow Type\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"flow\"\r\n                            type=\"select\"\r\n                            id=\"flow\"\r\n                            value={flow}>\r\n                            {/* <option value=\"1\">Muy Urgente</option>\r\n                            <option value=\"2\">Urgencia Moderada</option>\r\n                            <option value=\"3\">Normal</option>\r\n                            <option value=\"4\">Importante</option>\r\n                            <option value=\"5\">Baja Urgencia</option>\r\n                            <option value=\"6\"> Sin Urgencia</option> */}\r\n                            <option value=\"1\">Normal</option>\r\n                            <option value=\"2\">Urgente</option> \r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"responsibleUnit\">{t(\"Responsible Unit\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"responsibleUnit\"\r\n                            type=\"text\"\r\n                            id=\"responsibleUnit\"\r\n                            value={responsibleUnit}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: t(\"Required Field\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"countryRisk\">{t(\"Country Risk\")}</Label>\r\n                    <Select noOptionsMessage={() => \"\"} required\r\n                        onChange={(e) => { setCountryRiskSelect(paises.find(x => x.label === e.label)); handleDropdownChange('countryRisk', e) }}\r\n                        defaultValue={paisesRiesgo.label}\r\n                        placeholder={t(\"Selectacountry\")}\r\n                        options={paisesRiesgo}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countryRiskSelect} />\r\n                    {countryRiskSelect == undefined ?\r\n                        <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n                        : null}\r\n                </Col>\r\n\r\n            </Row>\r\n            {/* {CambioDatos ? */}\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <Label htmlFor=\"requestDate\">{t(\"Application Date\")}</Label>\r\n\r\n                    {fechaSet && (<Flatpickr\r\n                        name=\"requestDate\"\r\n                        id=\"requestDate\"\r\n                        className=\"form-control d-block\"\r\n                        placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                        options={{\r\n                            dateFormat: OPTs.FORMAT_DATE,\r\n                            defaultDate: fechaSet,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                        }}\r\n                        onChange={(selectedDates, dateStr, instance) => {\r\n                            setfechaSet(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"))\r\n                        }}\r\n                    // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n                    />)}\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <Label htmlFor=\"lastRequestDate\">{t(\"Last Application Date\")}</Label>\r\n\r\n                    {fechaSet2 && (<Flatpickr\r\n                        name=\"lastRequestDate\"\r\n                        id=\"lastRequestDate\"\r\n                        className=\"form-control d-block\"\r\n                        placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                        options={{\r\n                            dateFormat: OPTs.FORMAT_DATE,\r\n                            defaultDate: fechaSet2,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                        }}\r\n                        onChange={(selectedDates, dateStr, instance) => {\r\n                            setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"))\r\n                        }}\r\n                    // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n                    />)}\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <Label htmlFor=\"nextRevisionDate\">{t(\"Next Revision Date\")}</Label>\r\n\r\n                    {fechaSet3 && (<Flatpickr\r\n                        name=\"nextRevisionDate\"\r\n                        id=\"nextRevisionDate\"\r\n                        className=\"form-control d-block\"\r\n                        placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                        options={{\r\n                            dateFormat: OPTs.FORMAT_DATE,\r\n                            defaultDate: fechaSet3,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                        }}\r\n                        onChange={(selectedDates, dateStr, instance) => {\r\n                            setfechaSet3(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"))\r\n                        }}\r\n                    // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n                    />)}\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <Label htmlFor=\"proposedExpirationDate\">{t(\"Expiration Date\")}</Label>\r\n\r\n                    {fechaSet4 && (<Flatpickr\r\n                        name=\"proposedExpirationDate\"\r\n                        id=\"proposedExpirationDate\"\r\n                        className=\"form-control d-block\"\r\n                        placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                        options={{\r\n                            dateFormat: OPTs.FORMAT_DATE,\r\n                            defaultDate: fechaSet4,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                        }}\r\n                        onChange={(selectedDates, dateStr, instance) => {\r\n                            setfechaSet4(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"))\r\n                        }}\r\n                    // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n                    />)}\r\n                </Col>\r\n            </Row>\r\n        </AvForm>\r\n    );\r\n});\r\n\r\n\r\nDatosGeneralesPropuesta.propTypes = {\r\n    values: PropTypes.object\r\n};\r\n\r\nDatosGeneralesPropuesta.defaultProps = {\r\n    values: {}\r\n};\r\n\r\n\r\nexport default DatosGeneralesPropuesta;\r\n"]},"metadata":{},"sourceType":"module"}