{"ast":null,"code":"import _defineProperty from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useTranslation}from'react-i18next';import{Card,Row,Col,Form,Container,Button}from\"react-bootstrap\";import Select from'react-select';import FormContainerQuoter from'./FormContainerQuoter';import FormQuoterTypeNatural from'./FormQuoterTypeNatural';import FormDataQuoter from'./FormDataQuoter';import FormCommonFields from'./FormCommonFields';import TableResultQuoter from'./TableResultQuoter';import{AvForm}from'availity-reactstrap-validation';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var FormQuoterScreen=function FormQuoterScreen(){// hooks\nvar _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;// custom hooks\nvar _useState=useState({}),_useState2=_slicedToArray(_useState,2),form=_useState2[0],setForm=_useState2[1];// handlers\nvar getFormData=function getFormData(data){console.group(\"Form data\");console.info(data);console.groupEnd();};var testHandleSubmit=function testHandleSubmit(){console.log(\"Working!\",form);};var handleChange=function handleChange(evt){console.log(\"Working lifting state up\");console.log(\"evt:\",evt);setForm(_objectSpread(_objectSpread({},form),{},_defineProperty({},evt.target.name,evt.target.value)));};var handleKeyOnlyNum=function handleKeyOnlyNum(evt){var keyPress=evt.key;var regexOnlyNum=/^[0-9,.]+$/;if(!regexOnlyNum.test(keyPress))// return;\nconsole.log('here!',evt.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormContainerQuoter,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:t(\"ClientData\")}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormCommonFields,{onChange:handleChange,form:form})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormQuoterTypeNatural,{onChange:handleChange,form:form})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(FormDataQuoter,{onChange:handleChange,form:form})}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{className:\"d-grid mt-5\",children:/*#__PURE__*/_jsx(Button,{size:\"lg\",className:\"float-end\",type:\"submit\",onClick:testHandleSubmit,children:t(\"Calculate\")})})})]})})}),/*#__PURE__*/_jsx(TableResultQuoter,{})]});};export default FormQuoterScreen;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/FormQuoterScreen.js"],"names":["useState","useTranslation","Card","Row","Col","Form","Container","Button","Select","FormContainerQuoter","FormQuoterTypeNatural","FormDataQuoter","FormCommonFields","TableResultQuoter","AvForm","FormQuoterScreen","t","i18n","form","setForm","getFormData","data","console","group","info","groupEnd","testHandleSubmit","log","handleChange","evt","target","name","value","handleKeyOnlyNum","keyPress","key","regexOnlyNum","test"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Container,\r\n    Button\r\n} from \"react-bootstrap\";\r\nimport Select from 'react-select'\r\n\r\nimport FormContainerQuoter from './FormContainerQuoter'\r\nimport FormQuoterTypeNatural from './FormQuoterTypeNatural';\r\nimport FormDataQuoter from './FormDataQuoter';\r\nimport FormCommonFields from './FormCommonFields';\r\nimport TableResultQuoter from './TableResultQuoter';\r\nimport { AvForm } from 'availity-reactstrap-validation';\r\n\r\nconst FormQuoterScreen = () => {\r\n    // hooks\r\n    const { t, i18n } = useTranslation();\r\n    // custom hooks\r\n    const [form, setForm] = useState({})\r\n\r\n    // handlers\r\n    const getFormData = (data) => {\r\n        console.group(\"Form data\")\r\n        console.info(data)\r\n        console.groupEnd()\r\n    }\r\n\r\n    const testHandleSubmit = () => {\r\n        console.log(\"Working!\", form)\r\n    }\r\n\r\n    const handleChange = (evt) => {\r\n        console.log(\"Working lifting state up\");\r\n        console.log(\"evt:\", evt);\r\n        setForm({\r\n            ...form,\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const handleKeyOnlyNum = (evt) => {\r\n        const keyPress = evt.key;\r\n        const regexOnlyNum = /^[0-9,.]+$/\r\n\r\n        if (!regexOnlyNum.test(keyPress))\r\n            // return;\r\n            console.log('here!', evt.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormContainerQuoter>\r\n                <Card>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                            {t(\"ClientData\")}\r\n                        </Card.Title>\r\n                        {/* <AvForm onSubmit={testHandleSubmit}> */}\r\n                            <Row>\r\n                                <FormCommonFields\r\n                                    onChange={handleChange}\r\n                                    form={form}\r\n                                />\r\n                            </Row>\r\n                            <Row>\r\n                                <FormQuoterTypeNatural\r\n                                    onChange={handleChange}\r\n                                    form={form}\r\n                                />\r\n                            </Row>\r\n                            <Row>\r\n                                <FormDataQuoter\r\n                                    onChange={handleChange}\r\n                                    form={form}\r\n                                />\r\n                            </Row>\r\n                            <Row >\r\n                                <Col className='d-grid mt-5'>\r\n                                    <Button\r\n                                        size='lg'\r\n                                        className='float-end'\r\n                                        type='submit'\r\n                                        onClick={testHandleSubmit}\r\n                                    >\r\n                                        {t(\"Calculate\")}\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        {/* </AvForm> */}\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormContainerQuoter>\r\n            <TableResultQuoter />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormQuoterScreen"]},"metadata":{},"sourceType":"module"}