{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\InformeFinanciero\\\\ExchangeRisk.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { translationHelper } from '../../helpers';\nimport { Table, Card, CardBody, Row, Col } from \"reactstrap\";\nimport HeaderSections from '../Common/HeaderSections';\nimport AttachmentFileCore from '../Common/AttachmentFileCore';\nimport { AttachmentFileInputModel } from \"../../models/Common/AttachmentFileInputModel\";\nimport * as OPTs from \"../../helpers/options_helper\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as url from \"../../helpers/url_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExchangeRisk = props => {\n  _s();\n\n  var _location$data;\n\n  const t = translationHelper('financial_report');\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState((_location$data = location.data) !== null && _location$data !== void 0 ? _location$data : JSON.parse(sessionStorage.getItem('locationData')));\n  let dataSession;\n  useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        dataSession = location.data;\n        setLocationData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        dataSession = result;\n        setLocationData(result);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n      title: \"ExchangeRisk.Title\",\n      t: t\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(AttachmentFileCore, {\n          attachmentFileInputModel: new AttachmentFileInputModel(locationData.transactionId, OPTs.PROCESS_INFORMEFINANCIERO, OPTs.ACT_INFORMEFINANCIERO_1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExchangeRisk, \"+Ou9MJSqS6J7pWyWC+3mJRPlM+c=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = ExchangeRisk;\nExchangeRisk.propTypes = {};\nexport default ExchangeRisk;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExchangeRisk\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/InformeFinanciero/ExchangeRisk.js"],"names":["PropTypes","translationHelper","Table","Card","CardBody","Row","Col","HeaderSections","AttachmentFileCore","AttachmentFileInputModel","OPTs","React","useEffect","useState","useLocation","useHistory","url","ExchangeRisk","props","t","history","location","locationData","setLocationData","data","JSON","parse","sessionStorage","getItem","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","setItem","stringify","result","PROCESS_INFORMEFINANCIERO","ACT_INFORMEFINANCIERO_1","propTypes"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AAEA,SACEC,KADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,GAJF,EAKEC,GALF,QAMO,YANP;AAQA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,SAASC,wBAAT,QAAyC,8CAAzC;AACA,OAAO,KAAKC,IAAZ,MAAsB,8BAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,0BAArB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAE9B,QAAMC,CAAC,GAAGlB,iBAAiB,CAAC,kBAAD,CAA3B;AAEA,QAAMmB,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,mBAACQ,QAAQ,CAACG,IAAV,2DAAkBC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAX,CAAlB,CAAhD;AAEA,MAAIC,WAAJ;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAQ,CAACG,IAAT,KAAkB,IAAlB,IAA0BH,QAAQ,CAACG,IAAT,KAAkBM,SAAhD,EAA2D;AACzD,UAAIT,QAAQ,CAACG,IAAT,CAAcO,aAAd,KAAgCD,SAAhC,IAA6CT,QAAQ,CAACG,IAAT,CAAcO,aAAd,CAA4BC,MAA5B,IAAsC,CAAvF,EAA0F;AACxF;AACA;AACAZ,QAAAA,OAAO,CAACa,IAAR,CAAajB,GAAG,CAACkB,aAAjB;AACD,OAJD,MAKK;AACHP,QAAAA,cAAc,CAACQ,OAAf,CAAuB,cAAvB,EAAuCV,IAAI,CAACW,SAAL,CAAef,QAAQ,CAACG,IAAxB,CAAvC;AACAK,QAAAA,WAAW,GAAGR,QAAQ,CAACG,IAAvB;AACAD,QAAAA,eAAe,CAACF,QAAQ,CAACG,IAAV,CAAf;AACD;AACF,KAXD,MAYK;AACH;AACA,UAAIa,MAAM,GAAGV,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAb;;AACA,UAAIS,MAAM,KAAKP,SAAX,IAAwBO,MAAM,KAAK,IAAvC,EAA6C;AAC3CA,QAAAA,MAAM,GAAGZ,IAAI,CAACC,KAAL,CAAWW,MAAX,CAAT;AACAR,QAAAA,WAAW,GAAGQ,MAAd;AACAd,QAAAA,eAAe,CAACc,MAAD,CAAf;AACD;AACF;AAEF,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,oBAAtB;AAA2C,MAAA,CAAC,EAAElB;AAA9C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA,+BAEE,QAAC,kBAAD;AAAoB,UAAA,wBAAwB,EAAE,IAAIV,wBAAJ,CAA6Ba,YAAY,CAACS,aAA1C,EAAyDrB,IAAI,CAAC4B,yBAA9D,EAAyF5B,IAAI,CAAC6B,uBAA9F;AAA9C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAWD,CA9CD;;GAAMtB,Y;UAIYF,U,EACCD,W;;;KALbG,Y;AAgDNA,YAAY,CAACuB,SAAb,GAAyB,EAAzB;AAGA,eAAevB,YAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { translationHelper } from '../../helpers';\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\nimport HeaderSections from '../Common/HeaderSections';\r\nimport AttachmentFileCore from '../Common/AttachmentFileCore';\r\nimport { AttachmentFileInputModel } from \"../../models/Common/AttachmentFileInputModel\"\r\nimport * as OPTs from \"../../helpers/options_helper\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as url from \"../../helpers/url_helper\"\r\n\r\nconst ExchangeRisk = (props) => {\r\n\r\n  const t = translationHelper('financial_report');\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [locationData, setLocationData] = useState(location.data ?? JSON.parse(sessionStorage.getItem('locationData')));\r\n\r\n  let dataSession;\r\n  useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        dataSession = location.data\r\n        setLocationData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        dataSession = result\r\n        setLocationData(result);\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HeaderSections title=\"ExchangeRisk.Title\" t={t}></HeaderSections>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          {/* <AttachmentList preview={props.preview} editMode={true} /> */}\r\n          <AttachmentFileCore attachmentFileInputModel={new AttachmentFileInputModel(locationData.transactionId, OPTs.PROCESS_INFORMEFINANCIERO, OPTs.ACT_INFORMEFINANCIERO_1)} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nExchangeRisk.propTypes = {\r\n};\r\n\r\nexport default ExchangeRisk;\r\n"]},"metadata":{},"sourceType":"module"}