{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Calendar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { Button, Card, CardBody, Col, Modal, ModalBody, ModalHeader, Row } from \"reactstrap\";\nimport { AvField, AvForm } from \"availity-reactstrap-validation\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\";\nimport BootstrapTheme from \"@fullcalendar/bootstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { addNewEvent, deleteEvent, getCategories, getEvents, updateEvent } from \"../../store/actions\";\nimport DeleteModal from \"./DeleteModal\"; //css\n\nimport \"@fullcalendar/bootstrap/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calender = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    events,\n    categories,\n    onGetCategories,\n    onGetEvents\n  } = props;\n  const [modal, setModal] = useState(false);\n  const [deleteModal, setDeleteModal] = useState(false);\n  const [modalcategory, setModalcategory] = useState(false);\n  const [event, setEvent] = useState({});\n  const [selectedDay, setSelectedDay] = useState(0);\n  const [isEdit, setIsEdit] = useState(false);\n  useEffect(() => {\n    onGetCategories();\n    onGetEvents();\n    new Draggable(document.getElementById(\"external-events\"), {\n      itemSelector: \".external-event\"\n    });\n  }, [onGetCategories, onGetEvents]);\n  /**\r\n   * Handling the modal state\r\n   */\n\n  const toggle = () => {\n    setModal(!modal);\n\n    if (!modal && !isEmpty(event) && !!isEdit) {\n      setTimeout(() => {\n        setEvent({});\n        setIsEdit(false);\n      }, 500);\n    }\n  };\n\n  const toggleCategory = () => {\n    setModalcategory(!modalcategory);\n  };\n  /**\r\n   * Handling date click on calendar\r\n   */\n\n\n  const handleDateClick = arg => {\n    setSelectedDay(arg);\n    toggle();\n  };\n  /**\r\n   * Handling click on event on calendar\r\n   */\n\n\n  const handleEventClick = arg => {\n    const event = arg.event;\n    setEvent({\n      id: event.id,\n      title: event.title,\n      title_category: event.title_category,\n      start: event.start,\n      className: event.classNames,\n      category: event.classNames[0],\n      event_category: event.classNames[0]\n    });\n    setIsEdit(true);\n    toggle();\n  };\n  /**\r\n   * Handling submit event on event form\r\n   */\n\n\n  const handleValidEventSubmit = (e, values) => {\n    const {\n      onAddNewEvent,\n      onUpdateEvent\n    } = props;\n\n    if (isEdit) {\n      const updateEvent = {\n        id: event.id,\n        title: values.title,\n        classNames: values.category + \" text-white\",\n        start: event.start\n      }; // update event\n\n      onUpdateEvent(updateEvent);\n    } else {\n      const newEvent = {\n        id: Math.floor(Math.random() * 100),\n        title: values[\"title\"],\n        start: selectedDay ? selectedDay.date : new Date(),\n        className: values.category + \" text-white\"\n      }; // save new event\n\n      onAddNewEvent(newEvent);\n    }\n\n    setSelectedDay(null);\n    toggle();\n  };\n\n  const handleValidEventSubmitcategory = (event, values) => {\n    const {\n      onAddNewEvent\n    } = props;\n    const newEvent = {\n      id: Math.floor(Math.random() * 100),\n      title: values[\"title_category\"],\n      start: selectedDay ? selectedDay.date : new Date(),\n      className: values.event_category + \" text-white\"\n    }; // save new event\n\n    onAddNewEvent(newEvent);\n    toggleCategory();\n  };\n  /**\r\n   * On delete event\r\n   */\n\n\n  const handleDeleteEvent = () => {\n    const {\n      onDeleteEvent\n    } = props;\n    onDeleteEvent(event);\n    setDeleteModal(false);\n    toggle();\n  };\n  /**\r\n   * On category darg event\r\n   */\n\n\n  const onDrag = event => {\n    event.preventDefault();\n  };\n  /**\r\n   * On calendar drop event\r\n   */\n\n\n  const onDrop = event => {\n    const {\n      onAddNewEvent\n    } = props;\n    const draggedEl = event.draggedEl;\n    const newEvent = {\n      id: Math.floor(Math.random() * 100),\n      title: draggedEl.innerText,\n      start: event.date,\n      className: draggedEl.className\n    };\n    onAddNewEvent(newEvent);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DeleteModal, {\n      show: deleteModal,\n      onDeleteClick: handleDeleteEvent,\n      onCloseClick: () => setDeleteModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: t(\"Menu\"),\n        breadcrumbItem: t(\"Calendar\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"h-100 mb-lg-0\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    className: \"btn font-16 btn-primary w-100\",\n                    onClick: toggleCategory,\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-circle-outline me-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this), t(\"Create new event\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"external-events\",\n                    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-muted\",\n                      children: t(\"Drag and drop your event or click in the calendar\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), categories && categories.map((category, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `${category.type} external-event fc-event text-white`,\n                      draggable: true,\n                      onDrag: event => onDrag(event, category),\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-checkbox-blank-circle font-size-11 me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 29\n                      }, this), category.title]\n                    }, \"cat-\" + category.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"col-lg-9 app-calendar\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"mb-lg-0\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n                    plugins: [BootstrapTheme, dayGridPlugin, interactionPlugin],\n                    slotDuration: \"00:15:00\",\n                    handleWindowResize: true,\n                    themeSystem: \"bootstrap\",\n                    headerToolbar: {\n                      left: t(\"prev,next today\"),\n                      center: \"title\",\n                      right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n                    },\n                    events: events,\n                    editable: true,\n                    droppable: true,\n                    selectable: true,\n                    dateClick: handleDateClick,\n                    eventClick: handleEventClick,\n                    drop: onDrop\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modal,\n            className: props.className,\n            children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n              toggle: toggle,\n              tag: \"h4\",\n              children: !!isEdit ? t(\"Edit event\") : t(\"Add event\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                onValidSubmit: handleValidEventSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  form: true,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-12 mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"title\",\n                      label: t(\"Event name\"),\n                      type: \"text\",\n                      errorMessage: \"Invalid name\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      value: event && event.title ? event.title : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-12 mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      type: \"select\",\n                      name: \"category\",\n                      label: t(\"Select tramit\"),\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      value: event ? event.category : \"bg-primary\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-danger\",\n                        children: \"Danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-success\",\n                        children: \"Success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 274,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-primary\",\n                        children: \"Primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 275,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-info\",\n                        children: \"Info\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-dark\",\n                        children: \"Dark\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-warning\",\n                        children: \"Warning\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-end\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn btn-light me-2\",\n                        onClick: toggle,\n                        children: t(\"Close\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 25\n                      }, this), !!isEdit && /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn btn-danger me-2\",\n                        onClick: () => setDeleteModal(true),\n                        children: t(\"Delete\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-success save-event\",\n                        children: t(\"Save\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            isOpen: modalcategory,\n            toggle: toggleCategory,\n            className: props.className,\n            children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n              toggle: toggleCategory,\n              tag: \"h4\",\n              children: t(\"Add a tramit\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n              children: /*#__PURE__*/_jsxDEV(AvForm, {\n                onValidSubmit: handleValidEventSubmitcategory,\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  form: true,\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-12 mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      name: \"title_category\",\n                      label: t(\"Tramit name\"),\n                      type: \"text\",\n                      errorMessage: \"Invalid name\",\n                      validate: {\n                        required: {\n                          value: true\n                        }\n                      },\n                      value: event.title_category ? event.title_category : \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"col-12 mb-3\",\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      type: \"select\",\n                      name: \"event_category\",\n                      label: t(\"Choose a tramit\"),\n                      value: event ? event.event_category : \"bg-primary\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-danger\",\n                        children: \"Danger\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-success\",\n                        children: \"Success\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-primary\",\n                        children: \"Primary\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 353,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-info\",\n                        children: \"Info\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 354,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-dark\",\n                        children: \"Dark\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"bg-warning\",\n                        children: \"Warning\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-right\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        className: \"btn btn-light me-2\",\n                        onClick: toggleCategory,\n                        children: t(\"Close\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-success save-event\",\n                        children: t(\"Save\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calender, \"fNJafGntGX4l2CSBvb0/S7zWx2c=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Calender;\nCalender.propTypes = {\n  events: PropTypes.array,\n  categories: PropTypes.array,\n  className: PropTypes.string,\n  onGetEvents: PropTypes.func,\n  onAddNewEvent: PropTypes.func,\n  onUpdateEvent: PropTypes.func,\n  onDeleteEvent: PropTypes.func,\n  onGetCategories: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  calendar\n}) => ({\n  events: calendar.events,\n  categories: calendar.categories,\n  isEventUpdated: calendar.isEventUpdated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetEvents: () => dispatch(getEvents()),\n  onGetCategories: () => dispatch(getCategories()),\n  onAddNewEvent: event => dispatch(addNewEvent(event)),\n  onUpdateEvent: event => dispatch(updateEvent(event)),\n  onDeleteEvent: event => dispatch(deleteEvent(event))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Calender);\n\nvar _c;\n\n$RefreshReg$(_c, \"Calender\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Calendar/index.js"],"names":["React","useEffect","useState","useTranslation","PropTypes","connect","isEmpty","Button","Card","CardBody","Col","Modal","ModalBody","ModalHeader","Row","AvField","AvForm","FullCalendar","dayGridPlugin","interactionPlugin","Draggable","BootstrapTheme","Breadcrumbs","addNewEvent","deleteEvent","getCategories","getEvents","updateEvent","DeleteModal","Calender","props","t","i18n","events","categories","onGetCategories","onGetEvents","modal","setModal","deleteModal","setDeleteModal","modalcategory","setModalcategory","event","setEvent","selectedDay","setSelectedDay","isEdit","setIsEdit","document","getElementById","itemSelector","toggle","setTimeout","toggleCategory","handleDateClick","arg","handleEventClick","id","title","title_category","start","className","classNames","category","event_category","handleValidEventSubmit","e","values","onAddNewEvent","onUpdateEvent","newEvent","Math","floor","random","date","Date","handleValidEventSubmitcategory","handleDeleteEvent","onDeleteEvent","onDrag","preventDefault","onDrop","draggedEl","innerText","map","i","type","left","center","right","required","value","propTypes","array","string","func","mapStateToProps","calendar","isEventUpdated","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,GAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,WAPF,EAQEC,GARF,QASO,YATP;AAUA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,gCAAhC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,iBAAP,IAA4BC,SAA5B,QAA6C,2BAA7C;AACA,OAAOC,cAAP,MAA2B,yBAA3B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,aAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,qBANP;AAOA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AACA,OAAO,kCAAP;;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAc7B,cAAc,EAAlC;AAEA,QAAM;AAAE8B,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,eAAtB;AAAuCC,IAAAA;AAAvC,MAAuDN,KAA7D;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACqC,WAAD,EAAcC,cAAd,IAAgCtC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuC,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACyC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2C,WAAD,EAAcC,cAAd,IAAgC5C,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC6C,MAAD,EAASC,SAAT,IAAsB9C,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,eAAe;AACfC,IAAAA,WAAW;AACX,QAAIhB,SAAJ,CAAc6B,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAd,EAA0D;AACxDC,MAAAA,YAAY,EAAE;AAD0C,KAA1D;AAGD,GANQ,EAMN,CAAChB,eAAD,EAAkBC,WAAlB,CANM,CAAT;AAOA;AACF;AACA;;AACE,QAAMgB,MAAM,GAAG,MAAM;AACnBd,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;;AACA,QAAI,CAACA,KAAD,IAAU,CAAC/B,OAAO,CAACqC,KAAD,CAAlB,IAA6B,CAAC,CAACI,MAAnC,EAA2C;AACzCM,MAAAA,UAAU,CAAC,MAAM;AACfT,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OAHS,EAGP,GAHO,CAAV;AAID;AACF,GARD;;AAUA,QAAMM,cAAc,GAAG,MAAM;AAC3BZ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD,GAFD;AAIA;AACF;AACA;;;AACE,QAAMc,eAAe,GAAGC,GAAG,IAAI;AAC7BV,IAAAA,cAAc,CAACU,GAAD,CAAd;AACAJ,IAAAA,MAAM;AACP,GAHD;AAKA;AACF;AACA;;;AACE,QAAMK,gBAAgB,GAAGD,GAAG,IAAI;AAC9B,UAAMb,KAAK,GAAGa,GAAG,CAACb,KAAlB;AACAC,IAAAA,QAAQ,CAAC;AACPc,MAAAA,EAAE,EAAEf,KAAK,CAACe,EADH;AAEPC,MAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAFN;AAGPC,MAAAA,cAAc,EAAEjB,KAAK,CAACiB,cAHf;AAIPC,MAAAA,KAAK,EAAElB,KAAK,CAACkB,KAJN;AAKPC,MAAAA,SAAS,EAAEnB,KAAK,CAACoB,UALV;AAMPC,MAAAA,QAAQ,EAAErB,KAAK,CAACoB,UAAN,CAAiB,CAAjB,CANH;AAOPE,MAAAA,cAAc,EAAEtB,KAAK,CAACoB,UAAN,CAAiB,CAAjB;AAPT,KAAD,CAAR;AASAf,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAI,IAAAA,MAAM;AACP,GAbD;AAeA;AACF;AACA;;;AACE,QAAMc,sBAAsB,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AAC5C,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAAmCxC,KAAzC;;AACA,QAAIiB,MAAJ,EAAY;AACV,YAAMpB,WAAW,GAAG;AAClB+B,QAAAA,EAAE,EAAEf,KAAK,CAACe,EADQ;AAElBC,QAAAA,KAAK,EAAES,MAAM,CAACT,KAFI;AAGlBI,QAAAA,UAAU,EAAEK,MAAM,CAACJ,QAAP,GAAkB,aAHZ;AAIlBH,QAAAA,KAAK,EAAElB,KAAK,CAACkB;AAJK,OAApB,CADU,CAOV;;AACAS,MAAAA,aAAa,CAAC3C,WAAD,CAAb;AACD,KATD,MASO;AACL,YAAM4C,QAAQ,GAAG;AACfb,QAAAA,EAAE,EAAEc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADW;AAEff,QAAAA,KAAK,EAAES,MAAM,CAAC,OAAD,CAFE;AAGfP,QAAAA,KAAK,EAAEhB,WAAW,GAAGA,WAAW,CAAC8B,IAAf,GAAsB,IAAIC,IAAJ,EAHzB;AAIfd,QAAAA,SAAS,EAAEM,MAAM,CAACJ,QAAP,GAAkB;AAJd,OAAjB,CADK,CAOL;;AACAK,MAAAA,aAAa,CAACE,QAAD,CAAb;AACD;;AACDzB,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAM,IAAAA,MAAM;AACP,GAvBD;;AAyBA,QAAMyB,8BAA8B,GAAG,CAAClC,KAAD,EAAQyB,MAAR,KAAmB;AACxD,UAAM;AAAEC,MAAAA;AAAF,QAAoBvC,KAA1B;AACA,UAAMyC,QAAQ,GAAG;AACfb,MAAAA,EAAE,EAAEc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADW;AAEff,MAAAA,KAAK,EAAES,MAAM,CAAC,gBAAD,CAFE;AAGfP,MAAAA,KAAK,EAAEhB,WAAW,GAAGA,WAAW,CAAC8B,IAAf,GAAsB,IAAIC,IAAJ,EAHzB;AAIfd,MAAAA,SAAS,EAAEM,MAAM,CAACH,cAAP,GAAwB;AAJpB,KAAjB,CAFwD,CAQxD;;AACAI,IAAAA,aAAa,CAACE,QAAD,CAAb;AACAjB,IAAAA,cAAc;AACf,GAXD;AAaA;AACF;AACA;;;AACE,QAAMwB,iBAAiB,GAAG,MAAM;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAoBjD,KAA1B;AACAiD,IAAAA,aAAa,CAACpC,KAAD,CAAb;AACAH,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAY,IAAAA,MAAM;AACP,GALD;AAOA;AACF;AACA;;;AACE,QAAM4B,MAAM,GAAIrC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACsC,cAAN;AACD,GAFD;AAIA;AACF;AACA;;;AACE,QAAMC,MAAM,GAAGvC,KAAK,IAAI;AACtB,UAAM;AAAE0B,MAAAA;AAAF,QAAoBvC,KAA1B;AACA,UAAMqD,SAAS,GAAGxC,KAAK,CAACwC,SAAxB;AACA,UAAMZ,QAAQ,GAAG;AACfb,MAAAA,EAAE,EAAEc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADW;AAEff,MAAAA,KAAK,EAAEwB,SAAS,CAACC,SAFF;AAGfvB,MAAAA,KAAK,EAAElB,KAAK,CAACgC,IAHE;AAIfb,MAAAA,SAAS,EAAEqB,SAAS,CAACrB;AAJN,KAAjB;AAMAO,IAAAA,aAAa,CAACE,QAAD,CAAb;AACD,GAVD;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEhC,WADR;AAEE,MAAA,aAAa,EAAEuC,iBAFjB;AAGE,MAAA,YAAY,EAAE,MAAMtC,cAAc,CAAC,KAAD;AAHpC;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BAGE,QAAC,WAAD;AAAa,QAAA,KAAK,EAAET,CAAC,CAAC,MAAD,CAArB;AAA+B,QAAA,cAAc,EAAEA,CAAC,CAAC,UAAD;AAAhD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,eAAhB;AAAA,uCACE,QAAC,QAAD;AAAA,0CACE,QAAC,MAAD;AACE,oBAAA,KAAK,EAAC,SADR;AAEE,oBAAA,SAAS,EAAC,+BAFZ;AAGE,oBAAA,OAAO,EAAEuB,cAHX;AAAA,4CAKE;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,4BALF,EAMGvB,CAAC,CAAC,kBAAD,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AAAK,oBAAA,EAAE,EAAC,iBAAR;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAG,sBAAA,SAAS,EAAC,YAAb;AAAA,gCACGA,CAAC,CAAC,mDAAD;AADJ;AAAA;AAAA;AAAA;AAAA,4BAFF,EAKGG,UAAU,IACTA,UAAU,CAACmD,GAAX,CAAe,CAACrB,QAAD,EAAWsB,CAAX,kBACb;AACE,sBAAA,SAAS,EAAG,GAAEtB,QAAQ,CAACuB,IAAK,qCAD9B;AAGE,sBAAA,SAAS,MAHX;AAIE,sBAAA,MAAM,EAAE5C,KAAK,IAAIqC,MAAM,CAACrC,KAAD,EAAQqB,QAAR,CAJzB;AAAA,8CAME;AAAG,wBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,8BANF,EAOGA,QAAQ,CAACL,KAPZ;AAAA,uBAEO,SAASK,QAAQ,CAACN,EAFzB;AAAA;AAAA;AAAA;AAAA,4BADF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAiCE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,SAAhB;AAAA,uCACE,QAAC,QAAD;AAAA,yCACE,QAAC,YAAD;AACE,oBAAA,OAAO,EAAE,CACPrC,cADO,EAEPH,aAFO,EAGPC,iBAHO,CADX;AAME,oBAAA,YAAY,EAAE,UANhB;AAOE,oBAAA,kBAAkB,EAAE,IAPtB;AAQE,oBAAA,WAAW,EAAC,WARd;AASE,oBAAA,aAAa,EAAE;AACbqE,sBAAAA,IAAI,EAAEzD,CAAC,CAAC,iBAAD,CADM;AAEb0D,sBAAAA,MAAM,EAAE,OAFK;AAGbC,sBAAAA,KAAK,EAAE;AAHM,qBATjB;AAcE,oBAAA,MAAM,EAAEzD,MAdV;AAeE,oBAAA,QAAQ,EAAE,IAfZ;AAgBE,oBAAA,SAAS,EAAE,IAhBb;AAiBE,oBAAA,UAAU,EAAE,IAjBd;AAkBE,oBAAA,SAAS,EAAEsB,eAlBb;AAmBE,oBAAA,UAAU,EAAEE,gBAnBd;AAoBE,oBAAA,IAAI,EAAEyB;AApBR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgEE,QAAC,KAAD;AAAO,YAAA,MAAM,EAAE7C,KAAf;AAAsB,YAAA,SAAS,EAAEP,KAAK,CAACgC,SAAvC;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,MAAM,EAAEV,MAArB;AAA6B,cAAA,GAAG,EAAC,IAAjC;AAAA,wBACG,CAAC,CAACL,MAAF,GAAWhB,CAAC,CAAC,YAAD,CAAZ,GAA6BA,CAAC,CAAC,WAAD;AADjC;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,SAAD;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,aAAa,EAAEmC,sBAAvB;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,IAAI,MAAT;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE,QAAC,OAAD;AACE,sBAAA,IAAI,EAAC,OADP;AAEE,sBAAA,KAAK,EAAEnC,CAAC,CAAC,YAAD,CAFV;AAGE,sBAAA,IAAI,EAAC,MAHP;AAIE,sBAAA,YAAY,EAAC,cAJf;AAKE,sBAAA,QAAQ,EAAE;AACR4D,wBAAAA,QAAQ,EAAE;AAAEC,0BAAAA,KAAK,EAAE;AAAT;AADF,uBALZ;AAQE,sBAAA,KAAK,EAAGjD,KAAK,IAAIA,KAAK,CAACgB,KAAhB,GAAyBhB,KAAK,CAACgB,KAA/B,GAAuC;AARhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAaE,QAAC,GAAD;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE,QAAC,OAAD;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,IAAI,EAAC,UAFP;AAGE,sBAAA,KAAK,EAAE5B,CAAC,CAAC,eAAD,CAHV;AAIE,sBAAA,QAAQ,EAAE;AACR4D,wBAAAA,QAAQ,EAAE;AAAEC,0BAAAA,KAAK,EAAE;AAAT;AADF,uBAJZ;AAOE,sBAAA,KAAK,EAAEjD,KAAK,GAAGA,KAAK,CAACqB,QAAT,GAAoB,YAPlC;AAAA,8CASE;AAAQ,wBAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,eAUE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF,eAWE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF,eAYE;AAAQ,wBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZF,eAaE;AAAQ,wBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbF,eAcE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAbF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAiCE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,UAAf;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,SAAS,EAAC,oBAFZ;AAGE,wBAAA,OAAO,EAAEZ,MAHX;AAAA,kCAKGrB,CAAC,CAAC,OAAD;AALJ;AAAA;AAAA;AAAA;AAAA,8BADF,EAQG,CAAC,CAACgB,MAAF,iBACC;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,SAAS,EAAC,qBAFZ;AAGE,wBAAA,OAAO,EAAE,MAAMP,cAAc,CAAC,IAAD,CAH/B;AAAA,kCAKGT,CAAC,CAAC,QAAD;AALJ;AAAA;AAAA;AAAA;AAAA,8BATJ,eAiBE;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,SAAS,EAAC,4BAFZ;AAAA,kCAIGA,CAAC,CAAC,MAAD;AAJJ;AAAA;AAAA;AAAA;AAAA,8BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhEF,eAqIE,QAAC,KAAD;AACE,YAAA,MAAM,EAAEU,aADV;AAEE,YAAA,MAAM,EAAEa,cAFV;AAGE,YAAA,SAAS,EAAExB,KAAK,CAACgC,SAHnB;AAAA,oCAKE,QAAC,WAAD;AAAa,cAAA,MAAM,EAAER,cAArB;AAAqC,cAAA,GAAG,EAAC,IAAzC;AAAA,wBACGvB,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,oBALF,eAQE,QAAC,SAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,aAAa,EAAE8C,8BADjB;AAAA,wCAGE,QAAC,GAAD;AAAK,kBAAA,IAAI,MAAT;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE,QAAC,OAAD;AACE,sBAAA,IAAI,EAAC,gBADP;AAEE,sBAAA,KAAK,EAAE9C,CAAC,CAAC,aAAD,CAFV;AAGE,sBAAA,IAAI,EAAC,MAHP;AAIE,sBAAA,YAAY,EAAC,cAJf;AAKE,sBAAA,QAAQ,EAAE;AACR4D,wBAAAA,QAAQ,EAAE;AAAEC,0BAAAA,KAAK,EAAE;AAAT;AADF,uBALZ;AAQE,sBAAA,KAAK,EACHjD,KAAK,CAACiB,cAAN,GACIjB,KAAK,CAACiB,cADV,GAEI;AAXR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAiBE,QAAC,GAAD;AAAK,oBAAA,SAAS,EAAC,aAAf;AAAA,2CACE,QAAC,OAAD;AACE,sBAAA,IAAI,EAAC,QADP;AAEE,sBAAA,IAAI,EAAC,gBAFP;AAGE,sBAAA,KAAK,EAAE7B,CAAC,CAAC,iBAAD,CAHV;AAIE,sBAAA,KAAK,EACHY,KAAK,GAAGA,KAAK,CAACsB,cAAT,GAA0B,YALnC;AAAA,8CAQE;AAAQ,wBAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARF,eASE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BATF,eAUE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF,eAWE;AAAQ,wBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAXF,eAYE;AAAQ,wBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZF,eAaE;AAAQ,wBAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAsCE,QAAC,GAAD;AAAA,yCACE,QAAC,GAAD;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,YAAf;AAAA,8CACE;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,SAAS,EAAC,oBAFZ;AAGE,wBAAA,OAAO,EAAEX,cAHX;AAAA,kCAKGvB,CAAC,CAAC,OAAD;AALJ;AAAA;AAAA;AAAA;AAAA,8BADF,eAQE;AACE,wBAAA,IAAI,EAAC,QADP;AAEE,wBAAA,SAAS,EAAC,4BAFZ;AAAA,kCAIGA,CAAC,CAAC,MAAD;AAJJ;AAAA;AAAA;AAAA;AAAA,8BARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArIF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ND,CAjWD;;GAAMF,Q;UACgB1B,c;;;KADhB0B,Q;AAkWNA,QAAQ,CAACgE,SAAT,GAAqB;AACnB5D,EAAAA,MAAM,EAAE7B,SAAS,CAAC0F,KADC;AAEnB5D,EAAAA,UAAU,EAAE9B,SAAS,CAAC0F,KAFH;AAGnBhC,EAAAA,SAAS,EAAE1D,SAAS,CAAC2F,MAHF;AAInB3D,EAAAA,WAAW,EAAEhC,SAAS,CAAC4F,IAJJ;AAKnB3B,EAAAA,aAAa,EAAEjE,SAAS,CAAC4F,IALN;AAMnB1B,EAAAA,aAAa,EAAElE,SAAS,CAAC4F,IANN;AAOnBjB,EAAAA,aAAa,EAAE3E,SAAS,CAAC4F,IAPN;AAQnB7D,EAAAA,eAAe,EAAE/B,SAAS,CAAC4F;AARR,CAArB;;AAUA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAmB;AACzCjE,EAAAA,MAAM,EAAEiE,QAAQ,CAACjE,MADwB;AAEzCC,EAAAA,UAAU,EAAEgE,QAAQ,CAAChE,UAFoB;AAGzCiE,EAAAA,cAAc,EAAED,QAAQ,CAACC;AAHgB,CAAnB,CAAxB;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjE,EAAAA,WAAW,EAAE,MAAMiE,QAAQ,CAAC3E,SAAS,EAAV,CADW;AAEtCS,EAAAA,eAAe,EAAE,MAAMkE,QAAQ,CAAC5E,aAAa,EAAd,CAFO;AAGtC4C,EAAAA,aAAa,EAAE1B,KAAK,IAAI0D,QAAQ,CAAC9E,WAAW,CAACoB,KAAD,CAAZ,CAHM;AAItC2B,EAAAA,aAAa,EAAE3B,KAAK,IAAI0D,QAAQ,CAAC1E,WAAW,CAACgB,KAAD,CAAZ,CAJM;AAKtCoC,EAAAA,aAAa,EAAEpC,KAAK,IAAI0D,QAAQ,CAAC7E,WAAW,CAACmB,KAAD,CAAZ;AALM,CAAL,CAAnC;;AAOA,eAAetC,OAAO,CAAC4F,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvE,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { isEmpty } from \"lodash\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\"\r\nimport { AvField, AvForm } from \"availity-reactstrap-validation\"\r\nimport FullCalendar from \"@fullcalendar/react\"\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"\r\nimport interactionPlugin, { Draggable } from \"@fullcalendar/interaction\"\r\nimport BootstrapTheme from \"@fullcalendar/bootstrap\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\r\nimport {\r\n  addNewEvent,\r\n  deleteEvent,\r\n  getCategories,\r\n  getEvents,\r\n  updateEvent,\r\n} from \"../../store/actions\"\r\nimport DeleteModal from \"./DeleteModal\"\r\n//css\r\nimport \"@fullcalendar/bootstrap/main.css\"\r\n\r\nconst Calender = props => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const { events, categories, onGetCategories, onGetEvents } = props\r\n  const [modal, setModal] = useState(false)\r\n  const [deleteModal, setDeleteModal] = useState(false)\r\n  const [modalcategory, setModalcategory] = useState(false)\r\n  const [event, setEvent] = useState({})\r\n  const [selectedDay, setSelectedDay] = useState(0)\r\n  const [isEdit, setIsEdit] = useState(false)\r\n\r\n  useEffect(() => {\r\n    onGetCategories()\r\n    onGetEvents()\r\n    new Draggable(document.getElementById(\"external-events\"), {\r\n      itemSelector: \".external-event\",\r\n    })\r\n  }, [onGetCategories, onGetEvents]);\r\n  /**\r\n   * Handling the modal state\r\n   */\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n    if (!modal && !isEmpty(event) && !!isEdit) {\r\n      setTimeout(() => {\r\n        setEvent({})\r\n        setIsEdit(false)\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  const toggleCategory = () => {\r\n    setModalcategory(!modalcategory)\r\n  }\r\n\r\n  /**\r\n   * Handling date click on calendar\r\n   */\r\n  const handleDateClick = arg => {\r\n    setSelectedDay(arg)\r\n    toggle()\r\n  }\r\n\r\n  /**\r\n   * Handling click on event on calendar\r\n   */\r\n  const handleEventClick = arg => {\r\n    const event = arg.event\r\n    setEvent({\r\n      id: event.id,\r\n      title: event.title,\r\n      title_category: event.title_category,\r\n      start: event.start,\r\n      className: event.classNames,\r\n      category: event.classNames[0],\r\n      event_category: event.classNames[0],\r\n    })\r\n    setIsEdit(true)\r\n    toggle()\r\n  }\r\n\r\n  /**\r\n   * Handling submit event on event form\r\n   */\r\n  const handleValidEventSubmit = (e, values) => {\r\n    const { onAddNewEvent, onUpdateEvent } = props\r\n    if (isEdit) {\r\n      const updateEvent = {\r\n        id: event.id,\r\n        title: values.title,\r\n        classNames: values.category + \" text-white\",\r\n        start: event.start,\r\n      }\r\n      // update event\r\n      onUpdateEvent(updateEvent)\r\n    } else {\r\n      const newEvent = {\r\n        id: Math.floor(Math.random() * 100),\r\n        title: values[\"title\"],\r\n        start: selectedDay ? selectedDay.date : new Date(),\r\n        className: values.category + \" text-white\",\r\n      }\r\n      // save new event\r\n      onAddNewEvent(newEvent)\r\n    }\r\n    setSelectedDay(null)\r\n    toggle()\r\n  }\r\n\r\n  const handleValidEventSubmitcategory = (event, values) => {\r\n    const { onAddNewEvent } = props\r\n    const newEvent = {\r\n      id: Math.floor(Math.random() * 100),\r\n      title: values[\"title_category\"],\r\n      start: selectedDay ? selectedDay.date : new Date(),\r\n      className: values.event_category + \" text-white\",\r\n    }\r\n    // save new event\r\n    onAddNewEvent(newEvent)\r\n    toggleCategory()\r\n  }\r\n\r\n  /**\r\n   * On delete event\r\n   */\r\n  const handleDeleteEvent = () => {\r\n    const { onDeleteEvent } = props\r\n    onDeleteEvent(event)\r\n    setDeleteModal(false)\r\n    toggle()\r\n  }\r\n\r\n  /**\r\n   * On category darg event\r\n   */\r\n  const onDrag = (event) => {\r\n    event.preventDefault()\r\n  }\r\n\r\n  /**\r\n   * On calendar drop event\r\n   */\r\n  const onDrop = event => {\r\n    const { onAddNewEvent } = props\r\n    const draggedEl = event.draggedEl\r\n    const newEvent = {\r\n      id: Math.floor(Math.random() * 100),\r\n      title: draggedEl.innerText,\r\n      start: event.date,\r\n      className: draggedEl.className,\r\n    }\r\n    onAddNewEvent(newEvent)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <DeleteModal\r\n        show={deleteModal}\r\n        onDeleteClick={handleDeleteEvent}\r\n        onCloseClick={() => setDeleteModal(false)}\r\n      />\r\n      <div className=\"page-content\">\r\n\r\n        {/* Render Breadcrumb */}\r\n        <Breadcrumbs title={t(\"Menu\")} breadcrumbItem={t(\"Calendar\")} />\r\n        <Row>\r\n          <Col xs={12}>\r\n            <Row className=\"mb-4\">\r\n              <Col lg={3}>\r\n                <Card className=\"h-100 mb-lg-0\">\r\n                  <CardBody>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"btn font-16 btn-primary w-100\"\r\n                      onClick={toggleCategory}\r\n                    >\r\n                      <i className=\"mdi mdi-plus-circle-outline me-1\" />\r\n                      {t(\"Create new event\")}\r\n                    </Button>\r\n                    <div id=\"external-events\">\r\n                      <br />\r\n                      <p className=\"text-muted\">\r\n                        {t(\"Drag and drop your event or click in the calendar\")}\r\n                      </p>\r\n                      {categories &&\r\n                        categories.map((category, i) => (\r\n                          <div\r\n                            className={`${category.type} external-event fc-event text-white`}\r\n                            key={\"cat-\" + category.id}\r\n                            draggable\r\n                            onDrag={event => onDrag(event, category)}\r\n                          >\r\n                            <i className=\"mdi mdi-checkbox-blank-circle font-size-11 me-2\" />\r\n                            {category.title}\r\n                          </div>\r\n                        ))}\r\n                    </div>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n              <Col className=\"col-lg-9 app-calendar\">\r\n                <Card className=\"mb-lg-0\">\r\n                  <CardBody>\r\n                    <FullCalendar\r\n                      plugins={[\r\n                        BootstrapTheme,\r\n                        dayGridPlugin,\r\n                        interactionPlugin,\r\n                      ]}\r\n                      slotDuration={\"00:15:00\"}\r\n                      handleWindowResize={true}\r\n                      themeSystem=\"bootstrap\"\r\n                      headerToolbar={{\r\n                        left: t(\"prev,next today\"),\r\n                        center: \"title\",\r\n                        right: \"dayGridMonth,dayGridWeek,dayGridDay\",\r\n                      }}\r\n                      events={events}\r\n                      editable={true}\r\n                      droppable={true}\r\n                      selectable={true}\r\n                      dateClick={handleDateClick}\r\n                      eventClick={handleEventClick}\r\n                      drop={onDrop}\r\n                    />\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            {/* New/Edit event modal */}\r\n            <Modal isOpen={modal} className={props.className}>\r\n              <ModalHeader toggle={toggle} tag=\"h4\">\r\n                {!!isEdit ? t(\"Edit event\") : t(\"Add event\")}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <AvForm onValidSubmit={handleValidEventSubmit}>\r\n                  <Row form>\r\n                    <Col className=\"col-12 mb-3\">\r\n                      <AvField\r\n                        name=\"title\"\r\n                        label={t(\"Event name\")}\r\n                        type=\"text\"\r\n                        errorMessage=\"Invalid name\"\r\n                        validate={{\r\n                          required: { value: true },\r\n                        }}\r\n                        value={(event && event.title) ? event.title : \"\"}\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"col-12 mb-3\">\r\n                      <AvField\r\n                        type=\"select\"\r\n                        name=\"category\"\r\n                        label={t(\"Select tramit\")}\r\n                        validate={{\r\n                          required: { value: true },\r\n                        }}\r\n                        value={event ? event.category : \"bg-primary\"}\r\n                      >\r\n                        <option value=\"bg-danger\">Danger</option>\r\n                        <option value=\"bg-success\">Success</option>\r\n                        <option value=\"bg-primary\">Primary</option>\r\n                        <option value=\"bg-info\">Info</option>\r\n                        <option value=\"bg-dark\">Dark</option>\r\n                        <option value=\"bg-warning\">Warning</option>\r\n                      </AvField>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"text-end\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-light me-2\"\r\n                          onClick={toggle}\r\n                        >\r\n                          {t(\"Close\")}\r\n                        </button>\r\n                        {!!isEdit && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger me-2\"\r\n                            onClick={() => setDeleteModal(true)}\r\n                          >\r\n                            {t(\"Delete\")}\r\n                          </button>\r\n                        )}\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-success save-event\"\r\n                        >\r\n                          {t(\"Save\")}\r\n                        </button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </AvForm>\r\n              </ModalBody>\r\n            </Modal>\r\n            <Modal\r\n              isOpen={modalcategory}\r\n              toggle={toggleCategory}\r\n              className={props.className}\r\n            >\r\n              <ModalHeader toggle={toggleCategory} tag=\"h4\">\r\n                {t(\"Add a tramit\")}\r\n              </ModalHeader>\r\n              <ModalBody>\r\n                <AvForm\r\n                  onValidSubmit={handleValidEventSubmitcategory}\r\n                >\r\n                  <Row form>\r\n                    <Col className=\"col-12 mb-3\">\r\n                      <AvField\r\n                        name=\"title_category\"\r\n                        label={t(\"Tramit name\")}\r\n                        type=\"text\"\r\n                        errorMessage=\"Invalid name\"\r\n                        validate={{\r\n                          required: { value: true },\r\n                        }}\r\n                        value={\r\n                          event.title_category\r\n                            ? event.title_category\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Col>\r\n                    <Col className=\"col-12 mb-3\">\r\n                      <AvField\r\n                        type=\"select\"\r\n                        name=\"event_category\"\r\n                        label={t(\"Choose a tramit\")}\r\n                        value={\r\n                          event ? event.event_category : \"bg-primary\"\r\n                        }\r\n                      >\r\n                        <option value=\"bg-danger\">Danger</option>\r\n                        <option value=\"bg-success\">Success</option>\r\n                        <option value=\"bg-primary\">Primary</option>\r\n                        <option value=\"bg-info\">Info</option>\r\n                        <option value=\"bg-dark\">Dark</option>\r\n                        <option value=\"bg-warning\">Warning</option>\r\n                      </AvField>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col>\r\n                      <div className=\"text-right\">\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-light me-2\"\r\n                          onClick={toggleCategory}\r\n                        >\r\n                          {t(\"Close\")}\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"btn btn-success save-event\"\r\n                        >\r\n                          {t(\"Save\")}\r\n                        </button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </AvForm>\r\n              </ModalBody>\r\n            </Modal>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\nCalender.propTypes = {\r\n  events: PropTypes.array,\r\n  categories: PropTypes.array,\r\n  className: PropTypes.string,\r\n  onGetEvents: PropTypes.func,\r\n  onAddNewEvent: PropTypes.func,\r\n  onUpdateEvent: PropTypes.func,\r\n  onDeleteEvent: PropTypes.func,\r\n  onGetCategories: PropTypes.func,\r\n}\r\nconst mapStateToProps = ({ calendar }) => ({\r\n  events: calendar.events,\r\n  categories: calendar.categories,\r\n  isEventUpdated: calendar.isEventUpdated\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetEvents: () => dispatch(getEvents()),\r\n  onGetCategories: () => dispatch(getCategories()),\r\n  onAddNewEvent: event => dispatch(addNewEvent(event)),\r\n  onUpdateEvent: event => dispatch(updateEvent(event)),\r\n  onDeleteEvent: event => dispatch(deleteEvent(event)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calender)"]},"metadata":{},"sourceType":"module"}