{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\ModalNewDisbursementTerm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, Label, Row, Col, Button } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalNewDisbursementTerm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataReturn, setdataReturn] = useState(null);\n  const [requerido, setrequerido] = useState(false);\n  React.useEffect(() => {\n    setdataReturn(props.dataSet);\n  }, [props.isOpen]);\n\n  function handleSubmit() {\n    if ((dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.disbursementTypeId) == \"\") {\n      setrequerido(true);\n      return;\n    } else {\n      setrequerido(false);\n    }\n\n    props.saveData(dataReturn, props.tipo);\n    props.toggle();\n  }\n\n  function handleCancel() {\n    props.toggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    size: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggle,\n      color: \"primary\",\n      children: t(\"Disbursement Type\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"disbursementTypeId\",\n          children: t(\"Disbursement Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"disbursementTypeId\",\n          type: \"text\",\n          validate: {\n            required: {\n              value: true,\n              errorMessage: t(\"Required Field\")\n            }\n          },\n          value: dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.disbursementTypeId,\n          onChange: e => {\n            dataReturn.disbursementTypeId = e.target.value;\n            setdataReturn(dataReturn);\n          },\n          id: \"disbursementTypeId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), requerido ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-error-parrafo\",\n          children: t(\"Required Field\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"observations\",\n          children: t(\"Description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"observations\",\n          type: \"textarea\",\n          value: dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.observations,\n          onChange: e => {\n            dataReturn.observations = e.target.value;\n            setdataReturn(dataReturn);\n          },\n          id: \"observations\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12 text-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnCancel\",\n            color: \"danger\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: handleCancel,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), \" \", t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSearch\",\n            color: \"success\",\n            type: \"button\",\n            onClick: e => {\n              handleSubmit();\n            },\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 144\n            }, this), \" \", \" \", t(\"Save\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalNewDisbursementTerm, \"UnXPTSMGzdCZqK0smNhriwoKI9k=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalNewDisbursementTerm;\nModalNewDisbursementTerm.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  toggle: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default ModalNewDisbursementTerm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewDisbursementTerm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/ModalNewDisbursementTerm.js"],"names":["PropTypes","Modal","ModalHeader","ModalBody","Label","Row","Col","Button","AvForm","AvField","AvGroup","useTranslation","React","useState","ModalNewDisbursementTerm","props","t","i18n","dataReturn","setdataReturn","requerido","setrequerido","useEffect","dataSet","isOpen","handleSubmit","disbursementTypeId","saveData","tipo","toggle","handleCancel","required","value","errorMessage","e","target","observations","margin","botones","propTypes","onSave","func","isRequired","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Label,\r\n    Row,\r\n    Col,\r\n    Button\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useState } from 'react';\r\nconst ModalNewDisbursementTerm = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [dataReturn, setdataReturn] = useState(null);\r\n    const [requerido, setrequerido] = useState(false);\r\n    React.useEffect(() => {\r\n        setdataReturn(props.dataSet)\r\n    }, [props.isOpen]);\r\n    function handleSubmit() {\r\n        if (dataReturn?.disbursementTypeId == \"\") {\r\n            setrequerido(true)\r\n            return;\r\n        } else {\r\n            setrequerido(false)\r\n        }\r\n        props.saveData(dataReturn, props.tipo);\r\n        props.toggle();\r\n    }\r\n    function handleCancel() {\r\n        props.toggle();\r\n    }\r\n    return (\r\n        <Modal isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}\r\n            size=\"md\">\r\n            <ModalHeader toggle={props.toggle} color=\"primary\">{t(\"Disbursement Type\")}</ModalHeader>\r\n            <ModalBody>\r\n                <AvGroup className=\"mb-3\">\r\n                    <Label htmlFor=\"disbursementTypeId\">{t(\"Disbursement Type\")}</Label>\r\n                    <AvField\r\n                        className=\"form-control\"\r\n                        name=\"disbursementTypeId\"\r\n                        type=\"text\"\r\n                        validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                        }}\r\n                        value={dataReturn?.disbursementTypeId}\r\n                        onChange={(e) => { dataReturn.disbursementTypeId = e.target.value; setdataReturn(dataReturn); }}\r\n                        id=\"disbursementTypeId\" />\r\n                    {requerido ?\r\n                        <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                        : null}\r\n                </AvGroup>\r\n                <AvGroup className=\"mb-3\">\r\n                    <Label htmlFor=\"observations\">{t(\"Description\")}</Label>\r\n                    <AvField\r\n                        className=\"form-control\"\r\n                        name=\"observations\"\r\n                        type=\"textarea\"\r\n                        value={dataReturn?.observations}\r\n                        onChange={(e) => { dataReturn.observations = e.target.value; setdataReturn(dataReturn); }}\r\n                        id=\"observations\"\r\n                        rows=\"4\" />\r\n                </AvGroup>\r\n                <Row className=\"my-2\">\r\n                    <Col xl=\"12 text-end\">\r\n                        <Button id=\"btnCancel\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={handleCancel}>\r\n                            <i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}\r\n                        </Button>\r\n                        {props.botones ?\r\n                            <Button id=\"btnSearch\" color=\"success\" type=\"button\" onClick={(e) => { handleSubmit() }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                                {\" \"} {t(\"Save\")}\r\n                            </Button> : null}\r\n                    </Col>\r\n                </Row>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n};\r\nModalNewDisbursementTerm.propTypes = {\r\n    onSave: PropTypes.func.isRequired,\r\n    toggle: PropTypes.func,\r\n    isOpen: PropTypes.bool\r\n};\r\nexport default ModalNewDisbursementTerm;"]},"metadata":{},"sourceType":"module"}