{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\modal\\\\ModalPreviewHistorical.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Modal } from \"reactstrap\";\nimport { translationHelpers } from \"../../../helpers\";\nimport PreviewHistorical from \"./PreviewHistorical\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalPreviewHistorical = props => {\n  _s();\n\n  const [t] = translationHelpers('translation');\n  React.useEffect(() => {\n    console.log(props);\n  }, [props.closingPreview]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(props.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: /*#__PURE__*/_jsxDEV(PreviewHistorical, {\n        title: props.title,\n        transactId: props.transactId,\n        instanceId: props.instanceId,\n        closingPreview: props.closingPreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalPreviewHistorical, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ModalPreviewHistorical;\nModalPreviewHistorical.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onAttach: PropTypes.func\n};\nexport default ModalPreviewHistorical;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPreviewHistorical\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/modal/ModalPreviewHistorical.js"],"names":["React","useState","PropTypes","Modal","translationHelpers","PreviewHistorical","ModalPreviewHistorical","props","t","useEffect","console","log","closingPreview","isOpen","toggle","title","transactId","instanceId","propTypes","bool","func","onAttach"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACIC,KADJ,QAEO,YAFP;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAGA,MAAMC,sBAAsB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,CAAD,IAAMJ,kBAAkB,CAAC,aAAD,CAA9B;AACAJ,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAFD,EAEG,CAACA,KAAK,CAACK,cAAP,CAFH;AAIA,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAC,IADT;AAEI,IAAA,MAAM,EAAEL,KAAK,CAACM,MAFlB;AAGI,IAAA,MAAM,EAAEN,KAAK,CAACO,MAHlB;AAII,IAAA,QAAQ,EAAE,IAJd;AAAA,4BAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCN,CAAC,CAACD,KAAK,CAACQ,KAAP;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,OAAO,EAAER,KAAK,CAACO,MAFnB;AAGI,QAAA,SAAS,EAAC,OAHd;AAII,wBAAa,OAJjB;AAKI,sBAAW,OALf;AAAA,+BAMI;AAAM,yBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAgBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEP,KAAK,CAACQ,KAAhC;AAAuC,QAAA,UAAU,EAAER,KAAK,CAACS,UAAzD;AAAqE,QAAA,UAAU,EAAET,KAAK,CAACU,UAAvF;AAAmG,QAAA,cAAc,EAAEV,KAAK,CAACK;AAAzH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5BD;;GAAMN,sB;;KAAAA,sB;AA8BNA,sBAAsB,CAACY,SAAvB,GAAmC;AAC/BL,EAAAA,MAAM,EAAEX,SAAS,CAACiB,IADa;AAE/BL,EAAAA,MAAM,EAAEZ,SAAS,CAACkB,IAFa;AAG/BC,EAAAA,QAAQ,EAAEnB,SAAS,CAACkB;AAHW,CAAnC;AAMA,eAAed,sBAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Modal,\r\n} from \"reactstrap\"\r\nimport { translationHelpers } from \"../../../helpers\";\r\nimport PreviewHistorical from \"./PreviewHistorical\";\r\n\r\n\r\nconst ModalPreviewHistorical = (props) => {\r\n    const [t] = translationHelpers('translation');\r\n    React.useEffect(() => {\r\n        console.log(props)\r\n    }, [props.closingPreview])\r\n\r\n    return (\r\n        <Modal\r\n            size=\"xl\"\r\n            isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}>\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title mt-0\">{t(props.title)}</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={props.toggle}\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <PreviewHistorical title={props.title} transactId={props.transactId} instanceId={props.instanceId} closingPreview={props.closingPreview} />\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nModalPreviewHistorical.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    toggle: PropTypes.func,\r\n    onAttach: PropTypes.func\r\n};\r\n\r\nexport default ModalPreviewHistorical;\r\n"]},"metadata":{},"sourceType":"module"}