{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{Link}from\"react-router-dom\";import*as opt from\"../../helpers/options_helper\";import{jsx as _jsx}from\"react/jsx-runtime\";var GetDashBoardModel=/*#__PURE__*/function(){function GetDashBoardModel(){_classCallCheck(this,GetDashBoardModel);}_createClass(GetDashBoardModel,null,[{key:\"fromJson\",value:function fromJson(json){this.results=[];this.searchValue(\"tasks\",json);var items=new GetDashBoardModel();items.results=this.results;return items;}},{key:\"searchValue\",value:function searchValue(mainkey,json){try{for(var _i=0,_Object$entries=Object.entries(json);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),key=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value!==null&&value!==undefined){if(typeof value===\"object\"){if(key!==mainkey){this.searchValue(mainkey,value);}else{switch(key){case\"tasks\":{for(var i=0;i<value.length;i++){/* ------------------------------------------------------------------------------------------------------------------ */ /*                                 Convertimos la fecha de milisegundos a fecha normal                                */ /* ------------------------------------------------------------------------------------------------------------------ */ //let date = new Date(value[i]['task-activation-time'][\"java.util.Date\"]);\n/* ------------------------------------------------------------------------------------------------------------------ */ /*                                   Se arma el json que se le va a dar al dataTable                                  */ /* ------------------------------------------------------------------------------------------------------------------ */var pathname=\"/creditocomercial/busquedadescarte\";switch(value[i][\"variables\"][\"processId\"]){case opt.PROCESS_BUSQUEDADESCARTE.toString():{pathname=\"/creditocomercial/busquedadescarte\";break;}case opt.PROCESS_CUMPLIMIENTO.toString():{pathname=\"/creditocomercial/descartarcoincidencia\";break;}case opt.PROCESS_LISTAEXCLUSION.toString():{pathname=\"/creditocomercial/listaexclusion\";break;}case opt.PROCESS_INFORMEGESTION.toString():{// pathname = \"/creditocomercial/analisiscredito\";\npathname=\"/creditocomercial/informegestion\";break;}case opt.PROCESS_PROPUESTACREDITO.toString():{pathname=\"/creditocomercial/propuestacredito\";break;}case opt.PROCESS_ANALISISCREDITO.toString():{pathname=\"/creditocomercial/analisiscredito\";break;}}this.results.push({date:value[i][\"taskCreatedOn\"],taskId:value[i][\"taskId\"],// BPM Id de la tarea\ninstanceId:value[i][\"instanceId\"],// BPM Id del Proceso\nprocedureNumber:value[i][\"variables\"][\"procedureNumber\"],//value[i][\"task-proc-inst-id\"],\napplicationNumber:value[i][\"variables\"][\"applicationNumber\"],//value[i][\"task-id\"],\ntransactionId:value[i][\"variables\"][\"transactionId\"],//value[i][\"task-id\"],\nactivityId:value[i][\"variables\"][\"activityId\"],//value[i][\"task-id\"],\nprocessId:value[i][\"variables\"][\"processId\"],//value[i][\"task-id\"],\nactivity:value[i][\"taskName\"],status:value[i][\"taskStatus\"],action:/*#__PURE__*/_jsx(Link,{to:{pathname:pathname,data:{requestId:value[i][\"variables\"][\"requestId\"],facilityId:value[i][\"variables\"][\"facilityId\"],customerId:value[i][\"variables\"][\"customerId\"],transactionId:value[i][\"variables\"][\"transactionId\"],processId:value[i][\"variables\"][\"processId\"],activityId:value[i][\"variables\"][\"activityId\"],instanceId:value[i][\"instanceId\"],taskId:value[i][\"taskId\"],taskStatus:value[i][\"taskStatus\"]}},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-file-search-outline mdi-24px\"})})});}break;}default:{break;}}}}}}}catch(err){}}}]);return GetDashBoardModel;}();GetDashBoardModel.results=[];export{GetDashBoardModel as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/models/BPM/GetDashBoardModel.js"],"names":["Link","opt","GetDashBoardModel","json","results","searchValue","items","mainkey","Object","entries","key","value","undefined","i","length","pathname","PROCESS_BUSQUEDADESCARTE","toString","PROCESS_CUMPLIMIENTO","PROCESS_LISTAEXCLUSION","PROCESS_INFORMEGESTION","PROCESS_PROPUESTACREDITO","PROCESS_ANALISISCREDITO","push","date","taskId","instanceId","procedureNumber","applicationNumber","transactionId","activityId","processId","activity","status","action","data","requestId","facilityId","customerId","taskStatus","err"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nimport * as opt from \"../../helpers/options_helper\"\r\n\r\nexport default class GetDashBoardModel {\r\n\r\n  static results = [];\r\n\r\n  static fromJson(json) {\r\n    this.results = [];\r\n    this.searchValue(\"tasks\", json);\r\n    const items = new GetDashBoardModel();\r\n    items.results = this.results;\r\n    return items;\r\n  }\r\n\r\n  static searchValue(mainkey, json) {\r\n    try {\r\n      for (let [key, value] of Object.entries(json)) {\r\n        if (value !== null && value !== undefined) {\r\n          if (typeof value === \"object\") {\r\n            if (key !== mainkey) {\r\n              this.searchValue(mainkey, value);\r\n            } else {\r\n              switch (key) {\r\n                case \"tasks\": {\r\n                  for (var i = 0; i < value.length; i++) {\r\n                    /* ------------------------------------------------------------------------------------------------------------------ */\r\n                    /*                                 Convertimos la fecha de milisegundos a fecha normal                                */\r\n                    /* ------------------------------------------------------------------------------------------------------------------ */\r\n                    //let date = new Date(value[i]['task-activation-time'][\"java.util.Date\"]);\r\n                    /* ------------------------------------------------------------------------------------------------------------------ */\r\n                    /*                                   Se arma el json que se le va a dar al dataTable                                  */\r\n                    /* ------------------------------------------------------------------------------------------------------------------ */\r\n                    \r\n                    var pathname = \"/creditocomercial/busquedadescarte\";\r\n                    switch(value[i][\"variables\"][\"processId\"]){\r\n                      case opt.PROCESS_BUSQUEDADESCARTE.toString():{\r\n                        pathname = \"/creditocomercial/busquedadescarte\";\r\n                        break;\r\n                      }\r\n                      case opt.PROCESS_CUMPLIMIENTO.toString():{\r\n                        pathname = \"/creditocomercial/descartarcoincidencia\";\r\n                        break;\r\n                      }\r\n                      case opt.PROCESS_LISTAEXCLUSION.toString():{\r\n                        pathname = \"/creditocomercial/listaexclusion\";\r\n                        break;\r\n                      }\r\n                      case opt.PROCESS_INFORMEGESTION.toString():{\r\n                        // pathname = \"/creditocomercial/analisiscredito\";\r\n                        pathname = \"/creditocomercial/informegestion\";\r\n                        break;\r\n                      }\r\n                      case opt.PROCESS_PROPUESTACREDITO.toString():{\r\n                        pathname = \"/creditocomercial/propuestacredito\";\r\n                        break;\r\n                      }\r\n                      case opt.PROCESS_ANALISISCREDITO.toString():{\r\n                        pathname = \"/creditocomercial/analisiscredito\";\r\n                        break;\r\n                      }\r\n                    }\r\n\r\n                    this.results.push({\r\n                      date: value[i][\"taskCreatedOn\"],\r\n                      taskId: value[i][\"taskId\"], // BPM Id de la tarea\r\n                      instanceId: value[i][\"instanceId\"],// BPM Id del Proceso\r\n                      procedureNumber: value[i][\"variables\"][\"procedureNumber\"],//value[i][\"task-proc-inst-id\"],\r\n                      applicationNumber: value[i][\"variables\"][\"applicationNumber\"],//value[i][\"task-id\"],\r\n                      transactionId: value[i][\"variables\"][\"transactionId\"],//value[i][\"task-id\"],\r\n                      activityId: value[i][\"variables\"][\"activityId\"],//value[i][\"task-id\"],\r\n                      processId: value[i][\"variables\"][\"processId\"],//value[i][\"task-id\"],\r\n                      activity: value[i][\"taskName\"],\r\n                      status: value[i][\"taskStatus\"],\r\n                      action: (                        \r\n                        <Link\r\n                          to={{\r\n                            pathname: pathname,\r\n                            data: {requestId:value[i][\"variables\"][\"requestId\"],facilityId:value[i][\"variables\"][\"facilityId\"],customerId:value[i][\"variables\"][\"customerId\"],transactionId:value[i][\"variables\"][\"transactionId\"],processId: value[i][\"variables\"][\"processId\"],activityId:value[i][\"variables\"][\"activityId\"],instanceId:value[i][\"instanceId\"],taskId: value[i][\"taskId\"],taskStatus:value[i][\"taskStatus\"]},\r\n                          }}\r\n                        >\r\n                          <i className=\"mdi mdi-file-search-outline mdi-24px\"></i>\r\n                        </Link>\r\n                      ),\r\n                    });\r\n                  }\r\n                  break;\r\n                }\r\n\r\n                default: {\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (err) { }\r\n  }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module"}