{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\helpers\\\\errorModalSoaint.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport error from '../assets/images/error.png';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\"; // import './index.css';\n\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalErrrorMessage = props => {\n  _s();\n\n  var _jsonErrorMessage$dat;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [activacion, setactivacion] = useState(false);\n  const [datosError, setdatosError] = useState({\n    code: \"\",\n    message: \"\",\n    functionName: \"\",\n    serviceType: \"\",\n    error: false\n  });\n  let jsonTypeService = {\n    bk: \"Backend Services\",\n    bpm: \"JBPM Services\",\n    core: \"Core Services\"\n  };\n  let jsonErrorMessage = {\n    400: \"Bad Request\",\n    404: \"Path not found\",\n    500: \"Server error\",\n    503: \"There are empty fields\"\n  };\n  React.useEffect(() => {\n    window.addEventListener('errorSoaint', storageSoaint);\n    return () => {\n      window.removeEventListener(\"errorSoaint\", storageSoaint);\n    };\n  }, []);\n\n  function storageSoaint() {\n    let json = JSON.parse(localStorage.getItem('jsonError'));\n    setdatosError(json);\n    setactivacion(json === null || json === void 0 ? void 0 : json.error);\n  }\n\n  function cambiarStatus() {\n    let jsonError = {\n      code: \"\",\n      error: false,\n      functionName: \"\",\n      message: \"\",\n      method: \"\",\n      serviceType: \"\",\n      url: \"\"\n    };\n    localStorage.setItem(\"jsonError\", JSON.stringify(jsonError));\n    removeBodyCss();\n    setactivacion(false);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"sm\",\n    isOpen: activacion,\n    toggle: cambiarStatus,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: cambiarStatus,\n      \"data-dismiss\": \"modal\",\n      className: \"close\",\n      \"aria-label\": \"Close\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: error,\n            width: \"90px\",\n            height: \"auto\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: \"red\",\n                fontWeight: \"700\"\n              },\n              children: t(\"ErrorDialog\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                color: \"rgb(242 60 76)\",\n                fontWeight: \"700\"\n              },\n              children: t(\"It has been a\") + \" error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: t((_jsonErrorMessage$dat = jsonErrorMessage[datosError === null || datosError === void 0 ? void 0 : datosError.code]) !== null && _jsonErrorMessage$dat !== void 0 ? _jsonErrorMessage$dat : \"Internal error\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          style: {\n            textAlign: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: cambiarStatus,\n            color: \"danger\",\n            className: \"mt-3\",\n            children: t(\"accept\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalErrrorMessage, \"tR7BMO7O0SK5+zWOHEEyGuGiDbo=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalErrrorMessage;\nexport default ModalErrrorMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalErrrorMessage\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/errorModalSoaint.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","error","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","AvForm","AvField","AvGroup","ModalErrrorMessage","props","t","i18n","activacion","setactivacion","datosError","setdatosError","code","message","functionName","serviceType","jsonTypeService","bk","bpm","core","jsonErrorMessage","useEffect","window","addEventListener","storageSoaint","removeEventListener","json","JSON","parse","localStorage","getItem","cambiarStatus","jsonError","method","url","setItem","stringify","removeBodyCss","document","body","classList","add","backgroundColor","textAlign","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport error from '../assets/images/error.png'\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Label,\r\n    Modal,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n} from \"reactstrap\"\r\n// import './index.css';\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nconst ModalErrrorMessage = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [activacion, setactivacion] = useState(false);\r\n    const [datosError, setdatosError] = useState({\r\n        code: \"\",\r\n        message: \"\",\r\n        functionName: \"\",\r\n        serviceType: \"\",\r\n        error: false\r\n    });\r\n    let jsonTypeService = {\r\n        bk: \"Backend Services\",\r\n        bpm: \"JBPM Services\",\r\n        core: \"Core Services\"\r\n    }\r\n    let jsonErrorMessage = {\r\n        400: \"Bad Request\",\r\n        404: \"Path not found\",\r\n        500: \"Server error\",\r\n        503: \"There are empty fields\"\r\n    }\r\n    React.useEffect(() => {\r\n        window.addEventListener('errorSoaint', storageSoaint);\r\n        return () => {\r\n            window.removeEventListener(\"errorSoaint\", storageSoaint)\r\n        }\r\n    }, [])\r\n\r\n    function storageSoaint() {\r\n        let json = JSON.parse(localStorage.getItem('jsonError'));\r\n        setdatosError(json)\r\n        setactivacion(json?.error);\r\n    }\r\n\r\n    function cambiarStatus() {\r\n        let jsonError = {\r\n            code: \"\",\r\n            error: false,\r\n            functionName: \"\",\r\n            message: \"\",\r\n            method: \"\",\r\n            serviceType: \"\",\r\n            url: \"\",\r\n        }\r\n        localStorage.setItem(\"jsonError\", JSON.stringify(jsonError))\r\n        removeBodyCss()\r\n        setactivacion(false)\r\n    }\r\n    function removeBodyCss() {\r\n        document.body.classList.add(\"no_padding\")\r\n    }\r\n    return (\r\n        <Modal\r\n            size=\"sm\"\r\n            isOpen={activacion}\r\n            toggle={cambiarStatus}\r\n            centered={true}>\r\n            <button\r\n                type=\"button\"\r\n                onClick={cambiarStatus}\r\n                data-dismiss=\"modal\"\r\n                className=\"close\"\r\n                aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <div className=\"modal-body\" style={{ backgroundColor: \"white\" }}>\r\n                <Row>\r\n                    <Col xl=\"12\" style={{ textAlign: \"center\" }}>\r\n                        <img src={error} width=\"90px\" height=\"auto\" alt=\"\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xl=\"12\" style={{ textAlign: \"center\" }}>\r\n                        <b><h2 style={{ color: \"red\", fontWeight: \"700\" }}>{t(\"ErrorDialog\")}</h2></b>\r\n                    </Col>\r\n                </Row >\r\n                <Row className=\"mt-3\">\r\n                    <Col xl=\"12\" style={{ textAlign: \"center\" }}>\r\n                        <b><h5 style={{ color: \"rgb(242 60 76)\", fontWeight: \"700\" }}>{t(\"It has been a\") + \" error\"}</h5></b>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                    <Col xl=\"12\" style={{ textAlign: \"center\" }}>\r\n                        <strong>{t(jsonErrorMessage[datosError?.code] ?? \"Internal error\")}</strong>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xl=\"12\" style={{ textAlign: \"center\" }}>\r\n                        <Button onClick={cambiarStatus} color=\"danger\" className=\"mt-3\">{t(\"accept\")}</Button>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\nexport default ModalErrrorMessage;\r\n"]},"metadata":{},"sourceType":"module"}