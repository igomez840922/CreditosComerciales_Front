{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\ModalTransferProcess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table, Modal } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../services\";\nimport * as opt from \"../../helpers/options_helper\";\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalTransferProcess = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation(); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [usersByGroupList, setusersByGroupList] = useState([]);\n  const [usersByGroupSelected, setusersByGroupSelected] = useState(undefined);\n  const localStorageHelper = new LocalStorageHelper();\n  React.useEffect(() => {\n    loadUserGroups();\n  }, [props.data]); //cargar lista de tipo de personas\n\n  function loadUserGroups() {\n    if (props.data === undefined || props.data === null) {\n      return;\n    }\n\n    if (props.data.data === undefined || props.data.data === null) {\n      return;\n    }\n\n    console.log(\"loadUserGroups\", props.data.data);\n    backendServices.getUsersByGroup(props.data.data.grupoldap).then(data => {\n      if (data !== null && data.result !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.result.length; i++) {\n          json.push({\n            label: data.result[i][\"userName\"],\n            value: data.result[i][\"userName\"]\n          });\n        }\n\n        console.log(\"getUsersByGroup\", json);\n        setusersByGroupList(json);\n        setusersByGroupSelected(json[0]);\n      }\n    }).catch(error => {});\n  } //Guardar el Cliente\n\n\n  async function handleSubmitFormClient(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    console.log(\"handleSubmitFormClient\", values);\n    var result = await bpmServices.ChangeTaskUser(usersByGroupSelected.value, props.data.taskId, props.data.instanceId);\n\n    if (result) {\n      props.updateData();\n    }\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n\n    if (credentials && credentials.isAnalysisSupervisor) {}\n\n    props.toggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: props.isOpen,\n      toggle: props.toggle,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title mt-0\",\n          children: t(\"Transferir TrÃ¡mite\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.toggle,\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          id: \"frmClient\",\n          className: \"needs-validation\",\n          onSubmit: handleSubmitFormClient,\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"userSelected\",\n                    children: t(\"Seleccionar Usuario\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    noOptionsMessage: () => \"\",\n                    onChange: e => {\n                      setusersByGroupSelected(usersByGroupList.find(x => x.value === e.value));\n                    } //handleSubmitFormClient({ target: { name: 'usersSelected', value: e.value } })\n                    ,\n                    options: usersByGroupList,\n                    classNamePrefix: \"select2-selection\",\n                    value: usersByGroupSelected,\n                    name: \"userSelected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              style: {\n                margin: '5px 0px'\n              },\n              type: \"button\",\n              onClick: props.toggle,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }, this), \" \", t(\"Cancel\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"submit\",\n              style: {\n                margin: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save mdi-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 77\n              }, this), \" \", t(\"Save\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)\n      }, \"TransferForm\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  }, \"mcf1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalTransferProcess, \"jN2r2yrnD3UNVb+2zFJU9iW3E0A=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalTransferProcess;\nModalTransferProcess.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onCancel: PropTypes.func,\n  data: PropTypes.any,\n  updateData: PropTypes.func\n};\nexport default ModalTransferProcess;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalTransferProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/ModalTransferProcess.js"],"names":["React","useState","PropTypes","useTranslation","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","Modal","AvForm","AvField","AvGroup","AvInput","AvCheckbox","Select","BackendServices","CoreServices","BpmServices","opt","LocalStorageHelper","ModalTransferProcess","props","t","i18n","backendServices","setbackendServices","coreServices","setcoreServices","bpmServices","setbpmServices","usersByGroupList","setusersByGroupList","usersByGroupSelected","setusersByGroupSelected","undefined","localStorageHelper","useEffect","loadUserGroups","data","console","log","getUsersByGroup","grupoldap","then","result","json","i","length","push","label","value","catch","error","handleSubmitFormClient","event","errors","values","preventDefault","ChangeTaskUser","taskId","instanceId","updateData","credentials","get","VARNAME_USRCREDENTIAL","isAnalysisSupervisor","toggle","isOpen","e","find","x","textAlign","margin","propTypes","bool","func","onCancel","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    Button,\r\n    Label,\r\n    Table,\r\n  Modal,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\r\nimport Select from \"react-select\";\r\nimport { BackendServices, CoreServices, BpmServices } from \"../../services\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\n\r\nconst ModalTransferProcess = props => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [usersByGroupList, setusersByGroupList] = useState([]);\r\n  const [usersByGroupSelected, setusersByGroupSelected] = useState(undefined);\r\n  const localStorageHelper = new LocalStorageHelper();\r\n    \r\n  React.useEffect(() => {\r\n    loadUserGroups();\r\n  }, [props.data]);\r\n  \r\n\r\n  //cargar lista de tipo de personas\r\n  function loadUserGroups() {\r\n\r\n    if(props.data === undefined || props.data === null){\r\n      return;\r\n    }\r\n    if(props.data.data === undefined || props.data.data === null){\r\n      return;\r\n    }\r\n\r\n    console.log(\"loadUserGroups\",props.data.data)\r\n    backendServices.getUsersByGroup(props.data.data.grupoldap)\r\n      .then((data) => {\r\n        if (data !== null && data.result !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.result.length; i++) {\r\n            json.push({ label: data.result[i][\"userName\"], value: data.result[i][\"userName\"] })\r\n          }\r\n          console.log(\"getUsersByGroup\",json);\r\n          setusersByGroupList(json);\r\n          setusersByGroupSelected(json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n\r\n  //Guardar el Cliente\r\n  async function handleSubmitFormClient(event, errors, values) {    \r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    console.log(\"handleSubmitFormClient\", values);\r\n    var result = await bpmServices.ChangeTaskUser(usersByGroupSelected.value,props.data.taskId,props.data.instanceId);\r\n    if(result){\r\n      props.updateData();\r\n    }\r\n\r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n\r\n    if(credentials && credentials.isAnalysisSupervisor){\r\n      \r\n    }\r\n\r\n    props.toggle();\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment key=\"mcf1\">\r\n    <Modal\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Transferir TrÃ¡mite\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div key=\"TransferForm\" className=\"modal-body\">\r\n\r\n      \r\n      <AvForm id=\"frmClient\" className=\"needs-validation\" onSubmit={handleSubmitFormClient}>\r\n       \r\n          {/*<h5 className=\"card-sub-title\">{t(\"Seleccionar Usuario\")}</h5>*/}\r\n          <CardBody>\r\n            <Row>\r\n             \r\n             <Col md=\"12\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"userSelected\">{t(\"Seleccionar Usuario\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"}\r\n                    onChange={(e) => { setusersByGroupSelected(usersByGroupList.find(x => x.value === e.value));  }} //handleSubmitFormClient({ target: { name: 'usersSelected', value: e.value } })\r\n                    options={usersByGroupList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={usersByGroupSelected}\r\n                    name=\"userSelected\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              \r\n              {/*<Col md=\"6\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"transferto\">{t(\"Seleccionar Usuario\")}</Label>\r\n                  <AvField className=\"form-control\"\r\n                    name=\"transferTo\" type=\"text\" />\r\n                </div>\r\n              </Col>*/}\r\n            </Row>\r\n           \r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n            <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={props.toggle}>\r\n              <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n            </Button>\r\n            <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n              {\" \"}{t(\"Save\")}\r\n            </Button>\r\n          </CardFooter>\r\n       \r\n      </AvForm>\r\n      \r\n      </div>\r\n    </Modal>\r\n</React.Fragment>\r\n  );\r\n};\r\n\r\nModalTransferProcess.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  onCancel:PropTypes.func,\r\n  data:PropTypes.any,\r\n  updateData: PropTypes.func,\r\n}\r\n\r\nexport default ModalTransferProcess;\r\n"]},"metadata":{},"sourceType":"module"}