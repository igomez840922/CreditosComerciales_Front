{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useTranslation,withTranslation}from\"react-i18next\";import{Row,Col,Label}from\"reactstrap\";import{AvForm,AvField,AvGroup}from\"availity-reactstrap-validation\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var MaskSoaint=function MaskSoaint(props){var _props$name,_props$id;var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),valueSet=_useState2[0],setvalueSet=_useState2[1];// React.useEffect(()=>{\n//     setnumberExpresion(props.maskNumber)\n// }, []);\nfunction convertToNotation(numero){var length=numero.length;var notation=['','K','M','B','-'];numero=numero.split('');var reducer=length<=3?0:length>3&&length<=6?0:length>6&&length<=12?3:length>12&&length<=16?9:15;numero.length=length<=16?numero.length-reducer:4;length>3&&numero.splice(-3,0,',');numero=numero.join('')+notation[length<=3?0:reducer===0?1:reducer===3?2:reducer>=6&&reducer<=9?3:4];return numero;}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AvField,{type:\"text\",name:(_props$name=props===null||props===void 0?void 0:props.name)!==null&&_props$name!==void 0?_props$name:\"mask\",id:(_props$id=props===null||props===void 0?void 0:props.id)!==null&&_props$id!==void 0?_props$id:\"mask\",placeholder:\"Ingrese su mascara en (K,M,B)\",onChange:function onChange(e){props.setnumberExpresion(convertToNotation(e.target.value));},value:props.numberExpresion})});};export default MaskSoaint;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/api/plugins_soaint/maskNumber.js"],"names":["React","useState","useTranslation","withTranslation","Row","Col","Label","AvForm","AvField","AvGroup","MaskSoaint","props","t","i18n","valueSet","setvalueSet","convertToNotation","numero","length","notation","split","reducer","splice","join","name","id","e","setnumberExpresion","target","value","numberExpresion"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,eAAhD,CAEA,OACIC,GADJ,CAEIC,GAFJ,CAGIC,KAHJ,KAIO,YAJP,CAKA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,OAA1B,KAAyC,gCAAzC,C,gGACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,2BAC1B,oBAAoBT,cAAc,EAAlC,CAAQU,CAAR,iBAAQA,CAAR,CAAWC,IAAX,iBAAWA,IAAX,CACA,cAAgCZ,QAAQ,CAAC,CAAD,CAAxC,wCAAOa,QAAP,eAAiBC,WAAjB,eAGA;AACA;AACA;AAEA,QAASC,CAAAA,iBAAT,CAA2BC,MAA3B,CAAmC,CAC/B,GAAIC,CAAAA,MAAM,CAAGD,MAAM,CAACC,MAApB,CACA,GAAIC,CAAAA,QAAQ,CAAG,CAAC,EAAD,CAAK,GAAL,CAAU,GAAV,CAAe,GAAf,CAAoB,GAApB,CAAf,CACAF,MAAM,CAAGA,MAAM,CAACG,KAAP,CAAa,EAAb,CAAT,CACA,GAAIC,CAAAA,OAAO,CAAGH,MAAM,EAAI,CAAV,CAAc,CAAd,CAAmBA,MAAM,CAAG,CAAT,EAAcA,MAAM,EAAI,CAAxB,CAA4B,CAA5B,CAAiCA,MAAM,CAAG,CAAT,EAAcA,MAAM,EAAI,EAAxB,CAA6B,CAA7B,CAAkCA,MAAM,CAAG,EAAT,EAAeA,MAAM,EAAI,EAAzB,CAA8B,CAA9B,CAAkC,EAAtI,CACAD,MAAM,CAACC,MAAP,CAAgBA,MAAM,EAAI,EAAV,CAAeD,MAAM,CAACC,MAAP,CAAgBG,OAA/B,CAAyC,CAAzD,CACAH,MAAM,CAAG,CAAT,EAAcD,MAAM,CAACK,MAAP,CAAc,CAAC,CAAf,CAAkB,CAAlB,CAAqB,GAArB,CAAd,CACAL,MAAM,CAAGA,MAAM,CAACM,IAAP,CAAY,EAAZ,EAAkBJ,QAAQ,CAAED,MAAM,EAAI,CAAV,CAAc,CAAd,CAAmBG,OAAO,GAAK,CAAZ,CAAgB,CAAhB,CAAqBA,OAAO,GAAK,CAAZ,CAAgB,CAAhB,CAAqBA,OAAO,EAAI,CAAX,EAAgBA,OAAO,EAAI,CAA3B,CAA+B,CAA/B,CAAmC,CAAlG,CAAnC,CACD,MAAOJ,CAAAA,MAAP,CACF,CACD,mBACI,sCACI,KAAC,OAAD,EACI,IAAI,CAAC,MADT,CAEI,IAAI,cAAEN,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEa,IAAT,2CAAiB,MAFzB,CAGI,EAAE,YAAEb,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEc,EAAT,uCAAe,MAHrB,CAII,WAAW,CAAC,+BAJhB,CAKI,QAAQ,CAAE,kBAACC,CAAD,CAAO,CAAEf,KAAK,CAACgB,kBAAN,CAAyBX,iBAAiB,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1C,EAA6D,CALpF,CAMI,KAAK,CAAElB,KAAK,CAACmB,eANjB,EADJ,EADJ,CAYH,CA/BD,CAmCA,cAAepB,CAAAA,UAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nconst MaskSoaint = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [valueSet, setvalueSet] = useState(0);\r\n\r\n\r\n    // React.useEffect(()=>{\r\n    //     setnumberExpresion(props.maskNumber)\r\n    // }, []);\r\n\r\n    function convertToNotation(numero) {\r\n        let length = numero.length;\r\n        let notation = ['', 'K', 'M', 'B', '-'];\r\n        numero = numero.split('');\r\n        let reducer = length <= 3 ? 0 : (length > 3 && length <= 6 ? 0 : (length > 6 && length <= 12 ? 3 : (length > 12 && length <= 16 ? 9 : 15)));\r\n        numero.length = length <= 16 ? numero.length - reducer : 4;\r\n        length > 3 && numero.splice(-3, 0, ',');\r\n        numero = numero.join('') + notation[(length <= 3 ? 0 : (reducer === 0 ? 1 : (reducer === 3 ? 2 : (reducer >= 6 && reducer <= 9 ? 3 : 4))))];\r\n       return numero;\r\n    }\r\n    return (\r\n        <>\r\n            <AvField\r\n                type=\"text\"\r\n                name={props?.name ?? \"mask\"}\r\n                id={props?.id ?? \"mask\"}\r\n                placeholder=\"Ingrese su mascara en (K,M,B)\"\r\n                onChange={(e) => { props.setnumberExpresion(convertToNotation(e.target.value)) }}\r\n                value={props.numberExpresion}\r\n            />\r\n        </>\r\n    );\r\n};\r\nMaskSoaint.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default MaskSoaint;\r\n"]},"metadata":{},"sourceType":"module"}