{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\20_Cotizador\\\\FormData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Row, Col, Form, Container, Card, Button } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\nimport { Label } from \"reactstrap\";\nimport Flatpickr from \"react-flatpickr\";\nimport checkNumber from \"../../../helpers/checkNumber\";\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport { useFormQuoter } from \"./Hooks/useFormQuoter\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport TableResultQuoter from \"./TableResultQuoter\";\nimport { optionsPersonType, optionsConfirmation, optionsGracePeriodType // optionsIdType,\n, optionsNationality, optionsTypeLoan, optionsPayments, optionsBanking } from \"./dummy/optionsSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialForm = {\n  // // common fields\n  personType: \"Natural\",\n  idType: \"\",\n  idnumber: \"\",\n  // // client data\n  // name: \"\",\n  firstname: \"\",\n  secondname: \"\",\n  firstlastname: \"\",\n  secondlastname: \"\",\n  birthDate: \"\",\n  nationality: \"\",\n  phoneNumber: \"\",\n  email: \"\",\n  // // quoter data\n  loanType: \"compuesto\",\n  amountDebt: \"\",\n  anualRate: \"\",\n  //   effectiveRate: 0,\n  paymentPeriod: 1,\n  definedPayment: \"No\",\n  customerDefinedPayment: \"\",\n  term: \"\",\n  feciSelect: \"No\",\n  feciRate: \"\",\n  gracePeriodSelect: \"No\",\n  gracePeriodType: \"NA\",\n  gracePeriod: \"\" // banking: \"\",\n  // legalExpenses: 0,\n  // financialTrust: 0,\n\n};\nexport const FormData = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    clientExist\n  } = props;\n  const formPrefill = { ...clientExist[0]\n  };\n  console.log(\"formPrefill:\", formPrefill);\n  const {\n    form,\n    hdlTest,\n    hdlOnKeyUpRealNumber,\n    hdlOnKeyUpPercentageNumber,\n    hdlOnSubmit,\n    hdlOnInvalidSubmit,\n    hdlOnValidSubmit,\n    hdlOnChange,\n    assignSelectionFields,\n    disableFeci,\n    disableDefinedFee,\n    disableTerm,\n    disableGracePeriod,\n    optionsIdTypes,\n    optionsCountries,\n    optionsBanks,\n    loading,\n    response\n  } = useFormQuoter(initialForm);\n  const optionsFormatDate = {\n    dateFormat: OPTs.FORMAT_DATE,\n    maxDate: new Date().setFullYear(new Date().getFullYear() - 18) // defaultDate: selectClient !== undefined ? new Date(moment(selectClient.birthDate, 'YYYY-MM-DD').format()) : new Date()\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AvForm // onSubmit={hdlOnValidSubmit}\n    , {\n      onValidSubmit: hdlOnValidSubmit,\n      onInvalidSubmit: hdlOnInvalidSubmit,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"mt-3\",\n            children: t(\"ClientData\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 4,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"personType\",\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: optionsPersonType,\n                  id: \"personType\",\n                  name: \"personType\",\n                  defaultValue: optionsPersonType[0],\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 4,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"idType\",\n                  children: t(\"IdType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"idType\",\n                  name: \"idType\",\n                  options: optionsIdTypes.map(typeId => ({\n                    label: typeId.description,\n                    value: typeId.description\n                  })) // defaultValue={}\n                  ,\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              lg: 4,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"idnumber\",\n                  children: t(\"IdNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"idnumber\",\n                  name: \"idnumber\",\n                  value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.idnumber) ? formPrefill.idnumber : form.name,\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: form.personType === \"Natural\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"firstname\",\n                    children: t(\"FirstName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    type: \"text\",\n                    id: \"firstname\",\n                    name: \"firstname\",\n                    value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.firstname) ? formPrefill.firstname : form.name,\n                    validate: {\n                      required: {\n                        value: true\n                      }\n                    },\n                    errorMessage: t(\"Required Field\"),\n                    onChange: hdlOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"secondname\",\n                    children: t(\"SecondName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    id: \"secondname\",\n                    name: \"secondname\",\n                    value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.secondname) ? formPrefill.secondname : form.name,\n                    onChange: hdlOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"firstlastname\",\n                    children: t(\"FirstLastName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    id: \"firstlastname\",\n                    name: \"firstlastname\",\n                    value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.lastname) ? formPrefill.lastname : form.name,\n                    validate: {\n                      required: {\n                        value: true\n                      }\n                    },\n                    errorMessage: t(\"Required Field\"),\n                    onChange: hdlOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                lg: 3,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"secondlastname\",\n                    children: t(\"SecondLastName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                    id: \"secondlastname\",\n                    name: \"secondlastname\",\n                    value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.secondlastname) ? formPrefill.secondlastname : form.name,\n                    onChange: hdlOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [form.personType === \"Natural\" && /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Label, {\n                    htmlFor: \"birthDate\",\n                    children: t(\"Date of birth\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                    id: \"birthDate\",\n                    name: \"birthDate\",\n                    value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.birthdate) ? formPrefill.birthdate : form.name,\n                    placeholder: OPTs.FORMAT_DATE_SHOW,\n                    options: optionsFormatDate,\n                    className: \"form-control d-block\",\n                    onChange: hdlOnChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), form.personType !== \"Natural\" && /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"SocialReason\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  type: \"text\",\n                  id: \"name\",\n                  name: \"nameJ\",\n                  value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.businessName) ? formPrefill.businessName : form.name,\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"nationality\",\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"nationality\",\n                  name: \"nationality\",\n                  options: optionsCountries.length === 0 ? \"Loading options\" : optionsCountries.map(country => ({\n                    label: country.Description,\n                    value: country.Description\n                  })),\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"phoneNumber\",\n                  children: t(\"PhoneNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"phoneNumber\",\n                  name: \"phoneNumber\",\n                  value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.phoneNumber) ? formPrefill.phoneNumber : form.name,\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  },\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"email\",\n                  children: t(\"Email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  type: \"email\",\n                  id: \"email\",\n                  name: \"email\",\n                  value: (formPrefill === null || formPrefill === void 0 ? void 0 : formPrefill.email) ? formPrefill.email : form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"mt-5\",\n              children: t(\"QuoterData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"loanType\",\n                  children: t(\"Quoter type\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"loanType\",\n                  name: \"loanType\",\n                  defaultValue: optionsTypeLoan[0],\n                  value: form.name,\n                  options: optionsTypeLoan,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"amountDebt\",\n                  children: t(\"Amount Debt\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"amountDebt\",\n                  name: \"amountDebt\",\n                  value: form.amountDebt,\n                  pattern: \"^[0-9,.]*$\",\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  errorMessage: t(\"Required Field\") // onChange={hdlTest}\n                  ,\n                  onChange: hdlOnChange,\n                  onKeyUp: hdlOnKeyUpRealNumber // onKeyPress={hdlOnKeyOnlNum}\n                  // onKeyPress={(e) => { return checkNumber(e) }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"anualRate\",\n                  children: t(\"Annual rate (%)\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"anualRate\",\n                  name: \"anualRate\",\n                  value: form.anualRate,\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  onChange: hdlOnChange,\n                  onKeyUp: hdlOnKeyUpPercentageNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"paymentPeriod\",\n                  children: t(\"Payments\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"paymentPeriod\",\n                  name: \"paymentPeriod\",\n                  defaultValue: optionsPayments[0],\n                  value: form.name,\n                  options: optionsPayments,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"definedPayment\",\n                  children: t(\"Defined fee\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"definedPayment\",\n                  name: \"definedPayment\",\n                  options: optionsConfirmation,\n                  defaultValue: optionsConfirmation[1],\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"customerDefinedPayment\",\n                  children: t(\"Defined fee value\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"customerDefinedPayment\",\n                  name: \"customerDefinedPayment\",\n                  value: form.customerDefinedPayment,\n                  validate: {\n                    required: {\n                      value: !disableDefinedFee\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  disabled: disableDefinedFee,\n                  onChange: hdlOnChange,\n                  onKeyUp: hdlOnKeyUpRealNumber,\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"feciSelect\",\n                  children: t(\"Feci\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"feciSelect\",\n                  name: \"feciSelect\",\n                  defaultValue: optionsConfirmation[1],\n                  value: form.name,\n                  options: optionsConfirmation,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"feciRate\",\n                  children: t(\"Feci amount\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"feciRate\",\n                  name: \"feciRate\",\n                  value: form.feciRate,\n                  validate: {\n                    required: {\n                      value: !disableFeci\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  disabled: disableFeci,\n                  onChange: hdlOnChange,\n                  onKeyUp: hdlOnKeyUpPercentageNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"term\",\n                  children: t(\"Term (months)\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"term\",\n                  name: \"term\",\n                  value: form.term,\n                  validate: {\n                    required: {\n                      value: !disableTerm\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  disabled: disableTerm,\n                  onChange: hdlOnChange,\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"gracePeriodSelect\",\n                  children: t(\"Grace period\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"gracePeriodSelect\",\n                  name: \"gracePeriodSelect\",\n                  options: optionsConfirmation,\n                  defaultValue: optionsConfirmation[1],\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"gracePeriodType\",\n                  children: t(\"Grace period type\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"gracePeriodType\",\n                  name: \"gracePeriodType\",\n                  options: optionsGracePeriodType,\n                  defaultValue: optionsGracePeriodType[1],\n                  value: form.name,\n                  isDisabled: disableGracePeriod,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"gracePeriod\",\n                  children: t(\"Nos grace period\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"gracePeriod\",\n                  name: \"gracePeriod\",\n                  value: form.gracePeriod,\n                  validate: {\n                    required: {\n                      value: !disableGracePeriod\n                    }\n                  },\n                  errorMessage: t(\"Required Field\"),\n                  disabled: disableGracePeriod,\n                  onChange: hdlOnChange,\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              lg: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"banking\",\n                  children: t(\"Banking\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  id: \"banking\",\n                  name: \"banking\",\n                  options: optionsBanks.length === 0 ? \"Loading banking\" : optionsBanks.map(banking => ({\n                    label: banking.Description,\n                    value: banking.Description\n                  })),\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"legalExpenses\",\n                  children: t(\"Legal expenses\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"legalExpenses\",\n                  name: \"legalExpenses\",\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"financialTrust\",\n                  children: t(\"Trust\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  id: \"financialTrust\",\n                  name: \"financialTrust\",\n                  value: form.name,\n                  onChange: hdlOnChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"d-grid mt-5\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"lg\",\n                className: \"float-end\",\n                type: \"submit\",\n                children: t(\"Calculate\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: loading,\n      spinner: true,\n      text: t(\"Calculating payment plan\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 7\n    }, this), response !== null && /*#__PURE__*/_jsxDEV(TableResultQuoter, {\n      paymentPlan: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormData, \"5+8wAdP6jwDxQ9gEPUFBbyM+zGI=\", false, function () {\n  return [useTranslation, useFormQuoter];\n});\n\n_c = FormData;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormData\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/FormData.js"],"names":["React","useEffect","useRef","useTranslation","Row","Col","Form","Container","Card","Button","Select","AsyncSelect","AvField","AvForm","AvGroup","Label","Flatpickr","checkNumber","OPTs","useFormQuoter","LoadingOverlay","TableResultQuoter","optionsPersonType","optionsConfirmation","optionsGracePeriodType","optionsNationality","optionsTypeLoan","optionsPayments","optionsBanking","initialForm","personType","idType","idnumber","firstname","secondname","firstlastname","secondlastname","birthDate","nationality","phoneNumber","email","loanType","amountDebt","anualRate","paymentPeriod","definedPayment","customerDefinedPayment","term","feciSelect","feciRate","gracePeriodSelect","gracePeriodType","gracePeriod","FormData","props","t","i18n","clientExist","formPrefill","console","log","form","hdlTest","hdlOnKeyUpRealNumber","hdlOnKeyUpPercentageNumber","hdlOnSubmit","hdlOnInvalidSubmit","hdlOnValidSubmit","hdlOnChange","assignSelectionFields","disableFeci","disableDefinedFee","disableTerm","disableGracePeriod","optionsIdTypes","optionsCountries","optionsBanks","loading","response","optionsFormatDate","dateFormat","FORMAT_DATE","maxDate","Date","setFullYear","getFullYear","name","map","typeId","label","description","value","required","lastname","birthdate","FORMAT_DATE_SHOW","businessName","length","country","Description","e","banking"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Row, Col, Form, Container, Card, Button } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport { Label } from \"reactstrap\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nimport checkNumber from \"../../../helpers/checkNumber\";\r\nimport * as OPTs from \"../../../helpers/options_helper\";\r\nimport { useFormQuoter } from \"./Hooks/useFormQuoter\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport TableResultQuoter from \"./TableResultQuoter\";\r\nimport {\r\n  optionsPersonType,\r\n  optionsConfirmation,\r\n  optionsGracePeriodType,\r\n  // optionsIdType,\r\n  optionsNationality,\r\n  optionsTypeLoan,\r\n  optionsPayments,\r\n  optionsBanking,\r\n} from \"./dummy/optionsSelect\";\r\n\r\nconst initialForm = {\r\n  // // common fields\r\n  personType: \"Natural\",\r\n  idType: \"\",\r\n  idnumber: \"\",\r\n  // // client data\r\n  // name: \"\",\r\n  firstname: \"\",\r\n  secondname: \"\",\r\n  firstlastname: \"\",\r\n  secondlastname: \"\",\r\n  birthDate: \"\",\r\n  nationality: \"\",\r\n  phoneNumber: \"\",\r\n  email: \"\",\r\n  // // quoter data\r\n  loanType: \"compuesto\",\r\n  amountDebt: \"\",\r\n  anualRate: \"\",\r\n  //   effectiveRate: 0,\r\n  paymentPeriod: 1,\r\n  definedPayment: \"No\",\r\n  customerDefinedPayment: \"\",\r\n  term: \"\",\r\n  feciSelect: \"No\",\r\n  feciRate: \"\",\r\n  gracePeriodSelect: \"No\",\r\n  gracePeriodType: \"NA\",\r\n  gracePeriod: \"\",\r\n  // banking: \"\",\r\n  // legalExpenses: 0,\r\n  // financialTrust: 0,\r\n};\r\n\r\nexport const FormData = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const { clientExist } = props;\r\n\r\n  const formPrefill = { ...clientExist[0] };\r\n\r\n  console.log(\"formPrefill:\", formPrefill);\r\n\r\n  const {\r\n    form,\r\n    hdlTest,\r\n    hdlOnKeyUpRealNumber,\r\n    hdlOnKeyUpPercentageNumber,\r\n    hdlOnSubmit,\r\n    hdlOnInvalidSubmit,\r\n    hdlOnValidSubmit,\r\n    hdlOnChange,\r\n    assignSelectionFields,\r\n    disableFeci,\r\n    disableDefinedFee,\r\n    disableTerm,\r\n    disableGracePeriod,\r\n    optionsIdTypes,\r\n    optionsCountries,\r\n    optionsBanks,\r\n    loading,\r\n    response,\r\n  } = useFormQuoter(initialForm);\r\n\r\n  const optionsFormatDate = {\r\n    dateFormat: OPTs.FORMAT_DATE,\r\n    maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\r\n    // defaultDate: selectClient !== undefined ? new Date(moment(selectClient.birthDate, 'YYYY-MM-DD').format()) : new Date()\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AvForm\r\n        // onSubmit={hdlOnValidSubmit}\r\n        onValidSubmit={hdlOnValidSubmit}\r\n        onInvalidSubmit={hdlOnInvalidSubmit}\r\n      >\r\n        <Card>\r\n          <Container>\r\n            <Card.Title className=\"mt-3\">{t(\"ClientData\")}</Card.Title>\r\n            <Row>\r\n              <Col md={6} lg={4}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                  <Select\r\n                    options={optionsPersonType}\r\n                    id=\"personType\"\r\n                    name=\"personType\"\r\n                    defaultValue={optionsPersonType[0]}\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"idType\">{t(\"IdType\")}</Label>\r\n                  <Select\r\n                    id=\"idType\"\r\n                    name=\"idType\"\r\n                    options={optionsIdTypes.map((typeId) => ({\r\n                      label: typeId.description,\r\n                      value: typeId.description,\r\n                    }))}\r\n                    // defaultValue={}\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                  {/* <AsyncSelect\r\n                    id=\"idType\"\r\n                    name=\"idType\"\r\n                    loadOptions={optionsIdentificationTypes.map((typeId) => ({\r\n                      label: typeId.description,\r\n                      value: typeId.description,\r\n                    }))}\r\n                  /> */}\r\n                </div>\r\n              </Col>\r\n              <Col md={12} lg={4}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                  <AvField\r\n                    id=\"idnumber\"\r\n                    name=\"idnumber\"\r\n                    value={\r\n                      formPrefill?.idnumber ? formPrefill.idnumber : form.name\r\n                    }\r\n                    validate={{ required: { value: true } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {form.personType === \"Natural\" && (\r\n                <>\r\n                  <Col md={6} lg={3}>\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"firstname\">{t(\"FirstName\")}</Label>\r\n                      <AvField\r\n                        type=\"text\"\r\n                        id=\"firstname\"\r\n                        name=\"firstname\"\r\n                        value={\r\n                          formPrefill?.firstname\r\n                            ? formPrefill.firstname\r\n                            : form.name\r\n                        }\r\n                        validate={{ required: { value: true } }}\r\n                        errorMessage={t(\"Required Field\")}\r\n                        onChange={hdlOnChange}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6} lg={3}>\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"secondname\">{t(\"SecondName\")}</Label>\r\n                      <AvField\r\n                        id=\"secondname\"\r\n                        name=\"secondname\"\r\n                        value={\r\n                          formPrefill?.secondname\r\n                            ? formPrefill.secondname\r\n                            : form.name\r\n                        }\r\n                        onChange={hdlOnChange}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6} lg={3}>\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"firstlastname\">\r\n                        {t(\"FirstLastName\")}\r\n                      </Label>\r\n                      <AvField\r\n                        id=\"firstlastname\"\r\n                        name=\"firstlastname\"\r\n                        value={\r\n                          formPrefill?.lastname\r\n                            ? formPrefill.lastname\r\n                            : form.name\r\n                        }\r\n                        validate={{ required: { value: true } }}\r\n                        errorMessage={t(\"Required Field\")}\r\n                        onChange={hdlOnChange}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md={6} lg={3}>\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"secondlastname\">\r\n                        {t(\"SecondLastName\")}\r\n                      </Label>\r\n                      <AvField\r\n                        id=\"secondlastname\"\r\n                        name=\"secondlastname\"\r\n                        value={\r\n                          formPrefill?.secondlastname\r\n                            ? formPrefill.secondlastname\r\n                            : form.name\r\n                        }\r\n                        onChange={hdlOnChange}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </>\r\n              )}\r\n            </Row>\r\n            <Row>\r\n              {form.personType === \"Natural\" && (\r\n                <Col md={6} lg={3}>\r\n                  <AvGroup>\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"birthDate\">{t(\"Date of birth\")}</Label>\r\n                      <Flatpickr\r\n                        id=\"birthDate\"\r\n                        name=\"birthDate\"\r\n                        value={\r\n                          formPrefill?.birthdate\r\n                            ? formPrefill.birthdate\r\n                            : form.name\r\n                        }\r\n                        placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                        options={optionsFormatDate}\r\n                        className=\"form-control d-block\"\r\n                        onChange={hdlOnChange}\r\n                      />\r\n                    </div>\r\n                  </AvGroup>\r\n                </Col>\r\n              )}\r\n              {form.personType !== \"Natural\" && (\r\n                <Col md={6} lg={3}>\r\n                  <div className=\"mb-3\">\r\n                    <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n                    <AvField\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      name=\"nameJ\"\r\n                      value={\r\n                        formPrefill?.businessName\r\n                          ? formPrefill.businessName\r\n                          : form.name\r\n                      }\r\n                      validate={{ required: { value: true } }}\r\n                      errorMessage={t(\"Required Field\")}\r\n                      onChange={hdlOnChange}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n              )}\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"nationality\">{t(\"Nationality\")}</Label>\r\n                  <Select\r\n                    id=\"nationality\"\r\n                    name=\"nationality\"\r\n                    options={\r\n                      optionsCountries.length === 0\r\n                        ? \"Loading options\"\r\n                        : optionsCountries.map((country) => ({\r\n                            label: country.Description,\r\n                            value: country.Description,\r\n                          }))\r\n                    }\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"phoneNumber\">{t(\"PhoneNumber\")}</Label>\r\n                  <AvField\r\n                    id=\"phoneNumber\"\r\n                    name=\"phoneNumber\"\r\n                    value={\r\n                      formPrefill?.phoneNumber\r\n                        ? formPrefill.phoneNumber\r\n                        : form.name\r\n                    }\r\n                    onKeyPress={(e) => {\r\n                      return checkNumber(e);\r\n                    }}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n                  <AvField\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={formPrefill?.email ? formPrefill.email : form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/* QUOTER DATA */}\r\n              <Card.Title className=\"mt-5\">{t(\"QuoterData\")}</Card.Title>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"loanType\">{t(\"Quoter type\")}</Label>\r\n                  <Select\r\n                    id=\"loanType\"\r\n                    name=\"loanType\"\r\n                    defaultValue={optionsTypeLoan[0]}\r\n                    value={form.name}\r\n                    options={optionsTypeLoan}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"amountDebt\">{t(\"Amount Debt\")}</Label>\r\n                  <AvField\r\n                    id=\"amountDebt\"\r\n                    name=\"amountDebt\"\r\n                    value={form.amountDebt}\r\n                    pattern=\"^[0-9,.]*$\"\r\n                    validate={{ required: { value: true } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    // onChange={hdlTest}\r\n                    onChange={hdlOnChange}\r\n                    onKeyUp={hdlOnKeyUpRealNumber}\r\n                    // onKeyPress={hdlOnKeyOnlNum}\r\n                    // onKeyPress={(e) => { return checkNumber(e) }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"anualRate\">{t(\"Annual rate (%)\")}</Label>\r\n                  <AvField\r\n                    id=\"anualRate\"\r\n                    name=\"anualRate\"\r\n                    value={form.anualRate}\r\n                    validate={{ required: { value: true } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    onChange={hdlOnChange}\r\n                    onKeyUp={hdlOnKeyUpPercentageNumber}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"paymentPeriod\">{t(\"Payments\")}</Label>\r\n                  <Select\r\n                    id=\"paymentPeriod\"\r\n                    name=\"paymentPeriod\"\r\n                    defaultValue={optionsPayments[0]}\r\n                    value={form.name}\r\n                    options={optionsPayments}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              {/* <Col md={6} lg={3}>\r\n                                <div className=\"mb-3\">\r\n                                    <Label htmlFor=\"effectiveRate\">{t(\"Effective rate (%)\")}</Label>\r\n                                    <AvField\r\n                                        id=\"effectiveRate\"\r\n                                        name=\"effectiveRate\"\r\n                                        value={form.name}\r\n                                        onChange={hdlOnChange}\r\n                                    />\r\n                                </div>\r\n                            </Col> */}\r\n            </Row>\r\n            <Row>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"definedPayment\">{t(\"Defined fee\")}</Label>\r\n                  <Select\r\n                    id=\"definedPayment\"\r\n                    name=\"definedPayment\"\r\n                    options={optionsConfirmation}\r\n                    defaultValue={optionsConfirmation[1]}\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"customerDefinedPayment\">\r\n                    {t(\"Defined fee value\")}\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"customerDefinedPayment\"\r\n                    name=\"customerDefinedPayment\"\r\n                    value={form.customerDefinedPayment}\r\n                    validate={{ required: { value: !disableDefinedFee } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    disabled={disableDefinedFee}\r\n                    onChange={hdlOnChange}\r\n                    onKeyUp={hdlOnKeyUpRealNumber}\r\n                    onKeyPress={(e) => {\r\n                      return checkNumber(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"feciSelect\">{t(\"Feci\")}</Label>\r\n                  <Select\r\n                    id=\"feciSelect\"\r\n                    name=\"feciSelect\"\r\n                    defaultValue={optionsConfirmation[1]}\r\n                    value={form.name}\r\n                    options={optionsConfirmation}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"feciRate\">{t(\"Feci amount\")}</Label>\r\n                  <AvField\r\n                    id=\"feciRate\"\r\n                    name=\"feciRate\"\r\n                    value={form.feciRate}\r\n                    validate={{ required: { value: !disableFeci } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    disabled={disableFeci}\r\n                    onChange={hdlOnChange}\r\n                    onKeyUp={hdlOnKeyUpPercentageNumber}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"term\">{t(\"Term (months)\")}</Label>\r\n                  <AvField\r\n                    id=\"term\"\r\n                    name=\"term\"\r\n                    value={form.term}\r\n                    validate={{ required: { value: !disableTerm } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    disabled={disableTerm}\r\n                    onChange={hdlOnChange}\r\n                    onKeyPress={(e) => {\r\n                      return checkNumber(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"gracePeriodSelect\">{t(\"Grace period\")}</Label>\r\n                  <Select\r\n                    id=\"gracePeriodSelect\"\r\n                    name=\"gracePeriodSelect\"\r\n                    options={optionsConfirmation}\r\n                    defaultValue={optionsConfirmation[1]}\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"gracePeriodType\">\r\n                    {t(\"Grace period type\")}\r\n                  </Label>\r\n                  <Select\r\n                    id=\"gracePeriodType\"\r\n                    name=\"gracePeriodType\"\r\n                    options={optionsGracePeriodType}\r\n                    defaultValue={optionsGracePeriodType[1]}\r\n                    value={form.name}\r\n                    isDisabled={disableGracePeriod}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"gracePeriod\">{t(\"Nos grace period\")}</Label>\r\n                  <AvField\r\n                    id=\"gracePeriod\"\r\n                    name=\"gracePeriod\"\r\n                    value={form.gracePeriod}\r\n                    validate={{ required: { value: !disableGracePeriod } }}\r\n                    errorMessage={t(\"Required Field\")}\r\n                    disabled={disableGracePeriod}\r\n                    onChange={hdlOnChange}\r\n                    onKeyPress={(e) => {\r\n                      return checkNumber(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12} lg={6}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"banking\">{t(\"Banking\")}</Label>\r\n                  <Select\r\n                    id=\"banking\"\r\n                    name=\"banking\"\r\n                    options={\r\n                      optionsBanks.length === 0\r\n                        ? \"Loading banking\"\r\n                        : optionsBanks.map((banking) => ({\r\n                            label: banking.Description,\r\n                            value: banking.Description,\r\n                          }))\r\n                    }\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"legalExpenses\">{t(\"Legal expenses\")}</Label>\r\n                  <AvField\r\n                    id=\"legalExpenses\"\r\n                    name=\"legalExpenses\"\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md={6} lg={3}>\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"financialTrust\">{t(\"Trust\")}</Label>\r\n                  <AvField\r\n                    id=\"financialTrust\"\r\n                    name=\"financialTrust\"\r\n                    value={form.name}\r\n                    onChange={hdlOnChange}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"d-grid mt-5\">\r\n                <Button size=\"lg\" className=\"float-end\" type=\"submit\">\r\n                  {t(\"Calculate\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Card>\r\n      </AvForm>\r\n      <LoadingOverlay\r\n        active={loading}\r\n        spinner={true}\r\n        text={t(\"Calculating payment plan\")}\r\n      ></LoadingOverlay>\r\n      {response !== null && <TableResultQuoter paymentPlan={response} />}\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}