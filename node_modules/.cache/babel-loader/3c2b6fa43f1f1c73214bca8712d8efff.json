{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\ModalNewWarrant.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, Label, Row, Col, Button } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { useEffect, useState } from 'react';\nimport { CoreServices } from '../../../../services';\nimport Select from \"react-select\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalNewWarrant = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tipoGaranteSelect, settipoGaranteSelect] = useState(undefined); // state\n\n  const [campoRequeridoGarantia, setcampoRequeridoGarantia] = useState(false);\n  const [codigoGarantia, setcodigoGarantia] = useState(null);\n  const [tiposGarantia, setTiposGarantia] = useState([]); // services\n\n  const coreServices = new CoreServices();\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    settipoGaranteSelect(undefined);\n\n    try {\n      if (tiposGarantia.length > 0 && props.dataSet.guaranteeTypeName !== null && tipoGaranteSelect === undefined) {\n        defaultVal = tiposGarantia.find(x => x.label === props.dataSet.guaranteeTypeName);\n\n        if (defaultVal !== undefined) {\n          settipoGaranteSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props, tiposGarantia]);\n  useEffect(() => {\n    cargarCatalogoGarantias();\n  }, []);\n\n  function cargarCatalogoGarantias() {\n    coreServices.getTipoGarantiaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"SelectGroup\"),\n        options: json\n      }];\n      setTiposGarantia(json);\n    });\n  }\n\n  function handleSubmit(event, errors, value) {\n    if (codigoGarantia == null) {\n      setcampoRequeridoGarantia(true);\n      return;\n    } else {\n      setcampoRequeridoGarantia(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    value.guaranteeTypeName = codigoGarantia;\n    props.guardarDatos(value, props.tipo);\n    props.toggle();\n  }\n\n  function handleCancel() {\n    props.toggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    size: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggle,\n      color: \"primary\",\n      children: t(\"Warrants\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"type\",\n                children: t(\"Warrant Type\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                onChange: e => {\n                  settipoGaranteSelect(tiposGarantia.find(x => x.label === e.label));\n                  setcodigoGarantia(e.label);\n                },\n                options: tiposGarantia,\n                value: tipoGaranteSelect,\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"SelectGroup\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), campoRequeridoGarantia ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"commercialValue\",\n                children: t(\"Commercial Value\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"commercialValue\",\n                type: \"text\",\n                validate: {\n                  number: {\n                    value: true,\n                    errorMessage: t(\"InvalidField\")\n                  }\n                },\n                value: props.dataSet.commercialValue,\n                id: \"commercialValue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"fastValue\",\n                children: t(\"Quick V-Value\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"fastValue\",\n                type: \"text\",\n                validate: {\n                  number: {\n                    value: true,\n                    errorMessage: t(\"InvalidField\")\n                  }\n                },\n                value: props.dataSet.fastValue,\n                id: \"fastValue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"observations\",\n                children: t(\"Description\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"observations\",\n                type: \"textarea\",\n                value: props.dataSet.observations,\n                id: \"observations\",\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"ltv\",\n                children: t(\"LTV%\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"ltv\",\n                type: \"text\",\n                validate: {\n                  number: {\n                    value: true,\n                    errorMessage: t(\"InvalidField\")\n                  }\n                },\n                value: props.dataSet.ltv,\n                id: \"ltv\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"appraisalDate\",\n                children: t(\"Appraisal Date\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"appraisalDate\",\n                type: \"date\",\n                value: props.dataSet.appraisalDate,\n                id: \"appraisalDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12 text-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnCancel\",\n              color: \"dark\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: handleCancel,\n              children: t(\"Cancel\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnSearch\",\n              color: \"success\",\n              type: \"submit\",\n              style: {\n                margin: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save mdi-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 112\n              }, this), \" \", \" \", props.tipo == \"COMISION\" ? t(\"Save\") : t(\"Edit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalNewWarrant, \"ZIeJiTuiF1d1KB3UlId17sZ4SVw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalNewWarrant;\nModalNewWarrant.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  toggle: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default ModalNewWarrant;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewWarrant\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/ModalNewWarrant.js"],"names":["React","PropTypes","Modal","ModalHeader","ModalBody","Label","Row","Col","Button","AvForm","AvField","AvGroup","useEffect","useState","CoreServices","Select","useTranslation","ModalNewWarrant","props","t","i18n","tipoGaranteSelect","settipoGaranteSelect","undefined","campoRequeridoGarantia","setcampoRequeridoGarantia","codigoGarantia","setcodigoGarantia","tiposGarantia","setTiposGarantia","coreServices","defaultVal","length","dataSet","guaranteeTypeName","find","x","label","err","cargarCatalogoGarantias","getTipoGarantiaCatalogo","then","response","json","i","Records","push","value","optionGroup1","options","handleSubmit","event","errors","preventDefault","guardarDatos","tipo","toggle","handleCancel","isOpen","e","number","errorMessage","commercialValue","fastValue","observations","ltv","appraisalDate","margin","botones","propTypes","onSave","func","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,KADJ,EAEIC,WAFJ,EAGIC,SAHJ,EAIIC,KAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,MAPJ,QAQO,YARP;AASA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,gCAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcJ,cAAc,EAAlC;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAACU,SAAD,CAA1D,CAF+B,CAG/B;;AACA,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDZ,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAlD,CAN+B,CAQ/B;;AACA,QAAMiB,YAAY,GAAG,IAAIhB,YAAJ,EAArB;AACAd,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AAClB;AACA,QAAImB,UAAU,GAAG,IAAjB;AACAT,IAAAA,oBAAoB,CAACC,SAAD,CAApB;;AACA,QAAI;AACA,UAAIK,aAAa,CAACI,MAAd,GAAuB,CAAvB,IAA4Bd,KAAK,CAACe,OAAN,CAAcC,iBAAd,KAAoC,IAAhE,IAAwEb,iBAAiB,KAAKE,SAAlG,EAA6G;AACzGQ,QAAAA,UAAU,GAAGH,aAAa,CAACO,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYnB,KAAK,CAACe,OAAN,CAAcC,iBAAlD,CAAb;;AACA,YAAIH,UAAU,KAAKR,SAAnB,EAA8B;AAC1BD,UAAAA,oBAAoB,CAACS,UAAD,CAApB;AACH;AACJ;AACJ,KAPD,CAQA,OAAOO,GAAP,EAAY,CAAG;AAElB,GAdD,EAcG,CAACpB,KAAD,EAAQU,aAAR,CAdH;AAeAhB,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,uBAAuB;AAC1B,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,uBAAT,GAAmC;AAC/BT,IAAAA,YAAY,CAACU,uBAAb,GACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,KAAK,IAAjB,EAAuB;AAAE;AAAS;;AAClC,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,OAAT,CAAiBb,MAArC,EAA6CY,CAAC,EAA9C,EAAkD;AAC9CD,QAAAA,IAAI,CAACG,IAAL,CAAU;AAAET,UAAAA,KAAK,EAAEK,QAAQ,CAACG,OAAT,CAAiBD,CAAjB,EAAoB,aAApB,CAAT;AAA6CG,UAAAA,KAAK,EAAEL,QAAQ,CAACG,OAAT,CAAiBD,CAAjB,EAAoB,MAApB;AAApD,SAAV;AACH;;AACD,YAAMI,YAAY,GAAG,CACjB;AACIX,QAAAA,KAAK,EAAElB,CAAC,CAAC,aAAD,CADZ;AAEI8B,QAAAA,OAAO,EAAEN;AAFb,OADiB,CAArB;AAOAd,MAAAA,gBAAgB,CAACc,IAAD,CAAhB;AACH,KAfL;AAgBH;;AAED,WAASO,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCL,KAArC,EAA4C;AACxC,QAAIrB,cAAc,IAAI,IAAtB,EAA4B;AACxBD,MAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACA;AACH,KAHD,MAGO;AACHA,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACH;;AACD0B,IAAAA,KAAK,CAACE,cAAN;;AACA,QAAID,MAAM,CAACpB,MAAP,GAAgB,CAApB,EAAuB;AACnB;AACH;;AACDe,IAAAA,KAAK,CAACb,iBAAN,GAA0BR,cAA1B;AACAR,IAAAA,KAAK,CAACoC,YAAN,CAAmBP,KAAnB,EAA0B7B,KAAK,CAACqC,IAAhC;AACArC,IAAAA,KAAK,CAACsC,MAAN;AACH;;AAED,WAASC,YAAT,GAAwB;AACpBvC,IAAAA,KAAK,CAACsC,MAAN;AACH;;AAED,sBACI,QAAC,KAAD;AAAO,IAAA,MAAM,EAAEtC,KAAK,CAACwC,MAArB;AACI,IAAA,MAAM,EAAExC,KAAK,CAACsC,MADlB;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,IAAI,EAAC,IAHT;AAAA,4BAII,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEtC,KAAK,CAACsC,MAA3B;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA,gBAAoDrC,CAAC,CAAC,UAAD;AAArD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,SAAD;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,QAAQ,EAAE+B,YAA/C;AAAA,gCACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,MAAf;AAAA,0BAAuB/B,CAAC,CAAC,cAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AACI,gBAAA,QAAQ,EAAGwC,CAAD,IAAO;AACbrC,kBAAAA,oBAAoB,CAACM,aAAa,CAACO,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAACC,KAAF,KAAYsB,CAAC,CAACtB,KAAtC,CAAD,CAApB;AAAoEV,kBAAAA,iBAAiB,CAACgC,CAAC,CAACtB,KAAH,CAAjB;AACvE,iBAHL;AAII,gBAAA,OAAO,EAAET,aAJb;AAKI,gBAAA,KAAK,EAAEP,iBALX;AAMI,gBAAA,eAAe,EAAC,mBANpB;AAOI,gBAAA,WAAW,EAAEF,CAAC,CAAC,aAAD;AAPlB;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAWKK,sBAAsB,gBACnB;AAAG,gBAAA,SAAS,EAAC,uBAAb;AAAA,0BAAsCL,CAAC,CAAC,UAAD;AAAvC;AAAA;AAAA;AAAA;AAAA,sBADmB,GAEjB,IAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAkBI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,iBAAf;AAAA,0BAAkCA,CAAC,CAAC,kBAAD;AAAnC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD;AACI,gBAAA,SAAS,EAAC,cADd;AAEI,gBAAA,IAAI,EAAC,iBAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,QAAQ,EAAE;AACNyC,kBAAAA,MAAM,EAAE;AAAEb,oBAAAA,KAAK,EAAE,IAAT;AAAec,oBAAAA,YAAY,EAAE1C,CAAC,CAAC,cAAD;AAA9B;AADF,iBAJd;AAOI,gBAAA,KAAK,EAAED,KAAK,CAACe,OAAN,CAAc6B,eAPzB;AAQI,gBAAA,EAAE,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAiCI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,WAAf;AAAA,0BAA4B3C,CAAC,CAAC,eAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD;AACI,gBAAA,SAAS,EAAC,cADd;AAEI,gBAAA,IAAI,EAAC,WAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,QAAQ,EAAE;AACNyC,kBAAAA,MAAM,EAAE;AAAEb,oBAAAA,KAAK,EAAE,IAAT;AAAec,oBAAAA,YAAY,EAAE1C,CAAC,CAAC,cAAD;AAA9B;AADF,iBAJd;AAOI,gBAAA,KAAK,EAAED,KAAK,CAACe,OAAN,CAAc8B,SAPzB;AAQI,gBAAA,EAAE,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjCJ,eAgDI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,cAAf;AAAA,0BAA+B5C,CAAC,CAAC,aAAD;AAAhC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD;AACI,gBAAA,SAAS,EAAC,cADd;AAEI,gBAAA,IAAI,EAAC,cAFT;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gBAAA,KAAK,EAAED,KAAK,CAACe,OAAN,CAAc+B,YAJzB;AAKI,gBAAA,EAAE,EAAC,cALP;AAMI,gBAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAhDJ,eA6DI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,KAAf;AAAA,0BAAsB7C,CAAC,CAAC,MAAD;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD;AACI,gBAAA,SAAS,EAAC,cADd;AAEI,gBAAA,IAAI,EAAC,KAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,QAAQ,EAAE;AACNyC,kBAAAA,MAAM,EAAE;AAAEb,oBAAAA,KAAK,EAAE,IAAT;AAAec,oBAAAA,YAAY,EAAE1C,CAAC,CAAC,cAAD;AAA9B;AADF,iBAJd;AAOI,gBAAA,KAAK,EAAED,KAAK,CAACe,OAAN,CAAcgC,GAPzB;AAQI,gBAAA,EAAE,EAAC;AARP;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA7DJ,eA4EI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,GAAR;AAAA,mCACI,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC,MAAnB;AAAA,sCACI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,eAAf;AAAA,0BAAgC9C,CAAC,CAAC,gBAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,OAAD;AACI,gBAAA,SAAS,EAAC,cADd;AAEI,gBAAA,IAAI,EAAC,eAFT;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,KAAK,EAAED,KAAK,CAACe,OAAN,CAAciC,aAJzB;AAKI,gBAAA,EAAE,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA5EJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoHI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,aAAR;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,WAAX;AAAuB,cAAA,KAAK,EAAC,MAA7B;AAAoC,cAAA,IAAI,EAAC,QAAzC;AAAkD,cAAA,KAAK,EAAE;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAzD;AAA4E,cAAA,OAAO,EAAEV,YAArF;AAAA,wBACKtC,CAAC,CAAC,QAAD;AADN;AAAA;AAAA;AAAA;AAAA,oBADJ,EAIKD,KAAK,CAACkD,OAAN,gBACG,QAAC,MAAD;AAAQ,cAAA,EAAE,EAAC,WAAX;AAAuB,cAAA,KAAK,EAAC,SAA7B;AAAuC,cAAA,IAAI,EAAC,QAA5C;AAAqD,cAAA,KAAK,EAAE;AAAED,gBAAAA,MAAM,EAAE;AAAV,eAA5D;AAAA,sCAA+E;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAA/E,EACK,GADL,OACWjD,KAAK,CAACqC,IAAN,IAAc,UAAd,GAA2BpC,CAAC,CAAC,MAAD,CAA5B,GAAuCA,CAAC,CAAC,MAAD,CADnD;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,GAGe,IAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0IH,CA9MD;;GAAMF,e;UACkBD,c;;;KADlBC,e;AAgNNA,eAAe,CAACoD,SAAhB,GAA4B;AACxBC,EAAAA,MAAM,EAAErE,SAAS,CAACsE,IAAV,CAAeC,UADC;AAExBhB,EAAAA,MAAM,EAAEvD,SAAS,CAACsE,IAFM;AAGxBb,EAAAA,MAAM,EAAEzD,SAAS,CAACwE;AAHM,CAA5B;AAOA,eAAexD,eAAf","sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Label,\r\n    Row,\r\n    Col,\r\n    Button\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { useEffect, useState } from 'react';\r\nimport { CoreServices } from '../../../../services';\r\nimport Select from \"react-select\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst ModalNewWarrant = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [tipoGaranteSelect, settipoGaranteSelect] = useState(undefined);\r\n    // state\r\n    const [campoRequeridoGarantia, setcampoRequeridoGarantia] = useState(false);\r\n    const [codigoGarantia, setcodigoGarantia] = useState(null);\r\n    const [tiposGarantia, setTiposGarantia] = useState([]);\r\n\r\n    // services\r\n    const coreServices = new CoreServices();\r\n    React.useEffect(() => {\r\n        // Read Api Service data\r\n        var defaultVal = null;\r\n        settipoGaranteSelect(undefined)\r\n        try {\r\n            if (tiposGarantia.length > 0 && props.dataSet.guaranteeTypeName !== null && tipoGaranteSelect === undefined) {\r\n                defaultVal = tiposGarantia.find(x => x.label === props.dataSet.guaranteeTypeName);\r\n                if (defaultVal !== undefined) {\r\n                    settipoGaranteSelect(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n\r\n    }, [props, tiposGarantia]);\r\n    useEffect(() => {\r\n        cargarCatalogoGarantias();\r\n    }, []);\r\n\r\n    function cargarCatalogoGarantias() {\r\n        coreServices.getTipoGarantiaCatalogo()\r\n            .then((response) => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                const optionGroup1 = [\r\n                    {\r\n                        label: t(\"SelectGroup\"),\r\n                        options: json,\r\n                    },\r\n\r\n                ];\r\n                setTiposGarantia(json);\r\n            });\r\n    }\r\n\r\n    function handleSubmit(event, errors, value) {\r\n        if (codigoGarantia == null) {\r\n            setcampoRequeridoGarantia(true);\r\n            return;\r\n        } else {\r\n            setcampoRequeridoGarantia(false);\r\n        }\r\n        event.preventDefault();\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n        value.guaranteeTypeName = codigoGarantia;\r\n        props.guardarDatos(value, props.tipo);\r\n        props.toggle();\r\n    }\r\n\r\n    function handleCancel() {\r\n        props.toggle();\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}\r\n            size=\"md\">\r\n            <ModalHeader toggle={props.toggle} color=\"primary\">{t(\"Warrants\")}</ModalHeader>\r\n            <ModalBody>\r\n                <AvForm className=\"needs-validation\" onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Col lg=\"12\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"type\">{t(\"Warrant Type\")}</Label>\r\n                                <Select\r\n                                    onChange={(e) => {\r\n                                        settipoGaranteSelect(tiposGarantia.find(x => x.label === e.label)); setcodigoGarantia(e.label);\r\n                                    }}\r\n                                    options={tiposGarantia}\r\n                                    value={tipoGaranteSelect}\r\n                                    classNamePrefix=\"select2-selection\"\r\n                                    placeholder={t(\"SelectGroup\")}\r\n                                />\r\n                                {campoRequeridoGarantia ?\r\n                                    <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n                                    : null}\r\n                            </AvGroup>\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"commercialValue\">{t(\"Commercial Value\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"commercialValue\"\r\n                                    type=\"text\"\r\n                                    validate={{\r\n                                        number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                                    }}\r\n                                    value={props.dataSet.commercialValue}\r\n                                    id=\"commercialValue\" />\r\n                            </AvGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"fastValue\">{t(\"Quick V-Value\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"fastValue\"\r\n                                    type=\"text\"\r\n                                    validate={{\r\n                                        number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                                    }}\r\n                                    value={props.dataSet.fastValue}\r\n                                    id=\"fastValue\" />\r\n                            </AvGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"12\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"observations\">{t(\"Description\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"observations\"\r\n                                    type=\"textarea\"\r\n                                    value={props.dataSet.observations}\r\n                                    id=\"observations\"\r\n                                    rows=\"4\" />\r\n                            </AvGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"ltv\">{t(\"LTV%\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"ltv\"\r\n                                    type=\"text\"\r\n                                    validate={{\r\n                                        number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                                    }}\r\n                                    value={props.dataSet.ltv}\r\n                                    id=\"ltv\" />\r\n                            </AvGroup>\r\n\r\n                        </Col>\r\n                        <Col lg=\"6\">\r\n                            <AvGroup className=\"mb-3\">\r\n                                <Label htmlFor=\"appraisalDate\">{t(\"Appraisal Date\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"appraisalDate\"\r\n                                    type=\"date\"\r\n                                    value={props.dataSet.appraisalDate}\r\n                                    id=\"appraisalDate\" />\r\n                            </AvGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"signature\">{t(\"Signature\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"signature\"\r\n                            type=\"text\"\r\n                            value={props.dataSet.signature}\r\n                            id=\"signature\" />\r\n                    </AvGroup>\r\n                    <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"trustNumber\">No. {t(\"Escrow\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"trustNumber\"\r\n                            type=\"text\"\r\n                            value={props.dataSet.trustNumber}\r\n                            id=\"trustNumber\" />\r\n                    </AvGroup>\r\n                    <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"fiduciary\">{t(\"Fiduciary\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"fiduciary\"\r\n                            type=\"text\"\r\n                            value={props.dataSet.fiduciary}\r\n                            id=\"fiduciary\" />\r\n                    </AvGroup> */}\r\n                    <Row className=\"my-2\">\r\n                        <Col xl=\"12 text-end\">\r\n                            <Button id=\"btnCancel\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={handleCancel}>\r\n                                {t(\"Cancel\")}\r\n                            </Button>\r\n                            {props.botones ?\r\n                                <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                                    {\" \"} {props.tipo == \"COMISION\" ? t(\"Save\") : t(\"Edit\")}\r\n                                </Button> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </AvForm>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n};\r\n\r\nModalNewWarrant.propTypes = {\r\n    onSave: PropTypes.func.isRequired,\r\n    toggle: PropTypes.func,\r\n    isOpen: PropTypes.bool\r\n};\r\n\r\n\r\nexport default ModalNewWarrant;\r\n"]},"metadata":{},"sourceType":"module"}