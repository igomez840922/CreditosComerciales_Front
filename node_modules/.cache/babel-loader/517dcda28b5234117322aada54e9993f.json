{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\11_DocumentacionLegal\\\\PantallaDetalle\\\\ResultadosBusqueda.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Card, CardBody, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { translationHelpers } from \"../../../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultadosBusqueda = props => {\n  _s();\n\n  const [JSONCompare, setJSONCompare] = useState(props.JSONCompare);\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [DataServer, setDataServer] = useState({\n    rotary: false,\n    commercialLoan: false,\n    multipleRotary: false,\n    rotaryNumber: false,\n    overdraft: false,\n    transfer: false,\n    bail: false,\n    trust: false,\n    agroPawn: false,\n    naturalBail: false,\n    legalBail: false,\n    crossedLegalBail: false,\n    crossedNaturalBail: false,\n    promiseLetter: false,\n    privateRecord: false,\n    trustRecord: false,\n    loanGuarantees: false,\n    fiduciaryLine: false,\n    prefinanced: false\n  });\n  const [comment, setcomment] = useState(null);\n  const [dataRows, setdataRows] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [t, c, tr] = translationHelpers('translation', 'common', 'translation');\n  const apiServiceBackend = new BackendServices();\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    setIsActiveLoading(true);\n    Promise.allSettled([LoadDocLegal(dataSession), loadComment()]).then(resp => {\n      const [{\n        value: DocLegal\n      }, {\n        value: Comment\n      }] = resp;\n      DocLegal && setDataServer(DocLegal);\n      Comment && setcomment(Comment);\n      setdataRows(drawRows(Comment, DocLegal));\n      setIsActiveLoading(false);\n    }).catch(err => {\n      setIsActiveLoading(false);\n    });\n  }, []);\n\n  function drawRows(dataServer, DocLegal) {\n    return dataServer.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: DocLegal[JSONCompare[index]],\n          name: JSONCompare[index],\n          onChange: e => {\n            SenData(e.target);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: capitalizarPrimeraLetra(data.documentName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, data.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this));\n  }\n\n  function capitalizarPrimeraLetra(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  function loadComment() {\n    return new Promise((resolve, reject) => {\n      console.log(\"loadComment\");\n      apiServiceBackend.getLegalDocsFunction().then(data => {\n        console.log(\"loadComment\");\n        resolve(data);\n      });\n    });\n  }\n\n  function LoadDocLegal(dataSession) {\n    return new Promise((resolve, reject) => {\n      apiServiceBackend.consultarDocumentacionLegal(dataSession.transactionId).then(data => {//resolve(data);\n      });\n    });\n  }\n\n  async function SenData(data) {\n    DataServer[data.name] = data.checked;\n    let Datos = {\n      transactId: locationData.transactionId,\n      ...DataServer\n    };\n    !(DataServer === null || DataServer === void 0 ? void 0 : DataServer.transactId) && apiServiceBackend.nuevoDocumentacionLegal(Datos);\n    (DataServer === null || DataServer === void 0 ? void 0 : DataServer.transactId) && apiServiceBackend.actualizarDocumentacionLegal(Datos);\n    setDataServer(DataServer);\n    setdataRows(drawRows(DataServer));\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultadosBusqueda, \"bp35Ijmh7ICDGhcHFD5pHVHz+58=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = ResultadosBusqueda;\nResultadosBusqueda.propTypes = {// results: PropTypes.array.isRequired, //Resultado de la busqueda\n};\nexport default withTranslation()(ResultadosBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultadosBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/11_DocumentacionLegal/PantallaDetalle/ResultadosBusqueda.js"],"names":["PropTypes","React","useEffect","useState","withTranslation","Link","Table","Card","CardBody","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","BackendServices","CoreServices","BpmServices","url","useLocation","useHistory","LoadingOverlay","translationHelpers","ResultadosBusqueda","props","JSONCompare","setJSONCompare","history","location","locationData","setLocationData","data","DataServer","setDataServer","rotary","commercialLoan","multipleRotary","rotaryNumber","overdraft","transfer","bail","trust","agroPawn","naturalBail","legalBail","crossedLegalBail","crossedNaturalBail","promiseLetter","privateRecord","trustRecord","loanGuarantees","fiduciaryLine","prefinanced","comment","setcomment","dataRows","setdataRows","isActiveLoading","setIsActiveLoading","t","c","tr","apiServiceBackend","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","Promise","allSettled","LoadDocLegal","loadComment","then","resp","value","DocLegal","Comment","drawRows","catch","err","dataServer","map","index","e","SenData","target","capitalizarPrimeraLetra","documentName","id","str","charAt","toUpperCase","slice","resolve","reject","console","log","getLegalDocsFunction","consultarDocumentacionLegal","name","checked","Datos","transactId","nuevoDocumentacionLegal","actualizarDocumentacionLegal","propTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { withTranslation } from \"react-i18next\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../services\";\r\n\r\nimport * as url from \"../../../../helpers/url_helper\"\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { translationHelpers } from \"../../../../helpers\"\r\n\r\n\r\nconst ResultadosBusqueda = (props) => {\r\n\r\n  const [JSONCompare, setJSONCompare] = useState(props.JSONCompare);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const [locationData, setLocationData] = useState(location.data);\r\n\r\n\r\n  const [DataServer, setDataServer] = useState({\r\n    rotary: false,\r\n    commercialLoan: false,\r\n    multipleRotary: false,\r\n    rotaryNumber: false,\r\n    overdraft: false,\r\n    transfer: false,\r\n    bail: false,\r\n    trust: false,\r\n    agroPawn: false,\r\n    naturalBail: false,\r\n    legalBail: false,\r\n    crossedLegalBail: false,\r\n    crossedNaturalBail: false,\r\n    promiseLetter: false,\r\n    privateRecord: false,\r\n    trustRecord: false,\r\n    loanGuarantees: false,\r\n    fiduciaryLine: false,\r\n    prefinanced: false,\r\n  });\r\n\r\n  const [comment, setcomment] = useState(null);\r\n  const [dataRows, setdataRows] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [t, c, tr] = translationHelpers('translation', 'common', 'translation');\r\n\r\n  const apiServiceBackend = new BackendServices();\r\n\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      } else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    } else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n\r\n    setIsActiveLoading(true);\r\n\r\n    Promise.allSettled([\r\n      LoadDocLegal(dataSession),\r\n      loadComment(),\r\n    ]).then(resp => {\r\n\r\n      const [{ value: DocLegal }, { value: Comment }] = resp;\r\n\r\n      DocLegal && setDataServer(DocLegal);\r\n\r\n      Comment && setcomment(Comment);\r\n      setdataRows(drawRows(Comment, DocLegal));\r\n\r\n      setIsActiveLoading(false);\r\n    }).catch(err => {\r\n      setIsActiveLoading(false);\r\n    });\r\n\r\n\r\n  }, []);\r\n\r\n  function drawRows(dataServer, DocLegal) {\r\n    return dataServer.map((data, index) => (\r\n      <tr key={data.id}>\r\n        <th scope=\"row\"><input type=\"checkbox\" checked={DocLegal[JSONCompare[index]]} name={JSONCompare[index]} onChange={(e) => { SenData(e.target) }} /></th>\r\n        <td>{/*JSONCompare[index]*/}{capitalizarPrimeraLetra(data.documentName)}</td>\r\n      </tr>)\r\n    );\r\n  }\r\n\r\n  function capitalizarPrimeraLetra(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  function loadComment() {\r\n    return new Promise((resolve, reject) => {\r\n      console.log(\"loadComment\");\r\n      apiServiceBackend.getLegalDocsFunction().then(data => {\r\n        console.log(\"loadComment\");\r\n        resolve(data);\r\n      })\r\n    })\r\n  }\r\n\r\n  function LoadDocLegal(dataSession) {\r\n    return new Promise((resolve, reject) => {\r\n      apiServiceBackend.consultarDocumentacionLegal(dataSession.transactionId).then(data => {\r\n        //resolve(data);\r\n      })\r\n    })\r\n  }\r\n\r\n  async function SenData(data) {\r\n\r\n    DataServer[data.name] = data.checked;\r\n\r\n    let Datos = {\r\n      transactId: locationData.transactionId,\r\n      ...DataServer\r\n    };\r\n\r\n    !DataServer?.transactId && apiServiceBackend.nuevoDocumentacionLegal(Datos)\r\n\r\n    DataServer?.transactId && apiServiceBackend.actualizarDocumentacionLegal(Datos)\r\n\r\n    setDataServer(DataServer);\r\n    setdataRows(drawRows(DataServer));\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}></LoadingOverlay>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <div className=\"table-responsive\">\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n              </thead>\r\n              <tbody>\r\n                {dataRows}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nResultadosBusqueda.propTypes = {\r\n  // results: PropTypes.array.isRequired, //Resultado de la busqueda\r\n}\r\n\r\nexport default (withTranslation()(ResultadosBusqueda));\r\n"]},"metadata":{},"sourceType":"module"}