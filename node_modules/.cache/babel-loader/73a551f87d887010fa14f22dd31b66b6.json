{"ast":null,"code":"import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\nimport ApiService from \"../ApiServiceBackend\";\nimport * as url from \"../../helpers/url_helper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport qs from 'qs';\nimport moment from \"moment\";\nexport default class Services extends ApiService {\n  //Login de Usuario\n  async getUserInfo(userName, password) {\n    try {} catch (err) {\n      console.error(\"api error guardarHistorico\", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarDocumentoAnexo(data) {\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async eliminarDocumentoAnexo(data) {\n    data = qs.stringify(data);\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\n\n    console.log(\"eliminarDocumentoAnexo\", result);\n\n    if (result.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async consultarDocumentosAnexos(params) {\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\n    var data = qs.stringify(params);\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return result.attachments;\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarHistorico(data) {\n    try {\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api error guardarHistorico\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async searchLogs(params) {\n    try {\n      var data = qs.stringify(params);\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        //return result.logs;\n        return {\n          status: 200,\n          result: result.logs\n        };\n      }\n    } catch (err) {\n      console.error(\"api error consultarHistorico\", err);\n      return {\n        status: err.response.status,\n        error: err.response.data\n      }; //errorMessage, //errorCode\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS GENERALES///////\n\n\n  async guardarDatosGeneralesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 2,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n      }\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\n      /*{\r\n      \"transactId\": 101,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n      },\r\n      \"status\": true,\r\n      \"identificationType\": \"RUC\",\r\n      \"customerDocumentId\": \"00000081\",\r\n      \"customerNumberT24\": \"\",\r\n      \"firstName\": \"Rey\",\r\n      \"secondName\": \"\",\r\n      \"firstLastName\": \"\",\r\n      \"secondLastName\": \"\",\r\n      \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      } */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS EMPRESA///////\n\n\n  async guardarDatosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n      },\r\n      \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n      },\r\n      \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n      },\r\n      \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n      },\r\n      \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n      },\r\n      \"referencePoint\": \"12\",\r\n      \"residency\": \"13\",\r\n      \"houseNumber\": \"14\",\r\n      \"phoneNumber\": 15,\r\n      \"mobileNumber\": 16,\r\n      \"workNumber\": 17,\r\n      \"email\": \"18\",\r\n      \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n      },\r\n      \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n      },\r\n      \"exclusion\": true,\r\n      \"sustainable\": true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR HISTORIAL EMPRESA///////\n\n\n  async guardarHistorialEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"description\":\"description2\",\r\n      \"employeesNumber\":\"346\",\r\n      \"details\":\"detalles2\",\r\n      \"status\":true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarHistorialEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFO ACCIONISTAS///////\n\n\n  async consultarDatosAccionistas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 24\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 23\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 22\r\n        }\r\n      ],\r\n      \"observations\": \"ALGODON\",\r\n      \"infoDate\": \"2021-11-19\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.shareholders;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1644931014,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"shareholderId\": 1,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1644931014,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarAccionista(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"shareholderId\":1\r\n      }\r\n       */\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api eliminarAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\": 107,\r\n      \"description\": \"dd5\",\r\n      \"infoDate\":1643723937\r\n      }\r\n      */\n      data = {\n        transactId: data.transactId,\n        description: data.observations == null ? \" \" : data.observations,\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\n      }; // data[\"date\"] = \"1980-11-11\";\n      // data[\"jsonData\"] = \"[{}]\";\n\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionAccionista(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n       {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n      ],\r\n      \"observations\": \"dd5\",\r\n      \"infoDate\": \"2022-01-10\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.observations;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\n\n\n  async guardarEstructuraEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"46\",\r\n      \"description\":\"estructura1\",\r\n      \"date\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarEstructuraEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\n      /*{\r\n      \"transactId\": 44,\r\n      \"observations\": \"estructura2\",\r\n      \"infoDate\": \"2022-01-19\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GOBIERNO CORPORATIVO///////\n\n\n  async consultarDatosGobiernoCorporativo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\n      /*\r\n      {\r\n      \"corporateGobernance\": [],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGobiernoCorporativo(data) {\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n    }\r\n     */\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  }\n\n  async actualizarGobiernoCorporativo(data) {\n    try {\n      /*{\r\n      \"transactId\":\"101\",\r\n      \"corporateIdentification\":30,\r\n      \"name\":\"updated-name\",\r\n      \"position\":\"jjjj\",\r\n      \"birthDate\":\"1985-11-27\",\r\n      \"age\":32\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGobiernoCoporativo(data) {\n    /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":17\r\n    } */\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  } ////IGR - RELEVO GENERACIONAL ///////\n\n\n  async consultarDatosRelevoGeneracional(transactId) {\n    try {\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n      },\r\n      \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 12,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 13,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 38,\r\n            \"name\": \"vnombre character varying\",\r\n            \"position\": \"vcargo character varying\",\r\n            \"birthDate\": \"1998-08-17\",\r\n            \"age\": 23,\r\n            \"relationship\": \"vrelacion character varying\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"name\":\"vnombre character varying\",\r\n      \"position\":\"vcargo character varying\",\r\n      \"birthDate\":\"1998-08-17\",\r\n      \"age\":23,\r\n      \"relationship\":\"vrelacion character varying\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":10,\r\n      \"name\":\"vnombre character varying\",\r\n      \"position\":\"vcargo character varying\",\r\n      \"birthDate\":\"1998-08-17\",\r\n      \"age\":23,\r\n      \"relationship\":\"vrelacion character varying\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelevoGeneracional(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":10\r\n      }*/\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionRelevoGeneracional(data) {\n    try {\n      /*{    \r\n      \"transactId\":1,\r\n      \"observations\":\"ncn\",\r\n      \"status\":true,\r\n      \"date\":\"2022-01-14\"    \t\r\n      }*/\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        data[\"date\"] = moment().format(\"YYYY-MM-DD\");\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionRelevoGeneracional(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n       \"transactId\": 200,\r\n       \"observations\": \"ncn\",\r\n       \"status\": true,\r\n       \"date\": \"2022-01-14\"\r\n      }\r\n      } */\n\n      return result.getManagementRelaysInfoResponseDTO.observations;\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR Flujo Operativo///////\n\n\n  async guardarFlujoOperativo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"observations\":\"ee445\",\r\n      \"infoDate\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFlujoOperativo(transactId) {\n    try {\n      //vidtramite=44&vidproceso=5&vidactividad=1\n      var params = {\n        vidtramite: transactId,\n        vidproceso: opt.PROCESS_INFORMEGESTION,\n        vidactividad: opt.ACT_FLUJOOPERATIVO\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 199,\r\n      \"observations\": \"prueba\",\r\n      \"infoDate\": \"2021-12-29\",\r\n      \"status\": true,\r\n      \"attachments\": []}\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - EMPRESAS RELACIONADAS///////\n\n\n  async consultarDatosEmpresaRelacionada(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"observations\": \"tets\",\r\n      \"date\": \"2022-01-24\",\r\n      \"estado\": true,\r\n      \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"companyId\": 11\r\n      } */\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"trasactId\":1,\r\n      \"companyId\":15,\r\n      \"name\":\"maicol up\",\r\n      \"activity\":\"actividad up\",\r\n      \"sectorExperience\":10,\r\n      \"relationship\":\"relaciona up\",\r\n      \"status\":true\r\n      }*/\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEmpresaRelacionada(data) {\n    try {\n      /*trasactId:101,companyId:11 */\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionEmpresaRelacionada(data) {\n    try {\n      data = {\n        \"trasactId\": data.trasactId,\n        \"description\": data.observations\n      };\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN CLIENTE ///////\n\n\n  async consultarListaClientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":104,    \r\n      \"name\":\"enrique5\",\r\n      \"country\":\"pana\",\r\n      \"salePercentage\":75.55,\r\n      \"customerType\":\"cred\",\r\n      \"salesType\":\"cred\", \r\n      \"delayReason\":\"cred\",\t\r\n      \"termDays\":90\r\n      }\r\n         */\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"customerInfoId\": 14,\r\n      \"name\": \"enrique5\",\r\n      \"country\": \"pana\",\r\n      \"salePercentage\": 75.55,\r\n      \"customerType\": \"cred\",\r\n      \"salesType\": \"cred\",\r\n      \"delayReason\": \"cred\",\r\n      \"termDays\": 90,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INFOCLIENTE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarClienteIGR(data) {\n    try {\n      /*transactId:101,customerIdentification:2 */\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionClienteIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"seasonalSales\": false,\r\n      \"percSeasonalPeriodSales\": 0.5,\r\n      \"dateInformation\": \"2022-01-14\"\r\n      }*/\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionClienteIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n      }\r\n      }\r\n      */\n\n      return result.clientSectionCompaniesDTO;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN PROVEEOR ///////\n\n\n  async consultarListaProveedoresIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\n      /**/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"name\": \"Provedor de prueba\",\r\n      \"oldRelationship\": 2,\r\n      \"percentPurchases\": 2.35788,\r\n      \"creditDays\": 30,\r\n      \"negotiationConditions\": \"prueba de negociacion\",\r\n      \"country\": \"panama\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 11,\r\n      \"providerId\": 1,\r\n      \"name\": \"provedor actualizado\",\r\n      \"oldRelationship\": 52,\r\n      \"percentPurchases\": 30.255,\r\n      \"creditDays\": 20,\r\n      \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n      \"country\": \"colombia\",\r\n      \"status\": false\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProveedorIGR(data) {\n    try {\n      /*transactId:101,vidproveedor:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionProveedorIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"description\": \"descripcion text\",\r\n      \"purchasingCycle\": \"ciclocompras character varying\"\r\n      }*/\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionProveedorIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.suppliersList;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN RECIPROCIDAD ///////\n\n\n  async consultarListaReciprocidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\n      /*{\r\n      \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 108,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"reciprocity_id\":1,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarReciprocidadIGR(data) {\n    try {\n      /*transactId:101,reciprocityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionReciprocidad(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"observations\":\"Cambios\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionReciprocidad(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.observations;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\n\n\n  async consultarActivosFijosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_FACILIDADACTIVOSFIJOS\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\n      /*\r\n      {\r\n      \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"attachments\": [],\r\n      \"variationsAssets\": null,\r\n      \"variationsAssetsObs\": null,\r\n      \"manufacturingAgroCompanies\": null,\r\n      \"productionLine\": null,\r\n      \"capacity\": null,\r\n      \"usedCapacity\": null,\r\n      \"tradingCompany\": null,\r\n      \"warehouseCapacity\": null,\r\n      \"transportDistributionFleet\": null,\r\n      \"units\": null,\r\n      \"renovation\": null,\r\n      \"status\": null,\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\":0.00,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"facilityAssetId\":2,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\": 10.55,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarActivosFijosIGR(data) {\n    try {\n      /*transactId:101,fixedAssetId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"variationsAssets\": true,\r\n      \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n      \"manufacturingAgroCompanies\": true,\r\n      \"productionLine\": \"vlineaproduccion\",\r\n      \"capacity\": \"vcapacidad\",\r\n      \"usedCapacity\": \"vcapacidadutilizada\",\r\n      \"tradingCompany\": true,\r\n      \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n      \"transportDistributionFleet\": true,\r\n      \"units\": \"vunidades\",\r\n      \"renovation\": \"vrenovacion\",\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN SEGUROS ///////\n\n\n  async consultarSegurosEmpresaIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result.companyInsurance;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"company\":\"Comision\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-30\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"insuranceId\":1,\r\n      \"company\":\"Company\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-27\",\r\n      \"status\":\"true\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSegurosEmpresaIGR(data) {\n    try {\n      /*transactId:101,InsuranceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\n\n\n  async guardarArquitecturaEmpresarialIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\":\"Ganaderia\",\r\n      \"auditedAreas\":\"Santander\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode !== \"200\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarArquitecturaEmpresarialIGR(transactId) {\n    try {\n      var params = {\n        vidtramite: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_ARQUITECTURAEMPRESARIAL\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\": \"Ganaderia\",\r\n      \"auditedAreas\": \"Santander\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      }\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - COMPERTIDORES DEL MERCADO ///////\n\n\n  async consultarCompetidores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\n      /*{\r\n      \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n      \"competitorId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\",\r\n      \"status\":true\r\n      }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n      }\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"competitorId\":8,\r\n      \"name\":\"CARRERA\",\r\n      \"description\":\"LISTA CARRERA\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCompetidorIGR(data) {\n    try {\n      /*transactId:101,competitorId:2 */\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - PROYECCIONES ///////\n\n\n  async consultarProyecciones(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\n      /*\r\n      {\r\n      \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarProyecciones(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"descripcion\":\"gggsgsgsgsgs\",\r\n      \"assetsOperatingAmount\":3,\r\n      \"assetsOperatingReason\":\"jhfjshdhshd\",\r\n      \"fixedAssetsAmount\":3,\r\n      \"fixedAssetsReason\":\"jhfjshdhshd\",\r\n      \"othersAssetsAmount\":3,\r\n      \"othersAssetsReason\":\"jhfjshdhshd\",\r\n      \"bankAmount\":3,\r\n      \"bankReason\":\"jhfjshdhshd\",\r\n      \"providersAmount\":3,\r\n      \"providersReason\":\"jhfjshdhshd\",\r\n      \"capitalAmount\":3,\r\n      \"capitalReason\":\"jhfjshdhshd\",\r\n      \"maximodeuda\":3,\r\n      \"estimatedDate\":\"2022-01-15\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACION GARANTES///////\n\n\n  async consultarGarantes(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n        */\n\n      return result.guarantors;\n    } catch (err) {\n      console.error(\"api ConsultarGarantes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"documentType\": \"CED\",\r\n      \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre character varying\",\r\n      \"secondName\": \"vsegnombre character varying\",\r\n      \"lastName\": \"vapellido character varying\",\r\n      \"secondLastName\": \"vsegapellido character varying\",\r\n      \"guarantorRelationship\": \"vrelaciongarante text\",\r\n      \"origin\": \"vprocedenciabien text\",\r\n      \"guarantorCommitment\": \"vcompromisogarante text\",\r\n      \"warrantyReason\": \"vrazongarantia text\"\r\n      }\r\n      */\n      return await this.post(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"guarantorId\": 1,\r\n      \"documentType\": \"vtipodocumento up\",\r\n      \"guarantorDocument\": \"vdocumentogarante up\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre up\",\r\n      \"secondName\": \"vsegnombre up\",\r\n      \"lastName\": \"vapellido up\",\r\n      \"secondLastName\": \"vsegapellido up\",\r\n      \"guarantorRelationship\": \"vrelaciongarante up\",\r\n      \"origin\": \"vprocedenciabien up\",\r\n      \"guarantorCommitment\": \"vcompromisogarante up\",\r\n      \"warrantyReason\": \"vrazongarantia up\",\r\n      \"date\": \"2022-01-18\",\r\n      \"status\": true}\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      return await this.put(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarante(data) {\n    try {\n      /*transactId:101,guarantorId:2 */\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW ACTUAL ///////\n\n\n  async consultarSowActualIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n      data.status = true;\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowActualIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW PROPUESTO ///////\n\n\n  async consultarSowPropuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowPropuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowPropuestoIGR(data) {\n    try {\n      data.status = true;\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowPropuestoIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - ASPECTOS AMBIENTALES///////\n\n\n  async consultarAspectosAmbientalesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarAspectosAmbientales: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarAspectosAmbientalesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\n      }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\n\n\n  async consultarRelacionesBancariasDeudasCP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*transactId:101,debtId:1 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\n\n\n  async consultarRelacionesBancariasDeudasLP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*transactId:101,debtId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARIAS SECCION///////\n\n\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRelacionesBancariasSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - DOLLAR ///////\n\n\n  async consultarFlujoCajaDollar(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaDollar(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaDollar(data) {\n    try {\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaDollar(data) {\n    try {\n      /*transactId:101,cashFlowDolarId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\n\n\n  async consultarFlujoCajaServicioDeudas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n      }\r\n        */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n        */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaServicioDeudas(data) {\n    try {\n      /*transactId:101,cashFlowDebtServiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - EGRESOS ///////\n\n\n  async consultarFlujoCajaEgresos(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\n      /*{\r\n        {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaEgresos(data) {\n    try {\n      /*transactId:101,cashFlowOutcomeId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data); //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\n\n\n  async consultarFlujoCajaCargaTrabajo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*transactId:101,cashFlowWorkloadId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - INGRESOS ///////\n\n\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*transactId:101,cashFlowInvoiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - COBRANZAS ///////\n\n\n  async consultarFlujoCajaCobranzas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCobranzas(data) {\n    try {\n      /*transactId:101,cashFlowCollectiond:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MOVIMIENTOS DE CUENTAS ///////\n\n\n  async consultarMovimientosCuentasIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.movements;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":1,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":109,\r\n      \"movementId\":12,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMovimientosCuentasIGR(data) {\n    try {\n      /*transactId:101,movementId:12 */\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionMovimientosCuentas(data) {\n    try {\n      /*{\r\n      \"trasactId\":101,\r\n      \"observations\":\"test\"\r\n      } */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\n      }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionMovimientosCuentas(transactId) {\n    try {\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\n      return result.movements[0];\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CUENTAS POR COBRAR ///////\n\n\n  async consultarCuentasCobrarIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_CUENTASPORCOBRAR\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result.accountsReceivable;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCuentasCobrarIGR(data) {\n    try {\n      /*data={transactId:101,accountReceivableId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX ///////\n\n\n  async consultarCapexIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexIGR(data) {\n    try {\n      /*data={transactId:101,capexsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX PRESUPUESTO ///////\n\n\n  async consultarCapexPresupuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexPresupuestoIGR(data) {\n    try {\n      /*data={transactId:101,capexId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX DETALLES PROYECTO ///////\n\n\n  async consultarCapexDetalleProyectoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexDetalleProyectoIGR(data) {\n    try {\n      /*data={transactId:101,capexDetailsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RECOMENDACIONES ///////\n\n\n  async consultarRecomendacionesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRecomendacionesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\n      }\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MATRIZ OTROS BANCOS ///////\n\n\n  async consultarMatrizOtrosBancosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\n      /*{\r\n      \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"otherBankId\":1,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\":3.5,\r\n      \"participation\":5.2,\r\n      \"longTerm\":1.200,\r\n      \"shortTerm\":600,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizOtrosBancosIGR(data) {\n    try {\n      /*transactId:101,otherBankId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizExpedientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\n      /*{\r\n      \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"filesId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizExpedientesIGR(data) {\n    try {\n      /*transactId:101,filesId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizNuevosNegociosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\n      /*{\r\n      \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"businessType\": {\r\n      \"code\":\"Papeleria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Bueno\",\r\n      \"observations\":\"Ventas productos oficina\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":2,\r\n      \"newBusinessId\":2,\r\n      \"businessType\": {\r\n      \"code\":\"Cigarreria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Excelente\",\r\n      \"observations\":\"Ventas productos canasta familiar\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*transactId:101,newBusinessId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizRentabilidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\n      /*{\r\n      \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Otros Bancos\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 50.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"profitabilityId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Nuevo negocio\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 500.000,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizRentabilidadIGR(data) {\n    try {\n      /*transactId:101,profitabilityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarMatrizSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"Observacion\"}\r\n      */\n      //Guardamos Busqueda y Descarte\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data); //OK\n\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //Si es 500, la entidad existe... si existe lo actualizamos\n\n      if (result.statusCode === \"500\") {\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizSeccionIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\n      /*\r\n            {\r\n      \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.competitiveMatrix[0];\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizPosicionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.positions;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"positionId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*transactId:101,positionId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n      ]\r\n      }*/\n\n      return result.transactionals;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"transactionalId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*transactId:101,transactionalId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR NEGOCIOS A OBTENER///////\n\n\n  async guardarNegocioObtenerIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarNegocioObtenerIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////BUSQUEDA y DESCARTE///////\n\n\n  async guardarBusquedaDescarte(data) {\n    try {\n      var model = BusquedaDescarteModel.getSaveModel(data); //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } //Si es 500, la entidad existe... si existe lo actualizamos\n\n\n      if (result.statusCode === \"500\") {\n        //rutima para actualizar aun no existe\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarBusquedaDescarte(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_BUSQUEDADESCARTE,\n        activityId: opt.ACT_NONE\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\n\n      if (result.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ///////// USUARIO PROSPECTO ////////////\n\n\n  async guardarUsuarioProspecto(data) {\n    let result = undefined;\n\n    try {\n      //Actualizar\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\n        var userModel = UsuarioProspectoModel.getUpdateModel(data); //Actualizamos Usuario Prospecto\n\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.statusCode === \"200\") {\n          result.customerId = data.customerId;\n          result.transactId = data.transactId;\n          return result;\n        }\n      } else {\n        //Nuevo\n        userModel = UsuarioProspectoModel.getSaveModel(data);\n        console.log(\"guardarUsuarioProspecto\", userModel); //Guardamos Nuevo Usuario Prospecto\n\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.status.statusCode === \"200\") {\n          return result;\n        }\n      }\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n          data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n          //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n            result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n            return result;\r\n        }\r\n      }\r\n      */\n\n    } catch (err) {\n      console.error(\"api guardarUsuarioProspecto: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarUsuarioProspecto(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\n      /*\r\n            {\r\n      \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      return result.costumer[0];\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarCumplimiento(data) {\n    try {\n      var model = {\n        transactId: data.transactId,\n        compliance: true,\n        observations: data.observationsSearchDiscard,\n        approved: true,\n        observationsComp: data.observationsComp\n      }; //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarCumplimiento\", err);\n    }\n\n    return undefined;\n  } ///////////////////////////////////////\n\n\n  async consultarTramiteInbox(username) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        responsible: username\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarTramiteInbox(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"instanceId\":1,\r\n      \"customerId\":3,\r\n      \"currentProcess\":5,\r\n      \"nextprocess\":6,\r\n      \"responsible\":\"userTest\",\r\n      \"date\":\"2021-12-10\",\r\n      \"status\":true,\r\n      \"requestId\":3\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusion() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarListaExclusion(transaccionId, exclusionId) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    try {\n      let data = {\n        \"transactId\": transaccionId,\n        \"exclusionCatListId\": exclusionId\n      };\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.err(\"api guardarListaExclusion\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusionMarcada(params) {\n    var data = qs.stringify(params);\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\n  }\n\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\n    try {\n      var data = {\n        transactId: transactId,\n        exclusionId: exclusionId\n      };\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarListaExclusionMarcada: \", err);\n    }\n\n    return undefined;\n  } ////////////////////////////////////////////////////////////////\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\n\n\n  async nuevoDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"customerNumber\":\"123\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\":\"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1.55,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2021-12-20\",\r\n      \"lastRequestDate\":\"2021-10-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"requestId\": \"XYZ682022\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n      // if (result.statusCode === \"200\") {\n      //   //Nota: Actualizar Variable en BPM de requestId\n      //   return result;\n      // }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"requestId\":\"XYZ682022\",\r\n      \"customerNumber\":\"1\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\": \"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca-cambio\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2022-01-20\",\r\n      \"lastRequestDate\":\"2022-01-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\",\r\n      \"status\":true,\r\n      \"date\":\"2022-01-20\"\r\n      }\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesPropCred(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\n      /*\r\n            {\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n      ]\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.data;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesPropCred: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FACILIDAD ///////\n\n\n  async nuevoFacilidadPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"cr\": \"\",\r\n      \"amount\": 22.5,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilityId\": 5\r\n      } */\n\n      return result.facilityId;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFacilidadPropCred(data) {\n    try {\n      data.facilityId = 12;\n      data.requestId = \"XYZ892022\";\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n      \"cr\": \"\",\r\n      \"amount\": 22.4,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFacilidadPropCred(facilityId, requestId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        facilityId: facilityId,\n        requestId: requestId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\n      /*\r\n            const json ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n      }\r\n      }\r\n            */\n\n      return result.facilitiesDetailDTO;\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - DESEMBOLSO///////\n\n\n  async consultarListaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\n\n      return result.disbursements;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":\"2\",\r\n      \"disbursementTypeId\":\"disbursementTypeId2\",\r\n      \"observations\":\"observations2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"disbursementTypeId\":\"update2\",\r\n      \"observations\":\"updated obs\",\r\n      \"status\":true,\r\n      \"disbursementId\":2\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementId: disbursementId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\n\n\n  async consultarListaProgramaPagoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n      ]\r\n      }*/\n\n      return result.paymentProgramDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\"    \r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"paymentProgramId\": \"5\"\r\n      }*/\n\n      if (result.serviceResponseTO.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\",\r\n      \"paymentProgramId\":5, \r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        paymentProgramId: paymentProgramId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - COMISION///////\n\n\n  async consultarComisionPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\n      /*{\r\n      \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.commission;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":2,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\",\r\n      \"status\":true,\r\n      \"commissionId\":14\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarComisionPropCred(facilityId, commissionId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        commissionId: commissionId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\n\n\n  async consultarFormaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\n      /*{\r\n      \"facilityId\": 2,\r\n      \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.disbursementForm;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\": \"2\",\r\n      \"typedistrenchment\":\"tipodesembolso \",\r\n      \"description\":\"description ingreso\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\":2,\r\n      \"typedistrenchment\":\"tipodesembolso\",\r\n      \"description\":\"description actualizada\",\r\n      \"status\":true,\r\n      \"disbursementid\":1\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementFormId: disbursementFormId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - GARANTIA///////\n\n\n  async consultarGarantiaPropCred(facilityId) {\n    try {\n      var params = {\n        requestId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\n      /*{\r\n      \"requestId\": \"2\",\r\n      \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result.guarantees;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"guaranteeId\": 1,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeId\": 1,\r\n      \"guaranteeTypeName\": \"2\",\r\n      \"commercialValue\": 655,\r\n      \"fastValue\": 800,\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": 700,\r\n      \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n      \"signature\": \"firma prueba actualizada\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n      \"status\": false\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\n    try {\n      var data = {\n        requestId: facilityId,\n        guaranteeId: guaranteeId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FIANZAS///////\n\n\n  async consultarFianzaPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\n      /*{\r\n      \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.bails;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFianzaPropCred(facilityId, idBail) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        idBail: idBail\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } /////ANALISIS DE CREDITO //////\n  ///////////////////////////////\n  //Balance Pasivo\n\n\n  async checkBalancePassiveAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\n      /*\r\n      {\r\n      \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.passiveCapitalBalance;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2018,\r\n      \"year2\": 2019,\r\n      \"year3\": 2020,\r\n      \"year4\": 2021,\r\n      \"presentYear\":2022\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"itemPassiveId\":2,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2017,\r\n      \"year2\": 2018,\r\n      \"year3\": 2019,\r\n      \"year4\": 2020,\r\n      \"presentYear\":2021,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemPassiveId: itemPassiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async queryStateOriginApplicationsAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      return result.sourceApplicationsStates;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"sourceApplicationItemId\": 4,\r\n      \"sourceApplicationItem\": \"origen 2up\",\r\n      \"year1\": 55,\r\n      \"year2\": 66,\r\n      \"year3\": 77,\r\n      \"year4\": 88,\r\n      \"presentYear\": 99,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        sourceApplicationItemId: sourceApplicationItemId\n      };\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async checkActiveBalanceAC(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n      ]\r\n      } */\n\n      return result.activeBalances;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async newActiveBalanceAC(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async updateActiveBalanceAC(data) {\n    try {\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\n    try {\n      var data = {\n        requestId: transactId,\n        itemActiveId: itemActiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async queryACIndicator(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"indicatorDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 1,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.55,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.55,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 2,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.56,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.56,\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.indicatorDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async newACIndicator(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicators\": \"fghf\",\r\n      \"year1\": 0.55,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.55\r\n      }\r\n          */\n      var result = await this.post(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarIndicadorAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicatorsId\": 1,\r\n      \"itemIndicators\": \"1111\",\r\n      \"year1\": 0.56,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.56,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarIndicadorAC(transactId, itemIndicatorsId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemIndicatorsId: itemIndicatorsId\n      };\n      var result = await this.del(url.URL_BACKEND_INDICADORAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //POLITICAS DE CREDITOS - INFORME FINANCIERO\n\n\n  async consultarPoliticaCredito(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\n      /*{\r\n      \"creditPolicy\": [\r\n          {\r\n              \"transactId\": 1,\r\n            \"debtorId\": 7,\r\n            \"itemId\": 1,\r\n            \"parameter\": \"Reglas\",\r\n            \"condition\": \"Restriccion\",\r\n            \"comply\": false,\r\n            \"observations\": \"Politicas de Credito\",\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.creditPolicy;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        itemId: itemId\n      };\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //INFORMACION FINANCIERA - INFORME FINANCIERO\n\n\n  async consultarInformiacionFinancieraFiadores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOFINANCIERA + \"?\" + data);\n      /*{\r\n      \"finantialInfoGuarantor\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"debtorId\": 1,\r\n            \"guarantorId\": 1,\r\n            \"personType\": \"NATURAL\",\r\n            \"identificationType\": \"CEDULA\",\r\n            \"identificationNumber\": \"987654\",\r\n            \"firstName\": \"ANDREA\",\r\n            \"secondName\": \"JOSEFINA\",\r\n            \"firstLastName\": \"VELASQUEZ\",\r\n            \"secondLastName\": \"BARROS\",\r\n            \"share\": 500.000,\r\n            \"activeCash\": 250.000,\r\n            \"activeShares\": 160.000,\r\n            \"passiveLoan\": 50.000,\r\n            \"personalWealth\": 850.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.finantialInfoGuarantor;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoInformacionFinancieraFiadores(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"debtorId\":2,\r\n      \"personType\":\"NATURAL\",\r\n      \"identificationType\":\"CEDULA\",\r\n      \"identificationNumber\":\"987654\",\r\n      \"firstName\":\"ANDREA\",\r\n      \"secondName\":\"JOSEFINA\",\r\n      \"firstLastName\":\"VELASQUEZ\",\r\n      \"secondLastName\":\"BARROS\",\r\n      \"share\":500.000,\r\n      \"activeCash\":250.000,\r\n      \"activeShares\":160.000,\r\n      \"passiveLoan\":50.000,\r\n      \"personalWealth\":850.000\r\n      }\r\n      */\n      data.transactId = Number(data.transactId);\n      data.share = Number(data.share);\n      data.activeCash = Number(data.activeCash);\n      data.activeShares = Number(data.activeShares);\n      data.passiveLoan = Number(data.passiveLoan);\n      data.personalWealth = Number(data.personalWealth);\n      var result = await this.post(url.URL_BACKEND_INFOFINANCIERA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarInformacionFinancieraFiadores(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"debtorId\":2,\r\n      \"guarantorId\":2,\r\n      \"personType\":\"NATURAL\",\r\n      \"identificationType\":\"CEDULA\",\r\n      \"identificationNumber\":\"987654\",\r\n      \"firstName\":\"ANDREA\",\r\n      \"secondName\":\"JOSEFINA\",\r\n      \"firstLastName\":\"VELASQUEZ\",\r\n      \"secondLastName\":\"BARROS\",\r\n      \"share\":500.000,\r\n      \"activeCash\":250.000,\r\n      \"activeShares\":160.000,\r\n      \"passiveLoan\":50.000,\r\n      \"personalWealth\":850.000,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INFOFINANCIERA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarInformacionFinancieraFiadores(transactId, debtorId, guarantorId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        guarantorId: guarantorId\n      };\n      var result = await this.del(url.URL_BACKEND_INFOFINANCIERA + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //INFORMACION FINANCIERA - INFORME FINANCIERO\n\n\n  async consultarDetalleOpinionRiesgoCredito(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"opinions\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.opinions;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDetalleOpinionRiesgoCredito(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_OPINIONRIESGOCREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDetalleOpinionRiesgoCredito(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion-updated\",\r\n       \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_OPINIONRIESGOCREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDetalleOpinionRiesgoCredito(transactId) {\n    try {\n      var data = {\n        requestId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //CONCLUSIONES Y RECOMENDACIONES - INFORME FINANCIERO\n\n\n  async consultarConclusionesRecomendacionesAnalisisFinanciero(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"conclusionFinantialAnalysisDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.conclusionFinantialAnalysisDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoConclusionesRecomendacionesAnalisisFinanciero(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarConclusionesRecomendacionesAnalisisFinanciero(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13a\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarConclusionesRecomendacionesAnalisisFinanciero(transactId, debtorId) {\n    try {\n      var data = {\n        requestId: transactId,\n        debtorId: debtorId\n      };\n      var result = await this.del(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\n\n\n  async consultarInformacionRiesgoAmbiental(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + data);\n      /*{\r\n      \"transactId\": 101,\r\n      \"environmentCovenant\": true,\r\n      \"detail\": \"Detalle\",\r\n      \"compliance\": \"Incumplido\",\r\n      \"term\": \"Indefinido\",\r\n      \"detected\": \"Sin detectar\",\r\n      \"recommendations\": \"Recomendar\",\r\n      \"conclusions\": \"Concluido\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoInformacionRiesgoAmbiental(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"environmentCovenant\":true, \r\n      \"detail\":\"Detalle\", \r\n      \"compliance\":\"Incumplido\", \r\n      \"term\":\"Indefinido\", \r\n      \"detected\":\"Sin detectar\", \r\n      \"recommendations\":\"Recomendar\", \r\n      \"conclusions\":\"Concluido\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarInformacionRiesgoAmbiental(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"environmentCovenant\":true, \r\n      \"detail\":\"Detalle\", \r\n      \"compliance\":\"Incumplido\", \r\n      \"term\":\"Indefinido\", \r\n      \"detected\":\"Sin detectar\", \r\n      \"recommendations\":\"Recomendar\", \r\n      \"conclusions\":\"Concluido\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarInformacionRiesgoAmbiental(transactId) {\n    try {\n      var data = {\n        transactId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\n\n\n  async consultarRiesgoCreditoComercial(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + data);\n      /*{\r\n      \"transactId\": 1,\r\n      \"conclusions\": \"Recomendaciones\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.generalDataCreditRisk;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRiesgoCreditoComercial(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"conclusions\":\"Recomendaciones\"  \r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RIESGOCREDITOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRiesgoCreditoComercial(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"conclusions\":\"Recomendaciones\",\r\n      \"status\":true  \r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RIESGOCREDITOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRiesgoCreditoComercial(transactId) {\n    try {\n      var data = {\n        transactId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarNumeroFideicomiso(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"trustInfo\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustName\": \"BASA FID 2004\",\r\n              \"trustNumber\": \"2004\",\r\n              \"conclusions\": \"conclusions\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      } */\n\n      return result.trustInfo;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoNumeroFideicomiso(data) {\n    try {\n      /*{\r\n      \"transactId\":\"200\",\r\n      \"conclusions\":\"conclusions\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_NUMEROFIDEICOMISO, data); //saveProposalData\n      //OK\n\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"trustNumber\": \"2004\",\r\n      \"trustName\": \"BASA FID 2004\"\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarNumeroFideicomiso(data) {\n    try {\n      /*{\r\n      \"transactId\":\"1\",\r\n      \"conclusions\":\"conclusions\",\r\n      \"status\":\"true\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_NUMEROFIDEICOMISO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarNumeroFideicomiso(transactId) {\n    try {\n      var data = {\n        requestId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarListaFideicomitentes(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + data);\n      /*{\r\n      \"trustors\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 3,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 4,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.trustors;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevaListaFideicomitentes(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_FIDEICOMITENTES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarListaFideicomitentes(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"trustorId\":3,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_FIDEICOMITENTES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarListaFideicomitentes(transactId, trustorId) {\n    try {\n      var data = {\n        transactId: transactId,\n        trustorId: trustorId\n      };\n      var result = await this.del(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarTipoFiduciarioYOtrosDatos(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"finantialCommissionDTO\": {\r\n          \"transactId\": 101,\r\n          \"structuring\": \"t2\",\r\n          \"facilityType\": \"t2\",\r\n          \"creditLineRot\": \"t2\",\r\n          \"creditLineNoRot\": \"t2\",\r\n          \"declineLoan\": \"t2\",\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.finantialCommissionDTO;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarTipoFiduciarioYOtrosDatos(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"structuring\": \"t2\",\r\n      \"facilityType\": \"t2\",\r\n      \"creditLineRot\": \"t2\",\r\n      \"creditLineNoRot\": \"t2\",\r\n      \"declineLoan\": \"t2\",\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarListaBeneficiarioSecundario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + data);\n      /*{\r\n      \"beneficiaries\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 5,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 2,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.beneficiaries;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevaListaBeneficiarioSecundario(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarListaBeneficiarioSecundario(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"beneficiaryId\":2,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarListaBeneficiarioSecundario(transactId, beneficiaryId) {\n    try {\n      var data = {\n        transactId: transactId,\n        beneficiaryId: beneficiaryId\n      };\n      var result = await this.del(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\n\n\n  async consultarSeccionServiciosFiduciario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_SERVICIOSFIDUCIARIOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"fiduciaryServicesDTOS\": {\r\n          \"transactId\": 1,\r\n          \"guaranteetrust\": 32.3,\r\n          \"administrationTrust\": 23.1,\r\n          \"investmentTrust\": 1.1,\r\n          \"stateTrust\": 22.0,\r\n          \"scrowAccount\": 345.0,\r\n          \"description\": \"dsadsad\",\r\n          \"others\": 12.3,\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.fiduciaryServicesDTOS;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionServiciosFiduciario(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"guaranteetrust\": 32.3,\r\n      \"administrationTrust\": 23.1,\r\n      \"investmentTrust\": 1.1,\r\n      \"stateTrust\": 22,\r\n      \"scrowAccount\": 345,\r\n      \"description\": \"dsadsad\",\r\n      \"others\": \"12.3\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data); //saveProposalData\n\n      if (+result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\n\n\n  async consultarSeccionOtrosServiciosFiduciario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"otherFiduciaryServicesDTO\": {\r\n          \"transactId\": 1,\r\n          \"proposal\": 12.6,\r\n          \"purpose\": \"rer\",\r\n          \"fixedActiveType\": \"sasa\",\r\n          \"description\": \"dsadsad\",\r\n          \"structureCommission\": 23.1,\r\n          \"administrationCommision\": 1.1,\r\n          \"term\": \"rere\",\r\n          \"paymentType\": \"sasa\",\r\n          \"others\": \"1.3\",\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.otherFiduciaryServicesDTO;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionOtrosServiciosFiduciario(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"proposal\": 12.6,\r\n      \"purpose\": \"rer\",\r\n      \"fixedActiveType\": \"sasa\",\r\n      \"description\": \"dsadsad\",\r\n      \"structureCommission\": 23.1,\r\n      \"administrationCommision\": 1.1,\r\n      \"term\": \"rere\",\r\n      \"paymentType\": \"sasa\",\r\n      \"others\": \"1.3\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data); //saveProposalData\n\n      if (+result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //DOCUMENTACION LEGAL - DOCUMENTACION LEGAL\n\n\n  async consultarDocumentacionLegal(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"legalDocumentations\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"legalDocumentationId\": 1,\r\n              \"rotary\": false,\r\n              \"commercialLoan\": true,\r\n              \"multipleRotary\": true,\r\n              \"rotaryNumber\": true,\r\n              \"overdraft\": true,\r\n              \"transfer\": true,\r\n              \"bail\": true,\r\n              \"trust\": true,\r\n              \"agroPawn\": true,\r\n              \"naturalBail\": true,\r\n              \"legalBail\": true,\r\n              \"crossedLegalBail\": true,\r\n              \"crossedNaturalBail\": true,\r\n              \"promiseLetter\": true,\r\n              \"privateRecord\": true,\r\n              \"trustRecord\": true,\r\n              \"loanGuarantees\": true,\r\n              \"fiduciaryLine\": true,\r\n              \"prefinanced\": true,\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.legalDocumentations;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDocumentacionLegal(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"rotary\":false,\r\n      \"commercialLoan\":true,\r\n      \"multipleRotary\":true,\r\n      \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n      \"agroPawn\":true,\r\n      \"naturalBail\":true,\r\n      \"legalBail\":true, \r\n      \"crossedLegalBail\":true,\r\n      \"crossedNaturalBail\":true,\r\n      \"promiseLetter\":true,\r\n      \"privateRecord\":true,\r\n      \"trustRecord\":true,\r\n      \"loanGuarantees\":true,\r\n      \"fiduciaryLine\":true,\r\n      \"prefinanced\":true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_DOCUMENTACIONLEGAL, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDocumentacionLegal(data) {\n    try {\n      /*{\r\n      \"legalDocumentationId\":1,\r\n      \"transactId\":1,\r\n      \"rotary\":false,\r\n      \"commercialLoan\":true,\r\n      \"multipleRotary\":true,\r\n      \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n      \"agroPawn\":true,\r\n      \"naturalBail\":true,\r\n      \"legalBail\":true, \r\n      \"crossedLegalBail\":true,\r\n      \"crossedNaturalBail\":true,\r\n      \"promiseLetter\":true,\r\n      \"privateRecord\":true,\r\n      \"trustRecord\":true,\r\n      \"loanGuarantees\":true,\r\n      \"fiduciaryLine\":true,\r\n      \"prefinanced\":true,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_DOCUMENTACIONLEGAL, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDocumentacionLegal(transactId, legalDocumentationId) {\n    try {\n      var data = {\n        requestId: transactId,\n        legalDocumentationId: legalDocumentationId\n      };\n      var result = await this.del(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //DESEMBOLSO - DATOS GENERALES\n\n\n  async consultarDatosGeneralesDesembolso(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DESEMBOLSODATOSGENERALES + \"?\" + data);\n      /*{\r\n      \"subproduct\": \"vsubproducto character varying\",\r\n      \"line\": \"vnlinea character varying\",\r\n      \"masterLine\": \"vnlineamaster character varying\",\r\n      \"customerLine\": \"vnlineacliente character varying\",\r\n      \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n      \"amount\": 99.68,\r\n      \"interestRate\": 5.99,\r\n      \"savingDpf\": \"vdpfnahorro character varying\",\r\n      \"van\": \"van character varying\",\r\n      \"date\": true,\r\n      \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n      \"debitAccount\": \"vncuentadebitar character varying\",\r\n      \"nameOf\": \"vanombrede character varying\",\r\n      \"monthlyFee\": true,\r\n      \"commissionFid\": true,\r\n      \"itbmIncluded\": true,\r\n      \"commissionFwla\": true,\r\n      \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n      \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarDatosGeneralesDesembolso(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"branch\": \"vsucursal character varying\",\r\n      \"loan\": \"vnprestamo character varying\",\r\n      \"product\": \"vproducto character varying\",\r\n      \"subproduct\": \"vsubproducto character varying\",\r\n      \"line\": \"vnlinea character varying\",\r\n      \"masterLine\": \"vnlineamaster character varying\",\r\n      \"customerLine\": \"vnlineacliente character varying\",\r\n      \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n      \"amount\": 99.68,\r\n      \"interestRate\": 5.99,\r\n      \"savingDpf\": \"vdpfnahorro character varying\",\r\n      \"van\": \"van character varying\",\r\n      \"date\": true,\r\n      \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n      \"debitAccount\": \"vncuentadebitar character varying\",\r\n      \"nameOf\": \"vanombrede character varying\",\r\n      \"monthlyFee\": true,\r\n      \"commissionFid\": true,\r\n      \"itbmIncluded\": true,\r\n      \"commissionFwla\": true,\r\n      \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n      \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } ///////////// CATALOGOS //////////////////////\n  /////////////////////////////////////////\n  //LISTA DE TIPO DE IDENTIFICACION\n\n\n  async consultarCatalogoTipoPersona() {\n    try {\n      var data = [{\n        label: \"Natural\",\n        code: 1\n      }, {\n        label: \"Juridíca\",\n        code: 2\n      }];\n      return data;\n    } catch (err) {\n      console.error(\"error consultarCatalogoTipoPersona: \", err);\n    }\n\n    return undefined;\n  } //LISTA DE TIPO DE IDENTIFICACION\n\n\n  async consultarCatalogoTipoIdentificacion() {\n    try {\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\n      /*\r\n      \"status\": {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"identificationType\": [\r\n      {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n      },\r\n      {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n      },\r\n      }\r\n      */\n\n      var data = [];\n\n      for (const identif of result.identificationType) {\n        if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\n          data.push(identif);\n        }\n      }\n\n      return data;\n    } catch (err) {\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\n    }\n\n    return undefined;\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\n  } //CC-320\tConsultarListaClasificacionRiesgo\n\n\n  async retrieveRiskClassification() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.riskClassification;\n    } catch (err) {\n      console.error(\"api retrieveRiskClassification: \", err);\n    }\n\n    return undefined;\n  } //CC-319\tConsultarListaTipoRevision\n\n\n  async retrieveRevisionType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.revisionType;\n    } catch (err) {\n      console.error(\"api retrieveRevisionType: \", err);\n    }\n\n    return undefined;\n  } //CC-321\tconsultarListaTipoPropuesta\n\n\n  async retrieveProposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.proposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-325\tconsultarListaTipoSubPropuesta\n\n\n  async retrieveSubproposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.subproposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-322\tconsultarListaTipoFacilidad\n\n\n  async retrieveFacilityType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.facilityType;\n    } catch (err) {\n      console.error(\"api retrieveFacilityType: \", err);\n    }\n\n    return undefined;\n  } //CC-324\tconsultarListaTipoFianza\n\n\n  async retrieveBailType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.bailType;\n    } catch (err) {\n      console.error(\"api retrieveBailType: \", err);\n    }\n\n    return undefined;\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/BackendServices/Services.js"],"names":["BusquedaDescarteModel","UsuarioProspectoModel","DocumentoAnexoModel","IgrInboxResultModel","ApiService","url","opt","qs","moment","Services","getUserInfo","userName","password","err","console","error","undefined","guardarDocumentoAnexo","data","result","post","URL_BACKEND_DOCUMENTS","status","statusCode","eliminarDocumentoAnexo","stringify","del","log","consultarDocumentosAnexos","params","get","URL_BACKEND_DOCUMENTSANEXOS","attachments","guardarHistorico","ULR_BACKEND_HISTORICO","searchLogs","logs","response","guardarDatosGeneralesIGR","URL_BACKEND_DATOSGENERALES_IGR","put","consultarDatosGeneralesIGR","transactId","statusService","guardarDatosEmpresaIGR","URL_BACKEND_DATOSEMPRESA_IGR","consultarDatosEmpresaIGR","guardarHistorialEmpresaIGR","URL_BACKEND_HISTORIALEMPRESA","consultarHistorialEmpresaIGR","processId","PROCESS_INFORMEGESTION","activityId","ACT_HISTORIAEMPRESA","consultarDatosAccionistas","URL_BACKEND_ACCIONISTASECCION","shareholders","nuevoAccionista","URL_BACKEND_ACCIONISTA","actualizarAccionista","eliminarAccionista","guardarSeccionAccionista","description","observations","infoDate","Number","format","consultarSeccionAccionista","guardarEstructuraEmpresaIGR","URL_BACKEND_ESTRUCTURAEMPRESA","consultarEstructuraEmpresaIGR","consultarDatosGobiernoCorporativo","URL_BACKEND_GOBIERNOCORPORATIVO","nuevoGobiernoCorporativo","actualizarGobiernoCorporativo","eliminarGobiernoCoporativo","consultarDatosRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONAL","nuevoRelevoGeneracional","actualizarRelevoGeneracional","eliminarRelevoGeneracional","guardarSeccionRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONALSECTION","consultarSeccionRelevoGeneracional","getManagementRelaysInfoResponseDTO","guardarFlujoOperativo","URL_BACKEND_FLUJOOPERATIVO_IGR","consultarFlujoOperativo","vidtramite","vidproceso","vidactividad","ACT_FLUJOOPERATIVO","consultarDatosEmpresaRelacionada","URL_BACKEND_EMPRESARELACIONADA","nuevoEmpresaRelacionada","actualizarEmpresaRelacionada","eliminarEmpresaRelacionada","guardarSeccionEmpresaRelacionada","trasactId","URL_BACKEND_EMPRESARELACIONADASECCION","consultarListaClientesIGR","URL_BACKEND_INFOCLIENTE","nuevoClienteIGR","actualizarClienteIGR","eliminarClienteIGR","guardarSeccionClienteIGR","URL_BACKEND_INFOCLIENTESECCION","consultarSeccionClienteIGR","clientSectionCompaniesDTO","consultarListaProveedoresIGR","URL_BACKEND_IGR_INFOPROVEEDORES","nuevoProveedorIGR","actualizarProveedorIGR","eliminarProveedorIGR","guardarSeccionProveedorIGR","URL_BACKEND_IGR_INFOPROVEEDORESSECCION","consultarSeccionProveedorIGR","suppliersList","consultarListaReciprocidadIGR","URL_BACKEND_IGR_RECIPROCIDAD","nuevoReciprocidadIGR","actualizarReciprocidadIGR","eliminarReciprocidadIGR","guardarSeccionReciprocidad","URL_BACKEND_IGR_RECIPROCIDADSECCION","consultarSeccionReciprocidad","consultarActivosFijosIGR","ACT_FACILIDADACTIVOSFIJOS","URL_BACKEND_IGR_ACTIVOSFIJOS","serviceStatus","nuevoActivosFijosIGR","actualizarActivosFijosIGR","eliminarActivosFijosIGR","guardarSeccionActivosFijosIGR","URL_BACKEND_IGR_ACTIVOSFIJOSSECCION","consultarSegurosEmpresaIGR","URL_BACKEND_IGR_SEGUROSEMPRESA","companyInsurance","nuevoSegurosEmpresaIGR","actualizarSegurosEmpresaIGR","eliminarSegurosEmpresaIGR","guardarArquitecturaEmpresarialIGR","URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL","consultarArquitecturaEmpresarialIGR","ACT_ARQUITECTURAEMPRESARIAL","consultarCompetidores","URL_BACKEND_COMPETIDORESMERCADO","nuevoCompetidorIGR","actualizarCompetidorIGR","eliminarCompetidorIGR","consultarProyecciones","URL_BACKEND_PROYECCIONES","guardarProyecciones","consultarGarantes","URL_BACKEND_GARANTES","guarantors","nuevoGarante","actualizarGarante","eliminarGarante","consultarSowActualIGR","URL_BACKEND_PROPUESTACREDITO_SOWACTUAL","nuevoSowActualIGR","actualizarSowActualIGR","eliminarSowActualIGR","consultarSowPropuestoIGR","URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO","nuevoSowPropuestoIGR","actualizarSowPropuestoIGR","eliminarSowPropuestoIGR","consultarAspectosAmbientalesIGR","URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES","guardarAspectosAmbientalesIGR","consultarRelacionesBancariasDeudasCP","URL_BACKEND_IGR_DEUDASBANCARIACP","nuevoRelacionesBancariasDeudasCP","actualizarRelacionesBancariasDeudasCP","eliminarRelacionesBancariasDeudasCP","consultarRelacionesBancariasDeudasLP","URL_BACKEND_IGR_DEUDASBANCARIALP","nuevoRelacionesBancariasDeudasLP","actualizarRelacionesBancariasDeudasLP","eliminarRelacionesBancariasDeudasLP","consultarRelacionesBancariasSeccionIGR","URL_BACKEND_IGR_DEUDASBANCARIASECCION","guardarRelacionesBancariasSeccionIGR","consultarFlujoCajaDollar","URL_BACKEND_IGR_FLUJOCAJADOLLAR","nuevoFlujoCajaDollar","actualizarFlujoCajaDollar","eliminarFlujoCajaDollar","consultarFlujoCajaServicioDeudas","URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS","nuevoFlujoCajaServicioDeudas","actualizarFlujoCajaServicioDeudas","eliminarFlujoCajaServicioDeudas","consultarFlujoCajaEgresos","URL_BACKEND_IGR_FLUJOCAJAEGRESO","nuevoFlujoCajaEgresos","actualizarFlujoCajaEgresos","eliminarFlujoCajaEgresos","consultarFlujoCajaCargaTrabajo","URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO","nuevoFlujoCajaCargaTrabajo","actualizarFlujoCajaCargaTrabajo","eliminarFlujoCajaCargaTrabajo","consultarFlujoCajaIngresoFacturacion","URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION","nuevoFlujoCajaIngresoFacturacion","actualizarFlujoCajaIngresoFacturacion","eliminarFlujoCajaIngresoFacturacion","consultarFlujoCajaCobranzas","URL_BACKEND_IGR_FLUJOCAJACOBRANZAS","nuevoFlujoCajaCobranzas","actualizarFlujoCajaCobranzas","eliminarFlujoCajaCobranzas","consultarMovimientosCuentasIGR","URL_BACKEND_IGR_MOVIMIENTOCUENTAS","movements","nuevoMovimientosCuentasIGR","actualizarMovimientosCuentasIGR","eliminarMovimientosCuentasIGR","guardarSeccionMovimientosCuentas","URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION","consultarSeccionMovimientosCuentas","consultarCuentasCobrarIGR","ACT_CUENTASPORCOBRAR","URL_BACKEND_IGR_CUENTASCOBRAR","accountsReceivable","nuevoCuentasCobrarIGR","actualizarCuentasCobrarIGR","eliminarCuentasCobrarIGR","consultarCapexIGR","URL_BACKEND_IGR_CAPEX","nuevoCapexIGR","actualizarCapexIGR","eliminarCapexIGR","consultarCapexPresupuestoIGR","URL_BACKEND_IGR_CAPEXPRESUPUESTO","nuevoCapexPresupuestoIGR","actualizarCapexPresupuestoIGR","eliminarCapexPresupuestoIGR","consultarCapexDetalleProyectoIGR","URL_BACKEND_IGR_CAPEXDETALLESPROYECTO","nuevoCapexDetalleProyectoIGR","actualizarCapexDetalleProyectoIGR","eliminarCapexDetalleProyectoIGR","consultarRecomendacionesIGR","URL_BACKEND_IGR_RECOMENDACIONES","guardarRecomendacionesIGR","consultarMatrizOtrosBancosIGR","URL_BACKEND_IGR_MATRIZOTROSBANCOS","nuevoMatrizOtrosBancosIGR","actualizarMatrizOtrosBancosIGR","eliminarMatrizOtrosBancosIGR","consultarMatrizExpedientesIGR","URL_BACKEND_IGR_MATRIZEXPEDIENTES","nuevoMatrizExpedientesIGR","actualizarMatrizExpedientesIGR","eliminarMatrizExpedientesIGR","consultarMatrizNuevosNegociosIGR","URL_BACKEND_IGR_MATRIZNUEVONEGOCIO","nuevoMatrizNuevosNegociosIGR","actualizarMatrizNuevosNegociosIGR","eliminarMatrizNuevosNegociosIGR","consultarMatrizRentabilidadIGR","URL_BACKEND_IGR_MATRIZRENTABILIDAD","nuevoMatrizRentabilidadIGR","actualizarMatrizRentabilidadIGR","eliminarMatrizRentabilidadIGR","guardarMatrizSeccionIGR","URL_BACKEND_IGR_MATRIZSECCION","consultarMatrizSeccionIGR","competitiveMatrix","consultarMatrizPosicionBanescoIGR","URL_BACKEND_IGR_MATRIZPOSICIONBANESCO","positions","nuevoMatrizPosicionBanescoIGR","actualizarMatrizPosicionBanescoIGR","eliminarMatrizPosicionBanescoIGR","consultarMatrizTransaccionBanescoIGR","URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO","transactionals","nuevoMatrizTransaccionBanescoIGR","actualizarMatrizTransaccionBanescoIGR","eliminarMatrizTransaccionBanescoIGR","guardarNegocioObtenerIGR","URL_BACKEND_NEGOCIOOBTENER","consultarNegocioObtenerIGR","guardarBusquedaDescarte","model","getSaveModel","URL_BACKEND_BUSQUEDADESCARTE","consultarBusquedaDescarte","PROCESS_BUSQUEDADESCARTE","ACT_NONE","fromJson","guardarUsuarioProspecto","customerId","length","userModel","getUpdateModel","URL_BACKEND_USUARIOPROSPECTO","consultarUsuarioProspecto","costumer","guardarCumplimiento","compliance","observationsSearchDiscard","approved","observationsComp","URL_BACKEND_CUMPLIMIENTO","consultarTramiteInbox","username","responsible","URL_BACKEND_BANDEJAENTRADA_TRAMITE","actualizarTramiteInbox","consultarListaExclusion","URL_BACKEND_LISTAEXCLUSION","guardarListaExclusion","transaccionId","exclusionId","consultarListaExclusionMarcada","URL_BACKEND_LISTAEXCLUSION_MARCADA","eliminarListaExclusionMarcada","nuevoDatosGeneralesPropCred","URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES","actualizarDatosGeneralesPropCred","consultarDatosGeneralesPropCred","nuevoFacilidadPropCred","URL_BACKEND_PROPUESTACREDITO_FACILIDAD","facilityId","actualizarFacilidadPropCred","requestId","consultarFacilidadPropCred","facilitiesDetailDTO","consultarListaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS","disbursements","nuevoDesembolsoPropCred","actualizarDesembolsoPropCred","eliminarDesembolsoPropCred","disbursementId","consultarListaProgramaPagoPropCred","URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO","paymentProgramDTOList","nuevoProgramaPagoPropCred","serviceResponseTO","actualizarProgramaPagoPropCred","eliminarProgramaPagoPropCred","paymentProgramId","consultarComisionPropCred","URL_BACKEND_PROPUESTACREDITO_COMISION","commission","nuevoComisionPropCred","actualizarComisionPropCred","eliminarComisionPropCred","commissionId","consultarFormaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO","disbursementForm","nuevoFormaDesembolsoPropCred","actualizarFormaDesembolsoPropCred","eliminarFormaDesembolsoPropCred","disbursementFormId","consultarGarantiaPropCred","URL_BACKEND_PROPUESTACREDITO_GARANTIA","guarantees","nuevoGarantiaPropCred","actualizarGarantiaPropCred","eliminarGarantiaPropCred","guaranteeId","consultarFianzaPropCred","URL_BACKEND_PROPUESTACREDITO_FIANZA","bails","nuevoFianzaPropCred","actualizarFianzaPropCred","eliminarFianzaPropCred","idBail","URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR","checkBalancePassiveAC","URL_BACKEND_BALANCEPASIVOAC","passiveCapitalBalance","nuevoBalancePasivoAC","actualizarBalancePasivoAC","eliminarBalancePasivoAC","itemPassiveId","queryStateOriginApplicationsAC","URL_BACKEND_ESTADOORIGENAPLICACIONAC","sourceApplicationsStates","nuevoEstadoOrigenAplicacionesAC","actualizarEstadoOrigenAplicacionesAC","eliminarEstadoOrigenAplicacionesAC","sourceApplicationItemId","checkActiveBalanceAC","URL_BACKEND_BALANCEACTIVOAC","activeBalances","newActiveBalanceAC","updateActiveBalanceAC","eliminarBalanceActivoAC","itemActiveId","queryACIndicator","URL_BACKEND_INDICADORAC","indicatorDTOList","newACIndicator","actualizarIndicadorAC","eliminarIndicadorAC","itemIndicatorsId","consultarPoliticaCredito","URL_BACKEND_POLITICACREDITO","creditPolicy","nuevoPoliticaCredito","actualizarPoliticaCredito","eliminarPoliticaCredit","debtorId","itemId","consultarInformiacionFinancieraFiadores","URL_BACKEND_INFOFINANCIERA","finantialInfoGuarantor","nuevoInformacionFinancieraFiadores","share","activeCash","activeShares","passiveLoan","personalWealth","actualizarInformacionFinancieraFiadores","eliminarInformacionFinancieraFiadores","guarantorId","consultarDetalleOpinionRiesgoCredito","URL_BACKEND_OPINIONRIESGOCREDITO","opinions","nuevoDetalleOpinionRiesgoCredito","actualizarDetalleOpinionRiesgoCredito","eliminarDetalleOpinionRiesgoCredito","consultarConclusionesRecomendacionesAnalisisFinanciero","URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO","conclusionFinantialAnalysisDTOList","nuevoConclusionesRecomendacionesAnalisisFinanciero","actualizarConclusionesRecomendacionesAnalisisFinanciero","eliminarConclusionesRecomendacionesAnalisisFinanciero","consultarInformacionRiesgoAmbiental","URL_BACKEND_RIESGOAMBIENTALDETALLES","nuevoInformacionRiesgoAmbiental","actualizarInformacionRiesgoAmbiental","eliminarInformacionRiesgoAmbiental","consultarRiesgoCreditoComercial","URL_BACKEND_RIESGOCREDITOS","generalDataCreditRisk","nuevoRiesgoCreditoComercial","actualizarRiesgoCreditoComercial","eliminarRiesgoCreditoComercial","consultarNumeroFideicomiso","URL_BACKEND_NUMEROFIDEICOMISO","trustInfo","nuevoNumeroFideicomiso","actualizarNumeroFideicomiso","eliminarNumeroFideicomiso","consultarListaFideicomitentes","URL_BACKEND_FIDEICOMITENTES","trustors","nuevaListaFideicomitentes","actualizarListaFideicomitentes","eliminarListaFideicomitentes","trustorId","consultarTipoFiduciarioYOtrosDatos","URL_BACKEND_FIDUCIARIAOTROSBANCOS","finantialCommissionDTO","guardarTipoFiduciarioYOtrosDatos","consultarListaBeneficiarioSecundario","URL_BACKEND_BEENFICIARIOSECUNDARIO","beneficiaries","nuevaListaBeneficiarioSecundario","actualizarListaBeneficiarioSecundario","eliminarListaBeneficiarioSecundario","beneficiaryId","consultarSeccionServiciosFiduciario","URL_BACKEND_SERVICIOSFIDUCIARIOS","fiduciaryServicesDTOS","guardarSeccionServiciosFiduciario","consultarSeccionOtrosServiciosFiduciario","URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS","otherFiduciaryServicesDTO","guardarSeccionOtrosServiciosFiduciario","consultarDocumentacionLegal","URL_BACKEND_DOCUMENTACIONLEGAL","legalDocumentations","nuevoDocumentacionLegal","actualizarDocumentacionLegal","eliminarDocumentacionLegal","legalDocumentationId","consultarDatosGeneralesDesembolso","URL_BACKEND_DESEMBOLSODATOSGENERALES","guardarDatosGeneralesDesembolso","consultarCatalogoTipoPersona","label","code","consultarCatalogoTipoIdentificacion","ULR_BACKEND_TIPODEIDENTIFICACION","identif","identificationType","push","retrieveRiskClassification","URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO","riskClassification","retrieveRevisionType","URL_BACKEND_CATALOGO_TIPOREVISION","revisionType","retrieveProposalType","URL_BACKEND_CATALOGO_TIPOPROPUESTA","proposalType","retrieveSubproposalType","URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA","subproposalType","retrieveFacilityType","URL_BACKEND_CATALOGO_TIPOFACILIDAD","facilityType","retrieveBailType","URL_BACKEND_CATALOGO_TIPOFIANZA","bailType"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAzED,CA0EA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0B,QAArBqL,qBAAqB,CAACnL,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC+L,+BAAd,EAA+ClL,IAA/C,CAAnB;AACA,aAAOC,MAAP,CAtBE,CAsBY;AACf,KAvBD,CAwBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd,EAAoCF,GAApC;AACD;;AACD,WAAOG,SAAP;AAED;;AAC+B,QAA1BsL,0BAA0B,CAACpL,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC+L,+BAAb,EAA8ClL,IAA9C,CAAnB;AACA,aAAOC,MAAP,CAvBE,CAuBY;AACf,KAxBD,CAyBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd,EAAoCF,GAApC;AACD;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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAM,CAACD,IAAd;AACD;AACF,KA5FD,CA6FA,OAAOL,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,uCAAd,EAAuDF,GAAvD;AACD;;AACD,WAAOG,SAAP;AACD,GA/rK8C,CAisK/C;;;AAC4B,QAAtBuT,sBAAsB,CAACrT,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACmU,sCAAd,EAAsDtT,IAAtD,CAAnB,CAjCE,CAiC6E;;AAE/E;AACN;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAACsT,UAAd;AACD,KA1CD,CA2CA,OAAO5T,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,mCAAd,EAAmDF,GAAnD;AACD;;AACD,WAAOG,SAAP;AACD;;AACgC,QAA3B0T,2BAA2B,CAACxT,IAAD,EAAO;AACtC,QAAI;AACFA,MAAAA,IAAI,CAACuT,UAAL,GAAkB,EAAlB;AACAvT,MAAAA,IAAI,CAACyT,SAAL,GAAiB,WAAjB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIxT,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACmU,sCAAb,EAAqDtT,IAArD,CAAnB,CAnCE,CAmC4E;;AAE9E,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAxCD,CAyCA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,mCAAd,EAAmDF,GAAnD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC+B,QAA1B4T,0BAA0B,CAACH,UAAD,EAAaE,SAAb,EAAwB;AAAE;AACxD,QAAI;AACF,UAAI9S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA,UAAd;AAA0BE,QAAAA,SAAS,EAAEA;AAArC,OAAb;AACA,UAAIzT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACmU,sCAAJ,GAA6C,GAA7C,GAAmDtT,IAA5D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAAC0T,mBAAd;AACD,KAxCD,CAyCA,OAAOhU,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD,GAh1K8C,CAk1K/C;;;AACsC,QAAhC8T,gCAAgC,CAACL,UAAD,EAAa;AACjD,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC0U,wCAAJ,GAA+C,GAA/C,GAAqD7T,IAA9D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC6T,aAAd;AAED,KA5CD,CA6CA,OAAOnU,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4B,QAAvBiU,uBAAuB,CAAC/T,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC0U,wCAAd,EAAwD7T,IAAxD,CAAnB,CATE,CAS+E;AACjF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACiC,QAA5BkU,4BAA4B,CAAChU,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC0U,wCAAb,EAAuD7T,IAAvD,CAAnB,CAXE,CAW8E;AAChF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC+B,QAA1BmU,0BAA0B,CAACV,UAAD,EAAaW,cAAb,EAA6B;AAC3D,QAAI;AACF,UAAIlU,IAAI,GAAG;AAAEuT,QAAAA,UAAU,EAAEA,UAAd;AAA0BW,QAAAA,cAAc,EAAEA;AAA1C,OAAX;AACA,UAAIjU,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC0U,wCAAJ,GAA+C,GAA/C,GAAqDxU,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA9D,CAAnB;AACA,aAAOC,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,GAAlD;AACD;;AACD,WAAOG,SAAP;AACD,GAx8K8C,CA08K/C;;;AACwC,QAAlCqU,kCAAkC,CAACZ,UAAD,EAAa;AACnD,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACiV,yCAAJ,GAAgD,GAAhD,GAAsDpU,IAA/D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAACoU,qBAAd;AACD,KA9CD,CA+CA,OAAO1U,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC8B,QAAzBwU,yBAAyB,CAACtU,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACiV,yCAAd,EAAyDpU,IAAzD,CAAnB,CATE,CASgF;AAClF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACsU,iBAAP,CAAyBlU,UAAzB,KAAwC,KAA5C,EAAmD;AACjD,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACmC,QAA9B0U,8BAA8B,CAACxU,IAAD,EAAO;AACzC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACiV,yCAAb,EAAwDpU,IAAxD,CAAnB,CAXE,CAW+E;AACjF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACiC,QAA5B2U,4BAA4B,CAAClB,UAAD,EAAamB,gBAAb,EAA+B;AAC/D,QAAI;AACF,UAAI1U,IAAI,GAAG;AAAEuT,QAAAA,UAAU,EAAEA,UAAd;AAA0BmB,QAAAA,gBAAgB,EAAEA;AAA5C,OAAX;AACA,UAAIzU,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACiV,yCAAJ,GAAgD,GAAhD,GAAsD/U,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA/D,CAAnB;AACA,aAAOC,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,GAAlD;AACD;;AACD,WAAOG,SAAP;AACD,GAlkL8C,CAokL/C;;;AAC+B,QAAzB6U,yBAAyB,CAACpB,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACyV,qCAAJ,GAA4C,GAA5C,GAAkD5U,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAAC4U,UAAd;AAED,KA/BD,CAgCA,OAAOlV,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0B,QAArBgV,qBAAqB,CAAC9U,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACyV,qCAAd,EAAqD5U,IAArD,CAAnB,CAVE,CAU4E;AAC9E;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC+B,QAA1BiV,0BAA0B,CAAC/U,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACyV,qCAAb,EAAoD5U,IAApD,CAAnB,CAZE,CAY2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC6B,QAAxBkV,wBAAwB,CAACzB,UAAD,EAAa0B,YAAb,EAA2B;AACvD,QAAI;AACF,UAAIjV,IAAI,GAAG;AAAEuT,QAAAA,UAAU,EAAEA,UAAd;AAA0B0B,QAAAA,YAAY,EAAEA;AAAxC,OAAX;AACA,UAAIhV,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACyV,qCAAb,EAAoD5U,IAApD,CAAnB;AACA,aAAOC,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,GAAlD;AACD;;AACD,WAAOG,SAAP;AACD,GA/qL8C,CAirL/C;;;AACsC,QAAhCoV,gCAAgC,CAAC3B,UAAD,EAAa;AACjD,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACgW,4CAAJ,GAAmD,GAAnD,GAAyDnV,IAAlE,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAACmV,gBAAd;AACD,KAtBD,CAuBA,OAAOzV,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACiC,QAA5BuV,4BAA4B,CAACrV,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACgW,4CAAd,EAA4DnV,IAA5D,CAAnB,CATE,CASmF;AACrF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACsC,QAAjCwV,iCAAiC,CAACtV,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACgW,4CAAb,EAA2DnV,IAA3D,CAAnB,CAXE,CAWkF;AACpF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACoC,QAA/ByV,+BAA+B,CAAChC,UAAD,EAAaiC,kBAAb,EAAiC;AACpE,QAAI;AACF,UAAIxV,IAAI,GAAG;AAAEuT,QAAAA,UAAU,EAAEA,UAAd;AAA0BiC,QAAAA,kBAAkB,EAAEA;AAA9C,OAAX;AACA,UAAIvV,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACgW,4CAAJ,GAAmD,GAAnD,GAAyD9V,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAlE,CAAnB;AACA,aAAOC,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,GAAlD;AACD;;AACD,WAAOG,SAAP;AACD,GAjxL8C,CAmxL/C;;;AAC+B,QAAzB2V,yBAAyB,CAAClC,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE8S,QAAAA,SAAS,EAAEF;AAAb,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACuW,qCAAJ,GAA4C,GAA5C,GAAkD1V,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAAC0V,UAAd;AACD,KA5BD,CA6BA,OAAOhW,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0B,QAArB8V,qBAAqB,CAAC5V,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACuW,qCAAd,EAAqD1V,IAArD,CAAnB,CAhBE,CAgB4E;AAC9E;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC+B,QAA1B+V,0BAA0B,CAAC7V,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACuW,qCAAb,EAAoD1V,IAApD,CAAnB,CAlBE,CAkB2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC6B,QAAxBgW,wBAAwB,CAACvC,UAAD,EAAawC,WAAb,EAA0B;AACtD,QAAI;AACF,UAAI/V,IAAI,GAAG;AAAEyT,QAAAA,SAAS,EAAEF,UAAb;AAAyBwC,QAAAA,WAAW,EAAEA;AAAtC,OAAX;AACA,UAAI9V,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACuW,qCAAJ,GAA4C,GAA5C,GAAkDrW,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA3D,CAAnB;AACA,aAAOC,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDF,GAAlD;AACD;;AACD,WAAOG,SAAP;AACD,GAv4L8C,CAy4L/C;;;AAC6B,QAAvBkW,uBAAuB,CAACzC,UAAD,EAAa;AACxC,QAAI;AACF,UAAI5S,MAAM,GAAG;AAAE4S,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIvT,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC8W,mCAAJ,GAA0C,GAA1C,GAAgDjW,IAAzD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAACiW,KAAd;AACD,KA5BD,CA6BA,OAAOvW,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACwB,QAAnBqW,mBAAmB,CAACnW,IAAD,EAAO;AAC9B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC8W,mCAAd,EAAmDjW,IAAnD,CAAnB,CATE,CAS0E;AAC5E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAnBD,CAoBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC6B,QAAxBsW,wBAAwB,CAACpW,IAAD,EAAO;AACnC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC8W,mCAAb,EAAkDjW,IAAlD,CAAnB,CAXE,CAWyE;AAC3E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC2B,QAAtBuW,sBAAsB,CAAC9C,UAAD,EAAa+C,MAAb,EAAqB;AAC/C,QAAI;AACF,UAAItW,IAAI,GAAG;AAAEuT,QAAAA,UAAU,EAAEA,UAAd;AAA0B+C,QAAAA,MAAM,EAAEA;AAAlC,OAAX;AACA,UAAIrW,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACoX,yCAAJ,GAAgD,GAAhD,GAAsDlX,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA/D,CAAnB,CAFE,CAGF;;AAEA,aAAOC,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GA/+L8C,CAk/L/C;AACA;AACA;;;AAC2B,QAArB0W,qBAAqB,CAAChV,UAAD,EAAa;AACtC,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACsX,2BAAJ,GAAkC,GAAlC,GAAwCzW,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAACyW,qBAAd;AACD,KA3BD,CA4BA,OAAO/W,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACyB,QAApB6W,oBAAoB,CAAC3W,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACsX,2BAAd,EAA2CzW,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC8B,QAAzB8W,yBAAyB,CAAC5W,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACsX,2BAAb,EAA0CzW,IAA1C,CAAnB,CAhBE,CAgBiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAxBD,CAyBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4B,QAAvB+W,uBAAuB,CAACrV,UAAD,EAAasV,aAAb,EAA4B;AACvD,QAAI;AACF,UAAI9W,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0BsV,QAAAA,aAAa,EAAEA;AAAzC,OAAX;AACA,UAAI7W,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACsX,2BAAb,EAA0CzW,IAA1C,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GA7lM8C,CA+lM/C;;;AACoC,QAA9BiX,8BAA8B,CAACvV,UAAD,EAAa;AAC/C,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC6X,oCAAJ,GAA2C,GAA3C,GAAiDhX,IAA1D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACgX,wBAAd;AACD,KA1BD,CA2BA,OAAOtX,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACoC,QAA/BoX,+BAA+B,CAAClX,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC6X,oCAAd,EAAoDhX,IAApD,CAAnB,CAbE,CAa2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACyC,QAApCqX,oCAAoC,CAACnX,IAAD,EAAO;AAC/C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC6X,oCAAb,EAAmDhX,IAAnD,CAAnB,CAfE,CAe0E;AAC5E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAvBD,CAwBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACuC,QAAlCsX,kCAAkC,CAAC5V,UAAD,EAAa6V,uBAAb,EAAsC;AAC5E,QAAI;AACF,UAAIrX,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0B6V,QAAAA,uBAAuB,EAAEA;AAAnD,OAAX;AACA,UAAIpX,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC6X,oCAAJ,GAA2C,GAA3C,GAAiD3X,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA1D,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GAtsM8C,CAwsM/C;;;AAC0B,QAApBwX,oBAAoB,CAAC9V,UAAD,EAAa;AACrC,QAAI;AACF,UAAIb,MAAM,GAAG;AAAE8S,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACoY,2BAAJ,GAAkC,GAAlC,GAAwCvX,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIM,aAAOC,MAAM,CAACuX,cAAd;AACD,KAvCD,CAwCA,OAAO7X,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACuB,QAAlB2X,kBAAkB,CAACzX,IAAD,EAAO;AAC7B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACoY,2BAAd,EAA2CvX,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0B,QAArB4X,qBAAqB,CAAC1X,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACoY,2BAAb,EAA0CvX,IAA1C,CAAnB,CAfE,CAeiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAvBD,CAwBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4B,QAAvB6X,uBAAuB,CAACnW,UAAD,EAAaoW,YAAb,EAA2B;AACtD,QAAI;AACF,UAAI5X,IAAI,GAAG;AAAEyT,QAAAA,SAAS,EAAEjS,UAAb;AAAyBoW,QAAAA,YAAY,EAAEA;AAAvC,OAAX;AACA,UAAI3X,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACoY,2BAAJ,GAAkC,GAAlC,GAAwClY,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAjD,CAAnB,CAFE,CAGF;;AAEA,aAAOC,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GA7zM8C,CAg0M/C;;;AACsB,QAAhB+X,gBAAgB,CAACrW,UAAD,EAAa;AACjC,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC2Y,uBAAJ,GAA8B,GAA9B,GAAoC9X,IAA7C,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAM,CAAC8X,gBAAd;AACD,KAlCD,CAmCA,OAAOpY,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACmB,QAAdkY,cAAc,CAAChY,IAAD,EAAO;AACzB,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC2Y,uBAAd,EAAuC9X,IAAvC,CAAnB,CAdE,CAc8D;AAChE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0B,QAArBmY,qBAAqB,CAACjY,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC2Y,uBAAb,EAAsC9X,IAAtC,CAAnB,CAfE,CAe6D;AAC/D;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAvBD,CAwBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACwB,QAAnBoY,mBAAmB,CAAC1W,UAAD,EAAa2W,gBAAb,EAA+B;AACtD,QAAI;AACF,UAAInY,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0B2W,QAAAA,gBAAgB,EAAEA;AAA5C,OAAX;AACA,UAAIlY,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC2Y,uBAAJ,GAA8B,GAA9B,GAAoCzY,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA7C,CAAnB,CAFE,CAGF;;AAEA,aAAOC,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GAj7M8C,CAm7M/C;;;AAC8B,QAAxBsY,wBAAwB,CAAC5W,UAAD,EAAa;AACzC,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACkZ,2BAAJ,GAAkC,GAAlC,GAAwCrY,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACqY,YAAd;AACD,KAzBD,CA0BA,OAAO3Y,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACyB,QAApByY,oBAAoB,CAACvY,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACkZ,2BAAd,EAA2CrY,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC8B,QAAzB0Y,yBAAyB,CAACxY,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACkZ,2BAAb,EAA0CrY,IAA1C,CAAnB,CAdE,CAciE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC2B,QAAtB2Y,sBAAsB,CAACjX,UAAD,EAAakX,QAAb,EAAuBC,MAAvB,EAA+B;AACzD,QAAI;AACF,UAAI3Y,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0BkX,QAAAA,QAAQ,EAAEA,QAApC;AAA8CC,QAAAA,MAAM,EAAEA;AAAtD,OAAX;AACA,UAAI1Y,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACkZ,2BAAJ,GAAkC,GAAlC,GAAwChZ,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAjD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,8BAAd,EAA8CF,GAA9C;AACD;;AACD,WAAOG,SAAP;AACD,GAxhN8C,CA2hN/C;;;AAC6C,QAAvC8Y,uCAAuC,CAACpX,UAAD,EAAa;AACxD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC0Z,0BAAJ,GAAiC,GAAjC,GAAuC7Y,IAAhD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC6Y,sBAAd;AACD,KAjCD,CAkCA,OAAOnZ,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACuC,QAAlCiZ,kCAAkC,CAAC/Y,IAAD,EAAO;AAC7C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAACwB,UAAL,GAAkBuB,MAAM,CAAC/C,IAAI,CAACwB,UAAN,CAAxB;AACAxB,MAAAA,IAAI,CAACgZ,KAAL,GAAajW,MAAM,CAAC/C,IAAI,CAACgZ,KAAN,CAAnB;AACAhZ,MAAAA,IAAI,CAACiZ,UAAL,GAAkBlW,MAAM,CAAC/C,IAAI,CAACiZ,UAAN,CAAxB;AACAjZ,MAAAA,IAAI,CAACkZ,YAAL,GAAoBnW,MAAM,CAAC/C,IAAI,CAACkZ,YAAN,CAA1B;AACAlZ,MAAAA,IAAI,CAACmZ,WAAL,GAAmBpW,MAAM,CAAC/C,IAAI,CAACmZ,WAAN,CAAzB;AACAnZ,MAAAA,IAAI,CAACoZ,cAAL,GAAsBrW,MAAM,CAAC/C,IAAI,CAACoZ,cAAN,CAA5B;AACA,UAAInZ,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC0Z,0BAAd,EAA0C7Y,IAA1C,CAAnB,CAzBE,CAyBiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAjCD,CAkCA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4C,QAAvCuZ,uCAAuC,CAACrZ,IAAD,EAAO;AAClD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC0Z,0BAAb,EAAyC7Y,IAAzC,CAAnB,CAtBE,CAsBgE;AAClE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KA9BD,CA+BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0C,QAArCwZ,qCAAqC,CAAC9X,UAAD,EAAakX,QAAb,EAAuBa,WAAvB,EAAoC;AAC7E,QAAI;AACF,UAAIvZ,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0BkX,QAAAA,QAAQ,EAAEA,QAApC;AAA8Ca,QAAAA,WAAW,EAAEA;AAA3D,OAAX;AACA,UAAItZ,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC0Z,0BAAJ,GAAiC,GAAjC,GAAuCxZ,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAhD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GA5pN8C,CA8pN/C;;;AAC0C,QAApC0Z,oCAAoC,CAAChY,UAAD,EAAa;AACrD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAE8S,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACsa,gCAAJ,GAAuC,GAAvC,GAA6CzZ,IAAtD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACyZ,QAAd;AACD,KAzBD,CA0BA,OAAO/Z,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACqC,QAAhC6Z,gCAAgC,CAAC3Z,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACsa,gCAAd,EAAgDzZ,IAAhD,CAAnB,CARE,CAQuE;AACzE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAhBD,CAiBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0C,QAArC8Z,qCAAqC,CAAC5Z,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACsa,gCAAb,EAA+CzZ,IAA/C,CAAnB,CATE,CASsE;AACxE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAjBD,CAkBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACwC,QAAnC+Z,mCAAmC,CAACrY,UAAD,EAAa;AACpD,QAAI;AACF,UAAIxB,IAAI,GAAG;AAAEyT,QAAAA,SAAS,EAAEjS;AAAb,OAAX;AACA,UAAIvB,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACsa,gCAAJ,GAAuC,GAAvC,GAA6Cpa,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAtD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAzvN8C,CA2vN/C;;;AAC4D,QAAtDga,sDAAsD,CAACtY,UAAD,EAAa;AACvE,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC4a,wDAAJ,GAA+D,GAA/D,GAAqE/Z,IAA9E,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC+Z,kCAAd;AACD,KA7BD,CA8BA,OAAOra,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACuD,QAAlDma,kDAAkD,CAACja,IAAD,EAAO;AAC7D,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC4a,wDAAd,EAAwE/Z,IAAxE,CAAnB,CAXE,CAW+F;AACjG;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAnBD,CAoBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4D,QAAvDoa,uDAAuD,CAACla,IAAD,EAAO;AAClE,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC4a,wDAAb,EAAuE/Z,IAAvE,CAAnB,CAZE,CAY8F;AAChG;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KApBD,CAqBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0D,QAArDqa,qDAAqD,CAAC3Y,UAAD,EAAakX,QAAb,EAAuB;AAChF,QAAI;AACF,UAAI1Y,IAAI,GAAG;AAAEyT,QAAAA,SAAS,EAAEjS,UAAb;AAAyBkX,QAAAA,QAAQ,EAAEA;AAAnC,OAAX;AACA,UAAIzY,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC4a,wDAAJ,GAA+D,GAA/D,GAAqE1a,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAA9E,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAh2N8C,CAk2N/C;;;AACyC,QAAnCsa,mCAAmC,CAAC5Y,UAAD,EAAa;AACpD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAE8S,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACkb,mCAAJ,GAA0C,GAA1C,GAAgDra,IAAzD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAP;AACD,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACoC,QAA/Bwa,+BAA+B,CAACta,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACkb,mCAAd,EAAmDra,IAAnD,CAAnB,CAdE,CAc0E;AAC5E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACyC,QAApCya,oCAAoC,CAACva,IAAD,EAAO;AAC/C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACkb,mCAAb,EAAkDra,IAAlD,CAAnB,CAdE,CAcyE;AAC3E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAtBD,CAuBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACuC,QAAlC0a,kCAAkC,CAAChZ,UAAD,EAAa;AACnD,QAAI;AACF,UAAIxB,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA;AAAd,OAAX;AACA,UAAIvB,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACkb,mCAAJ,GAA0C,GAA1C,GAAgDhb,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAzD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAr8N8C,CAu8N/C;;;AACqC,QAA/B2a,+BAA+B,CAACjZ,UAAD,EAAa;AAChD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACub,0BAAJ,GAAiC,GAAjC,GAAuC1a,IAAhD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC0a,qBAAd;AACD,KAhBD,CAiBA,OAAOhb,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACgC,QAA3B8a,2BAA2B,CAAC5a,IAAD,EAAO;AACtC,QAAI;AAEF;AACN;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACub,0BAAd,EAA0C1a,IAA1C,CAAnB,CARE,CAQiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAhBD,CAiBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACqC,QAAhC+a,gCAAgC,CAAC7a,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACub,0BAAb,EAAyC1a,IAAzC,CAAnB,CATE,CASgE;AAClE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAjBD,CAkBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACmC,QAA9Bgb,8BAA8B,CAACtZ,UAAD,EAAa;AAC/C,QAAI;AACF,UAAIxB,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA;AAAd,OAAX;AACA,UAAIvB,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACub,0BAAJ,GAAiC,GAAjC,GAAuCrb,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAhD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAzhO8C,CA4hO/C;;;AACgC,QAA1Bib,0BAA0B,CAACvZ,UAAD,EAAa;AAC3C,QAAI;AACF,UAAIb,MAAM,GAAG;AAAE8S,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC6b,6BAAJ,GAAoC,GAApC,GAA0Chb,IAAnD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACgb,SAAd;AACD,KAtBD,CAuBA,OAAOtb,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC2B,QAAtBob,sBAAsB,CAAClb,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC6b,6BAAd,EAA6Chb,IAA7C,CAAnB,CAPE,CAOoE;AACtE;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAlBD,CAmBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACgC,QAA3Bqb,2BAA2B,CAACnb,IAAD,EAAO;AACtC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC6b,6BAAb,EAA4Chb,IAA5C,CAAnB,CATE,CASmE;AACrE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAjBD,CAkBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC8B,QAAzBsb,yBAAyB,CAAC5Z,UAAD,EAAa;AAC1C,QAAI;AACF,UAAIxB,IAAI,GAAG;AAAEyT,QAAAA,SAAS,EAAEjS;AAAb,OAAX;AACA,UAAIvB,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC6b,6BAAJ,GAAoC,GAApC,GAA0C3b,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAnD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAtnO8C,CAwnO/C;;;AACmC,QAA7Bub,6BAA6B,CAAC7Z,UAAD,EAAa;AAC9C,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACmc,2BAAJ,GAAkC,GAAlC,GAAwCtb,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACsb,QAAd;AACD,KAlCD,CAmCA,OAAO5b,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC8B,QAAzB0b,yBAAyB,CAACxb,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACmc,2BAAd,EAA2Ctb,IAA3C,CAAnB,CAXE,CAWkE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAnBD,CAoBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACmC,QAA9B2b,8BAA8B,CAACzb,IAAD,EAAO;AACzC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACmc,2BAAb,EAA0Ctb,IAA1C,CAAnB,CAbE,CAaiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KArBD,CAsBA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACiC,QAA5B4b,4BAA4B,CAACla,UAAD,EAAama,SAAb,EAAwB;AACxD,QAAI;AACF,UAAI3b,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0Bma,QAAAA,SAAS,EAAEA;AAArC,OAAX;AACA,UAAI1b,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAACmc,2BAAJ,GAAkC,GAAlC,GAAwCjc,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAjD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GAnuO8C,CAquO/C;;;AACwC,QAAlC8b,kCAAkC,CAACpa,UAAD,EAAa;AACnD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC0c,iCAAJ,GAAwC,GAAxC,GAA8C7b,IAAvD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC6b,sBAAd;AACD,KApBD,CAqBA,OAAOnc,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACqC,QAAhCic,gCAAgC,CAAC/b,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC0c,iCAAd,EAAiD7b,IAAjD,CAAnB,CAZE,CAYwE;;AAE1E,UAAIC,MAAM,CAACI,UAAP,KAAsB,GAA1B,EAA+B;AAC7BL,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAC,QAAAA,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC0c,iCAAb,EAAgD7b,IAAhD,CAAf;AACD,OAjBC,CAkBF;;AACA;AACN;AACA;AACA;AACA;;;AACM,aAAOC,MAAP;AACD,KAzBD,CA0BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD,GAhyO8C,CAkyO/C;;;AAC0C,QAApCkc,oCAAoC,CAACxa,UAAD,EAAa;AACrD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC8c,kCAAJ,GAAyC,GAAzC,GAA+Cjc,IAAxD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACic,aAAd;AACD,KAlDD,CAmDA,OAAOvc,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACqC,QAAhCqc,gCAAgC,CAACnc,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC8c,kCAAd,EAAkDjc,IAAlD,CAAnB,CAnBE,CAmByE;AAC3E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KA3BD,CA4BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AAC0C,QAArCsc,qCAAqC,CAACpc,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC8c,kCAAb,EAAiDjc,IAAjD,CAAnB,CArBE,CAqBwE;AAC1E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KA7BD,CA8BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACwC,QAAnCuc,mCAAmC,CAAC7a,UAAD,EAAa8a,aAAb,EAA4B;AACnE,QAAI;AACF,UAAItc,IAAI,GAAG;AAAEwB,QAAAA,UAAU,EAAEA,UAAd;AAA0B8a,QAAAA,aAAa,EAAEA;AAAzC,OAAX;AACA,UAAIrc,MAAM,GAAG,MAAM,KAAKO,GAAL,CAASrB,GAAG,CAAC8c,kCAAJ,GAAyC,GAAzC,GAA+C5c,EAAE,CAACkB,SAAH,CAAaP,IAAb,CAAxD,CAAnB;AAEA,aAAOC,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,6CAAd,EAA6DF,GAA7D;AACD;;AACD,WAAOG,SAAP;AACD,GA76O8C,CAg7O/C;;;AACyC,QAAnCyc,mCAAmC,CAAC/a,UAAD,EAAa;AACpD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACqd,gCAAJ,GAAuC,GAAvC,GAA6Cxc,IAAtD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACwc,qBAAd;AACD,KAtBD,CAuBA,OAAO9c,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AACsC,QAAjC4c,iCAAiC,CAAC1c,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACqd,gCAAd,EAAgDxc,IAAhD,CAAnB,CAfE,CAeuE;;AAEzE,UAAI,CAACC,MAAM,CAACI,UAAR,KAAuB,GAA3B,EAAgC;AAC9BL,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAC,QAAAA,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACqd,gCAAb,EAA+Cxc,IAA/C,CAAf;AACD,OApBC,CAqBF;;AACA;AACN;AACA;AACA;AACA;;;AACM,aAAOC,MAAP;AACD,KA5BD,CA6BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD,GAh/O8C,CAk/O/C;;;AAC8C,QAAxC6c,wCAAwC,CAACnb,UAAD,EAAa;AACzD,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACyd,qCAAJ,GAA4C,GAA5C,GAAkD5c,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAAC4c,yBAAd;AACD,KAxBD,CAyBA,OAAOld,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC2C,QAAtCgd,sCAAsC,CAAC9c,IAAD,EAAO;AACjD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAACyd,qCAAd,EAAqD5c,IAArD,CAAnB,CAjBE,CAiB4E;;AAE9E,UAAI,CAACC,MAAM,CAACI,UAAR,KAAuB,GAA3B,EAAgC;AAC9BL,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAC,QAAAA,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAACyd,qCAAb,EAAoD5c,IAApD,CAAf;AACD,OAtBC,CAuBF;;AACA;AACN;AACA;AACA;AACA;;;AACM,aAAOC,MAAP;AACD,KA9BD,CA+BA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD,GAtjP8C,CAwjP/C;;;AACiC,QAA3Bid,2BAA2B,CAACvb,UAAD,EAAa;AAC5C,QAAI;AACF,UAAIb,MAAM,GAAG;AAAEa,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAIxB,IAAI,GAAGX,EAAE,CAACkB,SAAH,CAAaI,MAAb,CAAX;AACA,UAAIV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC6d,8BAAJ,GAAqC,GAArC,GAA2Chd,IAApD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOC,MAAM,CAACgd,mBAAd;AACD,KAvCD,CAwCA,OAAOtd,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wCAAd,EAAwDF,GAAxD;AACD;;AACD,WAAOG,SAAP;AACD;;AAC4B,QAAvBod,uBAAuB,CAACld,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUf,GAAG,CAAC6d,8BAAd,EAA8Chd,IAA9C,CAAnB,CA1BE,CA0BqE;AACvE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOC,MAAP;AACD,KAlCD,CAmCA,OAAON,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,+BAAd,EAA+CF,GAA/C;AACD;;AACD,WAAOG,SAAP;AACD;;AACiC,QAA5Bqd,4BAA4B,CAACnd,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIC,MAAM,GAAG,MAAM,KAAKqB,GAAL,CAASnC,GAAG,CAAC6d,8BAAb,EAA6Chd,IAA7C,CAAnB,CA5BE,CA4BoE;AACtE;;AACA;AACN;AACA;AACA;AACA;;AACM,a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AAIte,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACqf,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOve,MAAM,CAACwe,YAAd;AACD,KA3DD,CA4DA,OAAO9e,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C;AACD;;AACD,WAAOG,SAAP;AACD,GAlgQ8C,CAogQ/C;;;AAC6B,QAAvB4e,uBAAuB,GAAG;AAC9B,QAAI;AAEF,UAAIze,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAACwf,qCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO1e,MAAM,CAAC2e,eAAd;AACD,KAtDD,CAuDA,OAAOjf,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C;AACD;;AACD,WAAOG,SAAP;AACD,GAjkQ8C,CAmkQ/C;;;AAC0B,QAApB+e,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAI5e,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC2f,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO7e,MAAM,CAAC8e,YAAd;AACD,KA/ED,CAgFA,OAAOpf,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CF,GAA5C;AACD;;AACD,WAAOG,SAAP;AACD,GAzpQ8C,CA2pQ/C;;;AACsB,QAAhBkf,gBAAgB,GAAG;AACvB,QAAI;AAEF,UAAI/e,MAAM,GAAG,MAAM,KAAKW,GAAL,CAASzB,GAAG,CAAC8f,+BAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOhf,MAAM,CAACif,QAAd;AACD,KAjDD,CAkDA,OAAOvf,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCF,GAAxC;AACD;;AACD,WAAOG,SAAP;AACD;;AAntQ8C","sourcesContent":["import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\r\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\r\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\r\nimport ApiService from \"../ApiServiceBackend\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport qs from 'qs';\r\nimport moment from \"moment\";\r\n\r\nexport default class Services extends ApiService {\r\n\r\n  //Login de Usuario\r\n  async getUserInfo(userName, password) {\r\ntry{\r\n\r\n}\r\ncatch (err) {\r\n  console.error(\"api error guardarHistorico\", err)\r\n}\r\nreturn undefined;\r\n  }\r\n\r\n  async guardarDocumentoAnexo(data) {\r\n\r\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\r\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n    */\r\n    if (result.status.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async eliminarDocumentoAnexo(data) {\r\n    data = qs.stringify(data);\r\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\r\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\r\n    console.log(\"eliminarDocumentoAnexo\", result);\r\n    if (result.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async consultarDocumentosAnexos(params) {\r\n\r\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\r\n\r\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n    */\r\n\r\n    if (result.status.statusCode === \"200\") {\r\n      return result.attachments;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarHistorico(data) {\r\n    try {\r\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error guardarHistorico\", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async searchLogs(params) {\r\n\r\n    try {\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        //return result.logs;\r\n        return { status: 200, result: result.logs };\r\n\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarHistorico\", err)\r\n      return { status: err.response.status, error: err.response.data }; //errorMessage, //errorCode\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS GENERALES///////\r\n  async guardarDatosGeneralesIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 2,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n    }\r\n      }\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\r\n\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n    },\r\n    \"status\": true,\r\n    \"identificationType\": \"RUC\",\r\n    \"customerDocumentId\": \"00000081\",\r\n    \"customerNumberT24\": \"\",\r\n    \"firstName\": \"Rey\",\r\n    \"secondName\": \"\",\r\n    \"firstLastName\": \"\",\r\n    \"secondLastName\": \"\",\r\n    \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n} */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS EMPRESA///////\r\n  async guardarDatosEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n    },\r\n    \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n    },\r\n    \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n    },\r\n    \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n    },\r\n    \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n    },\r\n    \"referencePoint\": \"12\",\r\n    \"residency\": \"13\",\r\n    \"houseNumber\": \"14\",\r\n    \"phoneNumber\": 15,\r\n    \"mobileNumber\": 16,\r\n    \"workNumber\": 17,\r\n    \"email\": \"18\",\r\n    \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n    },\r\n    \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n    },\r\n    \"exclusion\": true,\r\n    \"sustainable\": true\r\n\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\r\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR HISTORIAL EMPRESA///////\r\n  async guardarHistorialEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"8\",\r\n\"description\":\"description2\",\r\n\"employeesNumber\":\"346\",\r\n\"details\":\"detalles2\",\r\n\"status\":true\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarHistorialEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFO ACCIONISTAS///////\r\n  async consultarDatosAccionistas(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 24\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 23\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 22\r\n        }\r\n    ],\r\n    \"observations\": \"ALGODON\",\r\n    \"infoDate\": \"2021-11-19\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.shareholders;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1644931014,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"shareholderId\": 1,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1644931014,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30,\r\n  \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarAccionista(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n    \"shareholderId\":1\r\n}\r\n       */\r\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionAccionista(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 107,\r\n    \"description\": \"dd5\",\r\n    \"infoDate\":1643723937\r\n}\r\n      */\r\n      data = {\r\n        transactId: data.transactId,\r\n        description: data.observations == null ? \" \" : data.observations,\r\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\r\n      }\r\n      // data[\"date\"] = \"1980-11-11\";\r\n      // data[\"jsonData\"] = \"[{}]\";\r\n\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionAccionista(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n       {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n    ],\r\n    \"observations\": \"dd5\",\r\n    \"infoDate\": \"2022-01-10\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.observations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\r\n  async guardarEstructuraEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"46\",\r\n\"description\":\"estructura1\",\r\n\"date\":\"2021-12-10\"\r\n}\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarEstructuraEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"transactId\": 44,\r\n    \"observations\": \"estructura2\",\r\n    \"infoDate\": \"2022-01-19\",\r\n    \"status\": true,\r\n    \"attachments\": []\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GOBIERNO CORPORATIVO///////\r\n  async consultarDatosGobiernoCorporativo(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"corporateGobernance\": [],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGobiernoCorporativo(data) {\r\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n     */\r\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  async actualizarGobiernoCorporativo(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":30,\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarGobiernoCoporativo(data) {\r\n    /*{\r\n\"transactId\":\"101\",\r\n\"corporateIdentification\":17\r\n} */\r\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n\r\n  ////IGR - RELEVO GENERACIONAL ///////\r\n  async consultarDatosRelevoGeneracional(transactId) {\r\n    try {\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n    },\r\n    \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 12,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 13,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 38,\r\n            \"name\": \"vnombre character varying\",\r\n            \"position\": \"vcargo character varying\",\r\n            \"birthDate\": \"1998-08-17\",\r\n            \"age\": 23,\r\n            \"relationship\": \"vrelacion character varying\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"name\":\"vnombre character varying\",\r\n  \"position\":\"vcargo character varying\",\r\n  \"birthDate\":\"1998-08-17\",\r\n  \"age\":23,\r\n  \"relationship\":\"vrelacion character varying\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"managementRIdentification\":10,\r\n  \"name\":\"vnombre character varying\",\r\n  \"position\":\"vcargo character varying\",\r\n  \"birthDate\":\"1998-08-17\",\r\n  \"age\":23,\r\n  \"relationship\":\"vrelacion character varying\",\r\n  \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelevoGeneracional(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n    \"managementRIdentification\":10\r\n}*/\r\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionRelevoGeneracional(data) {\r\n    try {\r\n      /*{    \r\n    \"transactId\":1,\r\n    \"observations\":\"ncn\",\r\n    \"status\":true,\r\n    \"date\":\"2022-01-14\"    \t\r\n}*/\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        data[\"date\"] = moment().format(\"YYYY-MM-DD\");\r\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionRelevoGeneracional(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n      /*{\r\n   \"statusCode\": \"200\",\r\n   \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n   \"getManagementRelaysInfoResponseDTO\": {\r\n       \"transactId\": 200,\r\n       \"observations\": \"ncn\",\r\n       \"status\": true,\r\n       \"date\": \"2022-01-14\"\r\n   }\r\n} */\r\n\r\n      return result.getManagementRelaysInfoResponseDTO.observations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR Flujo Operativo///////\r\n  async guardarFlujoOperativo(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\":\"8\",\r\n\"observations\":\"ee445\",\r\n\"infoDate\":\"2021-12-10\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFlujoOperativo(transactId) {\r\n    try {\r\n      //vidtramite=44&vidproceso=5&vidactividad=1\r\n      var params = { vidtramite: transactId, vidproceso: opt.PROCESS_INFORMEGESTION, vidactividad: opt.ACT_FLUJOOPERATIVO }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 199,\r\n    \"observations\": \"prueba\",\r\n    \"infoDate\": \"2021-12-29\",\r\n    \"status\": true,\r\n    \"attachments\": []}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - EMPRESAS RELACIONADAS///////\r\n  async consultarDatosEmpresaRelacionada(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"observations\": \"tets\",\r\n    \"date\": \"2022-01-24\",\r\n    \"estado\": true,\r\n    \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"companyId\": 11\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async actualizarEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"trasactId\":1,\r\n    \"companyId\":15,\r\n    \"name\":\"maicol up\",\r\n    \"activity\":\"actividad up\",\r\n    \"sectorExperience\":10,\r\n    \"relationship\":\"relaciona up\",\r\n    \"status\":true\r\n}*/\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async eliminarEmpresaRelacionada(data) {\r\n    try {\r\n      /*trasactId:101,companyId:11 */\r\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionEmpresaRelacionada(data) {\r\n    try {\r\n      data = {\r\n        \"trasactId\": data.trasactId,\r\n        \"description\": data.observations\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN CLIENTE ///////\r\n  async consultarListaClientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":104,    \r\n    \"name\":\"enrique5\",\r\n    \"country\":\"pana\",\r\n    \"salePercentage\":75.55,\r\n    \"customerType\":\"cred\",\r\n    \"salesType\":\"cred\", \r\n    \"delayReason\":\"cred\",\t\r\n    \"termDays\":90\r\n}\r\n \r\n      */\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"customerInfoId\": 14,\r\n    \"name\": \"enrique5\",\r\n    \"country\": \"pana\",\r\n    \"salePercentage\": 75.55,\r\n    \"customerType\": \"cred\",\r\n    \"salesType\": \"cred\",\r\n    \"delayReason\": \"cred\",\r\n    \"termDays\": 90,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_INFOCLIENTE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarClienteIGR(data) {\r\n    try {\r\n      /*transactId:101,customerIdentification:2 */\r\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionClienteIGR(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"description\": \"ddd\",\r\n    \"seasonalSales\": false,\r\n    \"percSeasonalPeriodSales\": 0.5,\r\n    \"dateInformation\": \"2022-01-14\"\r\n}*/\r\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionClienteIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n    }\r\n}\r\n      */\r\n\r\n      return result.clientSectionCompaniesDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN PROVEEOR ///////\r\n  async consultarListaProveedoresIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\r\n      /**/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"name\": \"Provedor de prueba\",\r\n    \"oldRelationship\": 2,\r\n    \"percentPurchases\": 2.35788,\r\n    \"creditDays\": 30,\r\n    \"negotiationConditions\": \"prueba de negociacion\",\r\n    \"country\": \"panama\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 11,\r\n    \"providerId\": 1,\r\n    \"name\": \"provedor actualizado\",\r\n    \"oldRelationship\": 52,\r\n    \"percentPurchases\": 30.255,\r\n    \"creditDays\": 20,\r\n    \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n    \"country\": \"colombia\",\r\n    \"status\": false\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarProveedorIGR(data) {\r\n    try {\r\n      /*transactId:101,vidproveedor:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionProveedorIGR(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\": 1,\r\n  \"description\": \"descripcion text\",\r\n  \"purchasingCycle\": \"ciclocompras character varying\"\r\n}*/\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionProveedorIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.suppliersList;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN RECIPROCIDAD ///////\r\n  async consultarListaReciprocidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\r\n      /*{\r\n    \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 108,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"reciprocity_id\":1,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarReciprocidadIGR(data) {\r\n    try {\r\n      /*transactId:101,reciprocityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionReciprocidad(data) {\r\n    try {\r\n      /*{\r\n\"transactId\":4,\r\n\"observations\":\"Cambios\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionReciprocidad(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.observations;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\r\n  async consultarActivosFijosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_FACILIDADACTIVOSFIJOS }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\r\n      /*\r\n      {\r\n    \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"variationsAssets\": null,\r\n    \"variationsAssetsObs\": null,\r\n    \"manufacturingAgroCompanies\": null,\r\n    \"productionLine\": null,\r\n    \"capacity\": null,\r\n    \"usedCapacity\": null,\r\n    \"tradingCompany\": null,\r\n    \"warehouseCapacity\": null,\r\n    \"transportDistributionFleet\": null,\r\n    \"units\": null,\r\n    \"renovation\": null,\r\n    \"status\": null,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\":0.00,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"facilityAssetId\":2,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\": 10.55,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3,\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarActivosFijosIGR(data) {\r\n    try {\r\n      /*transactId:101,fixedAssetId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"variationsAssets\": true,\r\n    \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n    \"manufacturingAgroCompanies\": true,\r\n    \"productionLine\": \"vlineaproduccion\",\r\n    \"capacity\": \"vcapacidad\",\r\n    \"usedCapacity\": \"vcapacidadutilizada\",\r\n    \"tradingCompany\": true,\r\n    \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n    \"transportDistributionFleet\": true,\r\n    \"units\": \"vunidades\",\r\n    \"renovation\": \"vrenovacion\",\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - INFORMACIóN SEGUROS ///////\r\n  async consultarSegurosEmpresaIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result.companyInsurance;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"company\":\"Comision\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-30\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"insuranceId\":1,\r\n    \"company\":\"Company\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-27\",\r\n    \"status\":\"true\"\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSegurosEmpresaIGR(data) {\r\n    try {\r\n      /*transactId:101,InsuranceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\r\n  async guardarArquitecturaEmpresarialIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\": 101,\r\n  \"ticCompanyUse\":\"Ganaderia\",\r\n  \"auditedAreas\":\"Santander\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode !== \"200\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarArquitecturaEmpresarialIGR(transactId) {\r\n    try {\r\n\r\n      var params = { vidtramite: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_ARQUITECTURAEMPRESARIAL }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n  \"ticCompanyUse\": \"Ganaderia\",\r\n  \"auditedAreas\": \"Santander\",\r\n  \"status\": true,\r\n  \"attachments\": []\r\n}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - COMPERTIDORES DEL MERCADO ///////\r\n  async consultarCompetidores(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\r\n\r\n      /*{\r\n    \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n    \"competitorId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\",\r\n    \"status\":true\r\n      }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n    }\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":4,\r\n    \"competitorId\":8,\r\n    \"name\":\"CARRERA\",\r\n    \"description\":\"LISTA CARRERA\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCompetidorIGR(data) {\r\n    try {\r\n      /*transactId:101,competitorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - PROYECCIONES ///////\r\n  async consultarProyecciones(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarProyecciones(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":1,\r\n\"descripcion\":\"gggsgsgsgsgs\",\r\n\"assetsOperatingAmount\":3,\r\n\"assetsOperatingReason\":\"jhfjshdhshd\",\r\n\"fixedAssetsAmount\":3,\r\n\"fixedAssetsReason\":\"jhfjshdhshd\",\r\n\"othersAssetsAmount\":3,\r\n\"othersAssetsReason\":\"jhfjshdhshd\",\r\n\"bankAmount\":3,\r\n\"bankReason\":\"jhfjshdhshd\",\r\n\"providersAmount\":3,\r\n\"providersReason\":\"jhfjshdhshd\",\r\n\"capitalAmount\":3,\r\n\"capitalReason\":\"jhfjshdhshd\",\r\n\"maximodeuda\":3,\r\n\"estimatedDate\":\"2022-01-15\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACION GARANTES///////\r\n  async consultarGarantes(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n\r\n      */\r\n      return result.guarantors;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api ConsultarGarantes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarante(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 1,\r\n  \"documentType\": \"CED\",\r\n  \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n  \"isGuarantor\": true,\r\n  \"name\": \"vnombre character varying\",\r\n  \"secondName\": \"vsegnombre character varying\",\r\n  \"lastName\": \"vapellido character varying\",\r\n  \"secondLastName\": \"vsegapellido character varying\",\r\n  \"guarantorRelationship\": \"vrelaciongarante text\",\r\n  \"origin\": \"vprocedenciabien text\",\r\n  \"guarantorCommitment\": \"vcompromisogarante text\",\r\n  \"warrantyReason\": \"vrazongarantia text\"\r\n}\r\n      */\r\n\r\n      return await this.post(url.URL_BACKEND_GARANTES, data);\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarante(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"guarantorId\": 1,\r\n    \"documentType\": \"vtipodocumento up\",\r\n    \"guarantorDocument\": \"vdocumentogarante up\",\r\n    \"isGuarantor\": true,\r\n    \"name\": \"vnombre up\",\r\n    \"secondName\": \"vsegnombre up\",\r\n    \"lastName\": \"vapellido up\",\r\n    \"secondLastName\": \"vsegapellido up\",\r\n    \"guarantorRelationship\": \"vrelaciongarante up\",\r\n    \"origin\": \"vprocedenciabien up\",\r\n    \"guarantorCommitment\": \"vcompromisogarante up\",\r\n    \"warrantyReason\": \"vrazongarantia up\",\r\n    \"date\": \"2022-01-18\",\r\n    \"status\": true}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n      return await this.put(url.URL_BACKEND_GARANTES, data);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarante(data) {\r\n    try {\r\n      /*transactId:101,guarantorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW ACTUAL ///////\r\n  async consultarSowActualIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data.status = true;\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowActualIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW PROPUESTO ///////\r\n  async consultarSowPropuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowPropuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowPropuestoIGR(data) {\r\n    try {\r\n      data.status = true;\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowPropuestoIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - ASPECTOS AMBIENTALES///////\r\n  async consultarAspectosAmbientalesIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarAspectosAmbientales: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarAspectosAmbientalesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\r\n  async consultarRelacionesBancariasDeudasCP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n      /*transactId:101,debtId:1 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\r\n  async consultarRelacionesBancariasDeudasLP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n      /*transactId:101,debtId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARIAS SECCION///////\r\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRelacionesBancariasSeccionIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - DOLLAR ///////\r\n  async consultarFlujoCajaDollar(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\r\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaDollar(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDolarId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\r\n  async consultarFlujoCajaServicioDeudas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n    }\r\n\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDebtServiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - EGRESOS ///////\r\n  async consultarFlujoCajaEgresos(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\r\n      /*{\r\n\r\n      {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaEgresos(data) {\r\n    try {\r\n      /*transactId:101,cashFlowOutcomeId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data);\r\n      //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\r\n  async consultarFlujoCajaCargaTrabajo(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\r\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n      /*transactId:101,cashFlowWorkloadId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - INGRESOS ///////\r\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n      /*transactId:101,cashFlowInvoiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - COBRANZAS ///////\r\n  async consultarFlujoCajaCobranzas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\r\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCobranzas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowCollectiond:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - MOVIMIENTOS DE CUENTAS ///////\r\n  async consultarMovimientosCuentasIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.movements;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":1,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":109,\r\n\"movementId\":12,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMovimientosCuentasIGR(data) {\r\n    try {\r\n      /*transactId:101,movementId:12 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionMovimientosCuentas(data) {\r\n    try {\r\n      /*{\r\n\"trasactId\":101,\r\n\"observations\":\"test\"\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionMovimientosCuentas(transactId) {\r\n    try {\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\r\n\r\n      return result.movements[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CUENTAS POR COBRAR ///////\r\n  async consultarCuentasCobrarIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_CUENTASPORCOBRAR }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\r\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result.accountsReceivable;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCuentasCobrarIGR(data) {\r\n    try {\r\n      /*data={transactId:101,accountReceivableId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX ///////\r\n  async consultarCapexIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\r\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX PRESUPUESTO ///////\r\n  async consultarCapexPresupuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexPresupuestoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX DETALLES PROYECTO ///////\r\n  async consultarCapexDetalleProyectoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexDetailsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RECOMENDACIONES ///////\r\n  async consultarRecomendacionesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\r\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRecomendacionesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n      }\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - MATRIZ OTROS BANCOS ///////\r\n  async consultarMatrizOtrosBancosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\r\n      /*{\r\n    \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"otherBankId\":1,\r\n  \"bank\": \"BANESCO PANAMA\",\r\n  \"passivePercentage\":3.5,\r\n  \"participation\":5.2,\r\n  \"longTerm\":1.200,\r\n  \"shortTerm\":600,\r\n  \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n      /*transactId:101,otherBankId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizExpedientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\r\n      /*{\r\n    \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n     {\r\n\"transactId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"filesId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizExpedientesIGR(data) {\r\n    try {\r\n      /*transactId:101,filesId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizNuevosNegociosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\r\n      /*{\r\n    \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":101,\r\n\"businessType\": {\r\n\"code\":\"Papeleria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Bueno\",\r\n\"observations\":\"Ventas productos oficina\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":2,\r\n\"newBusinessId\":2,\r\n\"businessType\": {\r\n\"code\":\"Cigarreria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Excelente\",\r\n\"observations\":\"Ventas productos canasta familiar\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n      /*transactId:101,newBusinessId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizRentabilidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\r\n      /*{\r\n    \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Otros Bancos\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 50.000\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"profitabilityId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Nuevo negocio\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 500.000,\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizRentabilidadIGR(data) {\r\n    try {\r\n      /*transactId:101,profitabilityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarMatrizSeccionIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"observations\": \"Observacion\"}\r\n */\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      //OK\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}*/\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarMatrizSeccionIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\r\n      /*\r\n            {\r\n    \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.competitiveMatrix[0];\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizPosicionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      return result.positions;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"positionId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,positionId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n    ]\r\n}*/\r\n      return result.transactionals;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"transactionalId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,transactionalId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR NEGOCIOS A OBTENER///////\r\n  async guardarNegocioObtenerIGR(data) {\r\n    try {\r\n      /*\r\n  {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n  }\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarNegocioObtenerIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\r\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////BUSQUEDA y DESCARTE///////\r\n  async guardarBusquedaDescarte(data) {\r\n    try {\r\n      var model = BusquedaDescarteModel.getSaveModel(data);\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n\r\n        //rutima para actualizar aun no existe\r\n\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarBusquedaDescarte(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_BUSQUEDADESCARTE, activityId: opt.ACT_NONE }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\r\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\r\n      if (result.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////// USUARIO PROSPECTO ////////////\r\n  async guardarUsuarioProspecto(data) {\r\n    let result = undefined;\r\n    try {\r\n\r\n      //Actualizar\r\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\r\n        var userModel = UsuarioProspectoModel.getUpdateModel(data);\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.statusCode === \"200\") {\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      else { //Nuevo\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n        console.log(\"guardarUsuarioProspecto\", userModel);\r\n        //Guardamos Nuevo Usuario Prospecto\r\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.status.statusCode === \"200\") {\r\n          return result;\r\n        }\r\n      }\r\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n\r\n        data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      */\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarUsuarioProspecto: \", err);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  async consultarUsuarioProspecto(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\r\n      /*\r\n            {\r\n    \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\n      return result.costumer[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarCumplimiento(data) {\r\n    try {\r\n\r\n      var model = {\r\n        transactId: data.transactId,\r\n        compliance: true,\r\n        observations: data.observationsSearchDiscard,\r\n        approved: true,\r\n        observationsComp: data.observationsComp\r\n      }\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarCumplimiento\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////////////////////////////////////\r\n  async consultarTramiteInbox(username) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { responsible: username }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\r\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async actualizarTramiteInbox(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":\"8\",\r\n  \"instanceId\":1,\r\n  \"customerId\":3,\r\n  \"currentProcess\":5,\r\n  \"nextprocess\":6,\r\n  \"responsible\":\"userTest\",\r\n  \"date\":\"2021-12-10\",\r\n  \"status\":true,\r\n  \"requestId\":3\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n\r\n\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusion() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarListaExclusion(transaccionId, exclusionId) {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    try {\r\n      let data = {\r\n        \"transactId\": transaccionId,\r\n        \"exclusionCatListId\": exclusionId\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.err(\"api guardarListaExclusion\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusionMarcada(params) {\r\n    var data = qs.stringify(params);\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\r\n  }\r\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\r\n    try {\r\n      var data = { transactId: transactId, exclusionId: exclusionId };\r\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarListaExclusionMarcada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\r\n  async nuevoDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"customerNumber\":\"123\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n    \"economicGroupName\":\"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1.55,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2021-12-20\",\r\n    \"lastRequestDate\":\"2021-10-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ682022\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      // if (result.statusCode === \"200\") {\r\n\r\n      //   //Nota: Actualizar Variable en BPM de requestId\r\n      //   return result;\r\n      // }\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"requestId\":\"XYZ682022\",\r\n    \"customerNumber\":\"1\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n     \"economicGroupName\": \"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca-cambio\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2022-01-20\",\r\n    \"lastRequestDate\":\"2022-01-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\",\r\n    \"status\":true,\r\n    \"date\":\"2022-01-20\"\r\n}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesPropCred(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\r\n      /*\r\n            {\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n    ]\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.data;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FACILIDAD ///////\r\n  async nuevoFacilidadPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"cr\": \"\",\r\n    \"amount\": 22.5,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilityId\": 5\r\n} */\r\n      return result.facilityId;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFacilidadPropCred(data) {\r\n    try {\r\n      data.facilityId = 12;\r\n      data.requestId = \"XYZ892022\";\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n    \"cr\": \"\",\r\n    \"amount\": 22.4,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFacilidadPropCred(facilityId, requestId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { facilityId: facilityId, requestId: requestId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\r\n      /*\r\n            const json ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n    }\r\n}\r\n            */\r\n      return result.facilitiesDetailDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - DESEMBOLSO///////\r\n  async consultarListaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\r\n\r\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\r\n\r\n      return result.disbursements;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":\"2\",\r\n    \"disbursementTypeId\":\"disbursementTypeId2\",\r\n    \"observations\":\"observations2\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"disbursementTypeId\":\"update2\",\r\n    \"observations\":\"updated obs\",\r\n    \"status\":true,\r\n    \"disbursementId\":2\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementId: disbursementId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\r\n  async consultarListaProgramaPagoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n    ]\r\n}*/\r\n      return result.paymentProgramDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\"    \r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"paymentProgramId\": \"5\"\r\n}*/\r\n      if (result.serviceResponseTO.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\",\r\n    \"paymentProgramId\":5, \r\n    \"status\":true\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\r\n    try {\r\n      var data = { facilityId: facilityId, paymentProgramId: paymentProgramId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - COMISION///////\r\n  async consultarComisionPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\r\n\r\n      /*{\r\n    \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.commission;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":2,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\",\r\n    \"status\":true,\r\n    \"commissionId\":14\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarComisionPropCred(facilityId, commissionId) {\r\n    try {\r\n      var data = { facilityId: facilityId, commissionId: commissionId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\r\n  async consultarFormaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n    \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n} */\r\n      return result.disbursementForm;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\": \"2\",\r\n    \"typedistrenchment\":\"tipodesembolso \",\r\n    \"description\":\"description ingreso\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\":2,\r\n    \"typedistrenchment\":\"tipodesembolso\",\r\n    \"description\":\"description actualizada\",\r\n    \"status\":true,\r\n    \"disbursementid\":1\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementFormId: disbursementFormId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - GARANTIA///////\r\n  async consultarGarantiaPropCred(facilityId) {\r\n    try {\r\n      var params = { requestId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\r\n\r\n      /*{\r\n    \"requestId\": \"2\",\r\n    \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result.guarantees;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n    }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"guaranteeId\": 1,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"requestId\": 2,\r\n    \"guaranteeId\": 1,\r\n    \"guaranteeTypeName\": \"2\",\r\n    \"commercialValue\": 655,\r\n    \"fastValue\": 800,\r\n    \"observations\": \"observacion prueba\",\r\n    \"ltv\": 700,\r\n    \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n    \"signature\": \"firma prueba actualizada\",\r\n    \"trustNumber\": \"numero nose como es \",\r\n    \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n    \"status\": false\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\r\n    try {\r\n      var data = { requestId: facilityId, guaranteeId: guaranteeId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FIANZAS///////\r\n  async consultarFianzaPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\r\n\r\n      /*{\r\n    \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n      return result.bails;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n  }\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFianzaPropCred(facilityId, idBail) {\r\n    try {\r\n      var data = { facilityId: facilityId, idBail: idBail };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  /////ANALISIS DE CREDITO //////\r\n  ///////////////////////////////\r\n  //Balance Pasivo\r\n  async checkBalancePassiveAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\r\n\r\n      /*\r\n     {\r\n    \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result.passiveCapitalBalance;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":4,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2018,\r\n\"year2\": 2019,\r\n\"year3\": 2020,\r\n\"year4\": 2021,\r\n\"presentYear\":2022\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":2,\r\n\"itemPassiveId\":2,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2017,\r\n\"year2\": 2018,\r\n\"year3\": 2019,\r\n\"year4\": 2020,\r\n\"presentYear\":2021,\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\r\n    try {\r\n      var data = { transactId: transactId, itemPassiveId: itemPassiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async queryStateOriginApplicationsAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\r\n\r\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n\r\n      return result.sourceApplicationsStates;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 1,\r\n    \"sourceApplicationItemId\": 4,\r\n    \"sourceApplicationItem\": \"origen 2up\",\r\n    \"year1\": 55,\r\n    \"year2\": 66,\r\n    \"year3\": 77,\r\n    \"year4\": 88,\r\n    \"presentYear\": 99,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\r\n    try {\r\n      var data = { transactId: transactId, sourceApplicationItemId: sourceApplicationItemId };\r\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async checkActiveBalanceAC(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n    ]\r\n} */\r\n\r\n\r\n\r\n      return result.activeBalances;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async newActiveBalanceAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async updateActiveBalanceAC(data) {\r\n    try {\r\n\r\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\r\n    try {\r\n      var data = { requestId: transactId, itemActiveId: itemActiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  //Balance Activo\r\n  async queryACIndicator(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"indicatorDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 1,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.55,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.55,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 2,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.56,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.56,\r\n              \"status\": true\r\n          }\r\n      ]\r\n  }*/\r\n      return result.indicatorDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async newACIndicator(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicators\": \"fghf\",\r\n      \"year1\": 0.55,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.55\r\n  }\r\n  \r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarIndicadorAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicatorsId\": 1,\r\n      \"itemIndicators\": \"1111\",\r\n      \"year1\": 0.56,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.56,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarIndicadorAC(transactId, itemIndicatorsId) {\r\n    try {\r\n      var data = { transactId: transactId, itemIndicatorsId: itemIndicatorsId };\r\n      var result = await this.del(url.URL_BACKEND_INDICADORAC + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //POLITICAS DE CREDITOS - INFORME FINANCIERO\r\n  async consultarPoliticaCredito(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\r\n\r\n      /*{\r\n    \"creditPolicy\": [\r\n          {\r\n              \"transactId\": 1,\r\n            \"debtorId\": 7,\r\n            \"itemId\": 1,\r\n            \"parameter\": \"Reglas\",\r\n            \"condition\": \"Restriccion\",\r\n            \"comply\": false,\r\n            \"observations\": \"Politicas de Credito\",\r\n              \"status\": true\r\n          }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n  }*/\r\n\r\n      return result.creditPolicy;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoPoliticaCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarPoliticaCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\r\n    try {\r\n      var data = { transactId: transactId, debtorId: debtorId, itemId: itemId };\r\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  //INFORMACION FINANCIERA - INFORME FINANCIERO\r\n  async consultarInformiacionFinancieraFiadores(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOFINANCIERA + \"?\" + data);\r\n\r\n      /*{\r\n    \"finantialInfoGuarantor\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"debtorId\": 1,\r\n            \"guarantorId\": 1,\r\n            \"personType\": \"NATURAL\",\r\n            \"identificationType\": \"CEDULA\",\r\n            \"identificationNumber\": \"987654\",\r\n            \"firstName\": \"ANDREA\",\r\n            \"secondName\": \"JOSEFINA\",\r\n            \"firstLastName\": \"VELASQUEZ\",\r\n            \"secondLastName\": \"BARROS\",\r\n            \"share\": 500.000,\r\n            \"activeCash\": 250.000,\r\n            \"activeShares\": 160.000,\r\n            \"passiveLoan\": 50.000,\r\n            \"personalWealth\": 850.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n  }*/\r\n\r\n      return result.finantialInfoGuarantor;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoInformacionFinancieraFiadores(data) {\r\n    try {\r\n\r\n      /*{\r\n  \"transactId\":2,\r\n  \"debtorId\":2,\r\n  \"personType\":\"NATURAL\",\r\n  \"identificationType\":\"CEDULA\",\r\n  \"identificationNumber\":\"987654\",\r\n  \"firstName\":\"ANDREA\",\r\n  \"secondName\":\"JOSEFINA\",\r\n  \"firstLastName\":\"VELASQUEZ\",\r\n  \"secondLastName\":\"BARROS\",\r\n  \"share\":500.000,\r\n  \"activeCash\":250.000,\r\n  \"activeShares\":160.000,\r\n  \"passiveLoan\":50.000,\r\n  \"personalWealth\":850.000\r\n  }\r\n      */\r\n      data.transactId = Number(data.transactId)\r\n      data.share = Number(data.share);\r\n      data.activeCash = Number(data.activeCash);\r\n      data.activeShares = Number(data.activeShares);\r\n      data.passiveLoan = Number(data.passiveLoan);\r\n      data.personalWealth = Number(data.personalWealth);\r\n      var result = await this.post(url.URL_BACKEND_INFOFINANCIERA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarInformacionFinancieraFiadores(data) {\r\n    try {\r\n\r\n      /*{\r\n  \"transactId\":2,\r\n  \"debtorId\":2,\r\n  \"guarantorId\":2,\r\n  \"personType\":\"NATURAL\",\r\n  \"identificationType\":\"CEDULA\",\r\n  \"identificationNumber\":\"987654\",\r\n  \"firstName\":\"ANDREA\",\r\n  \"secondName\":\"JOSEFINA\",\r\n  \"firstLastName\":\"VELASQUEZ\",\r\n  \"secondLastName\":\"BARROS\",\r\n  \"share\":500.000,\r\n  \"activeCash\":250.000,\r\n  \"activeShares\":160.000,\r\n  \"passiveLoan\":50.000,\r\n  \"personalWealth\":850.000,\r\n  \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_INFOFINANCIERA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarInformacionFinancieraFiadores(transactId, debtorId, guarantorId) {\r\n    try {\r\n      var data = { transactId: transactId, debtorId: debtorId, guarantorId: guarantorId };\r\n      var result = await this.del(url.URL_BACKEND_INFOFINANCIERA + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //INFORMACION FINANCIERA - INFORME FINANCIERO\r\n  async consultarDetalleOpinionRiesgoCredito(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + data);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"opinions\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.opinions;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoDetalleOpinionRiesgoCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_OPINIONRIESGOCREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDetalleOpinionRiesgoCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion-updated\",\r\n       \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_OPINIONRIESGOCREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarDetalleOpinionRiesgoCredito(transactId) {\r\n    try {\r\n      var data = { requestId: transactId };\r\n      var result = await this.del(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CONCLUSIONES Y RECOMENDACIONES - INFORME FINANCIERO\r\n  async consultarConclusionesRecomendacionesAnalisisFinanciero(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"conclusionFinantialAnalysisDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.conclusionFinantialAnalysisDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoConclusionesRecomendacionesAnalisisFinanciero(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarConclusionesRecomendacionesAnalisisFinanciero(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13a\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarConclusionesRecomendacionesAnalisisFinanciero(transactId, debtorId) {\r\n    try {\r\n      var data = { requestId: transactId, debtorId: debtorId };\r\n      var result = await this.del(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\r\n  async consultarInformacionRiesgoAmbiental(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + data);\r\n\r\n      /*{\r\n    \"transactId\": 101,\r\n      \"environmentCovenant\": true,\r\n      \"detail\": \"Detalle\",\r\n      \"compliance\": \"Incumplido\",\r\n      \"term\": \"Indefinido\",\r\n      \"detected\": \"Sin detectar\",\r\n      \"recommendations\": \"Recomendar\",\r\n      \"conclusions\": \"Concluido\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n  }*/\r\n\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoInformacionRiesgoAmbiental(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":101,\r\n  \"environmentCovenant\":true, \r\n  \"detail\":\"Detalle\", \r\n  \"compliance\":\"Incumplido\", \r\n  \"term\":\"Indefinido\", \r\n  \"detected\":\"Sin detectar\", \r\n  \"recommendations\":\"Recomendar\", \r\n\"conclusions\":\"Concluido\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarInformacionRiesgoAmbiental(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":101,\r\n  \"environmentCovenant\":true, \r\n  \"detail\":\"Detalle\", \r\n  \"compliance\":\"Incumplido\", \r\n  \"term\":\"Indefinido\", \r\n  \"detected\":\"Sin detectar\", \r\n  \"recommendations\":\"Recomendar\", \r\n\"conclusions\":\"Concluido\"\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarInformacionRiesgoAmbiental(transactId) {\r\n    try {\r\n      var data = { transactId: transactId };\r\n      var result = await this.del(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\r\n  async consultarRiesgoCreditoComercial(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + data);\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"conclusions\": \"Recomendaciones\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n  }*/\r\n\r\n      return result.generalDataCreditRisk;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRiesgoCreditoComercial(data) {\r\n    try {\r\n\r\n      /*{\r\n  \"transactId\":1,\r\n  \"conclusions\":\"Recomendaciones\"  \r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_RIESGOCREDITOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarRiesgoCreditoComercial(data) {\r\n    try {\r\n\r\n      /*{\r\n  \"transactId\":2,\r\n  \"conclusions\":\"Recomendaciones\",\r\n  \"status\":true  \r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_RIESGOCREDITOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarRiesgoCreditoComercial(transactId) {\r\n    try {\r\n      var data = { transactId: transactId };\r\n      var result = await this.del(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\n  async consultarNumeroFideicomiso(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + data);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"trustInfo\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustName\": \"BASA FID 2004\",\r\n              \"trustNumber\": \"2004\",\r\n              \"conclusions\": \"conclusions\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n  } */\r\n\r\n      return result.trustInfo;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoNumeroFideicomiso(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":\"200\",\r\n      \"conclusions\":\"conclusions\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_NUMEROFIDEICOMISO, data);//saveProposalData\r\n      //OK\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"trustNumber\": \"2004\",\r\n      \"trustName\": \"BASA FID 2004\"\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarNumeroFideicomiso(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":\"1\",\r\n      \"conclusions\":\"conclusions\",\r\n      \"status\":\"true\"\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_NUMEROFIDEICOMISO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarNumeroFideicomiso(transactId) {\r\n    try {\r\n      var data = { requestId: transactId };\r\n      var result = await this.del(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\n  async consultarListaFideicomitentes(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + data);\r\n\r\n      /*{\r\n      \"trustors\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 3,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 4,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n  }\r\n  } */\r\n\r\n      return result.trustors;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevaListaFideicomitentes(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_FIDEICOMITENTES, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarListaFideicomitentes(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n      \"trustorId\":3,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_FIDEICOMITENTES, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarListaFideicomitentes(transactId, trustorId) {\r\n    try {\r\n      var data = { transactId: transactId, trustorId: trustorId };\r\n      var result = await this.del(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\n  async consultarTipoFiduciarioYOtrosDatos(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"finantialCommissionDTO\": {\r\n          \"transactId\": 101,\r\n          \"structuring\": \"t2\",\r\n          \"facilityType\": \"t2\",\r\n          \"creditLineRot\": \"t2\",\r\n          \"creditLineNoRot\": \"t2\",\r\n          \"declineLoan\": \"t2\",\r\n          \"status\": true\r\n      }\r\n  }*/\r\n\r\n      return result.finantialCommissionDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarTipoFiduciarioYOtrosDatos(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 101,\r\n      \"structuring\": \"t2\",\r\n      \"facilityType\": \"t2\",\r\n      \"creditLineRot\": \"t2\",\r\n      \"creditLineNoRot\": \"t2\",\r\n      \"declineLoan\": \"t2\",\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);//saveProposalData\r\n\r\n      if (result.statusCode === 500) {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);\r\n      }\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\n  async consultarListaBeneficiarioSecundario(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + data);\r\n\r\n      /*{\r\n      \"beneficiaries\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 5,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 2,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n  }\r\n  } */\r\n\r\n      return result.beneficiaries;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevaListaBeneficiarioSecundario(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":101,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarListaBeneficiarioSecundario(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":101,\r\n      \"beneficiaryId\":2,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarListaBeneficiarioSecundario(transactId, beneficiaryId) {\r\n    try {\r\n      var data = { transactId: transactId, beneficiaryId: beneficiaryId };\r\n      var result = await this.del(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\r\n  async consultarSeccionServiciosFiduciario(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_SERVICIOSFIDUCIARIOS + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"fiduciaryServicesDTOS\": {\r\n          \"transactId\": 1,\r\n          \"guaranteetrust\": 32.3,\r\n          \"administrationTrust\": 23.1,\r\n          \"investmentTrust\": 1.1,\r\n          \"stateTrust\": 22.0,\r\n          \"scrowAccount\": 345.0,\r\n          \"description\": \"dsadsad\",\r\n          \"others\": 12.3,\r\n          \"status\": true\r\n      }\r\n  }*/\r\n\r\n      return result.fiduciaryServicesDTOS;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionServiciosFiduciario(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"guaranteetrust\": 32.3,\r\n      \"administrationTrust\": 23.1,\r\n      \"investmentTrust\": 1.1,\r\n      \"stateTrust\": 22,\r\n      \"scrowAccount\": 345,\r\n      \"description\": \"dsadsad\",\r\n      \"others\": \"12.3\",\r\n      \"status\": true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);//saveProposalData\r\n\r\n      if (+result.statusCode === 500) {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);\r\n      }\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\r\n  async consultarSeccionOtrosServiciosFiduciario(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"otherFiduciaryServicesDTO\": {\r\n          \"transactId\": 1,\r\n          \"proposal\": 12.6,\r\n          \"purpose\": \"rer\",\r\n          \"fixedActiveType\": \"sasa\",\r\n          \"description\": \"dsadsad\",\r\n          \"structureCommission\": 23.1,\r\n          \"administrationCommision\": 1.1,\r\n          \"term\": \"rere\",\r\n          \"paymentType\": \"sasa\",\r\n          \"others\": \"1.3\",\r\n          \"status\": true\r\n      }\r\n  }*/\r\n\r\n      return result.otherFiduciaryServicesDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionOtrosServiciosFiduciario(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"proposal\": 12.6,\r\n      \"purpose\": \"rer\",\r\n      \"fixedActiveType\": \"sasa\",\r\n      \"description\": \"dsadsad\",\r\n      \"structureCommission\": 23.1,\r\n      \"administrationCommision\": 1.1,\r\n      \"term\": \"rere\",\r\n      \"paymentType\": \"sasa\",\r\n      \"others\": \"1.3\",\r\n      \"status\": true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);//saveProposalData\r\n\r\n      if (+result.statusCode === 500) {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);\r\n      }\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //DOCUMENTACION LEGAL - DOCUMENTACION LEGAL\r\n  async consultarDocumentacionLegal(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + data);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"legalDocumentations\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"legalDocumentationId\": 1,\r\n              \"rotary\": false,\r\n              \"commercialLoan\": true,\r\n              \"multipleRotary\": true,\r\n              \"rotaryNumber\": true,\r\n              \"overdraft\": true,\r\n              \"transfer\": true,\r\n              \"bail\": true,\r\n              \"trust\": true,\r\n              \"agroPawn\": true,\r\n              \"naturalBail\": true,\r\n              \"legalBail\": true,\r\n              \"crossedLegalBail\": true,\r\n              \"crossedNaturalBail\": true,\r\n              \"promiseLetter\": true,\r\n              \"privateRecord\": true,\r\n              \"trustRecord\": true,\r\n              \"loanGuarantees\": true,\r\n              \"fiduciaryLine\": true,\r\n              \"prefinanced\": true,\r\n              \"status\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.legalDocumentations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoDocumentacionLegal(data) {\r\n    try {\r\n\r\n      /*{\r\n   \"transactId\":1,\r\n     \"rotary\":false,\r\n     \"commercialLoan\":true,\r\n     \"multipleRotary\":true,\r\n     \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n  \"agroPawn\":true,\r\n  \"naturalBail\":true,\r\n  \"legalBail\":true, \r\n  \"crossedLegalBail\":true,\r\n  \"crossedNaturalBail\":true,\r\n  \"promiseLetter\":true,\r\n  \"privateRecord\":true,\r\n  \"trustRecord\":true,\r\n  \"loanGuarantees\":true,\r\n  \"fiduciaryLine\":true,\r\n  \"prefinanced\":true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_DOCUMENTACIONLEGAL, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDocumentacionLegal(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"legalDocumentationId\":1,\r\n   \"transactId\":1,\r\n     \"rotary\":false,\r\n     \"commercialLoan\":true,\r\n     \"multipleRotary\":true,\r\n     \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n  \"agroPawn\":true,\r\n  \"naturalBail\":true,\r\n  \"legalBail\":true, \r\n  \"crossedLegalBail\":true,\r\n  \"crossedNaturalBail\":true,\r\n  \"promiseLetter\":true,\r\n  \"privateRecord\":true,\r\n  \"trustRecord\":true,\r\n  \"loanGuarantees\":true,\r\n  \"fiduciaryLine\":true,\r\n  \"prefinanced\":true,\r\n  \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_DOCUMENTACIONLEGAL, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarDocumentacionLegal(transactId, legalDocumentationId) {\r\n    try {\r\n      var data = { requestId: transactId, legalDocumentationId: legalDocumentationId };\r\n      var result = await this.del(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //DESEMBOLSO - DATOS GENERALES\r\n  async consultarDatosGeneralesDesembolso(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DESEMBOLSODATOSGENERALES + \"?\" + data);\r\n\r\n      /*{\r\n      \"subproduct\": \"vsubproducto character varying\",\r\n      \"line\": \"vnlinea character varying\",\r\n      \"masterLine\": \"vnlineamaster character varying\",\r\n      \"customerLine\": \"vnlineacliente character varying\",\r\n      \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n      \"amount\": 99.68,\r\n      \"interestRate\": 5.99,\r\n      \"savingDpf\": \"vdpfnahorro character varying\",\r\n      \"van\": \"van character varying\",\r\n      \"date\": true,\r\n      \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n      \"debitAccount\": \"vncuentadebitar character varying\",\r\n      \"nameOf\": \"vanombrede character varying\",\r\n      \"monthlyFee\": true,\r\n      \"commissionFid\": true,\r\n      \"itbmIncluded\": true,\r\n      \"commissionFwla\": true,\r\n      \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n      \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n  }*/\r\n\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarDatosGeneralesDesembolso(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"branch\": \"vsucursal character varying\",\r\n    \"loan\": \"vnprestamo character varying\",\r\n    \"product\": \"vproducto character varying\",\r\n    \"subproduct\": \"vsubproducto character varying\",\r\n    \"line\": \"vnlinea character varying\",\r\n    \"masterLine\": \"vnlineamaster character varying\",\r\n    \"customerLine\": \"vnlineacliente character varying\",\r\n    \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n    \"amount\": 99.68,\r\n    \"interestRate\": 5.99,\r\n    \"savingDpf\": \"vdpfnahorro character varying\",\r\n    \"van\": \"van character varying\",\r\n    \"date\": true,\r\n    \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n    \"debitAccount\": \"vncuentadebitar character varying\",\r\n    \"nameOf\": \"vanombrede character varying\",\r\n    \"monthlyFee\": true,\r\n    \"commissionFid\": true,\r\n    \"itbmIncluded\": true,\r\n    \"commissionFwla\": true,\r\n    \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n    \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n    \"status\":true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);//saveProposalData\r\n      if (result.statusCode === 500) {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);\r\n      }\r\n\r\n\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n\r\n  ///////////// CATALOGOS //////////////////////\r\n  /////////////////////////////////////////\r\n\r\n  //LISTA DE TIPO DE IDENTIFICACION\r\n  async consultarCatalogoTipoPersona() {\r\n    try {\r\n      var data = [{ label: \"Natural\", code: 1 }, { label: \"Juridíca\", code: 2 }];\r\n      return data;\r\n    }\r\n    catch (err) {\r\n      console.error(\"error consultarCatalogoTipoPersona: \", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //LISTA DE TIPO DE IDENTIFICACION\r\n  async consultarCatalogoTipoIdentificacion() {\r\n    try {\r\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\r\n\r\n      /*\r\n      \"status\": {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n},\r\n\"identificationType\": [\r\n    {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n    },\r\n    {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n    },\r\n  }\r\n      */\r\n      var data = [];\r\n      for (const identif of result.identificationType) {\r\n        if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\r\n          data.push(identif);\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\r\n    }\r\n    return undefined;\r\n\r\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\r\n  }\r\n\r\n  //CC-320\tConsultarListaClasificacionRiesgo\r\n  async retrieveRiskClassification() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.riskClassification;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRiskClassification: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-319\tConsultarListaTipoRevision\r\n  async retrieveRevisionType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.revisionType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRevisionType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-321\tconsultarListaTipoPropuesta\r\n  async retrieveProposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.proposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-325\tconsultarListaTipoSubPropuesta\r\n  async retrieveSubproposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.subproposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-322\tconsultarListaTipoFacilidad\r\n  async retrieveFacilityType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.facilityType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveFacilityType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-324\tconsultarListaTipoFianza\r\n  async retrieveBailType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.bailType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveBailType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}