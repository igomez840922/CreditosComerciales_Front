{"ast":null,"code":"import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\nimport ApiService from \"../ApiServiceBackend\";\nimport * as url from \"../../helpers/url_helper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport qs from 'qs';\nimport moment from \"moment\";\nexport default class Services extends ApiService {\n  //Login de Usuario\n  async getUserInfo(userName, password) {\n    //userName=usrcredcomercial&password=gIwn$4dAuuJ8\n    var params = {\n      userName: userName,\n      password: password\n    };\n    var data = qs.stringify({\n      userName: userName,\n      password: password\n    });\n    var result = await this.get(url.URL_BACKEND_LOGINUSUARIO + \"?\" + data);\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return result.attachments;\n    }\n\n    return undefined;\n  }\n\n  async guardarDocumentoAnexo(data) {\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async eliminarDocumentoAnexo(data) {\n    data = qs.stringify(data);\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\n\n    console.log(\"eliminarDocumentoAnexo\", result);\n\n    if (result.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async consultarDocumentosAnexos(params) {\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\n    var data = qs.stringify(params);\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return result.attachments;\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarHistorico(data) {\n    try {\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api error guardarHistorico\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async searchLogs(params) {\n    try {\n      var data = qs.stringify(params);\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        //return result.logs;\n        return {\n          status: 200,\n          result: result.logs\n        };\n      }\n    } catch (err) {\n      console.error(\"api error consultarHistorico\", err);\n      return {\n        status: err.response.status,\n        error: err.response.data\n      }; //errorMessage, //errorCode\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS GENERALES///////\n\n\n  async guardarDatosGeneralesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 2,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n      }\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\n      /*{\r\n      \"transactId\": 101,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n      },\r\n      \"status\": true,\r\n      \"identificationType\": \"RUC\",\r\n      \"customerDocumentId\": \"00000081\",\r\n      \"customerNumberT24\": \"\",\r\n      \"firstName\": \"Rey\",\r\n      \"secondName\": \"\",\r\n      \"firstLastName\": \"\",\r\n      \"secondLastName\": \"\",\r\n      \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      } */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS EMPRESA///////\n\n\n  async guardarDatosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n      },\r\n      \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n      },\r\n      \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n      },\r\n      \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n      },\r\n      \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n      },\r\n      \"referencePoint\": \"12\",\r\n      \"residency\": \"13\",\r\n      \"houseNumber\": \"14\",\r\n      \"phoneNumber\": 15,\r\n      \"mobileNumber\": 16,\r\n      \"workNumber\": 17,\r\n      \"email\": \"18\",\r\n      \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n      },\r\n      \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n      },\r\n      \"exclusion\": true,\r\n      \"sustainable\": true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR HISTORIAL EMPRESA///////\n\n\n  async guardarHistorialEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"description\":\"description2\",\r\n      \"employeesNumber\":\"346\",\r\n      \"details\":\"detalles2\",\r\n      \"status\":true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarHistorialEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFO ACCIONISTAS///////\n\n\n  async consultarDatosAccionistas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 24\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 23\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 22\r\n        }\r\n      ],\r\n      \"observations\": \"ALGODON\",\r\n      \"infoDate\": \"2021-11-19\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.shareholders;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1644931014,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"shareholderId\": 1,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1644931014,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarAccionista(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"shareholderId\":1\r\n      }\r\n       */\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api eliminarAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\": 107,\r\n      \"description\": \"dd5\",\r\n      \"infoDate\":1643723937\r\n      }\r\n      */\n      data = {\n        transactId: data.transactId,\n        description: data.observations == null ? \" \" : data.observations,\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\n      }; // data[\"date\"] = \"1980-11-11\";\n      // data[\"jsonData\"] = \"[{}]\";\n\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionAccionista(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n       {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n      ],\r\n      \"observations\": \"dd5\",\r\n      \"infoDate\": \"2022-01-10\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.observations;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\n\n\n  async guardarEstructuraEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"46\",\r\n      \"description\":\"estructura1\",\r\n      \"date\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarEstructuraEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\n      /*{\r\n      \"transactId\": 44,\r\n      \"observations\": \"estructura2\",\r\n      \"infoDate\": \"2022-01-19\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GOBIERNO CORPORATIVO///////\n\n\n  async consultarDatosGobiernoCorporativo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\n      /*\r\n      {\r\n      \"corporateGobernance\": [],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGobiernoCorporativo(data) {\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n    }\r\n     */\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  }\n\n  async actualizarGobiernoCorporativo(data) {\n    try {\n      /*{\r\n      \"transactId\":\"101\",\r\n      \"corporateIdentification\":30,\r\n      \"name\":\"updated-name\",\r\n      \"position\":\"jjjj\",\r\n      \"birthDate\":\"1985-11-27\",\r\n      \"age\":32\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGobiernoCoporativo(data) {\n    /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":17\r\n    } */\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  } ////IGR - RELEVO GENERACIONAL ///////\n\n\n  async consultarDatosRelevoGeneracional(transactId) {\n    try {\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n      },\r\n      \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 12,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 13,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 38,\r\n            \"name\": \"vnombre character varying\",\r\n            \"position\": \"vcargo character varying\",\r\n            \"birthDate\": \"1998-08-17\",\r\n            \"age\": 23,\r\n            \"relationship\": \"vrelacion character varying\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"name\":\"vnombre character varying\",\r\n      \"position\":\"vcargo character varying\",\r\n      \"birthDate\":\"1998-08-17\",\r\n      \"age\":23,\r\n      \"relationship\":\"vrelacion character varying\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":10,\r\n      \"name\":\"vnombre character varying\",\r\n      \"position\":\"vcargo character varying\",\r\n      \"birthDate\":\"1998-08-17\",\r\n      \"age\":23,\r\n      \"relationship\":\"vrelacion character varying\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelevoGeneracional(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":10\r\n      }*/\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionRelevoGeneracional(data) {\n    try {\n      /*{    \r\n      \"transactId\":1,\r\n      \"observations\":\"ncn\",\r\n      \"status\":true,\r\n      \"date\":\"2022-01-14\"    \t\r\n      }*/\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        data[\"date\"] = moment().format(\"YYYY-MM-DD\");\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionRelevoGeneracional(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n       \"transactId\": 200,\r\n       \"observations\": \"ncn\",\r\n       \"status\": true,\r\n       \"date\": \"2022-01-14\"\r\n      }\r\n      } */\n\n      return result.getManagementRelaysInfoResponseDTO.observations;\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR Flujo Operativo///////\n\n\n  async guardarFlujoOperativo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"observations\":\"ee445\",\r\n      \"infoDate\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFlujoOperativo(transactId) {\n    try {\n      //vidtramite=44&vidproceso=5&vidactividad=1\n      var params = {\n        vidtramite: transactId,\n        vidproceso: opt.PROCESS_INFORMEGESTION,\n        vidactividad: opt.ACT_FLUJOOPERATIVO\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 199,\r\n      \"observations\": \"prueba\",\r\n      \"infoDate\": \"2021-12-29\",\r\n      \"status\": true,\r\n      \"attachments\": []}\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - EMPRESAS RELACIONADAS///////\n\n\n  async consultarDatosEmpresaRelacionada(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"observations\": \"tets\",\r\n      \"date\": \"2022-01-24\",\r\n      \"estado\": true,\r\n      \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"companyId\": 11\r\n      } */\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"trasactId\":1,\r\n      \"companyId\":15,\r\n      \"name\":\"maicol up\",\r\n      \"activity\":\"actividad up\",\r\n      \"sectorExperience\":10,\r\n      \"relationship\":\"relaciona up\",\r\n      \"status\":true\r\n      }*/\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEmpresaRelacionada(data) {\n    try {\n      /*trasactId:101,companyId:11 */\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionEmpresaRelacionada(data) {\n    try {\n      data = {\n        \"trasactId\": data.trasactId,\n        \"description\": data.observations\n      };\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN CLIENTE ///////\n\n\n  async consultarListaClientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":104,    \r\n      \"name\":\"enrique5\",\r\n      \"country\":\"pana\",\r\n      \"salePercentage\":75.55,\r\n      \"customerType\":\"cred\",\r\n      \"salesType\":\"cred\", \r\n      \"delayReason\":\"cred\",\t\r\n      \"termDays\":90\r\n      }\r\n         */\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"customerInfoId\": 14,\r\n      \"name\": \"enrique5\",\r\n      \"country\": \"pana\",\r\n      \"salePercentage\": 75.55,\r\n      \"customerType\": \"cred\",\r\n      \"salesType\": \"cred\",\r\n      \"delayReason\": \"cred\",\r\n      \"termDays\": 90,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INFOCLIENTE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarClienteIGR(data) {\n    try {\n      /*transactId:101,customerIdentification:2 */\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionClienteIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"seasonalSales\": false,\r\n      \"percSeasonalPeriodSales\": 0.5,\r\n      \"dateInformation\": \"2022-01-14\"\r\n      }*/\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionClienteIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n      }\r\n      }\r\n      */\n\n      return result.clientSectionCompaniesDTO;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN PROVEEOR ///////\n\n\n  async consultarListaProveedoresIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\n      /**/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"name\": \"Provedor de prueba\",\r\n      \"oldRelationship\": 2,\r\n      \"percentPurchases\": 2.35788,\r\n      \"creditDays\": 30,\r\n      \"negotiationConditions\": \"prueba de negociacion\",\r\n      \"country\": \"panama\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 11,\r\n      \"providerId\": 1,\r\n      \"name\": \"provedor actualizado\",\r\n      \"oldRelationship\": 52,\r\n      \"percentPurchases\": 30.255,\r\n      \"creditDays\": 20,\r\n      \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n      \"country\": \"colombia\",\r\n      \"status\": false\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProveedorIGR(data) {\n    try {\n      /*transactId:101,vidproveedor:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionProveedorIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"description\": \"descripcion text\",\r\n      \"purchasingCycle\": \"ciclocompras character varying\"\r\n      }*/\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionProveedorIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.suppliersList;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN RECIPROCIDAD ///////\n\n\n  async consultarListaReciprocidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\n      /*{\r\n      \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 108,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"reciprocity_id\":1,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarReciprocidadIGR(data) {\n    try {\n      /*transactId:101,reciprocityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionReciprocidad(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"observations\":\"Cambios\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionReciprocidad(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.observations;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\n\n\n  async consultarActivosFijosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_FACILIDADACTIVOSFIJOS\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\n      /*\r\n      {\r\n      \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"attachments\": [],\r\n      \"variationsAssets\": null,\r\n      \"variationsAssetsObs\": null,\r\n      \"manufacturingAgroCompanies\": null,\r\n      \"productionLine\": null,\r\n      \"capacity\": null,\r\n      \"usedCapacity\": null,\r\n      \"tradingCompany\": null,\r\n      \"warehouseCapacity\": null,\r\n      \"transportDistributionFleet\": null,\r\n      \"units\": null,\r\n      \"renovation\": null,\r\n      \"status\": null,\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\":0.00,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"facilityAssetId\":2,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\": 10.55,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarActivosFijosIGR(data) {\n    try {\n      /*transactId:101,fixedAssetId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"variationsAssets\": true,\r\n      \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n      \"manufacturingAgroCompanies\": true,\r\n      \"productionLine\": \"vlineaproduccion\",\r\n      \"capacity\": \"vcapacidad\",\r\n      \"usedCapacity\": \"vcapacidadutilizada\",\r\n      \"tradingCompany\": true,\r\n      \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n      \"transportDistributionFleet\": true,\r\n      \"units\": \"vunidades\",\r\n      \"renovation\": \"vrenovacion\",\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN SEGUROS ///////\n\n\n  async consultarSegurosEmpresaIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result.companyInsurance;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"company\":\"Comision\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-30\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"insuranceId\":1,\r\n      \"company\":\"Company\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-27\",\r\n      \"status\":\"true\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSegurosEmpresaIGR(data) {\n    try {\n      /*transactId:101,InsuranceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\n\n\n  async guardarArquitecturaEmpresarialIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\":\"Ganaderia\",\r\n      \"auditedAreas\":\"Santander\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode !== \"200\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarArquitecturaEmpresarialIGR(transactId) {\n    try {\n      var params = {\n        vidtramite: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_ARQUITECTURAEMPRESARIAL\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\": \"Ganaderia\",\r\n      \"auditedAreas\": \"Santander\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      }\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - COMPERTIDORES DEL MERCADO ///////\n\n\n  async consultarCompetidores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\n      /*{\r\n      \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n      \"competitorId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\",\r\n      \"status\":true\r\n      }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n      }\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"competitorId\":8,\r\n      \"name\":\"CARRERA\",\r\n      \"description\":\"LISTA CARRERA\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCompetidorIGR(data) {\n    try {\n      /*transactId:101,competitorId:2 */\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - PROYECCIONES ///////\n\n\n  async consultarProyecciones(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\n      /*\r\n      {\r\n      \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarProyecciones(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"descripcion\":\"gggsgsgsgsgs\",\r\n      \"assetsOperatingAmount\":3,\r\n      \"assetsOperatingReason\":\"jhfjshdhshd\",\r\n      \"fixedAssetsAmount\":3,\r\n      \"fixedAssetsReason\":\"jhfjshdhshd\",\r\n      \"othersAssetsAmount\":3,\r\n      \"othersAssetsReason\":\"jhfjshdhshd\",\r\n      \"bankAmount\":3,\r\n      \"bankReason\":\"jhfjshdhshd\",\r\n      \"providersAmount\":3,\r\n      \"providersReason\":\"jhfjshdhshd\",\r\n      \"capitalAmount\":3,\r\n      \"capitalReason\":\"jhfjshdhshd\",\r\n      \"maximodeuda\":3,\r\n      \"estimatedDate\":\"2022-01-15\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACION GARANTES///////\n\n\n  async consultarGarantes(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n        */\n\n      return result.guarantors;\n    } catch (err) {\n      console.error(\"api ConsultarGarantes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"documentType\": \"CED\",\r\n      \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre character varying\",\r\n      \"secondName\": \"vsegnombre character varying\",\r\n      \"lastName\": \"vapellido character varying\",\r\n      \"secondLastName\": \"vsegapellido character varying\",\r\n      \"guarantorRelationship\": \"vrelaciongarante text\",\r\n      \"origin\": \"vprocedenciabien text\",\r\n      \"guarantorCommitment\": \"vcompromisogarante text\",\r\n      \"warrantyReason\": \"vrazongarantia text\"\r\n      }\r\n      */\n      return await this.post(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"guarantorId\": 1,\r\n      \"documentType\": \"vtipodocumento up\",\r\n      \"guarantorDocument\": \"vdocumentogarante up\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre up\",\r\n      \"secondName\": \"vsegnombre up\",\r\n      \"lastName\": \"vapellido up\",\r\n      \"secondLastName\": \"vsegapellido up\",\r\n      \"guarantorRelationship\": \"vrelaciongarante up\",\r\n      \"origin\": \"vprocedenciabien up\",\r\n      \"guarantorCommitment\": \"vcompromisogarante up\",\r\n      \"warrantyReason\": \"vrazongarantia up\",\r\n      \"date\": \"2022-01-18\",\r\n      \"status\": true}\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      return await this.put(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarante(data) {\n    try {\n      /*transactId:101,guarantorId:2 */\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW ACTUAL ///////\n\n\n  async consultarSowActualIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n      data.status = true;\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowActualIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW PROPUESTO ///////\n\n\n  async consultarSowPropuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowPropuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowPropuestoIGR(data) {\n    try {\n      data.status = true;\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowPropuestoIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - ASPECTOS AMBIENTALES///////\n\n\n  async consultarAspectosAmbientalesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarAspectosAmbientales: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarAspectosAmbientalesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\n\n\n  async consultarRelacionesBancariasDeudasCP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*transactId:101,debtId:1 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\n\n\n  async consultarRelacionesBancariasDeudasLP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*transactId:101,debtId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARIAS SECCION///////\n\n\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRelacionesBancariasSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - DOLLAR ///////\n\n\n  async consultarFlujoCajaDollar(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaDollar(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaDollar(data) {\n    try {\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaDollar(data) {\n    try {\n      /*transactId:101,cashFlowDolarId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\n\n\n  async consultarFlujoCajaServicioDeudas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n      }\r\n        */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n        */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaServicioDeudas(data) {\n    try {\n      /*transactId:101,cashFlowDebtServiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - EGRESOS ///////\n\n\n  async consultarFlujoCajaEgresos(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\n      /*{\r\n        {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaEgresos(data) {\n    try {\n      /*transactId:101,cashFlowOutcomeId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data); //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\n\n\n  async consultarFlujoCajaCargaTrabajo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*transactId:101,cashFlowWorkloadId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - INGRESOS ///////\n\n\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*transactId:101,cashFlowInvoiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - COBRANZAS ///////\n\n\n  async consultarFlujoCajaCobranzas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCobranzas(data) {\n    try {\n      /*transactId:101,cashFlowCollectiond:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MOVIMIENTOS DE CUENTAS ///////\n\n\n  async consultarMovimientosCuentasIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.movements;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":1,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":109,\r\n      \"movementId\":12,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMovimientosCuentasIGR(data) {\n    try {\n      /*transactId:101,movementId:12 */\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionMovimientosCuentas(data) {\n    try {\n      /*{\r\n      \"trasactId\":101,\r\n      \"observations\":\"test\"\r\n      } */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\n      }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionMovimientosCuentas(transactId) {\n    try {\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\n      return result.movements[0];\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CUENTAS POR COBRAR ///////\n\n\n  async consultarCuentasCobrarIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_CUENTASPORCOBRAR\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result.accountsReceivable;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCuentasCobrarIGR(data) {\n    try {\n      /*data={transactId:101,accountReceivableId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX ///////\n\n\n  async consultarCapexIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexIGR(data) {\n    try {\n      /*data={transactId:101,capexsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX PRESUPUESTO ///////\n\n\n  async consultarCapexPresupuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexPresupuestoIGR(data) {\n    try {\n      /*data={transactId:101,capexId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX DETALLES PROYECTO ///////\n\n\n  async consultarCapexDetalleProyectoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexDetalleProyectoIGR(data) {\n    try {\n      /*data={transactId:101,capexDetailsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RECOMENDACIONES ///////\n\n\n  async consultarRecomendacionesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRecomendacionesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\n      }\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MATRIZ OTROS BANCOS ///////\n\n\n  async consultarMatrizOtrosBancosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\n      /*{\r\n      \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"otherBankId\":1,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\":3.5,\r\n      \"participation\":5.2,\r\n      \"longTerm\":1.200,\r\n      \"shortTerm\":600,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizOtrosBancosIGR(data) {\n    try {\n      /*transactId:101,otherBankId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizExpedientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\n      /*{\r\n      \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"filesId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizExpedientesIGR(data) {\n    try {\n      /*transactId:101,filesId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizNuevosNegociosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\n      /*{\r\n      \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"businessType\": {\r\n      \"code\":\"Papeleria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Bueno\",\r\n      \"observations\":\"Ventas productos oficina\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":2,\r\n      \"newBusinessId\":2,\r\n      \"businessType\": {\r\n      \"code\":\"Cigarreria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Excelente\",\r\n      \"observations\":\"Ventas productos canasta familiar\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*transactId:101,newBusinessId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizRentabilidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\n      /*{\r\n      \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Otros Bancos\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 50.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"profitabilityId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Nuevo negocio\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 500.000,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizRentabilidadIGR(data) {\n    try {\n      /*transactId:101,profitabilityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarMatrizSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"Observacion\"}\r\n      */\n      //Guardamos Busqueda y Descarte\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data); //OK\n\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //Si es 500, la entidad existe... si existe lo actualizamos\n\n      if (result.statusCode === \"500\") {\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizSeccionIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\n      /*\r\n            {\r\n      \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.competitiveMatrix[0];\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizPosicionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.positions;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"positionId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*transactId:101,positionId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n      ]\r\n      }*/\n\n      return result.transactionals;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"transactionalId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*transactId:101,transactionalId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR NEGOCIOS A OBTENER///////\n\n\n  async guardarNegocioObtenerIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarNegocioObtenerIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////BUSQUEDA y DESCARTE///////\n\n\n  async guardarBusquedaDescarte(data) {\n    try {\n      var model = BusquedaDescarteModel.getSaveModel(data); //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } //Si es 500, la entidad existe... si existe lo actualizamos\n\n\n      if (result.statusCode === \"500\") {\n        //rutima para actualizar aun no existe\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarBusquedaDescarte(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_BUSQUEDADESCARTE,\n        activityId: opt.ACT_NONE\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\n\n      if (result.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ///////// USUARIO PROSPECTO ////////////\n\n\n  async guardarUsuarioProspecto(data) {\n    let result = undefined;\n\n    try {\n      //Actualizar\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\n        var userModel = UsuarioProspectoModel.getUpdateModel(data); //Actualizamos Usuario Prospecto\n\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.statusCode === \"200\") {\n          result.customerId = data.customerId;\n          result.transactId = data.transactId;\n          return result;\n        }\n      } else {\n        //Nuevo\n        userModel = UsuarioProspectoModel.getSaveModel(data);\n        console.log(\"guardarUsuarioProspecto\", userModel); //Guardamos Nuevo Usuario Prospecto\n\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.status.statusCode === \"200\") {\n          return result;\n        }\n      }\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n          data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n          //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n            result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n            return result;\r\n        }\r\n      }\r\n      */\n\n    } catch (err) {\n      console.error(\"api guardarUsuarioProspecto: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarUsuarioProspecto(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\n      /*\r\n            {\r\n      \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      return result.costumer[0];\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarCumplimiento(data) {\n    try {\n      var model = {\n        transactId: data.transactId,\n        compliance: true,\n        observations: data.observationsSearchDiscard,\n        approved: true,\n        observationsComp: data.observationsComp\n      }; //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarCumplimiento\", err);\n    }\n\n    return undefined;\n  } ///////////////////////////////////////\n\n\n  async consultarTramiteInbox(username) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        responsible: username\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarTramiteInbox(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"instanceId\":1,\r\n      \"customerId\":3,\r\n      \"currentProcess\":5,\r\n      \"nextprocess\":6,\r\n      \"responsible\":\"userTest\",\r\n      \"date\":\"2021-12-10\",\r\n      \"status\":true,\r\n      \"requestId\":3\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusion() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarListaExclusion(transaccionId, exclusionId) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    try {\n      let data = {\n        \"transactId\": transaccionId,\n        \"exclusionCatListId\": exclusionId\n      };\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.err(\"api guardarListaExclusion\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusionMarcada(params) {\n    var data = qs.stringify(params);\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\n  }\n\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\n    try {\n      var data = {\n        transactId: transactId,\n        exclusionId: exclusionId\n      };\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarListaExclusionMarcada: \", err);\n    }\n\n    return undefined;\n  } ////////////////////////////////////////////////////////////////\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\n\n\n  async nuevoDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"customerNumber\":\"123\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\":\"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1.55,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2021-12-20\",\r\n      \"lastRequestDate\":\"2021-10-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"requestId\": \"XYZ682022\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n      // if (result.statusCode === \"200\") {\n      //   //Nota: Actualizar Variable en BPM de requestId\n      //   return result;\n      // }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"requestId\":\"XYZ682022\",\r\n      \"customerNumber\":\"1\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\": \"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca-cambio\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2022-01-20\",\r\n      \"lastRequestDate\":\"2022-01-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\",\r\n      \"status\":true,\r\n      \"date\":\"2022-01-20\"\r\n      }\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesPropCred(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\n      /*\r\n            {\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n      ]\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.data;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesPropCred: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FACILIDAD ///////\n\n\n  async nuevoFacilidadPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"cr\": \"\",\r\n      \"amount\": 22.5,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilityId\": 5\r\n      } */\n\n      return result.facilityId;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFacilidadPropCred(data) {\n    try {\n      data.facilityId = 12;\n      data.requestId = \"XYZ892022\";\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n      \"cr\": \"\",\r\n      \"amount\": 22.4,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFacilidadPropCred(facilityId, requestId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        facilityId: facilityId,\n        requestId: requestId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\n      /*\r\n            const json ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n      }\r\n      }\r\n            */\n\n      return result.facilitiesDetailDTO;\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - DESEMBOLSO///////\n\n\n  async consultarListaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\n\n      return result.disbursements;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":\"2\",\r\n      \"disbursementTypeId\":\"disbursementTypeId2\",\r\n      \"observations\":\"observations2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"disbursementTypeId\":\"update2\",\r\n      \"observations\":\"updated obs\",\r\n      \"status\":true,\r\n      \"disbursementId\":2\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementId: disbursementId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\n\n\n  async consultarListaProgramaPagoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n      ]\r\n      }*/\n\n      return result.paymentProgramDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\"    \r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"paymentProgramId\": \"5\"\r\n      }*/\n\n      if (result.serviceResponseTO.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\",\r\n      \"paymentProgramId\":5, \r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        paymentProgramId: paymentProgramId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - COMISION///////\n\n\n  async consultarComisionPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\n      /*{\r\n      \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.commission;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":2,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\",\r\n      \"status\":true,\r\n      \"commissionId\":14\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarComisionPropCred(facilityId, commissionId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        commissionId: commissionId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\n\n\n  async consultarFormaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\n      /*{\r\n      \"facilityId\": 2,\r\n      \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.disbursementForm;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\": \"2\",\r\n      \"typedistrenchment\":\"tipodesembolso \",\r\n      \"description\":\"description ingreso\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\":2,\r\n      \"typedistrenchment\":\"tipodesembolso\",\r\n      \"description\":\"description actualizada\",\r\n      \"status\":true,\r\n      \"disbursementid\":1\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementFormId: disbursementFormId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - GARANTIA///////\n\n\n  async consultarGarantiaPropCred(facilityId) {\n    try {\n      var params = {\n        requestId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\n      /*{\r\n      \"requestId\": \"2\",\r\n      \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result.guarantees;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"guaranteeId\": 1,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeId\": 1,\r\n      \"guaranteeTypeName\": \"2\",\r\n      \"commercialValue\": 655,\r\n      \"fastValue\": 800,\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": 700,\r\n      \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n      \"signature\": \"firma prueba actualizada\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n      \"status\": false\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\n    try {\n      var data = {\n        requestId: facilityId,\n        guaranteeId: guaranteeId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FIANZAS///////\n\n\n  async consultarFianzaPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\n      /*{\r\n      \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.bails;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFianzaPropCred(facilityId, idBail) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        idBail: idBail\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } /////ANALISIS DE CREDITO //////\n  ///////////////////////////////\n  //Balance Pasivo\n\n\n  async checkBalancePassiveAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\n      /*\r\n      {\r\n      \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.passiveCapitalBalance;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2018,\r\n      \"year2\": 2019,\r\n      \"year3\": 2020,\r\n      \"year4\": 2021,\r\n      \"presentYear\":2022\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"itemPassiveId\":2,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2017,\r\n      \"year2\": 2018,\r\n      \"year3\": 2019,\r\n      \"year4\": 2020,\r\n      \"presentYear\":2021,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemPassiveId: itemPassiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async queryStateOriginApplicationsAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      return result.sourceApplicationsStates;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"sourceApplicationItemId\": 4,\r\n      \"sourceApplicationItem\": \"origen 2up\",\r\n      \"year1\": 55,\r\n      \"year2\": 66,\r\n      \"year3\": 77,\r\n      \"year4\": 88,\r\n      \"presentYear\": 99,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        sourceApplicationItemId: sourceApplicationItemId\n      };\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async checkActiveBalanceAC(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n      ]\r\n      } */\n\n      return result.activeBalances;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async newActiveBalanceAC(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async updateActiveBalanceAC(data) {\n    try {\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\n    try {\n      var data = {\n        requestId: transactId,\n        itemActiveId: itemActiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async queryACIndicator(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"indicatorDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 1,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.55,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.55,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 2,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.56,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.56,\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.indicatorDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async newACIndicator(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicators\": \"fghf\",\r\n      \"year1\": 0.55,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.55\r\n      }\r\n          */\n      var result = await this.post(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarIndicadorAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicatorsId\": 1,\r\n      \"itemIndicators\": \"1111\",\r\n      \"year1\": 0.56,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.56,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarIndicadorAC(transactId, itemIndicatorsId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemIndicatorsId: itemIndicatorsId\n      };\n      var result = await this.del(url.URL_BACKEND_INDICADORAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //POLITICAS DE CREDITOS - INFORME FINANCIERO\n\n\n  async consultarPoliticaCredito(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\n      /*{\r\n      \"creditPolicy\": [\r\n          {\r\n              \"transactId\": 1,\r\n            \"debtorId\": 7,\r\n            \"itemId\": 1,\r\n            \"parameter\": \"Reglas\",\r\n            \"condition\": \"Restriccion\",\r\n            \"comply\": false,\r\n            \"observations\": \"Politicas de Credito\",\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.creditPolicy;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        itemId: itemId\n      };\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //INFORMACION FINANCIERA - INFORME FINANCIERO\n\n\n  async consultarInformiacionFinancieraFiadores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOFINANCIERA + \"?\" + data);\n      /*{\r\n      \"finantialInfoGuarantor\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"debtorId\": 1,\r\n              \"guarantorId\": 1,\r\n              \"personType\": \"NATURAL\",\r\n              \"identificationType\": \"CEDULA\",\r\n              \"identificationNumber\": \"987654\",\r\n              \"firstName\": \"ANDREA\",\r\n              \"secondName\": \"JOSEFINA\",\r\n              \"firstLastName\": \"VELASQUEZ\",\r\n              \"secondLastName\": \"BARROS\",\r\n              \"share\": 500.000,\r\n              \"activeCash\": 250.000,\r\n              \"activeShares\": 160.000,\r\n              \"passiveLoan\": 50.000,\r\n              \"personalWealth\": 850.000,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.finantialInfoGuarantor;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoInformacionFinancieraFiadores(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"debtorId\":2,\r\n      \"personType\":\"NATURAL\",\r\n      \"identificationType\":\"CEDULA\",\r\n      \"identificationNumber\":\"987654\",\r\n      \"firstName\":\"ANDREA\",\r\n      \"secondName\":\"JOSEFINA\",\r\n      \"firstLastName\":\"VELASQUEZ\",\r\n      \"secondLastName\":\"BARROS\",\r\n      \"share\":500.000,\r\n      \"activeCash\":250.000,\r\n      \"activeShares\":160.000,\r\n      \"passiveLoan\":50.000,\r\n      \"personalWealth\":850.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_INFOFINANCIERA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarInformacionFinancieraFiadores(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"debtorId\":2,\r\n      \"guarantorId\":2,\r\n      \"personType\":\"NATURAL\",\r\n      \"identificationType\":\"CEDULA\",\r\n      \"identificationNumber\":\"987654\",\r\n      \"firstName\":\"ANDREA\",\r\n      \"secondName\":\"JOSEFINA\",\r\n      \"firstLastName\":\"VELASQUEZ\",\r\n      \"secondLastName\":\"BARROS\",\r\n      \"share\":500.000,\r\n      \"activeCash\":250.000,\r\n      \"activeShares\":160.000,\r\n      \"passiveLoan\":50.000,\r\n      \"personalWealth\":850.000,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INFOFINANCIERA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarInformacionFinancieraFiadores(transactId, debtorId, guarantorId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        guarantorId: guarantorId\n      };\n      var result = await this.del(url.URL_BACKEND_INFOFINANCIERA + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //INFORMACION FINANCIERA - INFORME FINANCIERO\n\n\n  async consultarDetalleOpinionRiesgoCredito(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"opinions\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"opinion\": \"opinion\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.opinions;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDetalleOpinionRiesgoCredito(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_OPINIONRIESGOCREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDetalleOpinionRiesgoCredito(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"opinion\":\"opinion-updated\",\r\n       \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_OPINIONRIESGOCREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDetalleOpinionRiesgoCredito(transactId) {\n    try {\n      var data = {\n        requestId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //CONCLUSIONES Y RECOMENDACIONES - INFORME FINANCIERO\n\n\n  async consultarConclusionesRecomendacionesAnalisisFinanciero(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"conclusionFinantialAnalysisDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": \"3\",\r\n              \"strengths\": \"13\",\r\n              \"weakness\": \"13\",\r\n              \"conclusion\": \"13\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.conclusionFinantialAnalysisDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoConclusionesRecomendacionesAnalisisFinanciero(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarConclusionesRecomendacionesAnalisisFinanciero(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": \"3\",\r\n      \"strengths\": \"13a\",\r\n      \"weakness\": \"13\",\r\n      \"conclusion\": \"13\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarConclusionesRecomendacionesAnalisisFinanciero(transactId, debtorId) {\n    try {\n      var data = {\n        requestId: transactId,\n        debtorId: debtorId\n      };\n      var result = await this.del(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\n\n\n  async consultarInformacionRiesgoAmbiental(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + data);\n      /*{\r\n      \"transactId\": 101,\r\n      \"environmentCovenant\": true,\r\n      \"detail\": \"Detalle\",\r\n      \"compliance\": \"Incumplido\",\r\n      \"term\": \"Indefinido\",\r\n      \"detected\": \"Sin detectar\",\r\n      \"recommendations\": \"Recomendar\",\r\n      \"conclusions\": \"Concluido\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoInformacionRiesgoAmbiental(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"environmentCovenant\":true, \r\n      \"detail\":\"Detalle\", \r\n      \"compliance\":\"Incumplido\", \r\n      \"term\":\"Indefinido\", \r\n      \"detected\":\"Sin detectar\", \r\n      \"recommendations\":\"Recomendar\", \r\n      \"conclusions\":\"Concluido\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarInformacionRiesgoAmbiental(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"environmentCovenant\":true, \r\n      \"detail\":\"Detalle\", \r\n      \"compliance\":\"Incumplido\", \r\n      \"term\":\"Indefinido\", \r\n      \"detected\":\"Sin detectar\", \r\n      \"recommendations\":\"Recomendar\", \r\n      \"conclusions\":\"Concluido\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarInformacionRiesgoAmbiental(transactId) {\n    try {\n      var data = {\n        transactId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\n\n\n  async consultarRiesgoCreditoComercial(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + data);\n      /*{\r\n      \"transactId\": 1,\r\n      \"conclusions\": \"Recomendaciones\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.generalDataCreditRisk;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRiesgoCreditoComercial(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"conclusions\":\"Recomendaciones\"  \r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RIESGOCREDITOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRiesgoCreditoComercial(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"conclusions\":\"Recomendaciones\",\r\n      \"status\":true  \r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RIESGOCREDITOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRiesgoCreditoComercial(transactId) {\n    try {\n      var data = {\n        transactId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarNumeroFideicomiso(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"trustInfo\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustName\": \"BASA FID 2004\",\r\n              \"trustNumber\": \"2004\",\r\n              \"conclusions\": \"conclusions\",\r\n              \"status\": true\r\n          }\r\n      ]\r\n      } */\n\n      return result.trustInfo;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoNumeroFideicomiso(data) {\n    try {\n      /*{\r\n      \"transactId\":\"200\",\r\n      \"conclusions\":\"conclusions\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_NUMEROFIDEICOMISO, data); //saveProposalData\n      //OK\n\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"trustNumber\": \"2004\",\r\n      \"trustName\": \"BASA FID 2004\"\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarNumeroFideicomiso(data) {\n    try {\n      /*{\r\n      \"transactId\":\"1\",\r\n      \"conclusions\":\"conclusions\",\r\n      \"status\":\"true\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_NUMEROFIDEICOMISO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarNumeroFideicomiso(transactId) {\n    try {\n      var data = {\n        requestId: transactId\n      };\n      var result = await this.del(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarListaFideicomitentes(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + data);\n      /*{\r\n      \"trustors\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 3,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"trustorId\": 4,\r\n              \"name\": \"maicol\",\r\n              \"address\": \"nuevo san juan\",\r\n              \"email\": \"igomez@soaint.com\",\r\n              \"telephone\": 6666666,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.trustors;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevaListaFideicomitentes(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_FIDEICOMITENTES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarListaFideicomitentes(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"trustorId\":3,\r\n      \"name\":\"maicol\",\r\n      \"address\":\"nuevo san juan\",\r\n      \"email\":\"igomez@soaint.com\",\r\n      \"telephone\":6666666,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_FIDEICOMITENTES, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarListaFideicomitentes(transactId, trustorId) {\n    try {\n      var data = {\n        transactId: transactId,\n        trustorId: trustorId\n      };\n      var result = await this.del(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarTipoFiduciarioYOtrosDatos(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"finantialCommissionDTO\": {\r\n          \"transactId\": 101,\r\n          \"structuring\": \"t2\",\r\n          \"facilityType\": \"t2\",\r\n          \"creditLineRot\": \"t2\",\r\n          \"creditLineNoRot\": \"t2\",\r\n          \"declineLoan\": \"t2\",\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.finantialCommissionDTO;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarTipoFiduciarioYOtrosDatos(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"structuring\": \"t2\",\r\n      \"facilityType\": \"t2\",\r\n      \"creditLineRot\": \"t2\",\r\n      \"creditLineNoRot\": \"t2\",\r\n      \"declineLoan\": \"t2\",\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\n\n\n  async consultarListaBeneficiarioSecundario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + data);\n      /*{\r\n      \"beneficiaries\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 5,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 101,\r\n              \"beneficiaryId\": 2,\r\n              \"firstName\": \"Maicol\",\r\n              \"secondName\": \"Israel\",\r\n              \"firstLastName\": \"nombre 2 \",\r\n              \"secondLastName\": \"apellido 2\",\r\n              \"nationality\": \"CUBA\",\r\n              \"personType\": \"N\",\r\n              \"documentType\": \"PA\",\r\n              \"documentNumber\": \"KDKDKDLDDD\",\r\n              \"address\": \"JDJDJD\",\r\n              \"telephone\": \"JDDJDJDJ\",\r\n              \"relationship\": \"DKDKDK\",\r\n              \"percentage\": 5.99,\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.beneficiaries;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevaListaBeneficiarioSecundario(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarListaBeneficiarioSecundario(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"beneficiaryId\":2,\r\n      \"firstName\":\"Maicol\",\r\n      \"secondName\":\"Israel\",\r\n      \"firstLastName\":\"nombre 2 \",\r\n      \"secondLastName\":\"apellido 2\",\r\n      \"nationality\":\"CUBA\",\r\n      \"personType\":\"N\",\r\n      \"documentType\":\"PA\",\r\n      \"documentNumber\":\"KDKDKDLDDD\",\r\n      \"address\":\"JDJDJD\",\r\n      \"telephone\":\"JDDJDJDJ\",\r\n      \"relationship\":\"DKDKDK\",\r\n      \"percentage\":5.99,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarListaBeneficiarioSecundario(transactId, beneficiaryId) {\n    try {\n      var data = {\n        transactId: transactId,\n        beneficiaryId: beneficiaryId\n      };\n      var result = await this.del(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\n\n\n  async consultarSeccionServiciosFiduciario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_SERVICIOSFIDUCIARIOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"fiduciaryServicesDTOS\": {\r\n          \"transactId\": 1,\r\n          \"guaranteetrust\": 32.3,\r\n          \"administrationTrust\": 23.1,\r\n          \"investmentTrust\": 1.1,\r\n          \"stateTrust\": 22.0,\r\n          \"scrowAccount\": 345.0,\r\n          \"description\": \"dsadsad\",\r\n          \"others\": 12.3,\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.fiduciaryServicesDTOS;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionServiciosFiduciario(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"guaranteetrust\": 32.3,\r\n      \"administrationTrust\": 23.1,\r\n      \"investmentTrust\": 1.1,\r\n      \"stateTrust\": 22,\r\n      \"scrowAccount\": 345,\r\n      \"description\": \"dsadsad\",\r\n      \"others\": \"12.3\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\n\n\n  async consultarSeccionOtrosServiciosFiduciario(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"otherFiduciaryServicesDTO\": {\r\n          \"transactId\": 1,\r\n          \"proposal\": 12.6,\r\n          \"purpose\": \"rer\",\r\n          \"fixedActiveType\": \"sasa\",\r\n          \"description\": \"dsadsad\",\r\n          \"structureCommission\": 23.1,\r\n          \"administrationCommision\": 1.1,\r\n          \"term\": \"rere\",\r\n          \"paymentType\": \"sasa\",\r\n          \"others\": \"1.3\",\r\n          \"status\": true\r\n      }\r\n      }*/\n\n      return result.otherFiduciaryServicesDTO;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionOtrosServiciosFiduciario(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"proposal\": 12.6,\r\n      \"purpose\": \"rer\",\r\n      \"fixedActiveType\": \"sasa\",\r\n      \"description\": \"dsadsad\",\r\n      \"structureCommission\": 23.1,\r\n      \"administrationCommision\": 1.1,\r\n      \"term\": \"rere\",\r\n      \"paymentType\": \"sasa\",\r\n      \"others\": \"1.3\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } //DOCUMENTACION LEGAL - DOCUMENTACION LEGAL\n\n\n  async consultarDocumentacionLegal(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"legalDocumentations\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"legalDocumentationId\": 1,\r\n              \"rotary\": false,\r\n              \"commercialLoan\": true,\r\n              \"multipleRotary\": true,\r\n              \"rotaryNumber\": true,\r\n              \"overdraft\": true,\r\n              \"transfer\": true,\r\n              \"bail\": true,\r\n              \"trust\": true,\r\n              \"agroPawn\": true,\r\n              \"naturalBail\": true,\r\n              \"legalBail\": true,\r\n              \"crossedLegalBail\": true,\r\n              \"crossedNaturalBail\": true,\r\n              \"promiseLetter\": true,\r\n              \"privateRecord\": true,\r\n              \"trustRecord\": true,\r\n              \"loanGuarantees\": true,\r\n              \"fiduciaryLine\": true,\r\n              \"prefinanced\": true,\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.legalDocumentations;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDocumentacionLegal(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n      \"rotary\":false,\r\n      \"commercialLoan\":true,\r\n      \"multipleRotary\":true,\r\n      \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n      \"agroPawn\":true,\r\n      \"naturalBail\":true,\r\n      \"legalBail\":true, \r\n      \"crossedLegalBail\":true,\r\n      \"crossedNaturalBail\":true,\r\n      \"promiseLetter\":true,\r\n      \"privateRecord\":true,\r\n      \"trustRecord\":true,\r\n      \"loanGuarantees\":true,\r\n      \"fiduciaryLine\":true,\r\n      \"prefinanced\":true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_DOCUMENTACIONLEGAL, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDocumentacionLegal(data) {\n    try {\n      /*{\r\n      \"legalDocumentationId\":1,\r\n      \"transactId\":1,\r\n      \"rotary\":false,\r\n      \"commercialLoan\":true,\r\n      \"multipleRotary\":true,\r\n      \"rotaryNumber\":true,\r\n       \"overdraft\":true,\r\n       \"transfer\":true,\r\n       \"bail\":true,\r\n       \"trust\":true,\r\n      \"agroPawn\":true,\r\n      \"naturalBail\":true,\r\n      \"legalBail\":true, \r\n      \"crossedLegalBail\":true,\r\n      \"crossedNaturalBail\":true,\r\n      \"promiseLetter\":true,\r\n      \"privateRecord\":true,\r\n      \"trustRecord\":true,\r\n      \"loanGuarantees\":true,\r\n      \"fiduciaryLine\":true,\r\n      \"prefinanced\":true,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_DOCUMENTACIONLEGAL, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDocumentacionLegal(transactId, legalDocumentationId) {\n    try {\n      var data = {\n        requestId: transactId,\n        legalDocumentationId: legalDocumentationId\n      };\n      var result = await this.del(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarInformacionFinancieraFiadores: \", err);\n    }\n\n    return undefined;\n  } //DESEMBOLSO - DATOS GENERALES\n\n\n  async consultarDatosGeneralesDesembolso(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DESEMBOLSODATOSGENERALES + \"?\" + data);\n      /*{\r\n      \"subproduct\": \"vsubproducto character varying\",\r\n      \"line\": \"vnlinea character varying\",\r\n      \"masterLine\": \"vnlineamaster character varying\",\r\n      \"customerLine\": \"vnlineacliente character varying\",\r\n      \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n      \"amount\": 99.68,\r\n      \"interestRate\": 5.99,\r\n      \"savingDpf\": \"vdpfnahorro character varying\",\r\n      \"van\": \"van character varying\",\r\n      \"date\": true,\r\n      \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n      \"debitAccount\": \"vncuentadebitar character varying\",\r\n      \"nameOf\": \"vanombrede character varying\",\r\n      \"monthlyFee\": true,\r\n      \"commissionFid\": true,\r\n      \"itbmIncluded\": true,\r\n      \"commissionFwla\": true,\r\n      \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n      \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n      \"status\": true,\r\n      \"serviceStatus\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarDatosGeneralesDesembolso(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"branch\": \"vsucursal character varying\",\r\n      \"loan\": \"vnprestamo character varying\",\r\n      \"product\": \"vproducto character varying\",\r\n      \"subproduct\": \"vsubproducto character varying\",\r\n      \"line\": \"vnlinea character varying\",\r\n      \"masterLine\": \"vnlineamaster character varying\",\r\n      \"customerLine\": \"vnlineacliente character varying\",\r\n      \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n      \"amount\": 99.68,\r\n      \"interestRate\": 5.99,\r\n      \"savingDpf\": \"vdpfnahorro character varying\",\r\n      \"van\": \"van character varying\",\r\n      \"date\": true,\r\n      \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n      \"debitAccount\": \"vncuentadebitar character varying\",\r\n      \"nameOf\": \"vanombrede character varying\",\r\n      \"monthlyFee\": true,\r\n      \"commissionFid\": true,\r\n      \"itbmIncluded\": true,\r\n      \"commissionFwla\": true,\r\n      \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n      \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data); //saveProposalData\n\n      if (result.statusCode === 500) {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);\n      } //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  } ///////////// CATALOGOS //////////////////////\n  /////////////////////////////////////////\n  //LISTA DE TIPO DE IDENTIFICACION\n\n\n  async consultarCatalogoTipoPersona() {\n    try {\n      var data = [{\n        label: \"Natural\",\n        code: 1\n      }, {\n        label: \"Juridíca\",\n        code: 2\n      }];\n      return data;\n    } catch (err) {\n      console.error(\"error consultarCatalogoTipoPersona: \", err);\n    }\n\n    return undefined;\n  } //LISTA DE TIPO DE IDENTIFICACION\n\n\n  async consultarCatalogoTipoIdentificacion() {\n    try {\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\n      /*\r\n      \"status\": {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"identificationType\": [\r\n      {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n      },\r\n      {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n      },\r\n      }\r\n      */\n\n      var data = [];\n\n      for (const identif of result.identificationType) {\n        if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\n          data.push(identif);\n        }\n      }\n\n      return data;\n    } catch (err) {\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\n    }\n\n    return undefined;\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\n  } //CC-320\tConsultarListaClasificacionRiesgo\n\n\n  async retrieveRiskClassification() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.riskClassification;\n    } catch (err) {\n      console.error(\"api retrieveRiskClassification: \", err);\n    }\n\n    return undefined;\n  } //CC-319\tConsultarListaTipoRevision\n\n\n  async retrieveRevisionType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.revisionType;\n    } catch (err) {\n      console.error(\"api retrieveRevisionType: \", err);\n    }\n\n    return undefined;\n  } //CC-321\tconsultarListaTipoPropuesta\n\n\n  async retrieveProposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.proposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-325\tconsultarListaTipoSubPropuesta\n\n\n  async retrieveSubproposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.subproposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-322\tconsultarListaTipoFacilidad\n\n\n  async retrieveFacilityType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.facilityType;\n    } catch (err) {\n      console.error(\"api retrieveFacilityType: \", err);\n    }\n\n    return undefined;\n  } //CC-324\tconsultarListaTipoFianza\n\n\n  async retrieveBailType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.bailType;\n    } catch (err) {\n      console.error(\"api retrieveBailType: \", err);\n    }\n\n    return undefined;\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/BackendServices/Services.js"],"names":["BusquedaDescarteModel","UsuarioProspectoModel","DocumentoAnexoModel","IgrInboxResultModel","ApiService","url","opt","qs","moment","Services","getUserInfo","userName","password","params","data","stringify","result","get","URL_BACKEND_LOGINUSUARIO","status","statusCode","attachments","undefined","guardarDocumentoAnexo","post","URL_BACKEND_DOCUMENTS","eliminarDocumentoAnexo","del","console","log","consultarDocumentosAnexos","URL_BACKEND_DOCUMENTSANEXOS","guardarHistorico","ULR_BACKEND_HISTORICO","err","error","searchLogs","logs","response","guardarDatosGeneralesIGR","URL_BACKEND_DATOSGENERALES_IGR","put","consultarDatosGeneralesIGR","transactId","statusService","guardarDatosEmpresaIGR","URL_BACKEND_DATOSEMPRESA_IGR","consultarDatosEmpresaIGR","guardarHistorialEmpresaIGR","URL_BACKEND_HISTORIALEMPRESA","consultarHistorialEmpresaIGR","processId","PROCESS_INFORMEGESTION","activityId","ACT_HISTORIAEMPRESA","consultarDatosAccionistas","URL_BACKEND_ACCIONISTASECCION","shareholders","nuevoAccionista","URL_BACKEND_ACCIONISTA","actualizarAccionista","eliminarAccionista","guardarSeccionAccionista","description","observations","infoDate","Number","format","consultarSeccionAccionista","guardarEstructuraEmpresaIGR","URL_BACKEND_ESTRUCTURAEMPRESA","consultarEstructuraEmpresaIGR","consultarDatosGobiernoCorporativo","URL_BACKEND_GOBIERNOCORPORATIVO","nuevoGobiernoCorporativo","actualizarGobiernoCorporativo","eliminarGobiernoCoporativo","consultarDatosRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONAL","nuevoRelevoGeneracional","actualizarRelevoGeneracional","eliminarRelevoGeneracional","guardarSeccionRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONALSECTION","consultarSeccionRelevoGeneracional","getManagementRelaysInfoResponseDTO","guardarFlujoOperativo","URL_BACKEND_FLUJOOPERATIVO_IGR","consultarFlujoOperativo","vidtramite","vidproceso","vidactividad","ACT_FLUJOOPERATIVO","consultarDatosEmpresaRelacionada","URL_BACKEND_EMPRESARELACIONADA","nuevoEmpresaRelacionada","actualizarEmpresaRelacionada","eliminarEmpresaRelacionada","guardarSeccionEmpresaRelacionada","trasactId","URL_BACKEND_EMPRESARELACIONADASECCION","consultarListaClientesIGR","URL_BACKEND_INFOCLIENTE","nuevoClienteIGR","actualizarClienteIGR","eliminarClienteIGR","guardarSeccionClienteIGR","URL_BACKEND_INFOCLIENTESECCION","consultarSeccionClienteIGR","clientSectionCompaniesDTO","consultarListaProveedoresIGR","URL_BACKEND_IGR_INFOPROVEEDORES","nuevoProveedorIGR","actualizarProveedorIGR","eliminarProveedorIGR","guardarSeccionProveedorIGR","URL_BACKEND_IGR_INFOPROVEEDORESSECCION","consultarSeccionProveedorIGR","suppliersList","consultarListaReciprocidadIGR","URL_BACKEND_IGR_RECIPROCIDAD","nuevoReciprocidadIGR","actualizarReciprocidadIGR","eliminarReciprocidadIGR","guardarSeccionReciprocidad","URL_BACKEND_IGR_RECIPROCIDADSECCION","consultarSeccionReciprocidad","consultarActivosFijosIGR","ACT_FACILIDADACTIVOSFIJOS","URL_BACKEND_IGR_ACTIVOSFIJOS","serviceStatus","nuevoActivosFijosIGR","actualizarActivosFijosIGR","eliminarActivosFijosIGR","guardarSeccionActivosFijosIGR","URL_BACKEND_IGR_ACTIVOSFIJOSSECCION","consultarSegurosEmpresaIGR","URL_BACKEND_IGR_SEGUROSEMPRESA","companyInsurance","nuevoSegurosEmpresaIGR","actualizarSegurosEmpresaIGR","eliminarSegurosEmpresaIGR","guardarArquitecturaEmpresarialIGR","URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL","consultarArquitecturaEmpresarialIGR","ACT_ARQUITECTURAEMPRESARIAL","consultarCompetidores","URL_BACKEND_COMPETIDORESMERCADO","nuevoCompetidorIGR","actualizarCompetidorIGR","eliminarCompetidorIGR","consultarProyecciones","URL_BACKEND_PROYECCIONES","guardarProyecciones","consultarGarantes","URL_BACKEND_GARANTES","guarantors","nuevoGarante","actualizarGarante","eliminarGarante","consultarSowActualIGR","URL_BACKEND_PROPUESTACREDITO_SOWACTUAL","nuevoSowActualIGR","actualizarSowActualIGR","eliminarSowActualIGR","consultarSowPropuestoIGR","URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO","nuevoSowPropuestoIGR","actualizarSowPropuestoIGR","eliminarSowPropuestoIGR","consultarAspectosAmbientalesIGR","URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES","guardarAspectosAmbientalesIGR","consultarRelacionesBancariasDeudasCP","URL_BACKEND_IGR_DEUDASBANCARIACP","nuevoRelacionesBancariasDeudasCP","actualizarRelacionesBancariasDeudasCP","eliminarRelacionesBancariasDeudasCP","consultarRelacionesBancariasDeudasLP","URL_BACKEND_IGR_DEUDASBANCARIALP","nuevoRelacionesBancariasDeudasLP","actualizarRelacionesBancariasDeudasLP","eliminarRelacionesBancariasDeudasLP","consultarRelacionesBancariasSeccionIGR","URL_BACKEND_IGR_DEUDASBANCARIASECCION","guardarRelacionesBancariasSeccionIGR","consultarFlujoCajaDollar","URL_BACKEND_IGR_FLUJOCAJADOLLAR","nuevoFlujoCajaDollar","actualizarFlujoCajaDollar","eliminarFlujoCajaDollar","consultarFlujoCajaServicioDeudas","URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS","nuevoFlujoCajaServicioDeudas","actualizarFlujoCajaServicioDeudas","eliminarFlujoCajaServicioDeudas","consultarFlujoCajaEgresos","URL_BACKEND_IGR_FLUJOCAJAEGRESO","nuevoFlujoCajaEgresos","actualizarFlujoCajaEgresos","eliminarFlujoCajaEgresos","consultarFlujoCajaCargaTrabajo","URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO","nuevoFlujoCajaCargaTrabajo","actualizarFlujoCajaCargaTrabajo","eliminarFlujoCajaCargaTrabajo","consultarFlujoCajaIngresoFacturacion","URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION","nuevoFlujoCajaIngresoFacturacion","actualizarFlujoCajaIngresoFacturacion","eliminarFlujoCajaIngresoFacturacion","consultarFlujoCajaCobranzas","URL_BACKEND_IGR_FLUJOCAJACOBRANZAS","nuevoFlujoCajaCobranzas","actualizarFlujoCajaCobranzas","eliminarFlujoCajaCobranzas","consultarMovimientosCuentasIGR","URL_BACKEND_IGR_MOVIMIENTOCUENTAS","movements","nuevoMovimientosCuentasIGR","actualizarMovimientosCuentasIGR","eliminarMovimientosCuentasIGR","guardarSeccionMovimientosCuentas","URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION","consultarSeccionMovimientosCuentas","consultarCuentasCobrarIGR","ACT_CUENTASPORCOBRAR","URL_BACKEND_IGR_CUENTASCOBRAR","accountsReceivable","nuevoCuentasCobrarIGR","actualizarCuentasCobrarIGR","eliminarCuentasCobrarIGR","consultarCapexIGR","URL_BACKEND_IGR_CAPEX","nuevoCapexIGR","actualizarCapexIGR","eliminarCapexIGR","consultarCapexPresupuestoIGR","URL_BACKEND_IGR_CAPEXPRESUPUESTO","nuevoCapexPresupuestoIGR","actualizarCapexPresupuestoIGR","eliminarCapexPresupuestoIGR","consultarCapexDetalleProyectoIGR","URL_BACKEND_IGR_CAPEXDETALLESPROYECTO","nuevoCapexDetalleProyectoIGR","actualizarCapexDetalleProyectoIGR","eliminarCapexDetalleProyectoIGR","consultarRecomendacionesIGR","URL_BACKEND_IGR_RECOMENDACIONES","guardarRecomendacionesIGR","consultarMatrizOtrosBancosIGR","URL_BACKEND_IGR_MATRIZOTROSBANCOS","nuevoMatrizOtrosBancosIGR","actualizarMatrizOtrosBancosIGR","eliminarMatrizOtrosBancosIGR","consultarMatrizExpedientesIGR","URL_BACKEND_IGR_MATRIZEXPEDIENTES","nuevoMatrizExpedientesIGR","actualizarMatrizExpedientesIGR","eliminarMatrizExpedientesIGR","consultarMatrizNuevosNegociosIGR","URL_BACKEND_IGR_MATRIZNUEVONEGOCIO","nuevoMatrizNuevosNegociosIGR","actualizarMatrizNuevosNegociosIGR","eliminarMatrizNuevosNegociosIGR","consultarMatrizRentabilidadIGR","URL_BACKEND_IGR_MATRIZRENTABILIDAD","nuevoMatrizRentabilidadIGR","actualizarMatrizRentabilidadIGR","eliminarMatrizRentabilidadIGR","guardarMatrizSeccionIGR","URL_BACKEND_IGR_MATRIZSECCION","consultarMatrizSeccionIGR","competitiveMatrix","consultarMatrizPosicionBanescoIGR","URL_BACKEND_IGR_MATRIZPOSICIONBANESCO","positions","nuevoMatrizPosicionBanescoIGR","actualizarMatrizPosicionBanescoIGR","eliminarMatrizPosicionBanescoIGR","consultarMatrizTransaccionBanescoIGR","URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO","transactionals","nuevoMatrizTransaccionBanescoIGR","actualizarMatrizTransaccionBanescoIGR","eliminarMatrizTransaccionBanescoIGR","guardarNegocioObtenerIGR","URL_BACKEND_NEGOCIOOBTENER","consultarNegocioObtenerIGR","guardarBusquedaDescarte","model","getSaveModel","URL_BACKEND_BUSQUEDADESCARTE","consultarBusquedaDescarte","PROCESS_BUSQUEDADESCARTE","ACT_NONE","fromJson","guardarUsuarioProspecto","customerId","length","userModel","getUpdateModel","URL_BACKEND_USUARIOPROSPECTO","consultarUsuarioProspecto","costumer","guardarCumplimiento","compliance","observationsSearchDiscard","approved","observationsComp","URL_BACKEND_CUMPLIMIENTO","consultarTramiteInbox","username","responsible","URL_BACKEND_BANDEJAENTRADA_TRAMITE","actualizarTramiteInbox","consultarListaExclusion","URL_BACKEND_LISTAEXCLUSION","guardarListaExclusion","transaccionId","exclusionId","consultarListaExclusionMarcada","URL_BACKEND_LISTAEXCLUSION_MARCADA","eliminarListaExclusionMarcada","nuevoDatosGeneralesPropCred","URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES","actualizarDatosGeneralesPropCred","consultarDatosGeneralesPropCred","nuevoFacilidadPropCred","URL_BACKEND_PROPUESTACREDITO_FACILIDAD","facilityId","actualizarFacilidadPropCred","requestId","consultarFacilidadPropCred","facilitiesDetailDTO","consultarListaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS","disbursements","nuevoDesembolsoPropCred","actualizarDesembolsoPropCred","eliminarDesembolsoPropCred","disbursementId","consultarListaProgramaPagoPropCred","URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO","paymentProgramDTOList","nuevoProgramaPagoPropCred","serviceResponseTO","actualizarProgramaPagoPropCred","eliminarProgramaPagoPropCred","paymentProgramId","consultarComisionPropCred","URL_BACKEND_PROPUESTACREDITO_COMISION","commission","nuevoComisionPropCred","actualizarComisionPropCred","eliminarComisionPropCred","commissionId","consultarFormaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO","disbursementForm","nuevoFormaDesembolsoPropCred","actualizarFormaDesembolsoPropCred","eliminarFormaDesembolsoPropCred","disbursementFormId","consultarGarantiaPropCred","URL_BACKEND_PROPUESTACREDITO_GARANTIA","guarantees","nuevoGarantiaPropCred","actualizarGarantiaPropCred","eliminarGarantiaPropCred","guaranteeId","consultarFianzaPropCred","URL_BACKEND_PROPUESTACREDITO_FIANZA","bails","nuevoFianzaPropCred","actualizarFianzaPropCred","eliminarFianzaPropCred","idBail","URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR","checkBalancePassiveAC","URL_BACKEND_BALANCEPASIVOAC","passiveCapitalBalance","nuevoBalancePasivoAC","actualizarBalancePasivoAC","eliminarBalancePasivoAC","itemPassiveId","queryStateOriginApplicationsAC","URL_BACKEND_ESTADOORIGENAPLICACIONAC","sourceApplicationsStates","nuevoEstadoOrigenAplicacionesAC","actualizarEstadoOrigenAplicacionesAC","eliminarEstadoOrigenAplicacionesAC","sourceApplicationItemId","checkActiveBalanceAC","URL_BACKEND_BALANCEACTIVOAC","activeBalances","newActiveBalanceAC","updateActiveBalanceAC","eliminarBalanceActivoAC","itemActiveId","queryACIndicator","URL_BACKEND_INDICADORAC","indicatorDTOList","newACIndicator","actualizarIndicadorAC","eliminarIndicadorAC","itemIndicatorsId","consultarPoliticaCredito","URL_BACKEND_POLITICACREDITO","creditPolicy","nuevoPoliticaCredito","actualizarPoliticaCredito","eliminarPoliticaCredit","debtorId","itemId","consultarInformiacionFinancieraFiadores","URL_BACKEND_INFOFINANCIERA","finantialInfoGuarantor","nuevoInformacionFinancieraFiadores","actualizarInformacionFinancieraFiadores","eliminarInformacionFinancieraFiadores","guarantorId","consultarDetalleOpinionRiesgoCredito","URL_BACKEND_OPINIONRIESGOCREDITO","opinions","nuevoDetalleOpinionRiesgoCredito","actualizarDetalleOpinionRiesgoCredito","eliminarDetalleOpinionRiesgoCredito","consultarConclusionesRecomendacionesAnalisisFinanciero","URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO","conclusionFinantialAnalysisDTOList","nuevoConclusionesRecomendacionesAnalisisFinanciero","actualizarConclusionesRecomendacionesAnalisisFinanciero","eliminarConclusionesRecomendacionesAnalisisFinanciero","consultarInformacionRiesgoAmbiental","URL_BACKEND_RIESGOAMBIENTALDETALLES","nuevoInformacionRiesgoAmbiental","actualizarInformacionRiesgoAmbiental","eliminarInformacionRiesgoAmbiental","consultarRiesgoCreditoComercial","URL_BACKEND_RIESGOCREDITOS","generalDataCreditRisk","nuevoRiesgoCreditoComercial","actualizarRiesgoCreditoComercial","eliminarRiesgoCreditoComercial","consultarNumeroFideicomiso","URL_BACKEND_NUMEROFIDEICOMISO","trustInfo","nuevoNumeroFideicomiso","actualizarNumeroFideicomiso","eliminarNumeroFideicomiso","consultarListaFideicomitentes","URL_BACKEND_FIDEICOMITENTES","trustors","nuevaListaFideicomitentes","actualizarListaFideicomitentes","eliminarListaFideicomitentes","trustorId","consultarTipoFiduciarioYOtrosDatos","URL_BACKEND_FIDUCIARIAOTROSBANCOS","finantialCommissionDTO","guardarTipoFiduciarioYOtrosDatos","consultarListaBeneficiarioSecundario","URL_BACKEND_BEENFICIARIOSECUNDARIO","beneficiaries","nuevaListaBeneficiarioSecundario","actualizarListaBeneficiarioSecundario","eliminarListaBeneficiarioSecundario","beneficiaryId","consultarSeccionServiciosFiduciario","URL_BACKEND_SERVICIOSFIDUCIARIOS","fiduciaryServicesDTOS","guardarSeccionServiciosFiduciario","consultarSeccionOtrosServiciosFiduciario","URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS","otherFiduciaryServicesDTO","guardarSeccionOtrosServiciosFiduciario","consultarDocumentacionLegal","URL_BACKEND_DOCUMENTACIONLEGAL","legalDocumentations","nuevoDocumentacionLegal","actualizarDocumentacionLegal","eliminarDocumentacionLegal","legalDocumentationId","consultarDatosGeneralesDesembolso","URL_BACKEND_DESEMBOLSODATOSGENERALES","guardarDatosGeneralesDesembolso","consultarCatalogoTipoPersona","label","code","consultarCatalogoTipoIdentificacion","ULR_BACKEND_TIPODEIDENTIFICACION","identif","identificationType","push","retrieveRiskClassification","URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO","riskClassification","retrieveRevisionType","URL_BACKEND_CATALOGO_TIPOREVISION","revisionType","retrieveProposalType","URL_BACKEND_CATALOGO_TIPOPROPUESTA","proposalType","retrieveSubproposalType","URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA","subproposalType","retrieveFacilityType","URL_BACKEND_CATALOGO_TIPOFACILIDAD","facilityType","retrieveBailType","URL_BACKEND_CATALOGO_TIPOFIANZA","bailType"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,qBAAhC,QAA6D,cAA7D;AACA,OAAOC,mBAAP,MAAgC,0CAAhC;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,0BAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,8BAArB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBL,UAAvB,CAAkC;AAE/C;AACiB,QAAXM,WAAW,CAACC,QAAD,EAAUC,QAAV,EAAoB;AACvC;AACI,QAAIC,MAAM,GAAG;AAACF,MAAAA,QAAQ,EAACA,QAAV;AAAmBC,MAAAA,QAAQ,EAACA;AAA5B,KAAb;AACA,QAAIE,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAa;AAACJ,MAAAA,QAAQ,EAACA,QAAV;AAAmBC,MAAAA,QAAQ,EAACA;AAA5B,KAAb,CAAX;AACA,QAAII,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACa,wBAAJ,GAA+B,GAA/B,GAAqCJ,IAA9C,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,aAAOJ,MAAM,CAACK,WAAd;AACD;;AAED,WAAOC,SAAP;AACD;;AAE0B,QAArBC,qBAAqB,CAACT,IAAD,EAAO;AAEhC,QAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoB,qBAAd,EAAqCX,IAArC,CAAnB;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AAAE,aAAO,IAAP;AAAc;;AAExD,WAAO,KAAP;AACD;;AAE2B,QAAtBM,sBAAsB,CAACZ,IAAD,EAAO;AACjCA,IAAAA,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAP;AACA,QAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoB,qBAAJ,GAA4B,GAA5B,GAAkCX,IAA3C,CAAnB;AACA;AACJ;AACA;AACA;AACA;AACA;;AACIc,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCb,MAAtC;;AACA,QAAIA,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAAE,aAAO,IAAP;AAAc;;AAEjD,WAAO,KAAP;AACD;;AAE8B,QAAzBU,yBAAyB,CAACjB,MAAD,EAAS;AAEtC;AACA,QAAIC,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,QAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0B,2BAAJ,GAAkC,GAAlC,GAAwCjB,IAAjD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,aAAOJ,MAAM,CAACK,WAAd;AACD;;AAED,WAAOC,SAAP;AACD;AACD;;AACA;;AACA;;;AACsB,QAAhBU,gBAAgB,CAAClB,IAAD,EAAO;AAC3B,QAAI;AACF,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC4B,qBAAd,EAAqCnB,IAArC,CAAnB;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD;AACD;;AACA;;AACA;;;AACgB,QAAVc,UAAU,CAACvB,MAAD,EAAS;AAEvB,QAAI;AACF,UAAIC,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC4B,qBAAJ,GAA4B,GAA5B,GAAkCnB,IAA3C,CAAnB;;AACA,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC;AACA,eAAO;AAAED,UAAAA,MAAM,EAAE,GAAV;AAAeH,UAAAA,MAAM,EAAEA,MAAM,CAACqB;AAA9B,SAAP;AAED;AACF,KARD,CASA,OAAOH,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACA,aAAO;AAAEf,QAAAA,MAAM,EAAEe,GAAG,CAACI,QAAJ,CAAanB,MAAvB;AAA+BgB,QAAAA,KAAK,EAAED,GAAG,CAACI,QAAJ,CAAaxB;AAAnD,OAAP,CAFU,CAEwD;AACnE;;AACD,WAAOQ,SAAP;AACD,GA1I8C,CA4I/C;;;AAC8B,QAAxBiB,wBAAwB,CAACzB,IAAD,EAAO;AACnC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmC,8BAAd,EAA8C1B,IAA9C,CAAnB,CApBE,CAqBF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmC,8BAAb,EAA6C1B,IAA7C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KArCD,CAsCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BoB,0BAA0B,CAACC,UAAD,EAAa;AAAE;AAC7C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmC,8BAAJ,GAAqC,GAArC,GAA2C1B,IAApD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAAC4B,aAAP,CAAqBxB,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KAnCD,CAoCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAlO8C,CAoO/C;;;AAC4B,QAAtBuB,sBAAsB,CAAC/B,IAAD,EAAO;AACjC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyC,4BAAd,EAA4ChC,IAA5C,CAAnB,CA9CE,CA+CF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyC,4BAAb,EAA2ChC,IAA3C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KA/DD,CAgEA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxByB,wBAAwB,CAACJ,UAAD,EAAa;AAAE;AAC3C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyC,4BAAJ,GAAmC,GAAnC,GAAyChC,IAAlD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAAC4B,aAAP,CAAqBxB,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KA7DD,CA8DA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA9W8C,CAgX/C;;;AACgC,QAA1B0B,0BAA0B,CAAClC,IAAD,EAAO;AACrC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC4C,4BAAd,EAA4CnC,IAA5C,CAAnB,CAZE,CAaF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC4C,4BAAb,EAA2CnC,IAA3C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD,OA3BC,CA6BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KA1CD,CA0CE,OAAOkB,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5B4B,4BAA4B,CAACP,UAAD,EAAa;AAAE;AAC/C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAAC8C,sBAAzC;AAAiEC,QAAAA,UAAU,EAAE/C,GAAG,CAACgD;AAAjF,OAAb;AACA,UAAIxC,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC4C,4BAAJ,GAAmC,GAAnC,GAAyCnC,IAAlD,CAAnB;;AACA,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAPD,CAQA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA9a8C,CAgb/C;;;AAC+B,QAAzBiC,yBAAyB,CAACZ,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmD,6BAAJ,GAAoC,GAApC,GAA0C1C,IAAnD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAACyC,YAAd;AACD,KAtED,CAuEA,OAAOvB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoB,QAAfoC,eAAe,CAAC5C,IAAD,EAAO;AAC1B,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsD,sBAAd,EAAsC7C,IAAtC,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP,CAD+B,CACjB;AACf;AAEF,KA9BD,CA+BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACyB,QAApBsC,oBAAoB,CAAC9C,IAAD,EAAO;AAC/B,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsD,sBAAb,EAAqC7C,IAArC,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP,CAD+B,CACjB;AACf;AAEF,KAjCD,CAkCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACuB,QAAlBuC,kBAAkB,CAAC/C,IAAD,EAAO;AAC7B,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACsD,sBAAb,EAAqC7C,IAArC,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP,CAD+B,CACjB;AACf;AAEF,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wBAAd,EAAwCD,GAAxC;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxBwC,wBAAwB,CAAChD,IAAD,EAAO;AACnC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,GAAG;AACL6B,QAAAA,UAAU,EAAE7B,IAAI,CAAC6B,UADZ;AAELoB,QAAAA,WAAW,EAAEjD,IAAI,CAACkD,YAAL,IAAmB,IAAnB,GAAwB,GAAxB,GAA4BlD,IAAI,CAACkD,YAFzC;AAGLC,QAAAA,QAAQ,EAAEC,MAAM,CAAC1D,MAAM,GAAG2D,MAAT,CAAgB,UAAhB,CAAD;AAHX,OAAP,CARE,CAaF;AACA;;AAEA,UAAInD,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmD,6BAAd,EAA6C1C,IAA7C,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmD,6BAAb,EAA4C1C,IAA5C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KAnCD,CAoCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1B8C,0BAA0B,CAACzB,UAAD,EAAa;AAC3C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmD,6BAAJ,GAAoC,GAApC,GAA0C1C,IAAnD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAACgD,YAAd;AACD,KApCD,CAqCA,OAAO9B,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA3rB8C,CA6rB/C;;;AACiC,QAA3B+C,2BAA2B,CAACvD,IAAD,EAAO;AACtC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACiE,6BAAd,EAA6CxD,IAA7C,CAAnB,CATE,CAUF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACiE,6BAAb,EAA4CxD,IAA5C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD,OAxBC,CA0BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAvCD,CAuCE,OAAOkB,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACkC,QAA7BiD,6BAA6B,CAAC5B,UAAD,EAAa;AAAE;AAChD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAAC8C,sBAAzC;AAAiEC,QAAAA,UAAU,EAAE/C,GAAG,CAACgD;AAAjF,OAAb;AACA,UAAIxC,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACiE,6BAAJ,GAAoC,GAApC,GAA0CxD,IAAnD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAZD,CAaA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qCAAd,EAAqDD,GAArD;AACD;;AACD,WAAOZ,SAAP;AACD,GA7vB8C,CA+vB/C;;;AACuC,QAAjCkD,iCAAiC,CAAC7B,UAAD,EAAa;AAClD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoE,+BAAJ,GAAsC,GAAtC,GAA4C3D,IAArD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAA7B,IAAsCJ,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAvE,EAA8E;AAC5E,eAAOJ,MAAP;AACD;AACF,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yCAAd,EAAyDD,GAAzD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxBoD,wBAAwB,CAAC5D,IAAD,EAAO;AACnC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,QAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoE,+BAAd,EAA+C3D,IAA/C,CAAnB;AACA,WAAOE,MAAP,CAXmC,CAWrB;AACf;;AACkC,QAA7B2D,6BAA6B,CAAC7D,IAAD,EAAO;AACxC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoE,+BAAb,EAA8C3D,IAA9C,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP,CAD+B,CACjB;AACf;AAEF,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1BsD,0BAA0B,CAAC9D,IAAD,EAAO;AACrC;AACJ;AACA;AACA;AACI,QAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoE,+BAAb,EAA8C3D,IAA9C,CAAnB;AACA,WAAOE,MAAP,CANqC,CAMvB;AACf,GA10B8C,CA40B/C;;;AACsC,QAAhC6D,gCAAgC,CAAClC,UAAD,EAAa;AACjD,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyE,8BAAJ,GAAqC,GAArC,GAA2ChE,IAApD,CAAnB;;AAEA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAtED,CAuEA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvByD,uBAAuB,CAACjE,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyE,8BAAd,EAA8ChE,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AAED;;AACiC,QAA5B0D,4BAA4B,CAAClE,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyE,8BAAb,EAA6ChE,IAA7C,CAAnB;AACA,aAAOE,MAAP,CAhBE,CAgBY;AACf,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1B2D,0BAA0B,CAACnE,IAAD,EAAO;AACrC,QAAI;AACF;AACN;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyE,8BAAb,EAA6ChE,IAA7C,CAAnB;AACA,aAAOE,MAAP,CANE,CAMY;AACf,KAPD,CAQA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhC4D,gCAAgC,CAACpE,IAAD,EAAO;AAC3C,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8E,qCAAd,EAAqDrE,IAArD,CAAnB,CAPE,CASF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAA,QAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeN,MAAM,GAAG2D,MAAT,CAAgB,YAAhB,CAAf;AACAnD,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8E,qCAAb,EAAoDrE,IAApD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuC,QAAlC8D,kCAAkC,CAACzC,UAAD,EAAa;AACnD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyE,8BAAJ,GAAqC,GAArC,GAA2ChE,IAApD,CAAnB;AAEC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACqE,kCAAP,CAA0CrB,YAAjD;AACK,KAlBD,CAmBA,OAAO9B,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD,GA1gC8C,CA4gC/C;;;AAC2B,QAArBgE,qBAAqB,CAACxE,IAAD,EAAO;AAChC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AAEM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACkF,8BAAd,EAA8CzE,IAA9C,CAAnB,CAVE,CAWF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACkF,8BAAb,EAA6CzE,IAA7C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvBkE,uBAAuB,CAAC7C,UAAD,EAAa;AACxC,QAAI;AACF;AACA,UAAI9B,MAAM,GAAG;AAAE4E,QAAAA,UAAU,EAAE9C,UAAd;AAA0B+C,QAAAA,UAAU,EAAEpF,GAAG,CAAC8C,sBAA1C;AAAkEuC,QAAAA,YAAY,EAAErF,GAAG,CAACsF;AAApF,OAAb;AACA,UAAI9E,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACkF,8BAAJ,GAAqC,GAArC,GAA2CzE,IAApD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIE,MAAM,CAAC2B,UAAP,KAAsB,IAA1B,EAAgC;AAC9B,eAAO3B,MAAP;AACD;AACF,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GAvkC8C,CAykC/C;;;AACsC,QAAhCuE,gCAAgC,CAAClD,UAAD,EAAa;AACjD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyF,8BAAJ,GAAqC,GAArC,GAA2ChF,IAApD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAtCD,CAuCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvByE,uBAAuB,CAACjF,IAAD,EAAO;AAClC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyF,8BAAd,EAA8ChF,IAA9C,CAAnB;AACA,aAAOE,MAAP,CATE,CASY;AACf,KAVD,CAWA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AAGD;;AACiC,QAA5B0E,4BAA4B,CAAClF,IAAD,EAAO;AACvC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyF,8BAAb,EAA6ChF,IAA7C,CAAnB;AACA,aAAOE,MAAP,CAZE,CAYY;AACf,KAbD,CAcA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AAGD;;AAC+B,QAA1B2E,0BAA0B,CAACnF,IAAD,EAAO;AACrC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyF,8BAAJ,GAAqC,GAArC,GAA2CvF,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAApD,EAAwEA,IAAxE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhC4E,gCAAgC,CAACpF,IAAD,EAAO;AAC3C,QAAI;AACFA,MAAAA,IAAI,GAAG;AACL,qBAAaA,IAAI,CAACqF,SADb;AAEL,uBAAerF,IAAI,CAACkD;AAFf,OAAP;AAIA,UAAIhD,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+F,qCAAd,EAAqDtF,IAArD,CAAnB,CALE,CAOF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC+F,qCAAb,EAAoDtF,IAApD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AAGD,GApsC8C,CAusC/C;;;AAC+B,QAAzB+E,yBAAyB,CAAC1D,UAAD,EAAa;AAC1C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACiG,uBAAJ,GAA8B,GAA9B,GAAoCxF,IAA7C,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAtCD,CAuCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoB,QAAfiF,eAAe,CAACzF,IAAD,EAAO;AAC1B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACiG,uBAAd,EAAuCxF,IAAvC,CAAnB;AACA,aAAOE,MAAP,CAhBE,CAgBY;AACf,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACyB,QAApBkF,oBAAoB,CAAC1F,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACiG,uBAAb,EAAsCxF,IAAtC,CAAnB;AACA,aAAOE,MAAP,CAlBE,CAkBY;AACf,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACuB,QAAlBmF,kBAAkB,CAAC3F,IAAD,EAAO;AAC7B,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACiG,uBAAJ,GAA8B,GAA9B,GAAoC/F,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA7C,EAAiEA,IAAjE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxBoF,wBAAwB,CAAC5F,IAAD,EAAO;AACnC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,iBAAD,CAAJ,GAA0BN,MAAM,GAAG2D,MAAT,CAAgB,YAAhB,CAA1B,CARE,CAQsD;;AACxD,UAAInD,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsG,8BAAd,EAA8C7F,IAA9C,CAAnB,CATE,CAWF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsG,8BAAb,EAA6C7F,IAA7C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1BsF,0BAA0B,CAACjE,UAAD,EAAa;AAC3C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsG,8BAAJ,GAAqC,GAArC,GAA2C7F,IAApD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAAC6F,yBAAd;AACD,KArBD,CAsBA,OAAO3E,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA52C8C,CA82C/C;;;AACkC,QAA5BwF,4BAA4B,CAACnE,UAAD,EAAa;AAC7C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0G,+BAAJ,GAAsC,GAAtC,GAA4CjG,IAArD,CAAnB;AACA;;AACA,aAAOE,MAAP;AACD,KAPD,CAQA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACsB,QAAjB0F,iBAAiB,CAAClG,IAAD,EAAO;AAC5B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0G,+BAAd,EAA+CjG,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC2B,QAAtB2F,sBAAsB,CAACnG,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0G,+BAAb,EAA8CjG,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAlBE,CAkBY;AACf,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACyB,QAApB4F,oBAAoB,CAACpG,IAAD,EAAO;AAC/B,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC0G,+BAAJ,GAAsC,GAAtC,GAA4CxG,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAArD,EAAyEA,IAAzE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B6F,0BAA0B,CAACrG,IAAD,EAAO;AACrC,QAAI;AACF;AACN;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+G,sCAAd,EAAsDtG,IAAtD,CAAnB,CANE,CAQF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC+G,sCAAb,EAAqDtG,IAArD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACiC,QAA5B+F,4BAA4B,CAAC1E,UAAD,EAAa;AAC7C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC+G,sCAAJ,GAA6C,GAA7C,GAAmDtG,IAA5D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAA7B,IAAsCJ,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAvE,EAA8E;AAC5E,eAAOJ,MAAM,CAACsG,aAAd;AACD;AACF,KAvBD,CAwBA,OAAOpF,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GAj/C8C,CAm/C/C;;;AACmC,QAA7BiG,6BAA6B,CAAC5E,UAAD,EAAa;AAC9C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmH,4BAAJ,GAAmC,GAAnC,GAAyC1G,IAAlD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAtCD,CAuCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApBmG,oBAAoB,CAAC3G,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmH,4BAAd,EAA4C1G,IAA5C,CAAnB;AACA,aAAOE,MAAP,CAfE,CAeY;AACf,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC8B,QAAzBoG,yBAAyB,CAAC5G,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmH,4BAAb,EAA2C1G,IAA3C,CAAnB;AACA,aAAOE,MAAP,CAnBE,CAmBY;AACf,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC4B,QAAvBqG,uBAAuB,CAAC7G,IAAD,EAAO;AAClC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACmH,4BAAJ,GAAmC,GAAnC,GAAyCjH,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAlD,EAAsEA,IAAtE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BsG,0BAA0B,CAAC9G,IAAD,EAAO;AACrC,QAAI;AACF;AACN;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACwH,mCAAd,EAAmD/G,IAAnD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACwH,mCAAb,EAAkD/G,IAAlD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5BwG,4BAA4B,CAACnF,UAAD,EAAa;AAC7C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACwH,mCAAJ,GAA0C,GAA1C,GAAgD/G,IAAzD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAA7B,IAAsCJ,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAvE,EAA8E;AAC5E,eAAOJ,MAAM,CAACgD,YAAd;AACD;AACF,KAzBD,CA0BA,OAAO9B,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA/pD8C,CAkqD/C;;;AAC8B,QAAxByG,wBAAwB,CAACpF,UAAD,EAAa;AACzC,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAAC8C,sBAAzC;AAAiEC,QAAAA,UAAU,EAAE/C,GAAG,CAAC0H;AAAjF,OAAb;AACA,UAAIlH,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC4H,4BAAJ,GAAmC,GAAnC,GAAyCnH,IAAlD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACkH,aAAP,CAAqB9G,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KA9CD,CA+CA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApB6G,oBAAoB,CAACrH,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC4H,4BAAd,EAA4CnH,IAA5C,CAAnB;AACA,aAAOE,MAAP,CAnBE,CAmBY;AACf,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC8B,QAAzB8G,yBAAyB,CAACtH,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC4H,4BAAb,EAA2CnH,IAA3C,CAAnB;AACA,aAAOE,MAAP,CAtBE,CAsBY;AACf,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC4B,QAAvB+G,uBAAuB,CAACvH,IAAD,EAAO;AAClC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC4H,4BAAJ,GAAmC,GAAnC,GAAyC1H,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAlD,EAAsEA,IAAtE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACkC,QAA7BgH,6BAA6B,CAACxH,IAAD,EAAO;AACxC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACkI,mCAAd,EAAmDzH,IAAnD,CAAnB,CAlBE,CAmBF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACkI,mCAAb,EAAkDzH,IAAlD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KA7BD,CA8BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED,GAl0D8C,CAo0D/C;;;AACgC,QAA1BkH,0BAA0B,CAAC7F,UAAD,EAAa;AAC3C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoI,8BAAJ,GAAqC,GAArC,GAA2C3H,IAApD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACkH,aAAP,CAAqB9G,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAM,CAAC0H,gBAAd;AACD;AACF,KAvBD,CAwBA,OAAOxG,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC2B,QAAtBqH,sBAAsB,CAAC7H,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoI,8BAAd,EAA8C3H,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAfE,CAeY;AACf,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACgC,QAA3BsH,2BAA2B,CAAC9H,IAAD,EAAO;AACtC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoI,8BAAb,EAA6C3H,IAA7C,CAAnB;AACA,aAAOE,MAAP,CAnBE,CAmBY;AACf,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC8B,QAAzBuH,yBAAyB,CAAC/H,IAAD,EAAO;AACpC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoI,8BAAJ,GAAqC,GAArC,GAA2ClI,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAApD,EAAwEA,IAAxE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD,GAj6D8C,CAm6D/C;;;AACuC,QAAjCwH,iCAAiC,CAAChI,IAAD,EAAO;AAC5C,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AAEM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0I,uCAAd,EAAuDjI,IAAvD,CAAnB,CAVE,CAWF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0I,uCAAb,EAAsDjI,IAAtD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwC,QAAnC0H,mCAAmC,CAACrG,UAAD,EAAa;AACpD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE4E,QAAAA,UAAU,EAAE9C,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAAC8C,sBAAzC;AAAiEC,QAAAA,UAAU,EAAE/C,GAAG,CAAC2I;AAAjF,OAAb;AACA,UAAInI,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0I,uCAAJ,GAA8C,GAA9C,GAAoDjI,IAA7D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIE,MAAM,CAAC2B,UAAP,KAAsB,IAA1B,EAAgC;AAC9B,eAAO3B,MAAP;AACD;AACF,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA/9D8C,CAi+D/C;;;AAC2B,QAArB4H,qBAAqB,CAACvG,UAAD,EAAa;AACtC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8I,+BAAJ,GAAsC,GAAtC,GAA4CrI,IAArD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuB,QAAlB8H,kBAAkB,CAACtI,IAAD,EAAO;AAC7B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8I,+BAAd,EAA+CrI,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAVE,CAUY;AACf,KAXD,CAYA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC4B,QAAvB+H,uBAAuB,CAACvI,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8I,+BAAb,EAA8CrI,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC0B,QAArBgI,qBAAqB,CAACxI,IAAD,EAAO;AAChC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8I,+BAAJ,GAAsC,GAAtC,GAA4C5I,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAArD,EAAyEA,IAAzE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAjjE8C,CAmjE/C;;;AAC2B,QAArBiI,qBAAqB,CAAC5G,UAAD,EAAa;AACtC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmJ,wBAAJ,GAA+B,GAA/B,GAAqC1I,IAA9C,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAnCD,CAoCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwB,QAAnBmI,mBAAmB,CAAC3I,IAAD,EAAO;AAC9B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmJ,wBAAd,EAAwC1I,IAAxC,CAAnB,CAtBE,CAwBF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmJ,wBAAb,EAAuC1I,IAAvC,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KAlCD,CAmCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,sBAAd,EAAsCD,GAAtC;AACD;;AACD,WAAOZ,SAAP;AACD,GAtoE8C,CAwoE/C;;;AACuB,QAAjBoI,iBAAiB,CAAC/G,UAAD,EAAa;AAClC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsJ,oBAAJ,GAA2B,GAA3B,GAAiC7I,IAA1C,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAAC4I,UAAd;AACD,KAlED,CAmEA,OAAO1H,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiB,QAAZuI,YAAY,CAAC/I,IAAD,EAAO;AACvB,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,aAAO,MAAM,KAAKU,IAAL,CAAUnB,GAAG,CAACsJ,oBAAd,EAAoC7I,IAApC,CAAb;AAED,KArBD,CAsBA,OAAOoB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,sBAAd,EAAsCD,GAAtC;AACD;;AACD,WAAOZ,SAAP;AACD;;AACsB,QAAjBwI,iBAAiB,CAAChJ,IAAD,EAAO;AAC5B,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeN,MAAM,GAAG2D,MAAT,CAAgB,YAAhB,CAAf,CAnBE,CAmB2C;;AAC7CrD,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,aAAO,MAAM,KAAK2B,GAAL,CAASpC,GAAG,CAACsJ,oBAAb,EAAmC7I,IAAnC,CAAb;AACD,KAtBD,CAuBA,OAAOoB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,sBAAd,EAAsCD,GAAtC;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoB,QAAfyI,eAAe,CAACjJ,IAAD,EAAO;AAC1B,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACsJ,oBAAJ,GAA2B,GAA3B,GAAiCpJ,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA1C,EAA8DA,IAA9D,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,uBAAd,EAAuCD,GAAvC;AACD;;AACD,WAAOZ,SAAP;AACD,GArxE8C,CAuxE/C;;;AAC2B,QAArB0I,qBAAqB,CAACrH,UAAD,EAAa;AACtC,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC4J,sCAAJ,GAA6C,GAA7C,GAAmDnJ,IAA5D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACsB,QAAjB4I,iBAAiB,CAACpJ,IAAD,EAAO;AAC5B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC4J,sCAAd,EAAsDnJ,IAAtD,CAAnB;AACA,aAAOE,MAAP,CAZE,CAYY;AACf,KAbD,CAcA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC2B,QAAtB6I,sBAAsB,CAACrJ,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAACK,MAAL,GAAc,IAAd;AACA,UAAIH,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC4J,sCAAb,EAAqDnJ,IAArD,CAAnB;AACA,aAAOE,MAAP,CAfE,CAeY;AACf,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACyB,QAApB8I,oBAAoB,CAACtJ,IAAD,EAAO;AAC/B,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC4J,sCAAJ,GAA6C,GAA7C,GAAmD1J,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA5D,EAAgFA,IAAhF,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA72E8C,CA+2E/C;;;AAC8B,QAAxB+I,wBAAwB,CAAC1H,UAAD,EAAa;AACzC,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACiK,yCAAJ,GAAgD,GAAhD,GAAsDxJ,IAA/D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApBiJ,oBAAoB,CAACzJ,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACiK,yCAAd,EAAyDxJ,IAAzD,CAAnB;AACA,aAAOE,MAAP,CAZE,CAYY;AACf,KAbD,CAcA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC8B,QAAzBkJ,yBAAyB,CAAC1J,IAAD,EAAO;AACpC,QAAI;AACFA,MAAAA,IAAI,CAACK,MAAL,GAAY,IAAZ;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIH,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACiK,yCAAb,EAAwDxJ,IAAxD,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC4B,QAAvBmJ,uBAAuB,CAAC3J,IAAD,EAAO;AAClC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACiK,yCAAJ,GAAgD,GAAhD,GAAsD/J,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA/D,EAAmFA,IAAnF,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAp8E8C,CAs8E/C;;;AACqC,QAA/BoJ,+BAA+B,CAAC/H,UAAD,EAAa;AAChD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsK,gDAAJ,GAAuD,GAAvD,GAA6D7J,IAAtE,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAAtB,IAA+BJ,MAAM,CAACI,UAAP,KAAsB,KAAzD,EAAgE;AAC9D,eAAOJ,MAAP;AACD;AACF,KAxBD,CAyBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACkC,QAA7BsJ,6BAA6B,CAAC9J,IAAD,EAAO;AACxC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsK,gDAAd,EAAgE7J,IAAhE,CAAnB,CAfE,CAiBF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsK,gDAAb,EAA+D7J,IAA/D,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,sBAAd,EAAsCD,GAAtC;AACD;;AACD,WAAOZ,SAAP;AACD,GAvgF8C,CAygF/C;;;AAC0C,QAApCuJ,oCAAoC,CAAClI,UAAD,EAAa;AACrD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyK,gCAAJ,GAAuC,GAAvC,GAA6ChK,IAAtD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KA/BD,CAgCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCyJ,gCAAgC,CAACjK,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyK,gCAAd,EAAgDhK,IAAhD,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC0C,QAArC0J,qCAAqC,CAAClK,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyK,gCAAb,EAA+ChK,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAtBE,CAsBY;AACf,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACwC,QAAnC2J,mCAAmC,CAACnK,IAAD,EAAO;AAC9C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyK,gCAAJ,GAAuC,GAAvC,GAA6CvK,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAtD,EAA0EA,IAA1E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAvnF8C,CAynF/C;;;AAC0C,QAApC4J,oCAAoC,CAACvI,UAAD,EAAa;AACrD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8K,gCAAJ,GAAuC,GAAvC,GAA6CrK,IAAtD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KA/BD,CAgCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhC8J,gCAAgC,CAACtK,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8K,gCAAd,EAAgDrK,IAAhD,CAAnB;AACA,aAAOE,MAAP,CApBE,CAoBY;AACf,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC0C,QAArC+J,qCAAqC,CAACvK,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8K,gCAAb,EAA+CrK,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAtBE,CAsBY;AACf,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACwC,QAAnCgK,mCAAmC,CAACxK,IAAD,EAAO;AAC9C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8K,gCAAJ,GAAuC,GAAvC,GAA6C5K,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAtD,EAA0EA,IAA1E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAtuF8C,CAwuF/C;;;AAC4C,QAAtCiK,sCAAsC,CAAC5I,UAAD,EAAa;AACvD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmL,qCAAJ,GAA4C,GAA5C,GAAkD1K,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAAtB,IAA+BJ,MAAM,CAACI,UAAP,KAAsB,KAAzD,EAAgE;AAC9D,eAAOJ,MAAP;AACD;AACF,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8CAAd,EAA8DD,GAA9D;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyC,QAApCmK,oCAAoC,CAAC3K,IAAD,EAAO;AAC/C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmL,qCAAd,EAAqD1K,IAArD,CAAnB,CARE,CAUF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmL,qCAAb,EAAoD1K,IAApD,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAEF,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4CAAd,EAA4DD,GAA5D;AACD;;AACD,WAAOZ,SAAP;AACD,GA5xF8C,CA8xF/C;;;AAC8B,QAAxBoK,wBAAwB,CAAC/I,UAAD,EAAa;AACzC,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsL,+BAAJ,GAAsC,GAAtC,GAA4C7K,IAArD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAhCD,CAiCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApBsK,oBAAoB,CAAC9K,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsL,+BAAd,EAA+C7K,IAA/C,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC8B,QAAzBuK,yBAAyB,CAAC/K,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsL,+BAAb,EAA8C7K,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAxBE,CAwBY;AACf,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC4B,QAAvBwK,uBAAuB,CAAChL,IAAD,EAAO;AAClC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACsL,+BAAJ,GAAsC,GAAtC,GAA4CpL,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAArD,EAAyEA,IAAzE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA/4F8C,CAi5F/C;;;AACsC,QAAhCyK,gCAAgC,CAACpJ,UAAD,EAAa;AACjD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC2L,uCAAJ,GAA8C,GAA9C,GAAoDlL,IAA7D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAhCD,CAiCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5B2K,4BAA4B,CAACnL,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC2L,uCAAd,EAAuDlL,IAAvD,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACsC,QAAjC4K,iCAAiC,CAACpL,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC2L,uCAAb,EAAsDlL,IAAtD,CAAnB;AACA,aAAOE,MAAP,CAxBE,CAwBY;AACf,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/B6K,+BAA+B,CAACrL,IAAD,EAAO;AAC1C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC2L,uCAAJ,GAA8C,GAA9C,GAAoDzL,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA7D,EAAiFA,IAAjF,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAlgG8C,CAogG/C;;;AAC+B,QAAzB8K,yBAAyB,CAACzJ,UAAD,EAAa;AAC1C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACgM,+BAAJ,GAAsC,GAAtC,GAA4CvL,IAArD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAzED,CA0EA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArBgL,qBAAqB,CAACxL,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACgM,+BAAd,EAA+CvL,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAtBE,CAsBY;AACf,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1BiL,0BAA0B,CAACzL,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACgM,+BAAb,EAA8CvL,IAA9C,CAAnB;AACA,aAAOE,MAAP,CAvBE,CAuBY;AACf,KAxBD,CAyBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC6B,QAAxBkL,wBAAwB,CAAC1L,IAAD,EAAO;AACnC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACgM,+BAAJ,GAAsC,GAAtC,GAA4C9L,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAArD,EAAyEA,IAAzE,CAAnB,CAFE,CAGF;;AAEA,aAAOE,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAhqG8C,CAkqG/C;;;AACoC,QAA9BmL,8BAA8B,CAAC9J,UAAD,EAAa;AAC/C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACqM,qCAAJ,GAA4C,GAA5C,GAAkD5L,IAA3D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAhCD,CAiCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BqL,0BAA0B,CAAC7L,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACqM,qCAAd,EAAqD5L,IAArD,CAAnB;AACA,aAAOE,MAAP,CAnBE,CAmBY;AACf,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/BsL,+BAA+B,CAAC9L,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACqM,qCAAb,EAAoD5L,IAApD,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACkC,QAA7BuL,6BAA6B,CAAC/L,IAAD,EAAO;AACxC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACqM,qCAAJ,GAA4C,GAA5C,GAAkDnM,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA3D,EAA+EA,IAA/E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA/wG8C,CAixG/C;;;AAC0C,QAApCwL,oCAAoC,CAACnK,UAAD,EAAa;AACrD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0M,2CAAJ,GAAkD,GAAlD,GAAwDjM,IAAjE,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAhCD,CAiCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhC0L,gCAAgC,CAAClM,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0M,2CAAd,EAA2DjM,IAA3D,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC0C,QAArC2L,qCAAqC,CAACnM,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0M,2CAAb,EAA0DjM,IAA1D,CAAnB;AACA,aAAOE,MAAP,CAvBE,CAuBY;AACf,KAxBD,CAyBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACwC,QAAnC4L,mCAAmC,CAACpM,IAAD,EAAO;AAC9C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC0M,2CAAJ,GAAkD,GAAlD,GAAwDxM,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAjE,EAAqFA,IAArF,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAj4G8C,CAm4G/C;;;AACiC,QAA3B6L,2BAA2B,CAACxK,UAAD,EAAa;AAC5C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC+M,kCAAJ,GAAyC,GAAzC,GAA+CtM,IAAxD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAlCD,CAmCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvB+L,uBAAuB,CAACvM,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+M,kCAAd,EAAkDtM,IAAlD,CAAnB;AACA,aAAOE,MAAP,CArBE,CAqBY;AACf,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACiC,QAA5BgM,4BAA4B,CAACxM,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC+M,kCAAb,EAAiDtM,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAxBE,CAwBY;AACf,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1BiM,0BAA0B,CAACzM,IAAD,EAAO;AACrC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC+M,kCAAJ,GAAyC,GAAzC,GAA+C7M,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAxD,EAA4EA,IAA5E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAt/G8C,CAy/G/C;;;AACoC,QAA9BkM,8BAA8B,CAAC7K,UAAD,EAAa;AAC/C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoN,iCAAJ,GAAwC,GAAxC,GAA8C3M,IAAvD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC0M,SAAd;AACD,KAxBD,CAyBA,OAAOxL,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BqM,0BAA0B,CAAC7M,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoN,iCAAd,EAAiD3M,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/BsM,+BAA+B,CAAC9M,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoN,iCAAb,EAAgD3M,IAAhD,CAAnB;AACA,aAAOE,MAAP,CAhBE,CAgBY;AACf,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,uCAAd,EAAuDD,GAAvD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACkC,QAA7BuM,6BAA6B,CAAC/M,IAAD,EAAO;AACxC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoN,iCAAJ,GAAwC,GAAxC,GAA8ClN,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAvD,EAA2EA,IAA3E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qCAAd,EAAqDD,GAArD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCwM,gCAAgC,CAAChN,IAAD,EAAO;AAC3C,QAAI;AACF;AACN;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0N,wCAAd,EAAwDjN,IAAxD,CAAnB,CALE,CAOF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0N,wCAAb,EAAuDjN,IAAvD,CAAf;AACD;;AAED,aAAOE,MAAP;AAED,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuC,QAAlC0M,kCAAkC,CAACrL,UAAD,EAAa;AACnD,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0N,wCAAJ,GAA+C,GAA/C,GAAqDjN,IAA9D,CAAnB;AAEA,aAAOE,MAAM,CAAC0M,SAAP,CAAiB,CAAjB,CAAP;AACD,KAnBD,CAoBA,OAAOxL,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD,GAloH8C,CAooH/C;;;AAC+B,QAAzB2M,yBAAyB,CAACtL,UAAD,EAAa;AAC1C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAAC8C,sBAAzC;AAAiEC,QAAAA,UAAU,EAAE/C,GAAG,CAAC4N;AAAjF,OAAb;AACA,UAAIpN,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8N,6BAAJ,GAAoC,GAApC,GAA0CrN,IAAnD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAM,CAACoN,kBAAd;AACD;AACF,KAhCD,CAiCA,OAAOlM,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArB+M,qBAAqB,CAACvN,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8N,6BAAd,EAA6CrN,IAA7C,CAAnB;AACA,aAAOE,MAAP,CAvBE,CAuBY;AACf,KAxBD,CAyBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC+B,QAA1BgN,0BAA0B,CAACxN,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8N,6BAAb,EAA4CrN,IAA5C,CAAnB;AACA,aAAOE,MAAP,CA1BE,CA0BY;AACf,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC6B,QAAxBiN,wBAAwB,CAACzN,IAAD,EAAO;AACnC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8N,6BAAJ,GAAoC,GAApC,GAA0C5N,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAnD,EAAuEA,IAAvE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GAzvH8C,CA2vH/C;;;AACuB,QAAjBkN,iBAAiB,CAAC7L,UAAD,EAAa;AAClC,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoO,qBAAJ,GAA4B,GAA5B,GAAkC3N,IAA3C,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACkB,QAAboN,aAAa,CAAC5N,IAAD,EAAO;AACxB,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoO,qBAAd,EAAqC3N,IAArC,CAAnB;AACA,aAAOE,MAAP,CAZE,CAYY;AACf,KAbD,CAcA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AAED;;AACuB,QAAlBqN,kBAAkB,CAAC7N,IAAD,EAAO;AAC7B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoO,qBAAb,EAAoC3N,IAApC,CAAnB;AACA,aAAOE,MAAP,CAfE,CAeY;AACf,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACqB,QAAhBsN,gBAAgB,CAAC9N,IAAD,EAAO;AAC3B,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoO,qBAAJ,GAA4B,GAA5B,GAAkClO,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA3C,EAA+DA,IAA/D,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GAn1H8C,CAq1H/C;;;AACkC,QAA5BuN,4BAA4B,CAAClM,UAAD,EAAa;AAC7C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyO,gCAAJ,GAAuC,GAAvC,GAA6ChO,IAAtD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxByN,wBAAwB,CAACjO,IAAD,EAAO;AACnC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyO,gCAAd,EAAgDhO,IAAhD,CAAnB;AACA,aAAOE,MAAP,CAVE,CAUY;AACf,KAXD,CAYA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AAED;;AACkC,QAA7B0N,6BAA6B,CAAClO,IAAD,EAAO;AACxC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyO,gCAAb,EAA+ChO,IAA/C,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACgC,QAA3B2N,2BAA2B,CAACnO,IAAD,EAAO;AACtC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyO,gCAAJ,GAAuC,GAAvC,GAA6CvO,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAtD,EAA0EA,IAA1E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GAv6H8C,CAy6H/C;;;AACsC,QAAhC4N,gCAAgC,CAACvM,UAAD,EAAa;AACjD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8O,qCAAJ,GAA4C,GAA5C,GAAkDrO,IAA3D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5B8N,4BAA4B,CAACtO,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8O,qCAAd,EAAqDrO,IAArD,CAAnB;AACA,aAAOE,MAAP,CAVE,CAUY;AACf,KAXD,CAYA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AAED;;AACsC,QAAjC+N,iCAAiC,CAACvO,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8O,qCAAb,EAAoDrO,IAApD,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/BgO,+BAA+B,CAACxO,IAAD,EAAO;AAC1C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8O,qCAAJ,GAA4C,GAA5C,GAAkD5O,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA3D,EAA+EA,IAA/E,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,gCAAd,EAAgDD,GAAhD;AACD;;AACD,WAAOZ,SAAP;AACD,GA3/H8C,CA6/H/C;;;AACiC,QAA3BiO,2BAA2B,CAAC5M,UAAD,EAAa;AAC5C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmP,+BAAJ,GAAsC,GAAtC,GAA4C1O,IAArD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAAC4B,aAAP,CAAqBxB,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzBmO,yBAAyB,CAAC3O,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmP,+BAAd,EAA+C1O,IAA/C,CAAnB,CAXE,CAaF;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmP,+BAAb,EAA8C1O,IAA9C,CAAf;AACD;;AAED,aAAOE,MAAP,CAnBE,CAmBY;AACf,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AAED,GApjI8C,CAsjI/C;;;AACmC,QAA7BoO,6BAA6B,CAAC/M,UAAD,EAAa;AAC9C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsP,iCAAJ,GAAwC,GAAxC,GAA8C7O,IAAvD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KA1BD,CA2BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzBsO,yBAAyB,CAAC9O,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsP,iCAAd,EAAiD7O,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACmC,QAA9BuO,8BAA8B,CAAC/O,IAAD,EAAO;AACzC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsP,iCAAb,EAAgD7O,IAAhD,CAAnB;AACA,aAAOE,MAAP,CAfE,CAeY;AACf,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACiC,QAA5BwO,4BAA4B,CAAChP,IAAD,EAAO;AACvC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACsP,iCAAJ,GAAwC,GAAxC,GAA8CpP,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAvD,EAA2EA,IAA3E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEkC,QAA7ByO,6BAA6B,CAACpN,UAAD,EAAa;AAC9C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC2P,iCAAJ,GAAwC,GAAxC,GAA8ClP,IAAvD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACkH,aAAP,CAAqB9G,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzB2O,yBAAyB,CAACnP,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC2P,iCAAd,EAAiDlP,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACmC,QAA9B4O,8BAA8B,CAACpP,IAAD,EAAO;AACzC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC2P,iCAAb,EAAgDlP,IAAhD,CAAnB;AACA,aAAOE,MAAP,CAjBE,CAiBY;AACf,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACiC,QAA5B6O,4BAA4B,CAACrP,IAAD,EAAO;AACvC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC2P,iCAAJ,GAAwC,GAAxC,GAA8CzP,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAvD,EAA2EA,IAA3E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEqC,QAAhC8O,gCAAgC,CAACzN,UAAD,EAAa;AACjD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACgQ,kCAAJ,GAAyC,GAAzC,GAA+CvP,IAAxD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACkH,aAAP,CAAqB9G,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5BgP,4BAA4B,CAACxP,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACgQ,kCAAd,EAAkDvP,IAAlD,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACsC,QAAjCiP,iCAAiC,CAACzP,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACgQ,kCAAb,EAAiDvP,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAjBE,CAiBY;AACf,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/BkP,+BAA+B,CAAC1P,IAAD,EAAO;AAC1C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACgQ,kCAAJ,GAAyC,GAAzC,GAA+C9P,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAxD,EAA4EA,IAA5E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEmC,QAA9BmP,8BAA8B,CAAC9N,UAAD,EAAa;AAC/C,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACqQ,kCAAJ,GAAyC,GAAzC,GAA+C5P,IAAxD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACkH,aAAP,CAAqB9G,UAArB,KAAoC,KAAxC,EAA+C;AAC7C,eAAOJ,MAAP;AACD;AACF,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BqP,0BAA0B,CAAC7P,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACqQ,kCAAd,EAAkD5P,IAAlD,CAAnB;AACA,aAAOE,MAAP,CAbE,CAaY;AACf,KAdD,CAeA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACoC,QAA/BsP,+BAA+B,CAAC9P,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACqQ,kCAAb,EAAiD5P,IAAjD,CAAnB;AACA,aAAOE,MAAP,CAhBE,CAgBY;AACf,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACkC,QAA7BuP,6BAA6B,CAAC/P,IAAD,EAAO;AACxC,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACqQ,kCAAJ,GAAyC,GAAzC,GAA+CnQ,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAxD,EAA4EA,IAA5E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAE4B,QAAvBwP,uBAAuB,CAAChQ,IAAD,EAAO;AAClC,QAAI;AACF;AACN;AACA;AACA;AACA;AACM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0Q,6BAAd,EAA6CjQ,IAA7C,CAAnB,CAPE,CAQF;;AACA;AACN;AACA;AACA;AACM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BJ,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0Q,6BAAb,EAA4CjQ,IAA5C,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AAGF,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzB0P,yBAAyB,CAACrO,UAAD,EAAa;AAAE;AAC5C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0Q,6BAAJ,GAAoC,GAApC,GAA0CjQ,IAAnD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAM,CAACiQ,iBAAP,CAAyB,CAAzB,CAAP;AACD;AACF,KAtBD,CAuBA,OAAO/O,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEsC,QAAjC4P,iCAAiC,CAACvO,UAAD,EAAa;AAClD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8Q,qCAAJ,GAA4C,GAA5C,GAAkDrQ,IAA3D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACoQ,SAAd;AACD,KAtBD,CAuBA,OAAOlP,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACkC,QAA7B+P,6BAA6B,CAACvQ,IAAD,EAAO;AACxC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8Q,qCAAd,EAAqDrQ,IAArD,CAAnB;AACA,aAAOE,MAAP,CAXE,CAWY;AACf,KAZD,CAaA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACuC,QAAlCgQ,kCAAkC,CAACxQ,IAAD,EAAO;AAC7C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8Q,qCAAb,EAAoDrQ,IAApD,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACqC,QAAhCiQ,gCAAgC,CAACzQ,IAAD,EAAO;AAC3C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8Q,qCAAJ,GAA4C,GAA5C,GAAkD5Q,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA3D,EAA+EA,IAA/E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEyC,QAApCkQ,oCAAoC,CAAC7O,UAAD,EAAa;AACrD,QAAI;AAEF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoR,wCAAJ,GAA+C,GAA/C,GAAqD3Q,IAA9D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC0Q,cAAd;AACD,KAtBD,CAuBA,OAAOxP,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCqQ,gCAAgC,CAAC7Q,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoR,wCAAd,EAAwD3Q,IAAxD,CAAnB;AACA,aAAOE,MAAP,CAXE,CAWY;AACf,KAZD,CAaA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AAC0C,QAArCsQ,qCAAqC,CAAC9Q,IAAD,EAAO;AAChD,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoR,wCAAb,EAAuD3Q,IAAvD,CAAnB;AACA,aAAOE,MAAP,CAdE,CAcY;AACf,KAfD,CAgBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,oBAAd,EAAoCD,GAApC;AACD;;AACD,WAAOZ,SAAP;AAED;;AACwC,QAAnCuQ,mCAAmC,CAAC/Q,IAAD,EAAO;AAC9C,QAAI;AACF;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACoR,wCAAJ,GAA+C,GAA/C,GAAqDlR,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA9D,EAAkFA,IAAlF,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAvpJ8C,CAypJ/C;;;AAC8B,QAAxBwQ,wBAAwB,CAAChR,IAAD,EAAO;AACnC,QAAI;AACF;AACN;AACA;AACA;AACA;AACA;AACM;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0R,0BAAd,EAA0CjR,IAA1C,CAAnB,CARE,CASF;;AACA;AACN;AACA;AACA;AAEM;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0R,0BAAb,EAAyCjR,IAAzC,CAAf;AACD;;AAED,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD,OAvBC,CAyBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,KAtCD,CAsCE,OAAOkB,GAAP,EAAY;AACZN,MAAAA,OAAO,CAACO,KAAR,CAAc,iCAAd,EAAiDD,GAAjD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B0Q,0BAA0B,CAACrP,UAAD,EAAa;AAAE;AAC7C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0R,0BAAJ,GAAiC,GAAjC,GAAuCjR,IAAhD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qCAAd,EAAqDD,GAArD;AACD;;AACD,WAAOZ,SAAP;AACD,GA7tJ8C,CA+tJ/C;;;AAC6B,QAAvB2Q,uBAAuB,CAACnR,IAAD,EAAO;AAClC,QAAI;AACF,UAAIoR,KAAK,GAAGlS,qBAAqB,CAACmS,YAAtB,CAAmCrR,IAAnC,CAAZ,CADE,CAGF;;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+R,4BAAd,EAA4CF,KAA5C,CAAnB,CAJE,CAKF;;AACA;AACN;AACA;AACA;;AAEM,UAAIlR,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD,OAbC,CAeF;;;AACA,UAAIA,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAE/B;AAEA,eAAOJ,MAAP;AACD;AACF,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd,EAA6CD,GAA7C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzB+Q,yBAAyB,CAAC1P,UAAD,EAAa;AAAE;AAC5C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA,UAAd;AAA0BQ,QAAAA,SAAS,EAAE7C,GAAG,CAACgS,wBAAzC;AAAmEjP,QAAAA,UAAU,EAAE/C,GAAG,CAACiS;AAAnF,OAAb;AACA,UAAIzR,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC+R,4BAAJ,GAAmC,GAAnC,GAAyCtR,IAAlD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOpB,qBAAqB,CAACwS,QAAtB,CAA+BxR,MAA/B,CAAP;AACD;AACF,KA7BD,CA8BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD,GAhyJ8C,CAkyJ/C;;;AAC6B,QAAvBmR,uBAAuB,CAAC3R,IAAD,EAAO;AAClC,QAAIE,MAAM,GAAGM,SAAb;;AACA,QAAI;AAEF;AACA,UAAIR,IAAI,CAAC4R,UAAL,KAAoB,IAApB,IAA4B5R,IAAI,CAAC4R,UAAL,KAAoBpR,SAAhD,IAA6DR,IAAI,CAAC4R,UAAL,CAAgBC,MAAhB,GAAyB,CAA1F,EAA6F;AAC3F,YAAIC,SAAS,GAAG3S,qBAAqB,CAAC4S,cAAtB,CAAqC/R,IAArC,CAAhB,CAD2F,CAE3F;;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyS,4BAAb,EAA2CF,SAA3C,CAAf;;AACA,YAAI5R,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/BJ,UAAAA,MAAM,CAAC0R,UAAP,GAAoB5R,IAAI,CAAC4R,UAAzB;AACA1R,UAAAA,MAAM,CAAC2B,UAAP,GAAoB7B,IAAI,CAAC6B,UAAzB;AAEA,iBAAO3B,MAAP;AACD;AACF,OAVD,MAWK;AAAE;AACL4R,QAAAA,SAAS,GAAG3S,qBAAqB,CAACkS,YAAtB,CAAmCrR,IAAnC,CAAZ;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC+Q,SAAvC,EAFG,CAGH;;AACA5R,QAAAA,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyS,4BAAd,EAA4CF,SAA5C,CAAf;;AACA,YAAI5R,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,iBAAOJ,MAAP;AACD;AACF;AACD;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKK,KA1CD,CA2CA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AAED,WAAOZ,SAAP;AACD;;AAC8B,QAAzByR,yBAAyB,CAACpQ,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyS,4BAAJ,GAAmC,GAAnC,GAAyChS,IAAlD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACgS,QAAP,CAAgB,CAAhB,CAAP;AACD,KA3BD,CA4BA,OAAO9Q,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAEwB,QAAnB2R,mBAAmB,CAACnS,IAAD,EAAO;AAC9B,QAAI;AAEF,UAAIoR,KAAK,GAAG;AACVvP,QAAAA,UAAU,EAAE7B,IAAI,CAAC6B,UADP;AAEVuQ,QAAAA,UAAU,EAAE,IAFF;AAGVlP,QAAAA,YAAY,EAAElD,IAAI,CAACqS,yBAHT;AAIVC,QAAAA,QAAQ,EAAE,IAJA;AAKVC,QAAAA,gBAAgB,EAAEvS,IAAI,CAACuS;AALb,OAAZ,CAFE,CAUF;;AACA,UAAIrS,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACiT,wBAAd,EAAwCpB,KAAxC,CAAnB,CAXE,CAYF;;AACA;AACN;AACA;AACA;;AAEM,UAAIlR,MAAM,CAACI,UAAP,KAAsB,KAAtB,IAA+BJ,MAAM,CAACI,UAAP,KAAsB,KAAzD,EAAgE;AAC9D,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,yBAAd,EAAyCD,GAAzC;AACD;;AACD,WAAOZ,SAAP;AACD,GAp5J8C,CAs5J/C;;;AAC2B,QAArBiS,qBAAqB,CAACC,QAAD,EAAW;AAAE;AACtC,QAAI;AACF,UAAI3S,MAAM,GAAG;AAAE4S,QAAAA,WAAW,EAAED;AAAf,OAAb;AACA,UAAI1S,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACqT,kCAAJ,GAAyC,GAAzC,GAA+C5S,IAAxD,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOpB,qBAAqB,CAACwS,QAAtB,CAA+BxR,MAA/B,CAAP;AACD;AACF,KAvCD,CAwCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAE2B,QAAtBqS,sBAAsB,CAAC7S,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACqT,kCAAd,EAAkD5S,IAAlD,CAAnB;AACA,aAAOE,MAAP,CAjBE,CAiBY;AACf,KAlBD,CAmBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AAED;AAID;;AACA;;AACA;;;AAC6B,QAAvBsS,uBAAuB,GAAG;AAC9B;;AACA;;AACA;AACA,WAAO,MAAM,KAAK3S,GAAL,CAASZ,GAAG,CAACwT,0BAAb,CAAb;AACD;AACD;;AACA;;AACA;;;AAC2B,QAArBC,qBAAqB,CAACC,aAAD,EAAgBC,WAAhB,EAA6B;AACtD;;AACA;;AACA;AACA,QAAI;AACF,UAAIlT,IAAI,GAAG;AACT,sBAAciT,aADL;AAET,8BAAsBC;AAFb,OAAX;AAIA,UAAIhT,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACwT,0BAAd,EAA0C/S,IAA1C,CAAnB;;AACA,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KATD,CAUA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACM,GAAR,CAAY,2BAAZ,EAAyCA,GAAzC;AACD;;AACD,WAAOZ,SAAP;AACD;AACD;;AACA;;AACA;;;AACoC,QAA9B2S,8BAA8B,CAACpT,MAAD,EAAS;AAC3C,QAAIC,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,WAAO,MAAM,KAAKI,GAAL,CAASZ,GAAG,CAAC6T,kCAAJ,GAAyC,GAAzC,GAA+CpT,IAAxD,CAAb;AACD;;AACkC,QAA7BqT,6BAA6B,CAACxR,UAAD,EAAaqR,WAAb,EAA0B;AAC3D,QAAI;AACF,UAAIlT,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0BqR,QAAAA,WAAW,EAAEA;AAAvC,OAAX;AACA,UAAIhT,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACwT,0BAAJ,GAAiC,GAAjC,GAAuCtT,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAhD,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,qCAAd,EAAqDD,GAArD;AACD;;AACD,WAAOZ,SAAP;AACD,GAnhK8C,CAshK/C;AAEA;;;AACiC,QAA3B8S,2BAA2B,CAACtT,IAAD,EAAO;AACtC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACgU,2CAAd,EAA2DvT,IAA3D,CAAnB,CA3BE,CA2BkF;;AAEpF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AAEA;AACA;AACA;;AACA,aAAOE,MAAP;AACD,KA5CD,CA6CA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCgT,gCAAgC,CAACxT,IAAD,EAAO;AAC3C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeN,MAAM,GAAG2D,MAAT,CAAgB,YAAhB,CAAf,CA7BE,CA6B2C;;AAC7CrD,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACgU,2CAAb,EAA0DvT,IAA1D,CAAnB,CAhCE,CAgCiF;;AAEnF,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArCD,CAsCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoC,QAA/BiT,+BAA+B,CAAC5R,UAAD,EAAa;AAAE;AAClD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACgU,2CAAJ,GAAkD,GAAlD,GAAwDvT,IAAjE,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAM,CAACF,IAAd;AACD;AACF,KA5FD,CA6FA,OAAOoB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,uCAAd,EAAuDD,GAAvD;AACD;;AACD,WAAOZ,SAAP;AACD,GA1tK8C,CA4tK/C;;;AAC4B,QAAtBkT,sBAAsB,CAAC1T,IAAD,EAAO;AACjC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACoU,sCAAd,EAAsD3T,IAAtD,CAAnB,CAjCE,CAiC6E;;AAE/E;AACN;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC0T,UAAd;AACD,KA1CD,CA2CA,OAAOxS,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACgC,QAA3BqT,2BAA2B,CAAC7T,IAAD,EAAO;AACtC,QAAI;AACFA,MAAAA,IAAI,CAAC4T,UAAL,GAAkB,EAAlB;AACA5T,MAAAA,IAAI,CAAC8T,SAAL,GAAiB,WAAjB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,UAAI5T,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACoU,sCAAb,EAAqD3T,IAArD,CAAnB,CAnCE,CAmC4E;;AAE9E,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAxCD,CAyCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1BuT,0BAA0B,CAACH,UAAD,EAAaE,SAAb,EAAwB;AAAE;AACxD,QAAI;AACF,UAAI/T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA,UAAd;AAA0BE,QAAAA,SAAS,EAAEA;AAArC,OAAb;AACA,UAAI9T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACoU,sCAAJ,GAA6C,GAA7C,GAAmD3T,IAA5D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC8T,mBAAd;AACD,KAxCD,CAyCA,OAAO5S,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD,GA32K8C,CA62K/C;;;AACsC,QAAhCyT,gCAAgC,CAACL,UAAD,EAAa;AACjD,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC2U,wCAAJ,GAA+C,GAA/C,GAAqDlU,IAA9D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAACiU,aAAd;AAED,KA5CD,CA6CA,OAAO/S,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvB4T,uBAAuB,CAACpU,IAAD,EAAO;AAClC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC2U,wCAAd,EAAwDlU,IAAxD,CAAnB,CATE,CAS+E;AACjF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5B6T,4BAA4B,CAACrU,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC2U,wCAAb,EAAuDlU,IAAvD,CAAnB,CAXE,CAW8E;AAChF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B8T,0BAA0B,CAACV,UAAD,EAAaW,cAAb,EAA6B;AAC3D,QAAI;AACF,UAAIvU,IAAI,GAAG;AAAE4T,QAAAA,UAAU,EAAEA,UAAd;AAA0BW,QAAAA,cAAc,EAAEA;AAA1C,OAAX;AACA,UAAIrU,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC2U,wCAAJ,GAA+C,GAA/C,GAAqDzU,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA9D,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAn+K8C,CAq+K/C;;;AACwC,QAAlCgU,kCAAkC,CAACZ,UAAD,EAAa;AACnD,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACkV,yCAAJ,GAAgD,GAAhD,GAAsDzU,IAA/D,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACwU,qBAAd;AACD,KA9CD,CA+CA,OAAOtT,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzBmU,yBAAyB,CAAC3U,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACkV,yCAAd,EAAyDzU,IAAzD,CAAnB,CATE,CASgF;AAClF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAAC0U,iBAAP,CAAyBtU,UAAzB,KAAwC,KAA5C,EAAmD;AACjD,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACmC,QAA9BqU,8BAA8B,CAAC7U,IAAD,EAAO;AACzC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACkV,yCAAb,EAAwDzU,IAAxD,CAAnB,CAXE,CAW+E;AACjF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5BsU,4BAA4B,CAAClB,UAAD,EAAamB,gBAAb,EAA+B;AAC/D,QAAI;AACF,UAAI/U,IAAI,GAAG;AAAE4T,QAAAA,UAAU,EAAEA,UAAd;AAA0BmB,QAAAA,gBAAgB,EAAEA;AAA5C,OAAX;AACA,UAAI7U,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACkV,yCAAJ,GAAgD,GAAhD,GAAsDhV,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA/D,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA7lL8C,CA+lL/C;;;AAC+B,QAAzBwU,yBAAyB,CAACpB,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0V,qCAAJ,GAA4C,GAA5C,GAAkDjV,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACgV,UAAd;AAED,KA/BD,CAgCA,OAAO9T,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArB2U,qBAAqB,CAACnV,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0V,qCAAd,EAAqDjV,IAArD,CAAnB,CAVE,CAU4E;AAC9E;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B4U,0BAA0B,CAACpV,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0V,qCAAb,EAAoDjV,IAApD,CAAnB,CAZE,CAY2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxB6U,wBAAwB,CAACzB,UAAD,EAAa0B,YAAb,EAA2B;AACvD,QAAI;AACF,UAAItV,IAAI,GAAG;AAAE4T,QAAAA,UAAU,EAAEA,UAAd;AAA0B0B,QAAAA,YAAY,EAAEA;AAAxC,OAAX;AACA,UAAIpV,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC0V,qCAAb,EAAoDjV,IAApD,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA1sL8C,CA4sL/C;;;AACsC,QAAhC+U,gCAAgC,CAAC3B,UAAD,EAAa;AACjD,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACiW,4CAAJ,GAAmD,GAAnD,GAAyDxV,IAAlE,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACuV,gBAAd;AACD,KAtBD,CAuBA,OAAOrU,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5BkV,4BAA4B,CAAC1V,IAAD,EAAO;AACvC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACiW,4CAAd,EAA4DxV,IAA5D,CAAnB,CATE,CASmF;AACrF;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACsC,QAAjCmV,iCAAiC,CAAC3V,IAAD,EAAO;AAC5C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACiW,4CAAb,EAA2DxV,IAA3D,CAAnB,CAXE,CAWkF;AACpF;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoC,QAA/BoV,+BAA+B,CAAChC,UAAD,EAAaiC,kBAAb,EAAiC;AACpE,QAAI;AACF,UAAI7V,IAAI,GAAG;AAAE4T,QAAAA,UAAU,EAAEA,UAAd;AAA0BiC,QAAAA,kBAAkB,EAAEA;AAA9C,OAAX;AACA,UAAI3V,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACiW,4CAAJ,GAAmD,GAAnD,GAAyD/V,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAlE,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GA5yL8C,CA8yL/C;;;AAC+B,QAAzBsV,yBAAyB,CAAClC,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE+T,QAAAA,SAAS,EAAEF;AAAb,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACwW,qCAAJ,GAA4C,GAA5C,GAAkD/V,IAA3D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC8V,UAAd;AACD,KA5BD,CA6BA,OAAO5U,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArByV,qBAAqB,CAACjW,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACwW,qCAAd,EAAqD/V,IAArD,CAAnB,CAhBE,CAgB4E;AAC9E;;AACA;AACN;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EAAwC;AACtC,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B0V,0BAA0B,CAAClW,IAAD,EAAO;AACrC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACwW,qCAAb,EAAoD/V,IAApD,CAAnB,CAlBE,CAkB2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxB2V,wBAAwB,CAACvC,UAAD,EAAawC,WAAb,EAA0B;AACtD,QAAI;AACF,UAAIpW,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEF,UAAb;AAAyBwC,QAAAA,WAAW,EAAEA;AAAtC,OAAX;AACA,UAAIlW,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACwW,qCAAJ,GAA4C,GAA5C,GAAkDtW,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA3D,CAAnB;AACA,aAAOE,MAAP,CAHE,CAGY;AACf,KAJD,CAKA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAl6L8C,CAo6L/C;;;AAC6B,QAAvB6V,uBAAuB,CAACzC,UAAD,EAAa;AACxC,QAAI;AACF,UAAI7T,MAAM,GAAG;AAAE6T,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5T,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC+W,mCAAJ,GAA0C,GAA1C,GAAgDtW,IAAzD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACqW,KAAd;AACD,KA5BD,CA6BA,OAAOnV,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwB,QAAnBgW,mBAAmB,CAACxW,IAAD,EAAO;AAC9B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+W,mCAAd,EAAmDtW,IAAnD,CAAnB,CATE,CAS0E;AAC5E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC6B,QAAxBiW,wBAAwB,CAACzW,IAAD,EAAO;AACnC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC+W,mCAAb,EAAkDtW,IAAlD,CAAnB,CAXE,CAWyE;AAC3E;;AACA;AACN;AACA;AACA;AACA;;AACM,UAAIE,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC2B,QAAtBkW,sBAAsB,CAAC9C,UAAD,EAAa+C,MAAb,EAAqB;AAC/C,QAAI;AACF,UAAI3W,IAAI,GAAG;AAAE4T,QAAAA,UAAU,EAAEA,UAAd;AAA0B+C,QAAAA,MAAM,EAAEA;AAAlC,OAAX;AACA,UAAIzW,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACqX,yCAAJ,GAAgD,GAAhD,GAAsDnX,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA/D,CAAnB,CAFE,CAGF;;AAEA,aAAOE,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GA1gM8C,CA6gM/C;AACA;AACA;;;AAC2B,QAArBqW,qBAAqB,CAAChV,UAAD,EAAa;AACtC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACuX,2BAAJ,GAAkC,GAAlC,GAAwC9W,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAAC6W,qBAAd;AACD,KA3BD,CA4BA,OAAO3V,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApBwW,oBAAoB,CAAChX,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACuX,2BAAd,EAA2C9W,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzByW,yBAAyB,CAACjX,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACuX,2BAAb,EAA0C9W,IAA1C,CAAnB,CAhBE,CAgBiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAxBD,CAyBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvB0W,uBAAuB,CAACrV,UAAD,EAAasV,aAAb,EAA4B;AACvD,QAAI;AACF,UAAInX,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0BsV,QAAAA,aAAa,EAAEA;AAAzC,OAAX;AACA,UAAIjX,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACuX,2BAAb,EAA0C9W,IAA1C,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GAxnM8C,CA0nM/C;;;AACoC,QAA9B4W,8BAA8B,CAACvV,UAAD,EAAa;AAC/C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8X,oCAAJ,GAA2C,GAA3C,GAAiDrX,IAA1D,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOE,MAAM,CAACoX,wBAAd;AACD,KA1BD,CA2BA,OAAOlW,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoC,QAA/B+W,+BAA+B,CAACvX,IAAD,EAAO;AAC1C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8X,oCAAd,EAAoDrX,IAApD,CAAnB,CAbE,CAa2E;AAC7E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyC,QAApCgX,oCAAoC,CAACxX,IAAD,EAAO;AAC/C,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8X,oCAAb,EAAmDrX,IAAnD,CAAnB,CAfE,CAe0E;AAC5E;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuC,QAAlCiX,kCAAkC,CAAC5V,UAAD,EAAa6V,uBAAb,EAAsC;AAC5E,QAAI;AACF,UAAI1X,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0B6V,QAAAA,uBAAuB,EAAEA;AAAnD,OAAX;AACA,UAAIxX,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8X,oCAAJ,GAA2C,GAA3C,GAAiD5X,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA1D,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GAjuM8C,CAmuM/C;;;AAC0B,QAApBmX,oBAAoB,CAAC9V,UAAD,EAAa;AACrC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE+T,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACqY,2BAAJ,GAAkC,GAAlC,GAAwC5X,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIM,aAAOE,MAAM,CAAC2X,cAAd;AACD,KAvCD,CAwCA,OAAOzW,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuB,QAAlBsX,kBAAkB,CAAE9X,IAAF,EAAQ;AAC9B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACqY,2BAAd,EAA2C5X,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArBuX,qBAAqB,CAAC/X,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACqY,2BAAb,EAA0C5X,IAA1C,CAAnB,CAfE,CAeiE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvBwX,uBAAuB,CAACnW,UAAD,EAAaoW,YAAb,EAA2B;AACtD,QAAI;AACF,UAAIjY,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEjS,UAAb;AAAyBoW,QAAAA,YAAY,EAAEA;AAAvC,OAAX;AACA,UAAI/X,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACqY,2BAAJ,GAAkC,GAAlC,GAAwCnY,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAjD,CAAnB,CAFE,CAGF;;AAEA,aAAOE,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GAx1M8C,CA21M/C;;;AACoB,QAAhB0X,gBAAgB,CAACrW,UAAD,EAAa;AAC/B,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC4Y,uBAAJ,GAA8B,GAA9B,GAAoCnY,IAA7C,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,aAAOE,MAAM,CAACkY,gBAAd;AACD,KAlCD,CAmCA,OAAOhX,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiB,QAAd6X,cAAc,CAACrY,IAAD,EAAO;AACvB,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC4Y,uBAAd,EAAuCnY,IAAvC,CAAnB,CAdE,CAc8D;AAChE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0B,QAArB8X,qBAAqB,CAACtY,IAAD,EAAO;AAChC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC4Y,uBAAb,EAAsCnY,IAAtC,CAAnB,CAfE,CAe6D;AAC/D;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAvBD,CAwBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwB,QAAnB+X,mBAAmB,CAAC1W,UAAD,EAAa2W,gBAAb,EAA+B;AACtD,QAAI;AACF,UAAIxY,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0B2W,QAAAA,gBAAgB,EAAEA;AAA5C,OAAX;AACA,UAAItY,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC4Y,uBAAJ,GAA8B,GAA9B,GAAoC1Y,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA7C,CAAnB,CAFE,CAGF;;AAEA,aAAOE,MAAP,CALE,CAKY;AACf,KAND,CAOA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GA58M8C,CA88M/C;;;AAC8B,QAAxBiY,wBAAwB,CAAC5W,UAAD,EAAa;AACzC,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmZ,2BAAJ,GAAkC,GAAlC,GAAwC1Y,IAAjD,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACyY,YAAd;AACK,KAzBD,CA0BA,OAAOvX,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyB,QAApBoY,oBAAoB,CAAC5Y,IAAD,EAAO;AAC/B,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEM,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmZ,2BAAd,EAA2C1Y,IAA3C,CAAnB,CAbE,CAakE;AACpE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzBqY,yBAAyB,CAAC7Y,IAAD,EAAO;AACpC,QAAI;AAEF;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACA,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmZ,2BAAb,EAA0C1Y,IAA1C,CAAnB,CAdE,CAciE;AACnE;;AACA;AACN;AACA;AACA;AACA;;AACM,aAAOE,MAAP;AACD,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC2B,QAAtBsY,sBAAsB,CAACjX,UAAD,EAAakX,QAAb,EAAuBC,MAAvB,EAA+B;AACzD,QAAI;AACF,UAAIhZ,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0BkX,QAAAA,QAAQ,EAAEA,QAApC;AAA8CC,QAAAA,MAAM,EAAEA;AAAtD,OAAX;AACA,UAAI9Y,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACmZ,2BAAJ,GAAkC,GAAlC,GAAwCjZ,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAjD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,8BAAd,EAA8CD,GAA9C;AACD;;AACD,WAAOZ,SAAP;AACD,GAnjN8C,CAsjNjD;;;AAC6C,QAAvCyY,uCAAuC,CAACpX,UAAD,EAAa;AACxD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC2Z,0BAAJ,GAAiC,GAAjC,GAAuClZ,IAAhD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACiZ,sBAAd;AACG,KAjCD,CAkCA,OAAO/X,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuC,QAAlC4Y,kCAAkC,CAACpZ,IAAD,EAAO;AAC7C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC2Z,0BAAd,EAA0ClZ,IAA1C,CAAnB,CApBE,CAoBiE;AACnE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4C,QAAvC6Y,uCAAuC,CAACrZ,IAAD,EAAO;AAClD,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC2Z,0BAAb,EAAyClZ,IAAzC,CAAnB,CAtBE,CAsBgE;AAClE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KA9BD,CA+BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0C,QAArC8Y,qCAAqC,CAACzX,UAAD,EAAakX,QAAb,EAAsBQ,WAAtB,EAAmC;AAC5E,QAAI;AACF,UAAIvZ,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAA0BkX,QAAAA,QAAQ,EAAEA,QAApC;AAA6CQ,QAAAA,WAAW,EAACA;AAAzD,OAAX;AACA,UAAIrZ,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC2Z,0BAAJ,GAAkC,GAAlC,GAAwCzZ,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAjD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GAlrNgD,CAorNjD;;;AAC0C,QAApCgZ,oCAAoC,CAAC3X,UAAD,EAAa;AACrD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE+T,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACka,gCAAJ,GAAuC,GAAvC,GAA6CzZ,IAAtD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACwZ,QAAd;AACG,KAzBD,CA0BA,OAAOtY,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCmZ,gCAAgC,CAAC3Z,IAAD,EAAO;AAC3C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACka,gCAAd,EAAgDzZ,IAAhD,CAAnB,CARE,CAQuE;AACzE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0C,QAArCoZ,qCAAqC,CAAC5Z,IAAD,EAAO;AAChD,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACka,gCAAb,EAA+CzZ,IAA/C,CAAnB,CATE,CASsE;AACxE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwC,QAAnCqZ,mCAAmC,CAAChY,UAAD,EAAa;AACpD,QAAI;AACF,UAAI7B,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEjS;AAAb,OAAX;AACA,UAAI3B,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACka,gCAAJ,GAAwC,GAAxC,GAA8Cha,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAvD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA/wNgD,CAixNjD;;;AAC4D,QAAtDsZ,sDAAsD,CAACjY,UAAD,EAAa;AACvE,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACwa,wDAAJ,GAA+D,GAA/D,GAAqE/Z,IAA9E,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAAC8Z,kCAAd;AACG,KA7BD,CA8BA,OAAO5Y,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuD,QAAlDyZ,kDAAkD,CAACja,IAAD,EAAO;AAC7D,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACwa,wDAAd,EAAwE/Z,IAAxE,CAAnB,CAXE,CAW+F;AACjG;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4D,QAAvD0Z,uDAAuD,CAACla,IAAD,EAAO;AAClE,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACwa,wDAAb,EAAuE/Z,IAAvE,CAAnB,CAZE,CAY8F;AAChG;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KApBD,CAqBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0D,QAArD2Z,qDAAqD,CAACtY,UAAD,EAAakX,QAAb,EAAuB;AAChF,QAAI;AACF,UAAI/Y,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEjS,UAAb;AAAwBkX,QAAAA,QAAQ,EAACA;AAAjC,OAAX;AACA,UAAI7Y,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACwa,wDAAJ,GAAgE,GAAhE,GAAsEta,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA/E,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GAt3NgD,CAw3NjD;;;AACyC,QAAnC4Z,mCAAmC,CAACvY,UAAD,EAAa;AACpD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE+T,QAAAA,SAAS,EAAEjS;AAAb,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8a,mCAAJ,GAA0C,GAA1C,GAAgDra,IAAzD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAP;AACG,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoC,QAA/B8Z,+BAA+B,CAACta,IAAD,EAAO;AAC1C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC8a,mCAAd,EAAmDra,IAAnD,CAAnB,CAdE,CAc0E;AAC5E;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACyC,QAApC+Z,oCAAoC,CAACva,IAAD,EAAO;AAC/C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC8a,mCAAb,EAAkDra,IAAlD,CAAnB,CAdE,CAcyE;AAC3E;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAtBD,CAuBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACuC,QAAlCga,kCAAkC,CAAC3Y,UAAD,EAAa;AACnD,QAAI;AACF,UAAI7B,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA;AAAd,OAAX;AACA,UAAI3B,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC8a,mCAAJ,GAA2C,GAA3C,GAAiD5a,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAA1D,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA39NgD,CA69NjD;;;AACqC,QAA/Bia,+BAA+B,CAAC5Y,UAAD,EAAa;AAChD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACmb,0BAAJ,GAAiC,GAAjC,GAAuC1a,IAAhD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACya,qBAAd;AACG,KAhBD,CAiBA,OAAOvZ,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACgC,QAA3Boa,2BAA2B,CAAC5a,IAAD,EAAO;AACtC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACmb,0BAAd,EAA0C1a,IAA1C,CAAnB,CARE,CAQiE;AACnE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAhBD,CAiBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCqa,gCAAgC,CAAC7a,IAAD,EAAO;AAC3C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACmb,0BAAb,EAAyC1a,IAAzC,CAAnB,CATE,CASgE;AAClE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACmC,QAA9Bsa,8BAA8B,CAACjZ,UAAD,EAAa;AAC/C,QAAI;AACF,UAAI7B,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA;AAAd,OAAX;AACA,UAAI3B,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACmb,0BAAJ,GAAkC,GAAlC,GAAwCjb,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAjD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA/iOgD,CAkjOjD;;;AACgC,QAA1Bua,0BAA0B,CAAClZ,UAAD,EAAa;AAC3C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyb,6BAAJ,GAAoC,GAApC,GAA0Chb,IAAnD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAAC+a,SAAd;AACG,KAtBD,CAuBA,OAAO7Z,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC2B,QAAtB0a,sBAAsB,CAAClb,IAAD,EAAO;AACjC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyb,6BAAd,EAA6Chb,IAA7C,CAAnB,CARE,CAQoE;AACtE;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACgC,QAA3B2a,2BAA2B,CAACnb,IAAD,EAAO;AACtC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACEA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACE,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyb,6BAAb,EAA4Chb,IAA5C,CAAnB,CATE,CASmE;AACrE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAjBD,CAkBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzB4a,yBAAyB,CAACvZ,UAAD,EAAa;AAC1C,QAAI;AACF,UAAI7B,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEjS;AAAb,OAAX;AACA,UAAI3B,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyb,6BAAJ,GAAqC,GAArC,GAA2Cvb,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAApD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA7oOgD,CA+oOjD;;;AACmC,QAA7B6a,6BAA6B,CAACxZ,UAAD,EAAa;AAC9C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC+b,2BAAJ,GAAkC,GAAlC,GAAwCtb,IAAjD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACqb,QAAd;AACG,KAlCD,CAmCA,OAAOna,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC8B,QAAzBgb,yBAAyB,CAACxb,IAAD,EAAO;AACpC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC+b,2BAAd,EAA2Ctb,IAA3C,CAAnB,CAXE,CAWkE;AACpE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAnBD,CAoBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACmC,QAA9Bib,8BAA8B,CAACzb,IAAD,EAAO;AACzC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC+b,2BAAb,EAA0Ctb,IAA1C,CAAnB,CAbE,CAaiE;AACnE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KArBD,CAsBA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5Bkb,4BAA4B,CAAC7Z,UAAD,EAAY8Z,SAAZ,EAAuB;AACvD,QAAI;AACF,UAAI3b,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAAyB8Z,QAAAA,SAAS,EAACA;AAAnC,OAAX;AACA,UAAIzb,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC+b,2BAAJ,GAAmC,GAAnC,GAAyC7b,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAlD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA1vOgD,CA4vOjD;;;AACwC,QAAlCob,kCAAkC,CAAC/Z,UAAD,EAAa;AACnD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACsc,iCAAJ,GAAwC,GAAxC,GAA8C7b,IAAvD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAAC4b,sBAAd;AACG,KApBD,CAqBA,OAAO1a,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhCub,gCAAgC,CAAC/b,IAAD,EAAO;AAC3C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACsc,iCAAd,EAAiD7b,IAAjD,CAAnB,CAZE,CAYwE;;AAE1E,UAAGE,MAAM,CAACI,UAAP,KAAoB,GAAvB,EAA2B;AACzBN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACsc,iCAAb,EAAgD7b,IAAhD,CAAf;AACD,OAjBC,CAkBF;;AACA;AACJ;AACA;AACA;AACA;;;AACA,aAAOE,MAAP;AACG,KAzBD,CA0BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD,GAvzOgD,CAyzOjD;;;AAC0C,QAApCwb,oCAAoC,CAACna,UAAD,EAAa;AACrD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0c,kCAAJ,GAAyC,GAAzC,GAA+Cjc,IAAxD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACgc,aAAd;AACG,KAlDD,CAmDA,OAAO9a,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACqC,QAAhC2b,gCAAgC,CAACnc,IAAD,EAAO;AAC3C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAAC0c,kCAAd,EAAkDjc,IAAlD,CAAnB,CAnBE,CAmByE;AAC3E;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KA3BD,CA4BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC0C,QAArC4b,qCAAqC,CAACpc,IAAD,EAAO;AAChD,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAAC0c,kCAAb,EAAiDjc,IAAjD,CAAnB,CArBE,CAqBwE;AAC1E;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KA7BD,CA8BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACwC,QAAnC6b,mCAAmC,CAACxa,UAAD,EAAYya,aAAZ,EAA2B;AAClE,QAAI;AACF,UAAItc,IAAI,GAAG;AAAE6B,QAAAA,UAAU,EAAEA,UAAd;AAAyBya,QAAAA,aAAa,EAACA;AAAvC,OAAX;AACA,UAAIpc,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAAC0c,kCAAJ,GAA0C,GAA1C,GAAgDxc,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAAzD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GAp8OgD,CAu8OjD;;;AACyC,QAAnC+b,mCAAmC,CAAC1a,UAAD,EAAa;AACpD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACid,gCAAJ,GAAuC,GAAvC,GAA6Cxc,IAAtD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAACuc,qBAAd;AACG,KAtBD,CAuBA,OAAOrb,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACsC,QAAjCkc,iCAAiC,CAAC1c,IAAD,EAAO;AAC5C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACid,gCAAd,EAAgDxc,IAAhD,CAAnB,CAfE,CAeuE;;AAEzE,UAAGE,MAAM,CAACI,UAAP,KAAoB,GAAvB,EAA2B;AACzBN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACid,gCAAb,EAA+Cxc,IAA/C,CAAf;AACD,OApBC,CAqBF;;AACA;AACJ;AACA;AACA;AACA;;;AACA,aAAOE,MAAP;AACG,KA5BD,CA6BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD,GAvgPgD,CAygPjD;;;AAC8C,QAAxCmc,wCAAwC,CAAC9a,UAAD,EAAa;AACzD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACqd,qCAAJ,GAA4C,GAA5C,GAAkD5c,IAA3D,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAAC2c,yBAAd;AACG,KAxBD,CAyBA,OAAOzb,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC2C,QAAtCsc,sCAAsC,CAAC9c,IAAD,EAAO;AACjD,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACqd,qCAAd,EAAqD5c,IAArD,CAAnB,CAjBE,CAiB4E;;AAE9E,UAAGE,MAAM,CAACI,UAAP,KAAoB,GAAvB,EAA2B;AACzBN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACqd,qCAAb,EAAoD5c,IAApD,CAAf;AACD,OAtBC,CAuBF;;AACA;AACJ;AACA;AACA;AACA;;;AACA,aAAOE,MAAP;AACG,KA9BD,CA+BA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD,GA7kPgD,CA+kPjD;;;AACiC,QAA3Buc,2BAA2B,CAAClb,UAAD,EAAa;AAC5C,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACyd,8BAAJ,GAAqC,GAArC,GAA2Chd,IAApD,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAM,CAAC+c,mBAAd;AACG,KAvCD,CAwCA,OAAO7b,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC4B,QAAvB0c,uBAAuB,CAACld,IAAD,EAAO;AAClC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACyd,8BAAd,EAA8Chd,IAA9C,CAAnB,CA1BE,CA0BqE;AACvE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KAlCD,CAmCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AACiC,QAA5B2c,4BAA4B,CAACnd,IAAD,EAAO;AACvC,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACI,UAAIE,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACyd,8BAAb,EAA6Chd,IAA7C,CAAnB,CA5BE,CA4BoE;AACtE;;AACA;AACJ;AACA;AACA;AACA;;AACA,aAAOE,MAAP;AACG,KApCD,CAqCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD;;AAC+B,QAA1B4c,0BAA0B,CAACvb,UAAD,EAAYwb,oBAAZ,EAAkC;AAChE,QAAI;AACF,UAAIrd,IAAI,GAAG;AAAE8T,QAAAA,SAAS,EAAEjS,UAAb;AAAwBwb,QAAAA,oBAAoB,EAACA;AAA7C,OAAX;AACA,UAAInd,MAAM,GAAG,MAAM,KAAKW,GAAL,CAAStB,GAAG,CAACyd,8BAAJ,GAAsC,GAAtC,GAA4Cvd,EAAE,CAACQ,SAAH,CAAaD,IAAb,CAArD,CAAnB;AAEA,aAAOE,MAAP,CAJE,CAIY;AACf,KALD,CAMA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,6CAAd,EAA6DD,GAA7D;AACD;;AACD,WAAOZ,SAAP;AACD,GA7tPgD,CA+tPjD;;;AACuC,QAAjC8c,iCAAiC,CAACzb,UAAD,EAAa;AAClD,QAAI;AACF,UAAI9B,MAAM,GAAG;AAAE8B,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI7B,IAAI,GAAGP,EAAE,CAACQ,SAAH,CAAaF,MAAb,CAAX;AACA,UAAIG,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACge,oCAAJ,GAA2C,GAA3C,GAAiDvd,IAA1D,CAAnB;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAOE,MAAP;AACG,KAjCD,CAkCA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wCAAd,EAAwDD,GAAxD;AACD;;AACD,WAAOZ,SAAP;AACD;;AACoC,QAA/Bgd,+BAA+B,CAACxd,IAAD,EAAO;AAC1C,QAAI;AAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,UAAIE,MAAM,GAAG,MAAM,KAAKQ,IAAL,CAAUnB,GAAG,CAACge,oCAAd,EAAoDvd,IAApD,CAAnB,CA9BE,CA8B2E;;AAC7E,UAAGE,MAAM,CAACI,UAAP,KAAsB,GAAzB,EAA6B;AAC3BN,QAAAA,IAAI,CAAC,QAAD,CAAJ,GAAe,IAAf;AACAE,QAAAA,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAASpC,GAAG,CAACge,oCAAb,EAAmDvd,IAAnD,CAAf;AACD,OAlCC,CAqCF;;AACA;AACJ;AACA;AACA;AACA;;;AACA,aAAOE,MAAP;AACG,KA5CD,CA6CA,OAAOkB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,+BAAd,EAA+CD,GAA/C;AACD;;AACD,WAAOZ,SAAP;AACD,GA1zPgD,CA8zP/C;AACA;AAEA;;;AACkC,QAA5Bid,4BAA4B,GAAG;AACnC,QAAI;AACA,UAAIzd,IAAI,GAAG,CAAC;AAAC0d,QAAAA,KAAK,EAAC,SAAP;AAAiBC,QAAAA,IAAI,EAAC;AAAtB,OAAD,EAA0B;AAACD,QAAAA,KAAK,EAAC,UAAP;AAAkBC,QAAAA,IAAI,EAAC;AAAvB,OAA1B,CAAX;AACA,aAAO3d,IAAP;AACH,KAHD,CAIA,OAAOoB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,sCAAd,EAAsDD,GAAtD;AACD;;AACD,WAAOZ,SAAP;AACD,GA30P8C,CA60P/C;;;AACyC,QAAnCod,mCAAmC,GAAG;AAC1C,QAAI;AACF,UAAI1d,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACse,gCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,UAAI7d,IAAI,GAAG,EAAX;;AACA,WAAK,MAAM8d,OAAX,IAAsB5d,MAAM,CAAC6d,kBAA7B,EAAiD;AAC/C,YAAID,OAAO,CAAC,IAAD,CAAP,KAAkB,KAAlB,IAA2BA,OAAO,CAAC,IAAD,CAAP,KAAkB,KAA7C,IAAsDA,OAAO,CAAC,IAAD,CAAP,KAAkB,KAA5E,EAAmF;AACjF9d,UAAAA,IAAI,CAACge,IAAL,CAAUF,OAAV;AACD;AACF;;AACD,aAAO9d,IAAP;AACG,KA5BD,CA6BA,OAAOoB,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,iDAAd,EAAiED,GAAjE;AACD;;AACD,WAAOZ,SAAP;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,GA13P8C,CA43P/C;;;AACgC,QAA1Byd,0BAA0B,GAAG;AACjC,QAAI;AAEF,UAAI/d,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC2e,wCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOhe,MAAM,CAACie,kBAAd;AACD,KAlCD,CAmCA,OAAO/c,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,kCAAd,EAAkDD,GAAlD;AACD;;AACD,WAAOZ,SAAP;AACD,GAr6P8C,CAu6P/C;;;AAC0B,QAApB4d,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAIle,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC8e,iCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOne,MAAM,CAACoe,YAAd;AACD,KAvCD,CAwCA,OAAOld,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD,GAr9P8C,CAu9P/C;;;AAC0B,QAApB+d,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAIre,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACif,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOte,MAAM,CAACue,YAAd;AACD,KA3DD,CA4DA,OAAOrd,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD,GAzhQ8C,CA2hQ/C;;;AAC6B,QAAvBke,uBAAuB,GAAG;AAC9B,QAAI;AAEF,UAAIxe,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACof,qCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOze,MAAM,CAAC0e,eAAd;AACD,KAtDD,CAuDA,OAAOxd,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD,GAxlQ8C,CA0lQ/C;;;AAC0B,QAApBqe,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAI3e,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAACuf,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO5e,MAAM,CAAC6e,YAAd;AACD,KA/ED,CAgFA,OAAO3d,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOZ,SAAP;AACD,GAhrQ8C,CAkrQ/C;;;AACsB,QAAhBwe,gBAAgB,GAAG;AACvB,QAAI;AAEF,UAAI9e,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASZ,GAAG,CAAC0f,+BAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO/e,MAAM,CAACgf,QAAd;AACD,KAjDD,CAkDA,OAAO9d,GAAP,EAAY;AACVN,MAAAA,OAAO,CAACO,KAAR,CAAc,wBAAd,EAAwCD,GAAxC;AACD;;AACD,WAAOZ,SAAP;AACD;;AA1uQ8C","sourcesContent":["import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\r\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\r\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\r\nimport ApiService from \"../ApiServiceBackend\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport qs from 'qs';\r\nimport moment from \"moment\";\r\n\r\nexport default class Services extends ApiService {\r\n\r\n  //Login de Usuario\r\n  async getUserInfo(userName,password) {\r\n//userName=usrcredcomercial&password=gIwn$4dAuuJ8\r\n    var params = {userName:userName,password:password}\r\n    var data = qs.stringify({userName:userName,password:password});\r\n    var result = await this.get(url.URL_BACKEND_LOGINUSUARIO + \"?\" + data);\r\n\r\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n    */\r\n\r\n    if (result.status.statusCode === \"200\") {\r\n      return result.attachments;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  async guardarDocumentoAnexo(data) {\r\n\r\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\r\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n    */\r\n    if (result.status.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async eliminarDocumentoAnexo(data) {\r\n    data = qs.stringify(data);\r\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\r\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\r\n    console.log(\"eliminarDocumentoAnexo\", result);\r\n    if (result.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async consultarDocumentosAnexos(params) {\r\n\r\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\r\n\r\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n    */\r\n\r\n    if (result.status.statusCode === \"200\") {\r\n      return result.attachments;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarHistorico(data) {\r\n    try {\r\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error guardarHistorico\", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async searchLogs(params) {\r\n\r\n    try {\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        //return result.logs;\r\n        return { status: 200, result: result.logs };\r\n\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarHistorico\", err)\r\n      return { status: err.response.status, error: err.response.data }; //errorMessage, //errorCode\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS GENERALES///////\r\n  async guardarDatosGeneralesIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 2,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n    }\r\n      }\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\r\n\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n    },\r\n    \"status\": true,\r\n    \"identificationType\": \"RUC\",\r\n    \"customerDocumentId\": \"00000081\",\r\n    \"customerNumberT24\": \"\",\r\n    \"firstName\": \"Rey\",\r\n    \"secondName\": \"\",\r\n    \"firstLastName\": \"\",\r\n    \"secondLastName\": \"\",\r\n    \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n} */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS EMPRESA///////\r\n  async guardarDatosEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n    },\r\n    \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n    },\r\n    \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n    },\r\n    \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n    },\r\n    \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n    },\r\n    \"referencePoint\": \"12\",\r\n    \"residency\": \"13\",\r\n    \"houseNumber\": \"14\",\r\n    \"phoneNumber\": 15,\r\n    \"mobileNumber\": 16,\r\n    \"workNumber\": 17,\r\n    \"email\": \"18\",\r\n    \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n    },\r\n    \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n    },\r\n    \"exclusion\": true,\r\n    \"sustainable\": true\r\n\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\r\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR HISTORIAL EMPRESA///////\r\n  async guardarHistorialEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"8\",\r\n\"description\":\"description2\",\r\n\"employeesNumber\":\"346\",\r\n\"details\":\"detalles2\",\r\n\"status\":true\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarHistorialEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFO ACCIONISTAS///////\r\n  async consultarDatosAccionistas(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 24\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 23\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 22\r\n        }\r\n    ],\r\n    \"observations\": \"ALGODON\",\r\n    \"infoDate\": \"2021-11-19\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.shareholders;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1644931014,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"shareholderId\": 1,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1644931014,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30,\r\n  \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarAccionista(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n    \"shareholderId\":1\r\n}\r\n       */\r\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionAccionista(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 107,\r\n    \"description\": \"dd5\",\r\n    \"infoDate\":1643723937\r\n}\r\n      */\r\n      data = {\r\n        transactId: data.transactId,\r\n        description: data.observations==null?\" \":data.observations,\r\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\r\n      }\r\n      // data[\"date\"] = \"1980-11-11\";\r\n      // data[\"jsonData\"] = \"[{}]\";\r\n\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionAccionista(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n       {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n    ],\r\n    \"observations\": \"dd5\",\r\n    \"infoDate\": \"2022-01-10\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.observations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\r\n  async guardarEstructuraEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"46\",\r\n\"description\":\"estructura1\",\r\n\"date\":\"2021-12-10\"\r\n}\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarEstructuraEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"transactId\": 44,\r\n    \"observations\": \"estructura2\",\r\n    \"infoDate\": \"2022-01-19\",\r\n    \"status\": true,\r\n    \"attachments\": []\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GOBIERNO CORPORATIVO///////\r\n  async consultarDatosGobiernoCorporativo(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"corporateGobernance\": [],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGobiernoCorporativo(data) {\r\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n     */\r\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  async actualizarGobiernoCorporativo(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":30,\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarGobiernoCoporativo(data) {\r\n    /*{\r\n\"transactId\":\"101\",\r\n\"corporateIdentification\":17\r\n} */\r\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n\r\n  ////IGR - RELEVO GENERACIONAL ///////\r\n  async consultarDatosRelevoGeneracional(transactId) {\r\n    try {\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n    },\r\n    \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 12,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 13,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 38,\r\n            \"name\": \"vnombre character varying\",\r\n            \"position\": \"vcargo character varying\",\r\n            \"birthDate\": \"1998-08-17\",\r\n            \"age\": 23,\r\n            \"relationship\": \"vrelacion character varying\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"name\":\"vnombre character varying\",\r\n  \"position\":\"vcargo character varying\",\r\n  \"birthDate\":\"1998-08-17\",\r\n  \"age\":23,\r\n  \"relationship\":\"vrelacion character varying\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"managementRIdentification\":10,\r\n  \"name\":\"vnombre character varying\",\r\n  \"position\":\"vcargo character varying\",\r\n  \"birthDate\":\"1998-08-17\",\r\n  \"age\":23,\r\n  \"relationship\":\"vrelacion character varying\",\r\n  \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelevoGeneracional(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n    \"managementRIdentification\":10\r\n}*/\r\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionRelevoGeneracional(data) {\r\n    try {\r\n      /*{    \r\n    \"transactId\":1,\r\n    \"observations\":\"ncn\",\r\n    \"status\":true,\r\n    \"date\":\"2022-01-14\"    \t\r\n}*/\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        data[\"date\"] = moment().format(\"YYYY-MM-DD\");\r\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionRelevoGeneracional(transactId) {\r\n    try {\r\n     \r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n       /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 200,\r\n        \"observations\": \"ncn\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-14\"\r\n    }\r\n} */\r\n\r\nreturn result.getManagementRelaysInfoResponseDTO.observations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR Flujo Operativo///////\r\n  async guardarFlujoOperativo(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\":\"8\",\r\n\"observations\":\"ee445\",\r\n\"infoDate\":\"2021-12-10\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFlujoOperativo(transactId) {\r\n    try {\r\n      //vidtramite=44&vidproceso=5&vidactividad=1\r\n      var params = { vidtramite: transactId, vidproceso: opt.PROCESS_INFORMEGESTION, vidactividad: opt.ACT_FLUJOOPERATIVO }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 199,\r\n    \"observations\": \"prueba\",\r\n    \"infoDate\": \"2021-12-29\",\r\n    \"status\": true,\r\n    \"attachments\": []}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - EMPRESAS RELACIONADAS///////\r\n  async consultarDatosEmpresaRelacionada(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"observations\": \"tets\",\r\n    \"date\": \"2022-01-24\",\r\n    \"estado\": true,\r\n    \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"companyId\": 11\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async actualizarEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"trasactId\":1,\r\n    \"companyId\":15,\r\n    \"name\":\"maicol up\",\r\n    \"activity\":\"actividad up\",\r\n    \"sectorExperience\":10,\r\n    \"relationship\":\"relaciona up\",\r\n    \"status\":true\r\n}*/\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async eliminarEmpresaRelacionada(data) {\r\n    try {\r\n      /*trasactId:101,companyId:11 */\r\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionEmpresaRelacionada(data) {\r\n    try {\r\n      data = {\r\n        \"trasactId\": data.trasactId,\r\n        \"description\": data.observations\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN CLIENTE ///////\r\n  async consultarListaClientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":104,    \r\n    \"name\":\"enrique5\",\r\n    \"country\":\"pana\",\r\n    \"salePercentage\":75.55,\r\n    \"customerType\":\"cred\",\r\n    \"salesType\":\"cred\", \r\n    \"delayReason\":\"cred\",\t\r\n    \"termDays\":90\r\n}\r\n \r\n      */\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"customerInfoId\": 14,\r\n    \"name\": \"enrique5\",\r\n    \"country\": \"pana\",\r\n    \"salePercentage\": 75.55,\r\n    \"customerType\": \"cred\",\r\n    \"salesType\": \"cred\",\r\n    \"delayReason\": \"cred\",\r\n    \"termDays\": 90,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_INFOCLIENTE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarClienteIGR(data) {\r\n    try {\r\n      /*transactId:101,customerIdentification:2 */\r\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionClienteIGR(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"description\": \"ddd\",\r\n    \"seasonalSales\": false,\r\n    \"percSeasonalPeriodSales\": 0.5,\r\n    \"dateInformation\": \"2022-01-14\"\r\n}*/\r\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionClienteIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n    }\r\n}\r\n      */\r\n\r\n      return result.clientSectionCompaniesDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN PROVEEOR ///////\r\n  async consultarListaProveedoresIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\r\n      /**/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"name\": \"Provedor de prueba\",\r\n    \"oldRelationship\": 2,\r\n    \"percentPurchases\": 2.35788,\r\n    \"creditDays\": 30,\r\n    \"negotiationConditions\": \"prueba de negociacion\",\r\n    \"country\": \"panama\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 11,\r\n    \"providerId\": 1,\r\n    \"name\": \"provedor actualizado\",\r\n    \"oldRelationship\": 52,\r\n    \"percentPurchases\": 30.255,\r\n    \"creditDays\": 20,\r\n    \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n    \"country\": \"colombia\",\r\n    \"status\": false\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarProveedorIGR(data) {\r\n    try {\r\n      /*transactId:101,vidproveedor:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionProveedorIGR(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\": 1,\r\n  \"description\": \"descripcion text\",\r\n  \"purchasingCycle\": \"ciclocompras character varying\"\r\n}*/\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionProveedorIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.suppliersList;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN RECIPROCIDAD ///////\r\n  async consultarListaReciprocidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\r\n      /*{\r\n    \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 108,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"reciprocity_id\":1,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarReciprocidadIGR(data) {\r\n    try {\r\n      /*transactId:101,reciprocityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionReciprocidad(data) {\r\n    try {\r\n      /*{\r\n\"transactId\":4,\r\n\"observations\":\"Cambios\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionReciprocidad(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.observations;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\r\n  async consultarActivosFijosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_FACILIDADACTIVOSFIJOS }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\r\n      /*\r\n      {\r\n    \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"variationsAssets\": null,\r\n    \"variationsAssetsObs\": null,\r\n    \"manufacturingAgroCompanies\": null,\r\n    \"productionLine\": null,\r\n    \"capacity\": null,\r\n    \"usedCapacity\": null,\r\n    \"tradingCompany\": null,\r\n    \"warehouseCapacity\": null,\r\n    \"transportDistributionFleet\": null,\r\n    \"units\": null,\r\n    \"renovation\": null,\r\n    \"status\": null,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\":0.00,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"facilityAssetId\":2,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\": 10.55,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3,\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarActivosFijosIGR(data) {\r\n    try {\r\n      /*transactId:101,fixedAssetId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"variationsAssets\": true,\r\n    \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n    \"manufacturingAgroCompanies\": true,\r\n    \"productionLine\": \"vlineaproduccion\",\r\n    \"capacity\": \"vcapacidad\",\r\n    \"usedCapacity\": \"vcapacidadutilizada\",\r\n    \"tradingCompany\": true,\r\n    \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n    \"transportDistributionFleet\": true,\r\n    \"units\": \"vunidades\",\r\n    \"renovation\": \"vrenovacion\",\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - INFORMACIóN SEGUROS ///////\r\n  async consultarSegurosEmpresaIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result.companyInsurance;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"company\":\"Comision\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-30\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"insuranceId\":1,\r\n    \"company\":\"Company\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-27\",\r\n    \"status\":\"true\"\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSegurosEmpresaIGR(data) {\r\n    try {\r\n      /*transactId:101,InsuranceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\r\n  async guardarArquitecturaEmpresarialIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\": 101,\r\n  \"ticCompanyUse\":\"Ganaderia\",\r\n  \"auditedAreas\":\"Santander\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode !== \"200\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarArquitecturaEmpresarialIGR(transactId) {\r\n    try {\r\n\r\n      var params = { vidtramite: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_ARQUITECTURAEMPRESARIAL }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n  \"ticCompanyUse\": \"Ganaderia\",\r\n  \"auditedAreas\": \"Santander\",\r\n  \"status\": true,\r\n  \"attachments\": []\r\n}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - COMPERTIDORES DEL MERCADO ///////\r\n  async consultarCompetidores(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\r\n\r\n      /*{\r\n    \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n    \"competitorId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\",\r\n    \"status\":true\r\n      }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n    }\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":4,\r\n    \"competitorId\":8,\r\n    \"name\":\"CARRERA\",\r\n    \"description\":\"LISTA CARRERA\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCompetidorIGR(data) {\r\n    try {\r\n      /*transactId:101,competitorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - PROYECCIONES ///////\r\n  async consultarProyecciones(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarProyecciones(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":1,\r\n\"descripcion\":\"gggsgsgsgsgs\",\r\n\"assetsOperatingAmount\":3,\r\n\"assetsOperatingReason\":\"jhfjshdhshd\",\r\n\"fixedAssetsAmount\":3,\r\n\"fixedAssetsReason\":\"jhfjshdhshd\",\r\n\"othersAssetsAmount\":3,\r\n\"othersAssetsReason\":\"jhfjshdhshd\",\r\n\"bankAmount\":3,\r\n\"bankReason\":\"jhfjshdhshd\",\r\n\"providersAmount\":3,\r\n\"providersReason\":\"jhfjshdhshd\",\r\n\"capitalAmount\":3,\r\n\"capitalReason\":\"jhfjshdhshd\",\r\n\"maximodeuda\":3,\r\n\"estimatedDate\":\"2022-01-15\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACION GARANTES///////\r\n  async consultarGarantes(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n\r\n      */\r\n      return result.guarantors;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api ConsultarGarantes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarante(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 1,\r\n  \"documentType\": \"CED\",\r\n  \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n  \"isGuarantor\": true,\r\n  \"name\": \"vnombre character varying\",\r\n  \"secondName\": \"vsegnombre character varying\",\r\n  \"lastName\": \"vapellido character varying\",\r\n  \"secondLastName\": \"vsegapellido character varying\",\r\n  \"guarantorRelationship\": \"vrelaciongarante text\",\r\n  \"origin\": \"vprocedenciabien text\",\r\n  \"guarantorCommitment\": \"vcompromisogarante text\",\r\n  \"warrantyReason\": \"vrazongarantia text\"\r\n}\r\n      */\r\n\r\n      return await this.post(url.URL_BACKEND_GARANTES, data);\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarante(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"guarantorId\": 1,\r\n    \"documentType\": \"vtipodocumento up\",\r\n    \"guarantorDocument\": \"vdocumentogarante up\",\r\n    \"isGuarantor\": true,\r\n    \"name\": \"vnombre up\",\r\n    \"secondName\": \"vsegnombre up\",\r\n    \"lastName\": \"vapellido up\",\r\n    \"secondLastName\": \"vsegapellido up\",\r\n    \"guarantorRelationship\": \"vrelaciongarante up\",\r\n    \"origin\": \"vprocedenciabien up\",\r\n    \"guarantorCommitment\": \"vcompromisogarante up\",\r\n    \"warrantyReason\": \"vrazongarantia up\",\r\n    \"date\": \"2022-01-18\",\r\n    \"status\": true}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n      return await this.put(url.URL_BACKEND_GARANTES, data);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarante(data) {\r\n    try {\r\n      /*transactId:101,guarantorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW ACTUAL ///////\r\n  async consultarSowActualIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data.status = true;\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowActualIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW PROPUESTO ///////\r\n  async consultarSowPropuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowPropuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowPropuestoIGR(data) {\r\n    try {\r\n      data.status=true;\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowPropuestoIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - ASPECTOS AMBIENTALES///////\r\n  async consultarAspectosAmbientalesIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarAspectosAmbientales: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarAspectosAmbientalesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\r\n  async consultarRelacionesBancariasDeudasCP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n      /*transactId:101,debtId:1 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\r\n  async consultarRelacionesBancariasDeudasLP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n      /*transactId:101,debtId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARIAS SECCION///////\r\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRelacionesBancariasSeccionIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - DOLLAR ///////\r\n  async consultarFlujoCajaDollar(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\r\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaDollar(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDolarId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\r\n  async consultarFlujoCajaServicioDeudas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n    }\r\n\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDebtServiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - EGRESOS ///////\r\n  async consultarFlujoCajaEgresos(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\r\n      /*{\r\n\r\n      {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaEgresos(data) {\r\n    try {\r\n      /*transactId:101,cashFlowOutcomeId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data);\r\n      //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\r\n  async consultarFlujoCajaCargaTrabajo(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\r\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n      /*transactId:101,cashFlowWorkloadId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - INGRESOS ///////\r\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n      /*transactId:101,cashFlowInvoiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - COBRANZAS ///////\r\n  async consultarFlujoCajaCobranzas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\r\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCobranzas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowCollectiond:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - MOVIMIENTOS DE CUENTAS ///////\r\n  async consultarMovimientosCuentasIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.movements;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":1,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":109,\r\n\"movementId\":12,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMovimientosCuentasIGR(data) {\r\n    try {\r\n      /*transactId:101,movementId:12 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionMovimientosCuentas(data) {\r\n    try {\r\n      /*{\r\n\"trasactId\":101,\r\n\"observations\":\"test\"\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionMovimientosCuentas(transactId) {\r\n    try {\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\r\n\r\n      return result.movements[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CUENTAS POR COBRAR ///////\r\n  async consultarCuentasCobrarIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_CUENTASPORCOBRAR }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\r\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result.accountsReceivable;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCuentasCobrarIGR(data) {\r\n    try {\r\n      /*data={transactId:101,accountReceivableId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX ///////\r\n  async consultarCapexIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\r\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX PRESUPUESTO ///////\r\n  async consultarCapexPresupuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexPresupuestoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX DETALLES PROYECTO ///////\r\n  async consultarCapexDetalleProyectoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexDetailsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RECOMENDACIONES ///////\r\n  async consultarRecomendacionesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\r\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRecomendacionesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n      }\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - MATRIZ OTROS BANCOS ///////\r\n  async consultarMatrizOtrosBancosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\r\n      /*{\r\n    \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"otherBankId\":1,\r\n  \"bank\": \"BANESCO PANAMA\",\r\n  \"passivePercentage\":3.5,\r\n  \"participation\":5.2,\r\n  \"longTerm\":1.200,\r\n  \"shortTerm\":600,\r\n  \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n      /*transactId:101,otherBankId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizExpedientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\r\n      /*{\r\n    \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n     {\r\n\"transactId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"filesId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizExpedientesIGR(data) {\r\n    try {\r\n      /*transactId:101,filesId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizNuevosNegociosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\r\n      /*{\r\n    \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":101,\r\n\"businessType\": {\r\n\"code\":\"Papeleria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Bueno\",\r\n\"observations\":\"Ventas productos oficina\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":2,\r\n\"newBusinessId\":2,\r\n\"businessType\": {\r\n\"code\":\"Cigarreria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Excelente\",\r\n\"observations\":\"Ventas productos canasta familiar\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n      /*transactId:101,newBusinessId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizRentabilidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\r\n      /*{\r\n    \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Otros Bancos\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 50.000\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"profitabilityId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Nuevo negocio\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 500.000,\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizRentabilidadIGR(data) {\r\n    try {\r\n      /*transactId:101,profitabilityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarMatrizSeccionIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"observations\": \"Observacion\"}\r\n */\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      //OK\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}*/\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarMatrizSeccionIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\r\n      /*\r\n            {\r\n    \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.competitiveMatrix[0];\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizPosicionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      return result.positions;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"positionId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,positionId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n    ]\r\n}*/\r\n      return result.transactionals;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"transactionalId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,transactionalId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR NEGOCIOS A OBTENER///////\r\n  async guardarNegocioObtenerIGR(data) {\r\n    try {\r\n      /*\r\n  {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n  }\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarNegocioObtenerIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\r\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////BUSQUEDA y DESCARTE///////\r\n  async guardarBusquedaDescarte(data) {\r\n    try {\r\n      var model = BusquedaDescarteModel.getSaveModel(data);\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n\r\n        //rutima para actualizar aun no existe\r\n\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarBusquedaDescarte(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_BUSQUEDADESCARTE, activityId: opt.ACT_NONE }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\r\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\r\n      if (result.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////// USUARIO PROSPECTO ////////////\r\n  async guardarUsuarioProspecto(data) {\r\n    let result = undefined;\r\n    try {\r\n\r\n      //Actualizar\r\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\r\n        var userModel = UsuarioProspectoModel.getUpdateModel(data);\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.statusCode === \"200\") {\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      else { //Nuevo\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n        console.log(\"guardarUsuarioProspecto\", userModel);\r\n        //Guardamos Nuevo Usuario Prospecto\r\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.status.statusCode === \"200\") {\r\n          return result;\r\n        }\r\n      }\r\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n\r\n        data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      */\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarUsuarioProspecto: \", err);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  async consultarUsuarioProspecto(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\r\n      /*\r\n            {\r\n    \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\n      return result.costumer[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarCumplimiento(data) {\r\n    try {\r\n\r\n      var model = {\r\n        transactId: data.transactId,\r\n        compliance: true,\r\n        observations: data.observationsSearchDiscard,\r\n        approved: true,\r\n        observationsComp: data.observationsComp\r\n      }\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarCumplimiento\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////////////////////////////////////\r\n  async consultarTramiteInbox(username) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { responsible: username }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\r\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async actualizarTramiteInbox(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":\"8\",\r\n  \"instanceId\":1,\r\n  \"customerId\":3,\r\n  \"currentProcess\":5,\r\n  \"nextprocess\":6,\r\n  \"responsible\":\"userTest\",\r\n  \"date\":\"2021-12-10\",\r\n  \"status\":true,\r\n  \"requestId\":3\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n\r\n\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusion() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarListaExclusion(transaccionId, exclusionId) {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    try {\r\n      let data = {\r\n        \"transactId\": transaccionId,\r\n        \"exclusionCatListId\": exclusionId\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.err(\"api guardarListaExclusion\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusionMarcada(params) {\r\n    var data = qs.stringify(params);\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\r\n  }\r\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\r\n    try {\r\n      var data = { transactId: transactId, exclusionId: exclusionId };\r\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarListaExclusionMarcada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\r\n  async nuevoDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"customerNumber\":\"123\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n    \"economicGroupName\":\"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1.55,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2021-12-20\",\r\n    \"lastRequestDate\":\"2021-10-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ682022\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      // if (result.statusCode === \"200\") {\r\n\r\n      //   //Nota: Actualizar Variable en BPM de requestId\r\n      //   return result;\r\n      // }\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"requestId\":\"XYZ682022\",\r\n    \"customerNumber\":\"1\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n     \"economicGroupName\": \"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca-cambio\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2022-01-20\",\r\n    \"lastRequestDate\":\"2022-01-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\",\r\n    \"status\":true,\r\n    \"date\":\"2022-01-20\"\r\n}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesPropCred(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\r\n      /*\r\n            {\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n    ]\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.data;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FACILIDAD ///////\r\n  async nuevoFacilidadPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"cr\": \"\",\r\n    \"amount\": 22.5,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilityId\": 5\r\n} */\r\n      return result.facilityId;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFacilidadPropCred(data) {\r\n    try {\r\n      data.facilityId = 12;\r\n      data.requestId = \"XYZ892022\";\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n    \"cr\": \"\",\r\n    \"amount\": 22.4,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFacilidadPropCred(facilityId, requestId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { facilityId: facilityId, requestId: requestId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\r\n      /*\r\n            const json ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n    }\r\n}\r\n            */\r\n      return result.facilitiesDetailDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - DESEMBOLSO///////\r\n  async consultarListaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\r\n\r\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\r\n\r\n      return result.disbursements;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":\"2\",\r\n    \"disbursementTypeId\":\"disbursementTypeId2\",\r\n    \"observations\":\"observations2\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"disbursementTypeId\":\"update2\",\r\n    \"observations\":\"updated obs\",\r\n    \"status\":true,\r\n    \"disbursementId\":2\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementId: disbursementId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\r\n  async consultarListaProgramaPagoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n    ]\r\n}*/\r\n      return result.paymentProgramDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\"    \r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"paymentProgramId\": \"5\"\r\n}*/\r\n      if (result.serviceResponseTO.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\",\r\n    \"paymentProgramId\":5, \r\n    \"status\":true\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\r\n    try {\r\n      var data = { facilityId: facilityId, paymentProgramId: paymentProgramId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - COMISION///////\r\n  async consultarComisionPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\r\n\r\n      /*{\r\n    \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.commission;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":2,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\",\r\n    \"status\":true,\r\n    \"commissionId\":14\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarComisionPropCred(facilityId, commissionId) {\r\n    try {\r\n      var data = { facilityId: facilityId, commissionId: commissionId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\r\n  async consultarFormaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n    \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n} */\r\n      return result.disbursementForm;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\": \"2\",\r\n    \"typedistrenchment\":\"tipodesembolso \",\r\n    \"description\":\"description ingreso\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\":2,\r\n    \"typedistrenchment\":\"tipodesembolso\",\r\n    \"description\":\"description actualizada\",\r\n    \"status\":true,\r\n    \"disbursementid\":1\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementFormId: disbursementFormId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - GARANTIA///////\r\n  async consultarGarantiaPropCred(facilityId) {\r\n    try {\r\n      var params = { requestId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\r\n\r\n      /*{\r\n    \"requestId\": \"2\",\r\n    \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result.guarantees;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n    }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"guaranteeId\": 1,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"requestId\": 2,\r\n    \"guaranteeId\": 1,\r\n    \"guaranteeTypeName\": \"2\",\r\n    \"commercialValue\": 655,\r\n    \"fastValue\": 800,\r\n    \"observations\": \"observacion prueba\",\r\n    \"ltv\": 700,\r\n    \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n    \"signature\": \"firma prueba actualizada\",\r\n    \"trustNumber\": \"numero nose como es \",\r\n    \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n    \"status\": false\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\r\n    try {\r\n      var data = { requestId: facilityId, guaranteeId: guaranteeId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FIANZAS///////\r\n  async consultarFianzaPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\r\n\r\n      /*{\r\n    \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n      return result.bails;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n  }\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFianzaPropCred(facilityId, idBail) {\r\n    try {\r\n      var data = { facilityId: facilityId, idBail: idBail };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  /////ANALISIS DE CREDITO //////\r\n  ///////////////////////////////\r\n  //Balance Pasivo\r\n  async checkBalancePassiveAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\r\n\r\n      /*\r\n     {\r\n    \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result.passiveCapitalBalance;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":4,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2018,\r\n\"year2\": 2019,\r\n\"year3\": 2020,\r\n\"year4\": 2021,\r\n\"presentYear\":2022\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":2,\r\n\"itemPassiveId\":2,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2017,\r\n\"year2\": 2018,\r\n\"year3\": 2019,\r\n\"year4\": 2020,\r\n\"presentYear\":2021,\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\r\n    try {\r\n      var data = { transactId: transactId, itemPassiveId: itemPassiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async queryStateOriginApplicationsAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\r\n\r\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n\r\n      return result.sourceApplicationsStates;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 1,\r\n    \"sourceApplicationItemId\": 4,\r\n    \"sourceApplicationItem\": \"origen 2up\",\r\n    \"year1\": 55,\r\n    \"year2\": 66,\r\n    \"year3\": 77,\r\n    \"year4\": 88,\r\n    \"presentYear\": 99,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\r\n    try {\r\n      var data = { transactId: transactId, sourceApplicationItemId: sourceApplicationItemId };\r\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async checkActiveBalanceAC(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n    ]\r\n} */\r\n\r\n\r\n\r\n      return result.activeBalances;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async newActiveBalanceAC (data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async updateActiveBalanceAC(data) {\r\n    try {\r\n\r\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\r\n    try {\r\n      var data = { requestId: transactId, itemActiveId: itemActiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  //Balance Activo\r\nasync queryACIndicator(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"indicatorDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 1,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.55,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.55,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 2,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.56,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.56,\r\n              \"status\": true\r\n          }\r\n      ]\r\n  }*/\r\n      return result.indicatorDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\nasync newACIndicator(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicators\": \"fghf\",\r\n      \"year1\": 0.55,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.55\r\n  }\r\n  \r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarIndicadorAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicatorsId\": 1,\r\n      \"itemIndicators\": \"1111\",\r\n      \"year1\": 0.56,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.56,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarIndicadorAC(transactId, itemIndicatorsId) {\r\n    try {\r\n      var data = { transactId: transactId, itemIndicatorsId: itemIndicatorsId };\r\n      var result = await this.del(url.URL_BACKEND_INDICADORAC + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //POLITICAS DE CREDITOS - INFORME FINANCIERO\r\n  async consultarPoliticaCredito(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\r\n\r\n      /*{\r\n    \"creditPolicy\": [\r\n          {\r\n              \"transactId\": 1,\r\n            \"debtorId\": 7,\r\n            \"itemId\": 1,\r\n            \"parameter\": \"Reglas\",\r\n            \"condition\": \"Restriccion\",\r\n            \"comply\": false,\r\n            \"observations\": \"Politicas de Credito\",\r\n              \"status\": true\r\n          }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n  }*/\r\n\r\nreturn result.creditPolicy;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoPoliticaCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarPoliticaCredito(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\r\n    try {\r\n      var data = { transactId: transactId, debtorId: debtorId, itemId: itemId };\r\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n//INFORMACION FINANCIERA - INFORME FINANCIERO\r\nasync consultarInformiacionFinancieraFiadores(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_INFOFINANCIERA + \"?\" + data);\r\n\r\n    /*{\r\n    \"finantialInfoGuarantor\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"debtorId\": 1,\r\n            \"guarantorId\": 1,\r\n            \"personType\": \"NATURAL\",\r\n            \"identificationType\": \"CEDULA\",\r\n            \"identificationNumber\": \"987654\",\r\n            \"firstName\": \"ANDREA\",\r\n            \"secondName\": \"JOSEFINA\",\r\n            \"firstLastName\": \"VELASQUEZ\",\r\n            \"secondLastName\": \"BARROS\",\r\n            \"share\": 500.000,\r\n            \"activeCash\": 250.000,\r\n            \"activeShares\": 160.000,\r\n            \"passiveLoan\": 50.000,\r\n            \"personalWealth\": 850.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n    \r\nreturn result.finantialInfoGuarantor;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoInformacionFinancieraFiadores(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":2,\r\n\"debtorId\":2,\r\n\"personType\":\"NATURAL\",\r\n\"identificationType\":\"CEDULA\",\r\n\"identificationNumber\":\"987654\",\r\n\"firstName\":\"ANDREA\",\r\n\"secondName\":\"JOSEFINA\",\r\n\"firstLastName\":\"VELASQUEZ\",\r\n\"secondLastName\":\"BARROS\",\r\n\"share\":500.000,\r\n\"activeCash\":250.000,\r\n\"activeShares\":160.000,\r\n\"passiveLoan\":50.000,\r\n\"personalWealth\":850.000\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_INFOFINANCIERA, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarInformacionFinancieraFiadores(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":2,\r\n\"debtorId\":2,\r\n\"guarantorId\":2,\r\n\"personType\":\"NATURAL\",\r\n\"identificationType\":\"CEDULA\",\r\n\"identificationNumber\":\"987654\",\r\n\"firstName\":\"ANDREA\",\r\n\"secondName\":\"JOSEFINA\",\r\n\"firstLastName\":\"VELASQUEZ\",\r\n\"secondLastName\":\"BARROS\",\r\n\"share\":500.000,\r\n\"activeCash\":250.000,\r\n\"activeShares\":160.000,\r\n\"passiveLoan\":50.000,\r\n\"personalWealth\":850.000,\r\n\"status\":true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_INFOFINANCIERA, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarInformacionFinancieraFiadores(transactId, debtorId,guarantorId) {\r\n  try {\r\n    var data = { transactId: transactId, debtorId: debtorId,guarantorId:guarantorId };\r\n    var result = await this.del(url.URL_BACKEND_INFOFINANCIERA  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//INFORMACION FINANCIERA - INFORME FINANCIERO\r\nasync consultarDetalleOpinionRiesgoCredito(transactId) {\r\n  try {\r\n    var params = { requestId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_OPINIONRIESGOCREDITO + \"?\" + data);\r\n\r\n    /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"opinions\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"opinion\": \"opinion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"opinion\": \"opinion\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n    \r\nreturn result.opinions;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoDetalleOpinionRiesgoCredito(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":1,\r\n     \"opinion\":\"opinion\"\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_OPINIONRIESGOCREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarDetalleOpinionRiesgoCredito(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":1,\r\n     \"opinion\":\"opinion-updated\",\r\n     \"status\":true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_OPINIONRIESGOCREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarDetalleOpinionRiesgoCredito(transactId) {\r\n  try {\r\n    var data = { requestId: transactId};\r\n    var result = await this.del(url.URL_BACKEND_OPINIONRIESGOCREDITO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//CONCLUSIONES Y RECOMENDACIONES - INFORME FINANCIERO\r\nasync consultarConclusionesRecomendacionesAnalisisFinanciero(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO + \"?\" + data);\r\n\r\n    /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"conclusionFinantialAnalysisDTOList\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"debtorId\": \"3\",\r\n            \"strengths\": \"13\",\r\n            \"weakness\": \"13\",\r\n            \"conclusion\": \"13\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"debtorId\": \"3\",\r\n            \"strengths\": \"13\",\r\n            \"weakness\": \"13\",\r\n            \"conclusion\": \"13\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n    \r\nreturn result.conclusionFinantialAnalysisDTOList;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoConclusionesRecomendacionesAnalisisFinanciero(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"debtorId\": \"3\",\r\n    \"strengths\": \"13\",\r\n    \"weakness\": \"13\",\r\n    \"conclusion\": \"13\"\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarConclusionesRecomendacionesAnalisisFinanciero(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"debtorId\": \"3\",\r\n    \"strengths\": \"13a\",\r\n    \"weakness\": \"13\",\r\n    \"conclusion\": \"13\",\r\n    \"status\": true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarConclusionesRecomendacionesAnalisisFinanciero(transactId, debtorId) {\r\n  try {\r\n    var data = { requestId: transactId,debtorId:debtorId};\r\n    var result = await this.del(url.URL_BACKEND_CONCLUSIONESRECOMENDACIONESINFORMEFINANCIERO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\r\nasync consultarInformacionRiesgoAmbiental(transactId) {\r\n  try {\r\n    var params = { requestId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_RIESGOAMBIENTALDETALLES + \"?\" + data);\r\n\r\n    /*{\r\n    \"transactId\": 101,\r\n    \"environmentCovenant\": true,\r\n    \"detail\": \"Detalle\",\r\n    \"compliance\": \"Incumplido\",\r\n    \"term\": \"Indefinido\",\r\n    \"detected\": \"Sin detectar\",\r\n    \"recommendations\": \"Recomendar\",\r\n    \"conclusions\": \"Concluido\",\r\n    \"status\": true,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n    \r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoInformacionRiesgoAmbiental(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":101,\r\n\"environmentCovenant\":true, \r\n\"detail\":\"Detalle\", \r\n\"compliance\":\"Incumplido\", \r\n\"term\":\"Indefinido\", \r\n\"detected\":\"Sin detectar\", \r\n\"recommendations\":\"Recomendar\", \r\n\"conclusions\":\"Concluido\"\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarInformacionRiesgoAmbiental(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":101,\r\n\"environmentCovenant\":true, \r\n\"detail\":\"Detalle\", \r\n\"compliance\":\"Incumplido\", \r\n\"term\":\"Indefinido\", \r\n\"detected\":\"Sin detectar\", \r\n\"recommendations\":\"Recomendar\", \r\n\"conclusions\":\"Concluido\"\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_RIESGOAMBIENTALDETALLES, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarInformacionRiesgoAmbiental(transactId) {\r\n  try {\r\n    var data = { transactId: transactId};\r\n    var result = await this.del(url.URL_BACKEND_RIESGOAMBIENTALDETALLES  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//ASPECTOS AMBIENTALES - ASPECTOS AMBIENTALES\r\nasync consultarRiesgoCreditoComercial(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_RIESGOCREDITOS + \"?\" + data);\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"conclusions\": \"Recomendaciones\",\r\n    \"status\": true,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n    \r\nreturn result.generalDataCreditRisk;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoRiesgoCreditoComercial(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":1,\r\n\"conclusions\":\"Recomendaciones\"  \r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_RIESGOCREDITOS, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarRiesgoCreditoComercial(data) {\r\n  try {\r\n\r\n    /*{\r\n\"transactId\":2,\r\n\"conclusions\":\"Recomendaciones\",\r\n\"status\":true  \r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_RIESGOCREDITOS, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarRiesgoCreditoComercial(transactId) {\r\n  try {\r\n    var data = { transactId: transactId};\r\n    var result = await this.del(url.URL_BACKEND_RIESGOCREDITOS  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n//FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\nasync consultarNumeroFideicomiso(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_NUMEROFIDEICOMISO + \"?\" + data);\r\n\r\n    /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"trustInfo\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"trustName\": \"BASA FID 2004\",\r\n            \"trustNumber\": \"2004\",\r\n            \"conclusions\": \"conclusions\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n} */\r\n    \r\nreturn result.trustInfo;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoNumeroFideicomiso(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":\"200\",\r\n    \"conclusions\":\"conclusions\"\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_NUMEROFIDEICOMISO, data);//saveProposalData\r\n    //OK\r\n    /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"trustNumber\": \"2004\",\r\n    \"trustName\": \"BASA FID 2004\"\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarNumeroFideicomiso(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":\"1\",\r\n    \"conclusions\":\"conclusions\",\r\n    \"status\":\"true\"\r\n}\r\n    */\r\n  data[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_NUMEROFIDEICOMISO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarNumeroFideicomiso(transactId) {\r\n  try {\r\n    var data = { requestId: transactId};\r\n    var result = await this.del(url.URL_BACKEND_NUMEROFIDEICOMISO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\nasync consultarListaFideicomitentes(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_FIDEICOMITENTES + \"?\" + data);\r\n\r\n    /*{\r\n    \"trustors\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"trustorId\": 3,\r\n            \"name\": \"maicol\",\r\n            \"address\": \"nuevo san juan\",\r\n            \"email\": \"igomez@soaint.com\",\r\n            \"telephone\": 6666666,\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"trustorId\": 4,\r\n            \"name\": \"maicol\",\r\n            \"address\": \"nuevo san juan\",\r\n            \"email\": \"igomez@soaint.com\",\r\n            \"telephone\": 6666666,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n} */\r\n    \r\nreturn result.trustors;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevaListaFideicomitentes(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":1,\r\n    \"name\":\"maicol\",\r\n    \"address\":\"nuevo san juan\",\r\n    \"email\":\"igomez@soaint.com\",\r\n    \"telephone\":6666666\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_FIDEICOMITENTES, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarListaFideicomitentes(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":1,\r\n    \"trustorId\":3,\r\n    \"name\":\"maicol\",\r\n    \"address\":\"nuevo san juan\",\r\n    \"email\":\"igomez@soaint.com\",\r\n    \"telephone\":6666666,\r\n    \"status\":true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_FIDEICOMITENTES, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarListaFideicomitentes(transactId,trustorId) {\r\n  try {\r\n    var data = { transactId: transactId,trustorId:trustorId};\r\n    var result = await this.del(url.URL_BACKEND_FIDEICOMITENTES  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\nasync consultarTipoFiduciarioYOtrosDatos(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS + \"?\" + data);\r\n\r\n    /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"finantialCommissionDTO\": {\r\n        \"transactId\": 101,\r\n        \"structuring\": \"t2\",\r\n        \"facilityType\": \"t2\",\r\n        \"creditLineRot\": \"t2\",\r\n        \"creditLineNoRot\": \"t2\",\r\n        \"declineLoan\": \"t2\",\r\n        \"status\": true\r\n    }\r\n}*/\r\n    \r\nreturn result.finantialCommissionDTO;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync guardarTipoFiduciarioYOtrosDatos(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 101,\r\n    \"structuring\": \"t2\",\r\n    \"facilityType\": \"t2\",\r\n    \"creditLineRot\": \"t2\",\r\n    \"creditLineNoRot\": \"t2\",\r\n    \"declineLoan\": \"t2\",\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);//saveProposalData\r\n\r\n    if(result.statusCode===500){\r\n      data[\"status\"] = true;\r\n      result = await this.put(url.URL_BACKEND_FIDUCIARIAOTROSBANCOS, data);\r\n    }\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//FIDEICOMISO - GENERAR NUMERO DE FIDEICOMISO\r\nasync consultarListaBeneficiarioSecundario(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_BEENFICIARIOSECUNDARIO + \"?\" + data);\r\n\r\n    /*{\r\n    \"beneficiaries\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"beneficiaryId\": 5,\r\n            \"firstName\": \"Maicol\",\r\n            \"secondName\": \"Israel\",\r\n            \"firstLastName\": \"nombre 2 \",\r\n            \"secondLastName\": \"apellido 2\",\r\n            \"nationality\": \"CUBA\",\r\n            \"personType\": \"N\",\r\n            \"documentType\": \"PA\",\r\n            \"documentNumber\": \"KDKDKDLDDD\",\r\n            \"address\": \"JDJDJD\",\r\n            \"telephone\": \"JDDJDJDJ\",\r\n            \"relationship\": \"DKDKDK\",\r\n            \"percentage\": 5.99,\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"beneficiaryId\": 2,\r\n            \"firstName\": \"Maicol\",\r\n            \"secondName\": \"Israel\",\r\n            \"firstLastName\": \"nombre 2 \",\r\n            \"secondLastName\": \"apellido 2\",\r\n            \"nationality\": \"CUBA\",\r\n            \"personType\": \"N\",\r\n            \"documentType\": \"PA\",\r\n            \"documentNumber\": \"KDKDKDLDDD\",\r\n            \"address\": \"JDJDJD\",\r\n            \"telephone\": \"JDDJDJDJ\",\r\n            \"relationship\": \"DKDKDK\",\r\n            \"percentage\": 5.99,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n} */\r\n    \r\nreturn result.beneficiaries;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevaListaBeneficiarioSecundario(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":101,\r\n    \"firstName\":\"Maicol\",\r\n    \"secondName\":\"Israel\",\r\n    \"firstLastName\":\"nombre 2 \",\r\n    \"secondLastName\":\"apellido 2\",\r\n    \"nationality\":\"CUBA\",\r\n    \"personType\":\"N\",\r\n    \"documentType\":\"PA\",\r\n    \"documentNumber\":\"KDKDKDLDDD\",\r\n    \"address\":\"JDJDJD\",\r\n    \"telephone\":\"JDDJDJDJ\",\r\n    \"relationship\":\"DKDKDK\",\r\n    \"percentage\":5.99\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarListaBeneficiarioSecundario(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\":101,\r\n    \"beneficiaryId\":2,\r\n    \"firstName\":\"Maicol\",\r\n    \"secondName\":\"Israel\",\r\n    \"firstLastName\":\"nombre 2 \",\r\n    \"secondLastName\":\"apellido 2\",\r\n    \"nationality\":\"CUBA\",\r\n    \"personType\":\"N\",\r\n    \"documentType\":\"PA\",\r\n    \"documentNumber\":\"KDKDKDLDDD\",\r\n    \"address\":\"JDJDJD\",\r\n    \"telephone\":\"JDDJDJDJ\",\r\n    \"relationship\":\"DKDKDK\",\r\n    \"percentage\":5.99,\r\n    \"status\":true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_BEENFICIARIOSECUNDARIO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarListaBeneficiarioSecundario(transactId,beneficiaryId) {\r\n  try {\r\n    var data = { transactId: transactId,beneficiaryId:beneficiaryId};\r\n    var result = await this.del(url.URL_BACKEND_BEENFICIARIOSECUNDARIO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n//SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\r\nasync consultarSeccionServiciosFiduciario(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_SERVICIOSFIDUCIARIOS + \"?\" + data);\r\n\r\n    /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"fiduciaryServicesDTOS\": {\r\n        \"transactId\": 1,\r\n        \"guaranteetrust\": 32.3,\r\n        \"administrationTrust\": 23.1,\r\n        \"investmentTrust\": 1.1,\r\n        \"stateTrust\": 22.0,\r\n        \"scrowAccount\": 345.0,\r\n        \"description\": \"dsadsad\",\r\n        \"others\": 12.3,\r\n        \"status\": true\r\n    }\r\n}*/\r\n    \r\nreturn result.fiduciaryServicesDTOS;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync guardarSeccionServiciosFiduciario(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"guaranteetrust\": 32.3,\r\n    \"administrationTrust\": 23.1,\r\n    \"investmentTrust\": 1.1,\r\n    \"stateTrust\": 22,\r\n    \"scrowAccount\": 345,\r\n    \"description\": \"dsadsad\",\r\n    \"others\": \"12.3\",\r\n    \"status\": true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);//saveProposalData\r\n\r\n    if(result.statusCode===500){\r\n      data[\"status\"] = true;\r\n      result = await this.put(url.URL_BACKEND_SERVICIOSFIDUCIARIOS, data);\r\n    }\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//SERVICIO FIDUCIARIOS - SECCION SERVICIOS FIDUCIARIOS\r\nasync consultarSeccionOtrosServiciosFiduciario(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS + \"?\" + data);\r\n\r\n    /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"otherFiduciaryServicesDTO\": {\r\n        \"transactId\": 1,\r\n        \"proposal\": 12.6,\r\n        \"purpose\": \"rer\",\r\n        \"fixedActiveType\": \"sasa\",\r\n        \"description\": \"dsadsad\",\r\n        \"structureCommission\": 23.1,\r\n        \"administrationCommision\": 1.1,\r\n        \"term\": \"rere\",\r\n        \"paymentType\": \"sasa\",\r\n        \"others\": \"1.3\",\r\n        \"status\": true\r\n    }\r\n}*/\r\n    \r\nreturn result.otherFiduciaryServicesDTO;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync guardarSeccionOtrosServiciosFiduciario(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"proposal\": 12.6,\r\n    \"purpose\": \"rer\",\r\n    \"fixedActiveType\": \"sasa\",\r\n    \"description\": \"dsadsad\",\r\n    \"structureCommission\": 23.1,\r\n    \"administrationCommision\": 1.1,\r\n    \"term\": \"rere\",\r\n    \"paymentType\": \"sasa\",\r\n    \"others\": \"1.3\",\r\n    \"status\": true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);//saveProposalData\r\n\r\n    if(result.statusCode===500){\r\n      data[\"status\"] = true;\r\n      result = await this.put(url.URL_BACKEND_OTROSSERVICIOSFIDUCIARIOS, data);\r\n    }\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//DOCUMENTACION LEGAL - DOCUMENTACION LEGAL\r\nasync consultarDocumentacionLegal(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_DOCUMENTACIONLEGAL + \"?\" + data);\r\n\r\n    /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"legalDocumentations\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"legalDocumentationId\": 1,\r\n            \"rotary\": false,\r\n            \"commercialLoan\": true,\r\n            \"multipleRotary\": true,\r\n            \"rotaryNumber\": true,\r\n            \"overdraft\": true,\r\n            \"transfer\": true,\r\n            \"bail\": true,\r\n            \"trust\": true,\r\n            \"agroPawn\": true,\r\n            \"naturalBail\": true,\r\n            \"legalBail\": true,\r\n            \"crossedLegalBail\": true,\r\n            \"crossedNaturalBail\": true,\r\n            \"promiseLetter\": true,\r\n            \"privateRecord\": true,\r\n            \"trustRecord\": true,\r\n            \"loanGuarantees\": true,\r\n            \"fiduciaryLine\": true,\r\n            \"prefinanced\": true,\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n    \r\nreturn result.legalDocumentations;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoDocumentacionLegal(data) {\r\n  try {\r\n\r\n    /*{\r\n \"transactId\":1,\r\n   \"rotary\":false,\r\n   \"commercialLoan\":true,\r\n   \"multipleRotary\":true,\r\n   \"rotaryNumber\":true,\r\n     \"overdraft\":true,\r\n     \"transfer\":true,\r\n     \"bail\":true,\r\n     \"trust\":true,\r\n\"agroPawn\":true,\r\n\"naturalBail\":true,\r\n\"legalBail\":true, \r\n\"crossedLegalBail\":true,\r\n\"crossedNaturalBail\":true,\r\n\"promiseLetter\":true,\r\n\"privateRecord\":true,\r\n\"trustRecord\":true,\r\n\"loanGuarantees\":true,\r\n\"fiduciaryLine\":true,\r\n\"prefinanced\":true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_DOCUMENTACIONLEGAL, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarDocumentacionLegal(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"legalDocumentationId\":1,\r\n \"transactId\":1,\r\n   \"rotary\":false,\r\n   \"commercialLoan\":true,\r\n   \"multipleRotary\":true,\r\n   \"rotaryNumber\":true,\r\n     \"overdraft\":true,\r\n     \"transfer\":true,\r\n     \"bail\":true,\r\n     \"trust\":true,\r\n\"agroPawn\":true,\r\n\"naturalBail\":true,\r\n\"legalBail\":true, \r\n\"crossedLegalBail\":true,\r\n\"crossedNaturalBail\":true,\r\n\"promiseLetter\":true,\r\n\"privateRecord\":true,\r\n\"trustRecord\":true,\r\n\"loanGuarantees\":true,\r\n\"fiduciaryLine\":true,\r\n\"prefinanced\":true,\r\n\"status\":true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_DOCUMENTACIONLEGAL, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarDocumentacionLegal(transactId,legalDocumentationId) {\r\n  try {\r\n    var data = { requestId: transactId,legalDocumentationId:legalDocumentationId};\r\n    var result = await this.del(url.URL_BACKEND_DOCUMENTACIONLEGAL  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarInformacionFinancieraFiadores: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//DESEMBOLSO - DATOS GENERALES\r\nasync consultarDatosGeneralesDesembolso(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_DESEMBOLSODATOSGENERALES + \"?\" + data);\r\n\r\n    /*{\r\n    \"subproduct\": \"vsubproducto character varying\",\r\n    \"line\": \"vnlinea character varying\",\r\n    \"masterLine\": \"vnlineamaster character varying\",\r\n    \"customerLine\": \"vnlineacliente character varying\",\r\n    \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n    \"amount\": 99.68,\r\n    \"interestRate\": 5.99,\r\n    \"savingDpf\": \"vdpfnahorro character varying\",\r\n    \"van\": \"van character varying\",\r\n    \"date\": true,\r\n    \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n    \"debitAccount\": \"vncuentadebitar character varying\",\r\n    \"nameOf\": \"vanombrede character varying\",\r\n    \"monthlyFee\": true,\r\n    \"commissionFid\": true,\r\n    \"itbmIncluded\": true,\r\n    \"commissionFwla\": true,\r\n    \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n    \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n    \"status\": true,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n    \r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync guardarDatosGeneralesDesembolso(data) {\r\n  try {\r\n\r\n    /*{\r\n  \"transactId\": 101,\r\n  \"branch\": \"vsucursal character varying\",\r\n  \"loan\": \"vnprestamo character varying\",\r\n  \"product\": \"vproducto character varying\",\r\n  \"subproduct\": \"vsubproducto character varying\",\r\n  \"line\": \"vnlinea character varying\",\r\n  \"masterLine\": \"vnlineamaster character varying\",\r\n  \"customerLine\": \"vnlineacliente character varying\",\r\n  \"afiRequest\": \"vnsolicitudsafi character varying\",\r\n  \"amount\": 99.68,\r\n  \"interestRate\": 5.99,\r\n  \"savingDpf\": \"vdpfnahorro character varying\",\r\n  \"van\": \"van character varying\",\r\n  \"date\": true,\r\n  \"disbursementTerm\": \"vplazodesembolso character varying\",\r\n  \"debitAccount\": \"vncuentadebitar character varying\",\r\n  \"nameOf\": \"vanombrede character varying\",\r\n  \"monthlyFee\": true,\r\n  \"commissionFid\": true,\r\n  \"itbmIncluded\": true,\r\n  \"commissionFwla\": true,\r\n  \"interestPaymentCycle\": \"vciclopagoint character varying\",\r\n  \"capitalPaymentCycle\": \"vciclopagocap character varying\",\r\n  \"status\":true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);//saveProposalData\r\n    if(result.statusCode === 500){\r\n      data[\"status\"]=true;\r\n      result = await this.put(url.URL_BACKEND_DESEMBOLSODATOSGENERALES, data);\r\n    }\r\n\r\n     \r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n\r\n  ///////////// CATALOGOS //////////////////////\r\n  /////////////////////////////////////////\r\n\r\n  //LISTA DE TIPO DE IDENTIFICACION\r\n  async consultarCatalogoTipoPersona() {\r\n    try {      \r\n        var data = [{label:\"Natural\",code:1},{label:\"Juridíca\",code:2}];\r\n        return data;\r\n    }\r\n    catch (err) {\r\n      console.error(\"error consultarCatalogoTipoPersona: \", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //LISTA DE TIPO DE IDENTIFICACION\r\n  async consultarCatalogoTipoIdentificacion() {\r\n    try {\r\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\r\n\r\n      /*\r\n      \"status\": {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n},\r\n\"identificationType\": [\r\n    {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n    },\r\n    {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n    },\r\n  }\r\n      */\r\n  var data = [];\r\n  for (const identif of result.identificationType) {\r\n    if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\r\n      data.push(identif);\r\n    }\r\n  }\r\n  return data;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\r\n    }\r\n    return undefined;\r\n\r\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\r\n  }\r\n\r\n  //CC-320\tConsultarListaClasificacionRiesgo\r\n  async retrieveRiskClassification() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.riskClassification;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRiskClassification: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-319\tConsultarListaTipoRevision\r\n  async retrieveRevisionType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.revisionType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRevisionType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-321\tconsultarListaTipoPropuesta\r\n  async retrieveProposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.proposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-325\tconsultarListaTipoSubPropuesta\r\n  async retrieveSubproposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.subproposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-322\tconsultarListaTipoFacilidad\r\n  async retrieveFacilityType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.facilityType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveFacilityType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-324\tconsultarListaTipoFianza\r\n  async retrieveBailType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.bailType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveBailType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}