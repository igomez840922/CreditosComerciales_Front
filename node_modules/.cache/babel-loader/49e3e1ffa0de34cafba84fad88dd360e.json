{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\ModalNewSurety.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, Label, Row, Col, Button } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { BackendServices } from '../../../../services';\nimport Select from \"react-select\";\nimport { values } from 'lodash';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalNewSurety = props => {\n  _s();\n\n  const api = new BackendServices();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tipoPropuesta, settipoPropuesta] = useState(null);\n  const [tipoPropuestaSelect, settipoPropuestaSelect] = useState(undefined);\n  const [propuestaSet, setpropuestaSet] = useState(null);\n  const [tipoPropuestaRequerido, settipoPropuestaRequerido] = useState(false);\n  const [dataReturn, setdataReturn] = useState(null);\n\n  function handleSubmit() {\n    dataReturn.typeBail = propuestaSet;\n    setdataReturn(dataReturn);\n    props.saveData(dataReturn, props.tipo);\n    props.toggle();\n  }\n\n  function handleCancel() {\n    props.toggle();\n  }\n\n  React.useEffect(() => {\n    setdataReturn(props.dataSet);\n  }, [props]);\n  React.useEffect(() => {\n    // Read Api Service data\n    initializeData();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n    settipoPropuestaSelect(undefined);\n\n    try {\n      if (tipoPropuesta.length > 0 && props.dataSet.typeBail !== null && tipoPropuestaSelect === undefined) {\n        defaultVal = tipoPropuesta.find(x => x.label === props.dataSet.typeBail);\n\n        if (defaultVal !== undefined) {\n          settipoPropuestaSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n\n  function initializeData() {\n    api.retrieveBailType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      settipoPropuesta(json);\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    size: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggle,\n      color: \"primary\",\n      children: t(\"Sureties\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"type\",\n          children: t(\"Surety Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => {\n            settipoPropuestaSelect(tipoPropuesta.find(x => x.label === e.label));\n            setpropuestaSet(e.label);\n          },\n          options: tipoPropuesta,\n          placeholder: t(\"Select\"),\n          value: tipoPropuestaSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), tipoPropuestaRequerido ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message-error-parrafo\",\n          children: t(\"Required\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"description\",\n          children: t(\"Description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"observations\",\n          type: \"textarea\",\n          onChange: e => {\n            dataReturn.observations = e.target.value;\n            setdataReturn(dataReturn);\n          },\n          value: dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.observations,\n          id: \"observations\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12 text-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnCancel\",\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: handleCancel,\n            children: t(\"Cancel\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSearch\",\n            color: \"success\",\n            type: \"button\",\n            onClick: e => {\n              handleSubmit();\n            },\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 130\n            }, this), \" \", \" \", props.tipo == \"COMISION\" ? t(\"Save\") : t(\"Edit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalNewSurety, \"Qi9KuQVUg1AWmE4Deme8qnoJYeI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalNewSurety;\nModalNewSurety.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  toggle: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default ModalNewSurety;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewSurety\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/ModalNewSurety.js"],"names":["React","useState","PropTypes","Modal","ModalHeader","ModalBody","Label","Row","Col","Button","AvForm","AvField","AvGroup","BackendServices","Select","values","useTranslation","ModalNewSurety","props","api","t","i18n","tipoPropuesta","settipoPropuesta","tipoPropuestaSelect","settipoPropuestaSelect","undefined","propuestaSet","setpropuestaSet","tipoPropuestaRequerido","settipoPropuestaRequerido","dataReturn","setdataReturn","handleSubmit","typeBail","saveData","tipo","toggle","handleCancel","useEffect","dataSet","initializeData","defaultVal","length","find","x","label","err","retrieveBailType","then","response","json","i","push","value","catch","error","console","isOpen","e","observations","target","margin","botones","propTypes","onSave","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { BackendServices } from '../../../../services';\r\nimport Select from \"react-select\";\r\nimport { values } from 'lodash';\r\nimport { useTranslation } from 'react-i18next';\r\nconst ModalNewSurety = (props) => {\r\n  const api = new BackendServices();\r\n  const { t, i18n } = useTranslation();\r\n  const [tipoPropuesta, settipoPropuesta] = useState(null);\r\n  const [tipoPropuestaSelect, settipoPropuestaSelect] = useState(undefined);\r\n  const [propuestaSet, setpropuestaSet] = useState(null);\r\n  const [tipoPropuestaRequerido, settipoPropuestaRequerido] = useState(false);\r\n  const [dataReturn, setdataReturn] = useState(null);\r\n  function handleSubmit() {\r\n    dataReturn.typeBail = propuestaSet;\r\n    setdataReturn(dataReturn)\r\n    props.saveData(dataReturn, props.tipo);\r\n    props.toggle();\r\n  }\r\n  function handleCancel() {\r\n    props.toggle();\r\n  }\r\n  React.useEffect(() => {\r\n    setdataReturn(props.dataSet)\r\n  }, [props]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    initializeData();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    settipoPropuestaSelect(undefined);\r\n    try {\r\n      if (tipoPropuesta.length > 0 && props.dataSet.typeBail !== null && tipoPropuestaSelect === undefined) {\r\n        defaultVal = tipoPropuesta.find(x => x.label === props.dataSet.typeBail);\r\n        if (defaultVal !== undefined) {\r\n          settipoPropuestaSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props]);\r\n  function initializeData() {\r\n    api.retrieveBailType()\r\n      .then((response) => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n          json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n        }\r\n        settipoPropuesta(json);\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n  }\r\n  return (\r\n    <Modal isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}\r\n      size=\"md\">\r\n      <ModalHeader toggle={props.toggle} color=\"primary\">{t(\"Sureties\")}</ModalHeader>\r\n      <ModalBody>\r\n        <AvGroup className=\"mb-3\">\r\n          <Label htmlFor=\"type\">{t(\"Surety Type\")}</Label>\r\n          <Select\r\n            onChange={(e) => {\r\n              settipoPropuestaSelect(tipoPropuesta.find(x => x.label === e.label))\r\n              setpropuestaSet(e.label);\r\n            }}\r\n            options={tipoPropuesta}\r\n            placeholder={t(\"Select\")}\r\n            value={tipoPropuestaSelect}\r\n          />\r\n          {tipoPropuestaRequerido ?\r\n            <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n            : null}\r\n        </AvGroup>\r\n        <AvGroup className=\"mb-3\">\r\n          <Label htmlFor=\"description\">{t(\"Description\")}</Label>\r\n          <AvField\r\n            className=\"form-control\"\r\n            name=\"observations\"\r\n            type=\"textarea\"\r\n            onChange={(e) => { dataReturn.observations = e.target.value; setdataReturn(dataReturn); }}\r\n            value={dataReturn?.observations}\r\n            id=\"observations\"\r\n            rows=\"4\" />\r\n        </AvGroup>\r\n        <Row className=\"my-2\">\r\n          <Col xl=\"12 text-end\">\r\n            <Button id=\"btnCancel\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={handleCancel}>\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {props.botones ?\r\n              <Button id=\"btnSearch\" color=\"success\" type=\"button\" onClick={(e) => { handleSubmit() }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                {\" \"} {props.tipo == \"COMISION\" ? t(\"Save\") : t(\"Edit\")}\r\n              </Button> : null}\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n};\r\nModalNewSurety.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n  toggle: PropTypes.func,\r\n  isOpen: PropTypes.bool\r\n};\r\nexport default ModalNewSurety;\r\n"]},"metadata":{},"sourceType":"module"}