{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalReciprocidad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalReciprocidad = props => {\n  _s();\n\n  var _props$dataRecipro$sa, _props$dataRecipro, _props$dataRecipro$de, _props$dataRecipro2, _props$dataRecipro$av, _props$dataRecipro3, _props$dataRecipro$re, _props$dataRecipro4, _props$dataRecipro$so, _props$dataRecipro5;\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\n  const [year, setyear] = useState(null);\n  const [month, setmonth] = useState(null);\n  const [mesSelect, setmesSelect] = useState(undefined);\n  const meses = [{\n    label: t(\"January\"),\n    value: t(\"January\")\n  }, {\n    label: t(\"February\"),\n    value: t(\"February\")\n  }, {\n    label: t(\"March\"),\n    value: t(\"March\")\n  }, {\n    label: t(\"April\"),\n    value: t(\"April\")\n  }, {\n    label: t(\"May\"),\n    value: t(\"May\")\n  }, {\n    label: t(\"June\"),\n    value: t(\"June\")\n  }, {\n    label: t(\"July\"),\n    value: t(\"July\")\n  }, {\n    label: t(\"August\"),\n    value: t(\"August\")\n  }, {\n    label: t(\"September\"),\n    value: t(\"September\")\n  }, {\n    label: t(\"October\"),\n    value: t(\"October\")\n  }, {\n    label: t(\"November\"),\n    value: t(\"November\")\n  }, {\n    label: t(\"December\"),\n    value: t(\"December\")\n  }];\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setmesSelect(undefined);\n\n    try {\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\n\n        if (defaultVal !== undefined) {\n          setmesSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props.isOpen]); //cargar deudor principal\n\n  async function loadMainDebtor(transactionId) {\n    var result = await backendServices.consultPrincipalDebtor(transactionId);\n\n    if (result !== undefined && result !== null) {\n      setmainDebtor(result);\n    }\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } // values.year = ano;\n\n\n    values.month = mesSelect.value;\n\n    if (props.tipo == \"guardar\") {\n      props.dataManagament(values, props.tipo);\n    } else {\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\n      props.dataManagament(values, props.tipo);\n    } // props.onSubmit(values);\n\n  }\n\n  async function getProjections() {\n    var data = await coreServices.getProjections(partyId, year, month);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Reciprocity\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idYear\",\n                        children: t(\"Year\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"year\",\n                        id: \"year\",\n                        onChange: e => {\n                          setyear(e.target.value);\n                        },\n                        value: props.dataRecipro.year,\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          },\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idMonth\",\n                        children: t(\"Month\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        onChange: e => {\n                          setmesSelect(meses.find(x => x.value === e.value));\n                          setmonth(e.value);\n                        },\n                        options: meses,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: mesSelect // value={props.dataRecipro.mes}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 25\n                      }, this), campoRequeridoMes ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sales\",\n                        children: t(\"Sales\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"sales\",\n                        id: \"sales\",\n                        value: currencyData.format((_props$dataRecipro$sa = props === null || props === void 0 ? void 0 : (_props$dataRecipro = props.dataRecipro) === null || _props$dataRecipro === void 0 ? void 0 : _props$dataRecipro.sales) !== null && _props$dataRecipro$sa !== void 0 ? _props$dataRecipro$sa : 0),\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"deposits\",\n                        children: t(\"Deposits\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"deposits\",\n                        value: currencyData.format((_props$dataRecipro$de = props === null || props === void 0 ? void 0 : (_props$dataRecipro2 = props.dataRecipro) === null || _props$dataRecipro2 === void 0 ? void 0 : _props$dataRecipro2.deposits) !== null && _props$dataRecipro$de !== void 0 ? _props$dataRecipro$de : 0),\n                        id: \"deposits\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"averagebalance\",\n                        children: t(\"AverageBalance\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"averageBalance\",\n                        value: currencyData.format((_props$dataRecipro$av = props === null || props === void 0 ? void 0 : (_props$dataRecipro3 = props.dataRecipro) === null || _props$dataRecipro3 === void 0 ? void 0 : _props$dataRecipro3.averageBalance) !== null && _props$dataRecipro$av !== void 0 ? _props$dataRecipro$av : 0),\n                        id: \"averageBalance\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"reciprocity\",\n                        children: t(\"Reciprocity\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"reciprocity\",\n                        value: currencyData.format((_props$dataRecipro$re = props === null || props === void 0 ? void 0 : (_props$dataRecipro4 = props.dataRecipro) === null || _props$dataRecipro4 === void 0 ? void 0 : _props$dataRecipro4.reciprocity) !== null && _props$dataRecipro$re !== void 0 ? _props$dataRecipro$re : 0),\n                        id: \"reciprocity\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sow\",\n                        children: t(\"Sow\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"sow\",\n                        value: currencyData.format((_props$dataRecipro$so = props === null || props === void 0 ? void 0 : (_props$dataRecipro5 = props.dataRecipro) === null || _props$dataRecipro5 === void 0 ? void 0 : _props$dataRecipro5.sow) !== null && _props$dataRecipro$so !== void 0 ? _props$dataRecipro$so : 0),\n                        id: \"sow\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalReciprocidad, \"v8HSgeWL5+RcX9ymD+ZrXI/s1kk=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalReciprocidad;\nModalReciprocidad.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  partyId: PropTypes.string\n};\nexport default ModalReciprocidad;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalReciprocidad\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalReciprocidad.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","AvForm","AvField","AvGroup","Select","Currency","BackendServices","CoreServices","BpmServices","ModalReciprocidad","props","currencyData","t","i18n","campoRequeridoAno","setcampoRequeridoAno","campoRequeridoMes","setcampoRequeridoMes","year","setyear","month","setmonth","mesSelect","setmesSelect","undefined","meses","label","value","mainDebtor","setmainDebtor","coreServices","setcoreServices","useEffect","defaultVal","length","dataRecipro","find","x","err","isOpen","loadMainDebtor","transactionId","result","backendServices","consultPrincipalDebtor","handleSubmit","event","errors","values","preventDefault","tipo","dataManagament","reciprocity_id","getProjections","data","partyId","toggle","backgroundColor","e","target","required","errorMessage","number","format","sales","getRealValue","deposits","averageBalance","reciprocity","sow","textAlign","margin","botones","propTypes","bool","func","string"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../../services\";\r\n\r\nconst ModalReciprocidad = (props) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\r\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\r\n  const [year, setyear] = useState(null);\r\n  const [month, setmonth] = useState(null);\r\n  const [mesSelect, setmesSelect] = useState(undefined);\r\n  const meses = [{ label: t(\"January\"), value: t(\"January\") }\r\n    , { label: t(\"February\"), value: t(\"February\") },\r\n  { label: t(\"March\"), value: t(\"March\") },\r\n  { label: t(\"April\"), value: t(\"April\") },\r\n  { label: t(\"May\"), value: t(\"May\") },\r\n  { label: t(\"June\"), value: t(\"June\") },\r\n  { label: t(\"July\"), value: t(\"July\") },\r\n  { label: t(\"August\"), value: t(\"August\") },\r\n  { label: t(\"September\"), value: t(\"September\") },\r\n  { label: t(\"October\"), value: t(\"October\") },\r\n  { label: t(\"November\"), value: t(\"November\") },\r\n  { label: t(\"December\"), value: t(\"December\") }];\r\n    \r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  \r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setmesSelect(undefined)\r\n    try {\r\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\r\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\r\n        if (defaultVal !== undefined) {\r\n          setmesSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.isOpen]);\r\n\r\n  //cargar deudor principal\r\n  async function loadMainDebtor(transactionId) {\r\n    var result = await backendServices.consultPrincipalDebtor(transactionId)\r\n    if(result!==undefined && result !== null){\r\n      setmainDebtor(result);\r\n    }    \r\n  }\r\n    \r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    // values.year = ano;\r\n    values.month = mesSelect.value;\r\n    if (props.tipo == \"guardar\") {\r\n      props.dataManagament(values, props.tipo);\r\n    } else {\r\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\r\n      props.dataManagament(values, props.tipo);\r\n    }\r\n    // props.onSubmit(values);\r\n  }\r\n\r\n  async function getProjections(){\r\n   var data = await coreServices.getProjections(partyId,year,month);\r\n  }\r\n  \r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Reciprocity\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idYear\">{t(\"Year\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"year\"\r\n                          id=\"year\"\r\n                          onChange={(e) => { setyear(e.target.value); }}\r\n                          value={props.dataRecipro.year}\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idMonth\">{t(\"Month\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"} \r\n                          onChange={(e) => { setmesSelect(meses.find(x => x.value === e.value)); setmonth(e.value); }}\r\n                          options={meses}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={mesSelect}\r\n                        // value={props.dataRecipro.mes}\r\n                        />\r\n                        {campoRequeridoMes ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sales\">{t(\"Sales\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sales\"\r\n                          id=\"sales\"\r\n                          value={currencyData.format(props?.dataRecipro?.sales ?? 0)}\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"deposits\">{t(\"Deposits\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"deposits\"\r\n                          value={currencyData.format(props?.dataRecipro?.deposits ?? 0)}\r\n                          id=\"deposits\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"averagebalance\">{t(\"AverageBalance\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"averageBalance\"\r\n                          value={currencyData.format(props?.dataRecipro?.averageBalance ?? 0)}\r\n                          id=\"averageBalance\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"reciprocity\">{t(\"Reciprocity\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"reciprocity\"\r\n                          value={currencyData.format(props?.dataRecipro?.reciprocity ?? 0)}\r\n                          id=\"reciprocity\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sow\">{t(\"Sow\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sow\"\r\n                          value={currencyData.format(props?.dataRecipro?.sow ?? 0)}\r\n                          id=\"sow\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalReciprocidad.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  partyId:PropTypes.string\r\n};\r\n\r\nexport default ModalReciprocidad;\r\n"]},"metadata":{},"sourceType":"module"}