{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\14_AdminDesembolso\\\\Desembolso\\\\Instructivo\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, Col, Button, CardFooter, Row } from \"reactstrap\";\nimport { Tabs, Tab } from 'react-bootstrap'; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport DatosGeneralesBL from \"./DatosGenerales2\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BpmServices } from \"../../../../../services\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { BackendServices, CoreServices } from \"../../../../../services\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const apiServiceBackend = new BackendServices();\n  const apiServiceCore = new CoreServices();\n  const location = useLocation();\n  const [dataLocation, setdataLocation] = useState(location.data);\n  const [instructiveType, setinstructiveType] = useState(null);\n  const [facilityId, setfacilityId] = useState(null);\n  const [tabsFacility, settabsFacility] = useState(null);\n  const [Facility, setFacility] = useState(null);\n  const [datosUsuario, setdatosUsuario] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [facilityType, setfacilityType] = useState(null);\n  React.useEffect(async () => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        location.data.transactionId = 0;\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setdataLocation(location.data);\n        loadData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setdataLocation(result);\n        loadData(result);\n      }\n    }\n\n    apiServiceBackend.consultPrincipalDebtor(dataLocation.transactionId).then(data => {\n      setdatosUsuario(data);\n    });\n  }, []);\n\n  function loadData(data) {\n    apiServiceBackend.consultGeneralDataPropCred(data.transactionId).then(data => {\n      apiServiceBackend.consultarFacilidades(data[0].requestId).then(resp => {\n        resp = resp.filter($$ => $$.debtor != '  ');\n        setFacility(resp);\n\n        if (resp.length > 0) {\n          setinstructiveType(resp[0].debtor);\n          setfacilityId(resp[0].facilityId);\n          settabsFacility(resp.map((items, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            className: \"m-0\",\n            eventKey: index,\n            title: items.debtor\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)));\n        }\n      });\n    });\n  }\n\n  function handleSelect(e) {\n    let data = Facility.at(e);\n    setfacilityType(data);\n    setinstructiveType(data.debtor);\n    setfacilityId(data.facilityId);\n    console.log(facilityType === null || facilityType === void 0 ? void 0 : facilityType.facilityType[0]);\n  }\n\n  function onSaveProcess(option, values = null) {\n    return new Promise(async (resolve, reject) => {\n      switch (option) {\n        case 1:\n          {\n            resolve();\n            break;\n          }\n\n        case 2:\n          {\n            /* ---------------------------------------------------------------------------------------------- */\n\n            /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n            /* ---------------------------------------------------------------------------------------------- */\n            const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n            let instanceId = 0;\n            api.abortProcess(instanceId).then(data => {\n              resolve();\n\n              if (data !== undefined) {\n                setsuccessSave_dlg(true);\n              } else {\n                //Mensaje ERROR\n                seterror_msg(t(\"TheProcessCouldNotFinish\"));\n                seterror_dlg(true);\n              }\n            }).catch(err => {\n              resolve();\n            });\n            break;\n          }\n\n        case 3:\n          {\n            /* ---------------------------------------------------------------------------------------------- */\n\n            /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n            /* ---------------------------------------------------------------------------------------------- */\n            const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n            let instanceId = 0;\n            api.abortProcess(instanceId).then(data => {\n              resolve();\n\n              if (data !== undefined) {\n                setsuccessSave_dlg(true);\n              } else {\n                //Mensaje ERROR\n                seterror_msg(t(\"TheProcessCouldNotFinish\"));\n                seterror_dlg(true);\n              }\n            }).catch(err => {\n              resolve();\n            });\n            break;\n          }\n\n        case 4:\n          {\n            await apiServiceBackend.saveDisbursementInstructiveByFacility(values);\n            let descripcion = 0;\n            /* ---------------------------------------------------------------------------------------------- */\n\n            /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n            /* ---------------------------------------------------------------------------------------------- */\n\n            const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n            api.abortProcess(descripcion).then(data => {\n              resolve();\n\n              if (data !== undefined) {\n                setsuccessSave_dlg(true);\n              } else {\n                //Mensaje ERROR\n                seterror_msg(t(\"TheProcessCouldNotFinish\"));\n                seterror_dlg(true);\n              }\n            }).catch(err => {\n              resolve();\n            });\n            break;\n          }\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"DisbursementInstructions\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title mb-3\",\n                children: t(\"\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: [datosUsuario != null ? (datosUsuario.typePerson === \"1\" ? datosUsuario.name + \" \" + datosUsuario.name2 + \" \" + datosUsuario.lastName + \" \" + datosUsuario.lastName2 : datosUsuario.name) + \"       \" : \"\", \"           #\", dataLocation.transactionId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"DisbursementInstructions\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"0\",\n            id: \"uncontrolled-tab-example\",\n            className: \"mb-3\",\n            onSelect: e => {\n              handleSelect(e);\n            },\n            children: tabsFacility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), (facilityType === null || facilityType === void 0 ? void 0 : facilityType.facilityType[0]) != 'L' && /*#__PURE__*/_jsxDEV(DatosGenerales, {\n            facilityId: facilityId,\n            instructiveType: instructiveType,\n            onSaveProcess: onSaveProcess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), (facilityType === null || facilityType === void 0 ? void 0 : facilityType.facilityType[0]) == 'L' && /*#__PURE__*/_jsxDEV(DatosGeneralesBL, {\n            facilityId: facilityId,\n            instructiveType: instructiveType,\n            onSaveProcess: onSaveProcess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"gBUWf1bNvUKXuFjQxdTUEgv+c70=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {\n  selectedId: PropTypes.any,\n  onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/14_AdminDesembolso/Desembolso/Instructivo/index.js"],"names":["React","useState","PropTypes","useHistory","useLocation","Link","Card","CardBody","Col","Button","CardFooter","Row","Tabs","Tab","Breadcrumbs","withTranslation","DatosGenerales","DatosGeneralesBL","SweetAlert","BpmServices","url","BackendServices","CoreServices","AvForm","AvField","useTranslation","LoadingOverlay","PantallaBusqueda","props","t","i18n","history","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","apiServiceBackend","apiServiceCore","location","dataLocation","setdataLocation","data","instructiveType","setinstructiveType","facilityId","setfacilityId","tabsFacility","settabsFacility","Facility","setFacility","datosUsuario","setdatosUsuario","isActiveLoading","setIsActiveLoading","facilityType","setfacilityType","useEffect","undefined","transactionId","length","sessionStorage","setItem","JSON","stringify","loadData","result","getItem","parse","consultPrincipalDebtor","then","consultGeneralDataPropCred","consultarFacilidades","requestId","resp","filter","$$","debtor","map","items","index","handleSelect","e","at","console","log","onSaveProcess","option","values","Promise","resolve","reject","api","instanceId","abortProcess","catch","err","saveDisbursementInstructiveByFacility","descripcion","typePerson","name","name2","lastName","lastName2","push","URL_DASHBOARD","propTypes","selectedId","any","onClose","func","isRequired"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n  Row,\r\n} from \"reactstrap\"\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport DatosGeneralesBL from \"./DatosGenerales2\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport { BpmServices } from \"../../../../../services\"\r\nimport * as url from \"../../../../../helpers/url_helper\";\r\n\r\nimport { BackendServices, CoreServices, } from \"../../../../../services\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport LoadingOverlay from \"react-loading-overlay\"\r\n\r\nconst PantallaBusqueda = props => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n\r\n  const history = useHistory();\r\n\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n\r\n  const apiServiceBackend = new BackendServices();\r\n  const apiServiceCore = new CoreServices();\r\n  const location = useLocation()\r\n\r\n  const [dataLocation, setdataLocation] = useState(location.data);\r\n\r\n  const [instructiveType, setinstructiveType] = useState(null);\r\n  const [facilityId, setfacilityId] = useState(null);\r\n  const [tabsFacility, settabsFacility] = useState(null);\r\n  const [Facility, setFacility] = useState(null);\r\n  const [datosUsuario, setdatosUsuario] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [facilityType, setfacilityType] = useState(null);\r\n\r\n  React.useEffect(async () => {\r\n\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        location.data.transactionId = 0;\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setdataLocation(location.data);\r\n        loadData(location.data)\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setdataLocation(result);\r\n        loadData(result)\r\n      }\r\n    }\r\n\r\n    apiServiceBackend.consultPrincipalDebtor(dataLocation.transactionId)\r\n      .then((data) => {\r\n        setdatosUsuario(data)\r\n      });\r\n\r\n\r\n  }, []);\r\n\r\n  function loadData(data) {\r\n    apiServiceBackend.consultGeneralDataPropCred(data.transactionId)\r\n      .then((data) => {\r\n        apiServiceBackend.consultarFacilidades(data[0].requestId).then(resp => {\r\n          resp = resp.filter($$ => $$.debtor != '  ');\r\n          setFacility(resp);\r\n          if (resp.length > 0) {\r\n            setinstructiveType(resp[0].debtor)\r\n            setfacilityId(resp[0].facilityId)\r\n            settabsFacility(resp.map((items, index) => (\r\n              <Tab className=\"m-0\" key={index} eventKey={index} title={items.debtor}></Tab>\r\n            )));\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    let data = Facility.at(e);\r\n    setfacilityType(data);\r\n    setinstructiveType(data.debtor)\r\n    setfacilityId(data.facilityId)\r\n    console.log(facilityType?.facilityType[0]);\r\n  }\r\n\r\n  function onSaveProcess(option, values = null) {\r\n    return new Promise(async (resolve, reject) => {\r\n      switch (option) {\r\n        case 1: {\r\n          resolve();\r\n          break;\r\n        }\r\n        case 2: {\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          const api = new BpmServices();\r\n          // let instanceId = location.data.instanceId\r\n          let instanceId = 0\r\n          api.abortProcess(instanceId).then((data) => {\r\n            resolve();\r\n            if (data !== undefined) {\r\n              setsuccessSave_dlg(true)\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(t(\"TheProcessCouldNotFinish\"))\r\n              seterror_dlg(true)\r\n            }\r\n          }).catch(err => {\r\n            resolve();\r\n          });\r\n          break;\r\n        }\r\n        case 3: {\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          const api = new BpmServices();\r\n          // let instanceId = location.data.instanceId\r\n          let instanceId = 0\r\n          api.abortProcess(instanceId).then((data) => {\r\n            resolve();\r\n            if (data !== undefined) {\r\n              setsuccessSave_dlg(true)\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(t(\"TheProcessCouldNotFinish\"))\r\n              seterror_dlg(true)\r\n            }\r\n          }).catch(err => {\r\n            resolve();\r\n          });\r\n          break;\r\n        }\r\n        case 4: {\r\n\r\n          await apiServiceBackend.saveDisbursementInstructiveByFacility(values);\r\n\r\n\r\n\r\n          let descripcion = 0;\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n          /* ---------------------------------------------------------------------------------------------- */\r\n          const api = new BpmServices();\r\n          // let instanceId = location.data.instanceId\r\n          api.abortProcess(descripcion).then((data) => {\r\n            resolve();\r\n            if (data !== undefined) {\r\n              setsuccessSave_dlg(true)\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(t(\"TheProcessCouldNotFinish\"))\r\n              seterror_dlg(true)\r\n            }\r\n          }).catch(err => {\r\n            resolve();\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"DisbursementInstructions\")} />\r\n\r\n        <Card>\r\n\r\n          <CardBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <h4 className=\"card-title mb-3\">{t(\"\")}</h4>\r\n                <h4 className=\"card-title\">{datosUsuario != null ? (datosUsuario.typePerson === \"1\" ? (datosUsuario.name + \" \" + datosUsuario.name2 + \" \" + datosUsuario.lastName + \" \" + datosUsuario.lastName2) : (datosUsuario.name)) + \"       \" : \"\"}           #{dataLocation.transactionId}</h4>\r\n                <h4 className=\"card-title\">{t(\"DisbursementInstructions\")}</h4>\r\n                <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n              </Col>\r\n\r\n            </Row>\r\n            <Tabs defaultActiveKey=\"0\" id=\"uncontrolled-tab-example\" className=\"mb-3\" onSelect={(e) => { handleSelect(e) }}>\r\n              {tabsFacility}\r\n            </Tabs>\r\n            {facilityType?.facilityType[0] != 'L' &&\r\n              <DatosGenerales\r\n                facilityId={facilityId}\r\n                instructiveType={instructiveType}\r\n                onSaveProcess={onSaveProcess}\r\n              />}\r\n            {facilityType?.facilityType[0] == 'L' &&\r\n              <DatosGeneralesBL\r\n                facilityId={facilityId}\r\n                instructiveType={instructiveType}\r\n                onSaveProcess={onSaveProcess}\r\n              />}\r\n\r\n          </CardBody>\r\n        </Card>\r\n\r\n\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  selectedId: PropTypes.any,\r\n  onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}