{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\AspectosAmbientales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport Switch from \"react-switch\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport AvInput from 'availity-reactstrap-validation/lib/AvInput';\nimport AttachmentFileCore from \"../../../../../components/Common/AttachmentFileCore\";\nimport * as OPTs from \"../../../../../helpers/options_helper\";\nimport { CoreServices } from \"../../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst AspectosAmbientales = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    locationData\n  } = props;\n  const [formValid, setFormValid] = useState(false);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmAspectosAmbientales');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [dataReturn, setDataReturn] = useState(props.dataAspectosAmbientales);\n  const [switch1, setswitch1] = useState(props.dataAspectosAmbientales.natureLocationProject);\n  const [switch2, setswitch2] = useState(props.dataAspectosAmbientales.physicalResettlement);\n  const [switch3, setswitch3] = useState(props.dataAspectosAmbientales.environmentalPermits);\n  const [switch4, setswitch4] = useState(props.dataAspectosAmbientales.newProject);\n  const [switch5, setswitch5] = useState(props.dataAspectosAmbientales.workersContractors); // Form Submission\n\n  function handleSubmit(event, errors, values) {\n    dataReturn.natureLocationProject = switch1;\n    dataReturn.physicalResettlement = switch2;\n    dataReturn.environmentalPermits = switch3;\n    dataReturn.newProject = switch4;\n    dataReturn.workersContractors = switch5;\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setFormValid(true); //props.onSubmit(values);\n  }\n\n  React.useEffect(() => {\n    validarActividades();\n    setDataReturn(props.dataAspectosAmbientales);\n    setswitch1(props.dataAspectosAmbientales.natureLocationProject);\n    setswitch2(props.dataAspectosAmbientales.physicalResettlement);\n    setswitch3(props.dataAspectosAmbientales.environmentalPermits);\n    setswitch4(props.dataAspectosAmbientales.newProject);\n    setswitch5(props.dataAspectosAmbientales.workersContractors);\n  }, [props]);\n\n  function changeAll(e, tipo) {\n    if (tipo == \"riskPreClassification\") {\n      dataReturn.riskPreClassification = e.target.value;\n    }\n\n    if (tipo == \"sustainableCreditRating\") {\n      dataReturn.sustainableCreditRating = \"2\";\n    }\n\n    if (tipo == \"riskClassificationConfirmation\") {\n      dataReturn.riskClassificationConfirmation = e.target.value;\n    } // if (tipo == \"natureLocationProject\") {\n    //   dataReturn.natureLocationProject = switch1;\n    // }\n    // if (tipo == \"physicalResettlement\") {\n    //   dataReturn.physicalResettlement = switch2;\n    // }\n    // if (tipo == \"environmentalPermits\") {\n    //   dataReturn.environmentalPermits = switch3;\n    // }\n    // if (tipo == \"newProject\") {\n    //   dataReturn.newProject = switch4;\n    // }\n    // if (tipo == \"workersContractors\") {\n    //   dataReturn.workersContractors = switch5;\n    // }\n\n\n    setDataReturn(dataReturn);\n  }\n\n  function validarActividades() {\n    const api = new CoreServices();\n    let json = [];\n    api.getActividadEconomicaCatalogo().then(response => {\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          nombreActividad: response.Records[i][\"Description\"],\n          codActividad: response.Records[i][\"Code\"]\n        });\n      }\n\n      for (let i = 0; i < json.length; i++) {\n        let jsonSub = [];\n        api.getSubActividadEconomicaCatalogo(json[i].codActividad).then(response => {\n          for (let j = 0; j < response.Records.length; j++) {\n            jsonSub.push({\n              nombreSubActividad: response.Records[j][\"Description\"],\n              codigoSubActividad: response.Records[j][\"Code\"]\n            });\n          }\n        });\n        json[i].subActividades = jsonSub;\n      }\n\n      let tipoClasificacion = \"BAJO\";\n      let jsonValues = {\n        subActividadAgricultura: {\n          3001: \"Baja\",\n          //Cultivo de productos no perennes - Frijol \n          3002: \"Baja\",\n          //Cultivo de productos no perennes - Sorgo\n          3003: \"Alta\",\n          //Cultivo de productos no perennes - Cultivo de arroz\n          3004: \"Baja\",\n          //Cultivo de productos no perennes - papa\n          3005: \"Baja\",\n          //Cultivo de productos no perennes - cebolla\n          3006: \"Alta\",\n          //Cultivo de productos no perennes - Cultivo de caña de azúcar \n          3007: \"Baja\",\n          //Cultivo de productos no perennes - Cultivo de tabaco \n          3008: \"Alta\",\n          //Cultivo de productos no perennes - Cultivo de fibras\n          3009: \"Alta\",\n          //Cultivo de productos no perennes - Cultivo de maíz\n          3010: \"Baja\",\n          //Cultivo de productos no perennes - otros Granos\n          3011: \"Baja\",\n          //Cultivo de productos no perennes - Otras leguminosas\n          3012: \"Alta\",\n          //Cultivo de productos perennes - Cultivo de frutas tropicales y subtropicales\n          3013: \"Baja\",\n          //Cultivo de productos perennes - Cultivo de otras frutas que crecen en árboles y/o arbustos y/o nueces \n          3014: \"Baja\",\n          //Cultivo de productos perennes - Cultivo de frutas oleaginosas\n          3015: \"Baja\",\n          //Cultivo de productos perennes - café\n          3016: \"Baja\",\n          //Cultivo de productos perennes - soya\n          3017: \"Baja\",\n          //Cultivo de productos perennes - Cultivo de plantas aromáticas, medicinales y especias\n          3018: \"Alta\",\n          //Cultivo de productos perennes - Otros cultivos perennes\n          3019: \"Baja\",\n          //Propagación de plantas - Propagación de plantas\n          3020: \"Media\",\n          //Ganadería - Cría de ganado vacuno y búfalos\n          3021: \"Media\",\n          //Ganadería - Cría de caballos y otros equinos\n          3022: \"Media\",\n          //Ganadería - Cría de ovejas y cabras\n          3023: \"Media\",\n          //Ganadería - Cría de cerdos / puercos\n          3024: \"Media\",\n          //Ganadería - Cría de aves de corral y obtención de subproductos\n          3025: \"Baja\",\n          //Ganadería - Cría de otros animales\n          3026: \"Baja\",\n          //Ganadería - Apicultura (creada)\n          3027: \"Alta\",\n          //Explotación mixta - arroz\n          3028: \"Alta\",\n          //Explotación mixta - maiz\n          3029: \"Alta\",\n          //Explotación mixta - sorgo\n          3030: \"Alta\",\n          //Explotación mixta - otros granos\n          3031: \"Alta\",\n          //Explotación mixta - soya\n          3032: \"Alta\",\n          //Explotación mixta - Frijol \n          3033: \"Alta\",\n          //Explotación mixta - Otras leguminosas\n          3034: \"Alta\",\n          //Explotación mixta - caña\n          3035: \"Alta\",\n          //Explotación mixta - café\n          3036: \"Alta\",\n          //Explotación mixta - papa\n          3037: \"Alta\",\n          //Explotación mixta - cebolla\n          3038: \"Alta\",\n          //Explotación mixta - tomate\n          3039: \"Alta\",\n          //Explotación mixta - banano\n          3040: \"Alta\",\n          //Explotación mixta - otros cultivos\n          3041: \"Alta\",\n          //Explotación mixta - bovino\n          3042: \"Alta\",\n          //Explotación mixta - porcino\n          3043: \"Alta\",\n          //Explotación mixta - avicultura\n          3044: \"Alta\",\n          //Explotación mixta - caballar\n          3045: \"Alta\",\n          //Explotación mixta - apicultura\n          3046: \"Baja\",\n          //Explotación mixta - otros animales\n          3047: \"Baja\",\n          //Explotación mixta - pesca\n          3048: \"Baja\",\n          //Explotación mixta - acuicultura\n          3049: \"Media\",\n          //Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Actividades de apoyo a los cultivos y posteriores a la cosecha,\n          3050: \"Media\",\n          //Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Actividades de apoyo a la ganadería Media\",\n          3051: \"Alta\",\n          //Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Procesamiento de semillas para la propagación\n          3052: \"Alta\",\n          //Caza ordinaria, mediante trampas y actividades de servicios conexas - Caza ordinaria, mediante trampas y actividades de servicios conexas\n          3053: \"Baja\",\n          //Silvicultura y otras actividades relacionadas a la silvicultura - Silvicultura y otras actividades relacionadas a la silvicultura\n          3054: \"Alta\",\n          //Extracción de madera - Extracción de madera\n          3055: \"Media\",\n          //Recolección de productos forestales diferentes a la madera - Recolección de productos forestales diferentes a la madera\n          3056: \"Media\",\n          //Servicios de apoyo a la silvicultura - Servicios de apoyo a la silvicultura\n          3057: \"Alta\",\n          //Pesca -  Pesca marítima oceánicas o costeras \n          3058: \"Alta\",\n          //Pesca - Pesca de aguas dulce\n          3059: \"Alta\",\n          //Acuicultura - Acuicultura marítima\",\n          3060: \"Alta\" //Acuicultura -  Acuicultura de agua dulce\",\n\n        }\n      };\n      tipoClasificacion = jsonValues.subActividadAgricultura[3024];\n      console.log(props.datosGenerales);\n      console.log(json);\n      console.log(tipoClasificacion);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"EnvironmentalAspects\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmAspectosAmbientales\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"preClassificationRisk\",\n              children: t(\"PreClassificationRisk\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              type: \"select\",\n              name: \"riskPreClassification\",\n              onChange: e => {\n                changeAll(e, \"riskPreClassification\");\n              },\n              value: dataReturn.riskPreClassification,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                }\n              },\n              id: \"riskPreClassification\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Baja\",\n                children: \"Baja\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Media\",\n                children: \"Media\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Media-Alta\",\n                children: \"Media-Alta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Alta\",\n                children: \"Alta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"riskClassificationConfirmation\",\n              children: t(\"EnvironmentalRiskclassification\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              type: \"select\",\n              name: \"riskClassificationConfirmation\",\n              onChange: e => {\n                changeAll(e, \"riskClassificationConfirmation\");\n              },\n              value: dataReturn.riskClassificationConfirmation,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                }\n              },\n              id: \"riskClassificationConfirmation\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Bajo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Medio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"Medio-Alto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"Alto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              name: \"isProjectLocatedProtectedNaturalArea\",\n              uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 32\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 30\n              }, this),\n              onColor: \"#007943\",\n              className: \"form-label\",\n              onChange: () => {\n                setswitch1(!switch1);\n              },\n              checked: switch1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), '   ', /*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-check-label\",\n              htmlFor: \"isProjectLocatedProtectedNaturalArea\",\n              children: [\" \", t(\"Is the project located or adjacent to a protected natural area\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              name: \"theProjectInvolvePhysicalEconomicResettlement\",\n              uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 32\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 30\n              }, this),\n              onColor: \"#007943\",\n              className: \"form-label\",\n              onChange: () => {\n                setswitch2(!switch2);\n              },\n              checked: switch2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), '   ', /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                textAlign: \"left\"\n              },\n              htmlFor: \"theProjectInvolvePhysicalEconomicResettlement\",\n              children: t(\"Does the project involve physical and or economic resettlement of more than 100 people\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              name: \"isPresentationEnvironmentalPermitsNecessary\",\n              uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 32\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 30\n              }, this),\n              onColor: \"#007943\",\n              className: \"form-label\",\n              onChange: () => {\n                setswitch3(!switch3);\n              },\n              checked: switch3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), '   ', /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                textAlign: \"left\"\n              },\n              htmlFor: \"isPresentationEnvironmentalPermitsNecessary\",\n              children: t(\"Is the presentation of environmental permits necessary for the execution of the project\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              name: \"isProjectNew\",\n              uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 32\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 30\n              }, this),\n              onColor: \"#007943\",\n              className: \"form-label\",\n              onChange: () => {\n                setswitch4(!switch4);\n              },\n              checked: switch4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), '   ', /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                textAlign: \"left\"\n              },\n              htmlFor: \"isProjectNew\",\n              children: t(\"Is the project new and involves the use of more than 35 hectares of land\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            check: true,\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              name: \"doesActivityEmployMoreThan50Workers\",\n              uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 32\n              }, this),\n              checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 30\n              }, this),\n              onColor: \"#007943\",\n              className: \"form-label\",\n              onChange: () => {\n                setswitch5(!switch5);\n              },\n              checked: switch5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), '   ', /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                textAlign: \"left\"\n              },\n              htmlFor: \"doesActivityEmployMoreThan50Workers\",\n              children: t(\"Does the activity employ more than 50 workers and handle more than 15 contractors\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), \"  \", '  ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AttachmentFileCore, {\n        locationData: {\n          instanceId: locationData.instanceId,\n          processId: locationData.processId,\n          activityId: OPTs.ACT_ASPECTOSAMBIENTALES\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}, \"QJybsYpCiH1ohYGmcxtovFnpF9Y=\", false, function () {\n  return [useTranslation, React.useImperativeHandle];\n}));\n_c4 = AspectosAmbientales;\nAspectosAmbientales.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  locationData: PropTypes.any\n};\nexport default AspectosAmbientales;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"AspectosAmbientales$React.forwardRef\");\n$RefreshReg$(_c4, \"AspectosAmbientales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/AspectosAmbientales.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","Switch","AvForm","AvField","AvGroup","AvInput","AttachmentFileCore","OPTs","CoreServices","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","AspectosAmbientales","forwardRef","props","ref","t","i18n","locationData","formValid","setFormValid","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","dataReturn","setDataReturn","dataAspectosAmbientales","switch1","setswitch1","natureLocationProject","switch2","setswitch2","physicalResettlement","switch3","setswitch3","environmentalPermits","switch4","setswitch4","newProject","switch5","setswitch5","workersContractors","handleSubmit","event","errors","values","preventDefault","length","useEffect","validarActividades","changeAll","e","tipo","riskPreClassification","target","value","sustainableCreditRating","riskClassificationConfirmation","api","json","getActividadEconomicaCatalogo","then","response","i","Records","push","nombreActividad","codActividad","jsonSub","getSubActividadEconomicaCatalogo","j","nombreSubActividad","codigoSubActividad","subActividades","tipoClasificacion","jsonValues","subActividadAgricultura","console","log","datosGenerales","required","errorMessage","textAlign","instanceId","processId","activityId","ACT_ASPECTOSAMBIENTALES","propTypes","onSubmit","func","isRequired","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport Switch from \"react-switch\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport AvInput from 'availity-reactstrap-validation/lib/AvInput'\r\n\r\nimport AttachmentFileCore from \"../../../../../components/Common/AttachmentFileCore\";\r\nimport * as OPTs from \"../../../../../helpers/options_helper\"\r\nimport { CoreServices } from \"../../../../../services\"\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AspectosAmbientales = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const { locationData } = props;\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmAspectosAmbientales');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  const [dataReturn, setDataReturn] = useState(props.dataAspectosAmbientales);\r\n  const [switch1, setswitch1] = useState(props.dataAspectosAmbientales.natureLocationProject);\r\n  const [switch2, setswitch2] = useState(props.dataAspectosAmbientales.physicalResettlement);\r\n  const [switch3, setswitch3] = useState(props.dataAspectosAmbientales.environmentalPermits);\r\n  const [switch4, setswitch4] = useState(props.dataAspectosAmbientales.newProject);\r\n  const [switch5, setswitch5] = useState(props.dataAspectosAmbientales.workersContractors);\r\n\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    dataReturn.natureLocationProject = switch1;\r\n    dataReturn.physicalResettlement = switch2;\r\n    dataReturn.environmentalPermits = switch3;\r\n    dataReturn.newProject = switch4;\r\n    dataReturn.workersContractors = switch5;\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setFormValid(true)\r\n    //props.onSubmit(values);\r\n  }\r\n  React.useEffect(() => {\r\n    validarActividades()\r\n    setDataReturn(props.dataAspectosAmbientales);\r\n    setswitch1(props.dataAspectosAmbientales.natureLocationProject);\r\n    setswitch2(props.dataAspectosAmbientales.physicalResettlement);\r\n    setswitch3(props.dataAspectosAmbientales.environmentalPermits);\r\n    setswitch4(props.dataAspectosAmbientales.newProject);\r\n    setswitch5(props.dataAspectosAmbientales.workersContractors);\r\n  }, [props]);\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"riskPreClassification\") {\r\n      dataReturn.riskPreClassification = e.target.value;\r\n    }\r\n    if (tipo == \"sustainableCreditRating\") {\r\n      dataReturn.sustainableCreditRating = \"2\";\r\n    }\r\n    if (tipo == \"riskClassificationConfirmation\") {\r\n      dataReturn.riskClassificationConfirmation = e.target.value;\r\n    }\r\n    // if (tipo == \"natureLocationProject\") {\r\n    //   dataReturn.natureLocationProject = switch1;\r\n    // }\r\n    // if (tipo == \"physicalResettlement\") {\r\n    //   dataReturn.physicalResettlement = switch2;\r\n    // }\r\n    // if (tipo == \"environmentalPermits\") {\r\n    //   dataReturn.environmentalPermits = switch3;\r\n    // }\r\n    // if (tipo == \"newProject\") {\r\n    //   dataReturn.newProject = switch4;\r\n    // }\r\n    // if (tipo == \"workersContractors\") {\r\n    //   dataReturn.workersContractors = switch5;\r\n    // }\r\n    setDataReturn(dataReturn);\r\n  }\r\n  function validarActividades() {\r\n\r\n    const api = new CoreServices();\r\n    let json = [];\r\n    api.getActividadEconomicaCatalogo().then(response => {\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ nombreActividad: response.Records[i][\"Description\"], codActividad: response.Records[i][\"Code\"] });\r\n      }\r\n      for (let i = 0; i < json.length; i++) {\r\n        let jsonSub = [];\r\n        api.getSubActividadEconomicaCatalogo(json[i].codActividad).then(response => {\r\n          for (let j = 0; j < response.Records.length; j++) {\r\n            jsonSub.push({ nombreSubActividad: response.Records[j][\"Description\"], codigoSubActividad: response.Records[j][\"Code\"] });\r\n          }\r\n        });\r\n        json[i].subActividades = jsonSub;\r\n      }\r\n      let tipoClasificacion = \"BAJO\";\r\n      let jsonValues = {\r\n        subActividadAgricultura: {\r\n          3001: \"Baja\",//Cultivo de productos no perennes - Frijol \r\n          3002: \"Baja\",//Cultivo de productos no perennes - Sorgo\r\n          3003: \"Alta\",//Cultivo de productos no perennes - Cultivo de arroz\r\n          3004: \"Baja\",//Cultivo de productos no perennes - papa\r\n          3005: \"Baja\",//Cultivo de productos no perennes - cebolla\r\n          3006: \"Alta\",//Cultivo de productos no perennes - Cultivo de caña de azúcar \r\n          3007: \"Baja\",//Cultivo de productos no perennes - Cultivo de tabaco \r\n          3008: \"Alta\",//Cultivo de productos no perennes - Cultivo de fibras\r\n          3009: \"Alta\",//Cultivo de productos no perennes - Cultivo de maíz\r\n          3010: \"Baja\",//Cultivo de productos no perennes - otros Granos\r\n          3011: \"Baja\",//Cultivo de productos no perennes - Otras leguminosas\r\n          3012: \"Alta\",//Cultivo de productos perennes - Cultivo de frutas tropicales y subtropicales\r\n          3013: \"Baja\",//Cultivo de productos perennes - Cultivo de otras frutas que crecen en árboles y/o arbustos y/o nueces \r\n          3014: \"Baja\",//Cultivo de productos perennes - Cultivo de frutas oleaginosas\r\n          3015: \"Baja\",//Cultivo de productos perennes - café\r\n          3016: \"Baja\",//Cultivo de productos perennes - soya\r\n          3017: \"Baja\",//Cultivo de productos perennes - Cultivo de plantas aromáticas, medicinales y especias\r\n          3018: \"Alta\",//Cultivo de productos perennes - Otros cultivos perennes\r\n          3019: \"Baja\",//Propagación de plantas - Propagación de plantas\r\n          3020: \"Media\",//Ganadería - Cría de ganado vacuno y búfalos\r\n          3021: \"Media\",//Ganadería - Cría de caballos y otros equinos\r\n          3022: \"Media\",//Ganadería - Cría de ovejas y cabras\r\n          3023: \"Media\",//Ganadería - Cría de cerdos / puercos\r\n          3024: \"Media\",//Ganadería - Cría de aves de corral y obtención de subproductos\r\n          3025: \"Baja\",//Ganadería - Cría de otros animales\r\n          3026: \"Baja\",//Ganadería - Apicultura (creada)\r\n          3027: \"Alta\",//Explotación mixta - arroz\r\n          3028: \"Alta\",//Explotación mixta - maiz\r\n          3029: \"Alta\",//Explotación mixta - sorgo\r\n          3030: \"Alta\",//Explotación mixta - otros granos\r\n          3031: \"Alta\",//Explotación mixta - soya\r\n          3032: \"Alta\",//Explotación mixta - Frijol \r\n          3033: \"Alta\",//Explotación mixta - Otras leguminosas\r\n          3034: \"Alta\",//Explotación mixta - caña\r\n          3035: \"Alta\",//Explotación mixta - café\r\n          3036: \"Alta\",//Explotación mixta - papa\r\n          3037: \"Alta\",//Explotación mixta - cebolla\r\n          3038: \"Alta\",//Explotación mixta - tomate\r\n          3039: \"Alta\",//Explotación mixta - banano\r\n          3040: \"Alta\",//Explotación mixta - otros cultivos\r\n          3041: \"Alta\",//Explotación mixta - bovino\r\n          3042: \"Alta\",//Explotación mixta - porcino\r\n          3043: \"Alta\",//Explotación mixta - avicultura\r\n          3044: \"Alta\",//Explotación mixta - caballar\r\n          3045: \"Alta\",//Explotación mixta - apicultura\r\n          3046: \"Baja\",//Explotación mixta - otros animales\r\n          3047: \"Baja\",//Explotación mixta - pesca\r\n          3048: \"Baja\",//Explotación mixta - acuicultura\r\n          3049: \"Media\",//Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Actividades de apoyo a los cultivos y posteriores a la cosecha,\r\n          3050: \"Media\",//Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Actividades de apoyo a la ganadería Media\",\r\n          3051: \"Alta\",//Actividades de apoyo a la agricultura, ganadería y actividades posteriores a la cosecha - Procesamiento de semillas para la propagación\r\n          3052: \"Alta\",//Caza ordinaria, mediante trampas y actividades de servicios conexas - Caza ordinaria, mediante trampas y actividades de servicios conexas\r\n          3053: \"Baja\",//Silvicultura y otras actividades relacionadas a la silvicultura - Silvicultura y otras actividades relacionadas a la silvicultura\r\n          3054: \"Alta\",//Extracción de madera - Extracción de madera\r\n          3055: \"Media\",//Recolección de productos forestales diferentes a la madera - Recolección de productos forestales diferentes a la madera\r\n          3056: \"Media\",//Servicios de apoyo a la silvicultura - Servicios de apoyo a la silvicultura\r\n          3057: \"Alta\",//Pesca -  Pesca marítima oceánicas o costeras \r\n          3058: \"Alta\",//Pesca - Pesca de aguas dulce\r\n          3059: \"Alta\",//Acuicultura - Acuicultura marítima\",\r\n          3060: \"Alta\"//Acuicultura -  Acuicultura de agua dulce\",\r\n        }\r\n      }\r\n      tipoClasificacion = jsonValues.subActividadAgricultura[3024]     \r\n      console.log(props.datosGenerales);\r\n      console.log(json);\r\n      console.log(tipoClasificacion);\r\n    });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"EnvironmentalAspects\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmAspectosAmbientales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"preClassificationRisk\">{t(\"PreClassificationRisk\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                type=\"select\"\r\n                name=\"riskPreClassification\"\r\n                onChange={(e) => { changeAll(e, \"riskPreClassification\") }}\r\n                value={dataReturn.riskPreClassification}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                }}\r\n                id=\"riskPreClassification\"\r\n              >\r\n                <option value=\"Baja\">Baja</option>\r\n                <option value=\"Media\">Media</option>\r\n                <option value=\"Media-Alta\">Media-Alta</option>\r\n                <option value=\"Alta\">Alta</option>\r\n              </AvField>\r\n            </div>\r\n          </Col>\r\n          {/*\r\n            <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              \r\n                <Label htmlFor=\"sustainableCreditRating\">{t(\"EnvironmentalRiskclassification\")}</Label>\r\n                <select name=\"sustainableCreditRating\" id=\"sustainableCreditRating\" className=\"form-control\">\r\n                  <option value=\"1\">Opcion 1</option>\r\n                  <option value=\"2\">Opcion 2</option>\r\n                  <option value=\"3\">Opcion 3</option>\r\n                  <option value=\"4\">Opcion 4</option>\r\n                </select> \r\n              </div>      \r\n            </Col>\r\n             */}\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"riskClassificationConfirmation\">{t(\"EnvironmentalRiskclassification\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                type=\"select\"\r\n                name=\"riskClassificationConfirmation\"\r\n                onChange={(e) => { changeAll(e, \"riskClassificationConfirmation\") }}\r\n                value={dataReturn.riskClassificationConfirmation}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                }}\r\n                id=\"riskClassificationConfirmation\"\r\n              >\r\n                <option value=\"1\">Bajo</option>\r\n                <option value=\"2\">Medio</option>\r\n                <option value=\"3\">Medio-Alto</option>\r\n                <option value=\"4\">Alto</option>\r\n              </AvField>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <AvGroup check className=\"mb-3\">\r\n              <Switch name=\"isProjectLocatedProtectedNaturalArea\"\r\n                uncheckedIcon={<Offsymbol />}\r\n                checkedIcon={<OnSymbol />}\r\n                onColor=\"#007943\"\r\n                className=\"form-label\"\r\n                onChange={() => {\r\n                  setswitch1(!switch1);\r\n                }}\r\n                checked={switch1}\r\n              />\r\n              {'   '}\r\n              <Label className=\"form-check-label\" htmlFor=\"isProjectLocatedProtectedNaturalArea\"> {t(\"Is the project located or adjacent to a protected natural area\")}</Label>\r\n            </AvGroup>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <AvGroup check className=\"mb-3\">\r\n              <Switch name=\"theProjectInvolvePhysicalEconomicResettlement\"\r\n                uncheckedIcon={<Offsymbol />}\r\n                checkedIcon={<OnSymbol />}\r\n                onColor=\"#007943\"\r\n                className=\"form-label\"\r\n                onChange={() => {\r\n                  setswitch2(!switch2);\r\n                }}\r\n                checked={switch2}\r\n              />\r\n              {'   '}\r\n              <Label style={{ textAlign: \"left\" }} htmlFor=\"theProjectInvolvePhysicalEconomicResettlement\">{t(\"Does the project involve physical and or economic resettlement of more than 100 people\")}</Label>\r\n            </AvGroup>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <AvGroup check className=\"mb-3\">\r\n              <Switch name=\"isPresentationEnvironmentalPermitsNecessary\"\r\n                uncheckedIcon={<Offsymbol />}\r\n                checkedIcon={<OnSymbol />}\r\n                onColor=\"#007943\"\r\n                className=\"form-label\"\r\n                onChange={() => {\r\n                  setswitch3(!switch3);\r\n                }}\r\n                checked={switch3}\r\n              />\r\n              {'   '}\r\n              <Label style={{ textAlign: \"left\" }} htmlFor=\"isPresentationEnvironmentalPermitsNecessary\">{t(\"Is the presentation of environmental permits necessary for the execution of the project\")}</Label>\r\n            </AvGroup>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <AvGroup check className=\"mb-3\">\r\n              <Switch name=\"isProjectNew\"\r\n                uncheckedIcon={<Offsymbol />}\r\n                checkedIcon={<OnSymbol />}\r\n                onColor=\"#007943\"\r\n                className=\"form-label\"\r\n                onChange={() => {\r\n                  setswitch4(!switch4);\r\n                }}\r\n                checked={switch4}\r\n              />\r\n              {'   '}\r\n              <Label style={{ textAlign: \"left\" }} htmlFor=\"isProjectNew\">{t(\"Is the project new and involves the use of more than 35 hectares of land\")}</Label>\r\n            </AvGroup>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <AvGroup check className=\"mb-3\">\r\n              <Switch name=\"doesActivityEmployMoreThan50Workers\"\r\n                uncheckedIcon={<Offsymbol />}\r\n                checkedIcon={<OnSymbol />}\r\n                onColor=\"#007943\"\r\n                className=\"form-label\"\r\n                onChange={() => {\r\n                  setswitch5(!switch5);\r\n                }}\r\n                checked={switch5}\r\n              />\r\n              {'   '}\r\n              <Label style={{ textAlign: \"left\" }} htmlFor=\"doesActivityEmployMoreThan50Workers\">{t(\"Does the activity employ more than 50 workers and handle more than 15 contractors\")}</Label>  {'  '}\r\n            </AvGroup>\r\n          </Col>\r\n        </Row>\r\n        <AttachmentFileCore locationData={{ instanceId: locationData.instanceId, processId: locationData.processId, activityId: OPTs.ACT_ASPECTOSAMBIENTALES }} />\r\n      </AvForm>\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\n\r\n\r\nAspectosAmbientales.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  locationData: PropTypes.any,\r\n}\r\n\r\n\r\nexport default AspectosAmbientales;\r\n"]},"metadata":{},"sourceType":"module"}