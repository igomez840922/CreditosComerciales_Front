{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\InformacionClientes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalInformacionClientes from \"./ModalInformacionClientes\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BackendServices } from \"../../../../../services\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacionClientes = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('formClientes');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const location = useLocation();\n  const [dataLocation, setData] = useState(location.data);\n  const [botonValidation, setbotonValidation] = useState(true);\n  const [tipo, settipo] = useState(\"\");\n  const [dataReturn, setDataReturn] = useState(props.dataInformacionClientes);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [jsonClientes, setjsonClientes] = useState({\n    transactId: 0,\n    name: null,\n    country: null,\n    salePercentage: null,\n    customerType: null,\n    salesType: null,\n    termDays: null,\n    delayReason: null\n  });\n  const [formValid, setFormValid] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [dataClientes, setdataClientes] = useState(null);\n  const [locationData, setLocationData] = useState(null);\n  const history = useHistory();\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if (props.activeTab == 10) {\n      // Read Api Service data\n      initializeData(dataSession);\n    }\n  }, [props.activeTab == 10]);\n\n  function initializeData(dataLocation) {\n    const api = new BackendServices(); // consultarListaClientesIGR\n\n    api.consultListaClientesIGR(dataLocation.transactionId).then(resp => {\n      if (resp.clientsInformationListDTOList.length > 0) {\n        dataReturn.dataTableInformacionClientes = resp.clientsInformationListDTOList;\n        setDataReturn(dataReturn);\n        setdataGeneralIA(resp.clientsInformationListDTOList);\n        setdataClientes(resp.clientsInformationListDTOList.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Name\"),\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Country\"),\n            children: data.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"SalePercent\"),\n            children: [data.salePercentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"ClientType\"),\n            children: data.customerType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"SaleType\"),\n            children: data.salesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Crtermindays\"),\n            children: data.termDays\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"IncasofCollectionDelayindicateReasonforCollectionDelayandStartegia\"),\n            children: data.delayReason\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Actiones\"),\n            style: {\n              textAlign: \"right\",\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setdataClientes( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"8\",\n            style: {\n              textAlign: 'center'\n            },\n            children: t(\"NoData\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, 1372, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  function updateData(data) {\n    settipo(\"editar\");\n    setjsonClientes(data);\n    setbotonValidation(true);\n    abrirModal();\n  }\n\n  function deleteData(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function cerrarModal() {\n    setShowModelAttachment(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModelAttachment(true);\n    removeBodyCss();\n  }\n\n  function addCliente(values, tipo1) {\n    var _locationData$transac, _values$name, _values$country, _values$salePercentag, _values$customerType, _values$salesType, _values$delayReason, _values$termDays;\n\n    values.transactId = Number((_locationData$transac = locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _locationData$transac !== void 0 ? _locationData$transac : 0);\n    values.salePercentage = Number(values.salePercentage);\n    const apiBack = new BackendServices();\n    let datoSet = {\n      transactId: values.transactId,\n      name: (_values$name = values === null || values === void 0 ? void 0 : values.name) !== null && _values$name !== void 0 ? _values$name : \" \",\n      country: (_values$country = values === null || values === void 0 ? void 0 : values.country) !== null && _values$country !== void 0 ? _values$country : \" \",\n      salePercentage: (_values$salePercentag = values === null || values === void 0 ? void 0 : values.salePercentage) !== null && _values$salePercentag !== void 0 ? _values$salePercentag : 0,\n      customerType: (_values$customerType = values === null || values === void 0 ? void 0 : values.customerType) !== null && _values$customerType !== void 0 ? _values$customerType : \" \",\n      salesType: (_values$salesType = values === null || values === void 0 ? void 0 : values.salesType) !== null && _values$salesType !== void 0 ? _values$salesType : \" \",\n      delayReason: (_values$delayReason = values === null || values === void 0 ? void 0 : values.delayReason) !== null && _values$delayReason !== void 0 ? _values$delayReason : \" \",\n      termDays: (_values$termDays = values === null || values === void 0 ? void 0 : values.termDays) !== null && _values$termDays !== void 0 ? _values$termDays : 0\n    };\n\n    if (tipo1 == \"guardar\") {\n      // nuevoClienteIGR\n      apiBack.newClientIGR(datoSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    } else {\n      datoSet.customerInfoId = jsonClientes.customerInfoId; // actualizarClienteIGR\n\n      apiBack.updateIGRClient(datoSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setDataReturn(values);\n    setFormValid(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"ClientsInfo\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"formClientes\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"observacion\",\n              children: t(\"Description\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"observacion\",\n              type: \"textarea\",\n              value: props.dataInformacionClientes.description,\n              onChange: e => {\n                dataReturn.description = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              id: \"observacion\",\n              rows: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"salesCycle\",\n              children: t(\"SalesCycle\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kt-checkbox-list\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"kt-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"seasonalSales\",\n                  type: \"checkbox\",\n                  checked: props.dataInformacionClientes.seasonalSales,\n                  onChange: e => {\n                    dataReturn.seasonalSales = e.target.checked;\n                    setDataReturn(dataReturn);\n                  },\n                  id: \"seasonalSales\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(AvGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"percentageSalesSeasonalPeriods\",\n              children: t(\"PercentageSalesSeasonalPeriods\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"percSeasonalPeriodSales\",\n              type: \"number\",\n              max: \"100\",\n              validate: {\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                },\n                min: {\n                  value: 0,\n                  errorMessage: t(\"InvalidField\")\n                }\n              },\n              value: props.dataInformacionClientes.percSeasonalPeriodSales,\n              onChange: e => {\n                dataReturn.percSeasonalPeriodSales = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              id: \"percSeasonalPeriodSales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData(locationData);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      cancelButtonText: t(\"Cancel\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarClienteIGR\n\n        apiBack.removeClientIGR({\n          transactId: dataDelete.transactId,\n          customerIdentification: dataDelete.customerInfoId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            initializeData(locationData);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalInformacionClientes, {\n      dataGeneralIA: dataGeneralIA,\n      tipo: tipo,\n      jsonClientes: jsonClientes,\n      botones: botonValidation,\n      addCliente: addCliente,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}, \"VDCCcnCD1qW3VTkg1lAVT6vG9gc=\", false, function () {\n  return [useTranslation, React.useImperativeHandle, useLocation, useHistory];\n}));\n_c2 = InformacionClientes;\nInformacionClientes.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default InformacionClientes;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InformacionClientes$React.forwardRef\");\n$RefreshReg$(_c2, \"InformacionClientes\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/InformacionClientes.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Button","Label","Table","AvForm","AvField","AvGroup","ModalInformacionClientes","SweetAlert","BackendServices","url","InformacionClientes","forwardRef","props","ref","t","i18n","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn","location","dataLocation","setData","data","botonValidation","setbotonValidation","tipo","settipo","setDataReturn","dataInformacionClientes","dataDelete","setDataDelete","jsonClientes","setjsonClientes","transactId","name","country","salePercentage","customerType","salesType","termDays","delayReason","setFormValid","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","showModelAttachment","setShowModelAttachment","dataClientes","setdataClientes","locationData","setLocationData","history","dataGeneralIA","setdataGeneralIA","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","initializeData","api","consultListaClientesIGR","then","resp","clientsInformationListDTOList","dataTableInformacionClientes","map","index","textAlign","display","updateData","deleteData","abrirModal","cerrarModal","removeBodyCss","addCliente","values","tipo1","Number","apiBack","datoSet","newClientIGR","catch","error","customerInfoId","updateIGRClient","toggleShowModelAttachment","body","classList","add","handleSubmit","event","errors","preventDefault","description","e","target","value","seasonalSales","checked","number","errorMessage","min","percSeasonalPeriodSales","removeClientIGR","customerIdentification","statusCode","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalInformacionClientes from \"./ModalInformacionClientes\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nconst InformacionClientes = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('formClientes');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }))\r\n  const location = useLocation()\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const [tipo, settipo] = useState(\"\");\r\n  const [dataReturn, setDataReturn] = useState(props.dataInformacionClientes);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [jsonClientes, setjsonClientes] = useState({\r\n    transactId: 0,\r\n    name: null,\r\n    country: null,\r\n    salePercentage: null,\r\n    customerType: null,\r\n    salesType: null,\r\n    termDays: null,\r\n    delayReason: null\r\n  });\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [dataClientes, setdataClientes] = useState(null);\r\n  const [locationData, setLocationData] = useState(null);\r\n  const history = useHistory();\r\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\r\n\r\n  React.useEffect(() => {\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    if (props.activeTab == 10) {\r\n      // Read Api Service data\r\n      initializeData(dataSession);\r\n    }\r\n  }, [props.activeTab == 10]);\r\n  function initializeData(dataLocation) {\r\n    const api = new BackendServices()\r\n    // consultarListaClientesIGR\r\n    api.consultListaClientesIGR(dataLocation.transactionId).then(resp => {\r\n      if (resp.clientsInformationListDTOList.length > 0) {\r\n        dataReturn.dataTableInformacionClientes = resp.clientsInformationListDTOList;\r\n        setDataReturn(dataReturn)\r\n        setdataGeneralIA(resp.clientsInformationListDTOList);\r\n        setdataClientes(resp.clientsInformationListDTOList.map((data, index) => (\r\n          <tr key={index}>\r\n            <td data-label={t(\"Name\")}>{data.name}</td>\r\n            <td data-label={t(\"Country\")}>{data.country}</td>\r\n            <td data-label={t(\"SalePercent\")}>{data.salePercentage}%</td>\r\n            <td data-label={t(\"ClientType\")}>{data.customerType}</td>\r\n            <td data-label={t(\"SaleType\")}>{data.salesType}</td>\r\n            <td data-label={t(\"Crtermindays\")}>{data.termDays}</td>\r\n            <td data-label={t(\"IncasofCollectionDelayindicateReasonforCollectionDelayandStartegia\")}>{data.delayReason}</td>\r\n            <td data-label={t(\"Actiones\")} style={{ textAlign: \"right\", display:\"flex\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { deleteData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n            </td>\r\n          </tr>)\r\n        ));\r\n      } else {\r\n        setdataClientes(\r\n          <tr key={1372}>\r\n            <td colSpan=\"8\" style={{ textAlign: 'center' }}>{t(\"NoData\")}</td>\r\n          </tr>);\r\n      }\r\n    });\r\n  }\r\n  function updateData(data) {\r\n    settipo(\"editar\")\r\n    setjsonClientes(data)\r\n    setbotonValidation(true);\r\n    abrirModal()\r\n  }\r\n  function deleteData(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n  function cerrarModal() {\r\n    setShowModelAttachment(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModelAttachment(true);\r\n    removeBodyCss()\r\n  }\r\n  function addCliente(values, tipo1) {\r\n    values.transactId = Number(locationData?.transactionId ?? 0);\r\n    values.salePercentage = Number(values.salePercentage)\r\n    const apiBack = new BackendServices();\r\n    let datoSet = {\r\n      transactId: values.transactId,\r\n      name: values?.name ?? \" \",\r\n      country: values?.country ?? \" \",\r\n      salePercentage: values?.salePercentage ?? 0,\r\n      customerType: values?.customerType ?? \" \",\r\n      salesType: values?.salesType ?? \" \",\r\n      delayReason: values?.delayReason ?? \" \",\r\n      termDays: values?.termDays ?? 0\r\n    }\r\n    if (tipo1 == \"guardar\") {\r\n      // nuevoClienteIGR\r\n      apiBack.newClientIGR(datoSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      datoSet.customerInfoId = jsonClientes.customerInfoId\r\n      // actualizarClienteIGR\r\n      apiBack.updateIGRClient(datoSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setDataReturn(values)\r\n    setFormValid(true)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"ClientsInfo\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"formClientes\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <div className=\"mb-3\">\r\n            <Label htmlFor=\"observacion\">{t(\"Description\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"observacion\"\r\n              type=\"textarea\"\r\n              value={props.dataInformacionClientes.description}\r\n              onChange={(e) => { dataReturn.description = e.target.value; setDataReturn(dataReturn); }}\r\n              id=\"observacion\"\r\n              rows=\"7\" />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md=\"4\">\r\n          <div className=\"mb-3\">\r\n            <Label htmlFor=\"salesCycle\">{t(\"SalesCycle\")}</Label>\r\n            <div className=\"kt-checkbox-list\">\r\n              <label className=\"kt-checkbox\">\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"seasonalSales\"\r\n                  type=\"checkbox\"\r\n                  checked={props.dataInformacionClientes.seasonalSales}\r\n                  onChange={(e) => { dataReturn.seasonalSales = e.target.checked; setDataReturn(dataReturn); }}\r\n                  id=\"seasonalSales\" />\r\n                <span></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <AvGroup className=\"mb-3\">\r\n            <Label htmlFor=\"percentageSalesSeasonalPeriods\">{t(\"PercentageSalesSeasonalPeriods\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"percSeasonalPeriodSales\"\r\n              type=\"number\"\r\n              max=\"100\"\r\n              validate={{\r\n                number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                min: { value: 0, errorMessage: t(\"InvalidField\") }\r\n              }}\r\n              value={props.dataInformacionClientes.percSeasonalPeriodSales}\r\n              onChange={(e) => { dataReturn.percSeasonalPeriodSales = e.target.value; setDataReturn(dataReturn); }}\r\n              id=\"percSeasonalPeriodSales\" />\r\n          </AvGroup>\r\n        </Col>\r\n      </Row>\r\n    </AvForm>\r\n      {\r\n    successSave_dlg ? (\r\n      <SweetAlert\r\n        success\r\n        title={t(\"SuccessDialog\")}\r\n        confirmButtonText={t(\"Confirm\")}\r\n        cancelButtonText={t(\"Cancel\")}\r\n        onConfirm={() => {\r\n          setsuccessSave_dlg(false)\r\n          initializeData(locationData);\r\n        }}\r\n      >\r\n        {t(\"SuccessSaveMessage\")}\r\n      </SweetAlert>\r\n    ) : null\r\n  }\r\n\r\n  {\r\n    error_dlg ? (\r\n      <SweetAlert\r\n        error\r\n        title={t(\"ErrorDialog\")}\r\n        confirmButtonText={t(\"Confirm\")}\r\n        cancelButtonText={t(\"Cancel\")}\r\n        onConfirm={() => {\r\n          seterror_dlg(false)\r\n          initializeData(locationData);\r\n        }}\r\n      >\r\n        {error_msg}\r\n      </SweetAlert>\r\n    ) : null\r\n  }\r\n  {\r\n    confirm_alert ? (\r\n      <SweetAlert\r\n        title={t(\"Areyousure\")}\r\n        warning\r\n        showCancel\r\n        confirmButtonText={t(\"Yesdeleteit\")}\r\n        cancelButtonText={t(\"Cancel\")}\r\n        confirmBtnBsStyle=\"success\"\r\n        cancelBtnBsStyle=\"danger\"\r\n        onConfirm={() => {\r\n          const apiBack = new BackendServices();\r\n          // eliminarClienteIGR\r\n          apiBack.removeClientIGR({ transactId: dataDelete.transactId, customerIdentification: dataDelete.customerInfoId }).then(resp => {\r\n            if (resp.statusCode == \"500\") {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            } else {\r\n              setconfirm_alert(false)\r\n              initializeData(locationData);\r\n            }\r\n          }).catch(error => {\r\n            setconfirm_alert(false)\r\n            seterror_dlg(true)\r\n          })\r\n        }}\r\n        onCancel={() => setconfirm_alert(false)}\r\n      >\r\n        {t(\"Youwontbeabletorevertthis\")}\r\n      </SweetAlert>\r\n    ) : null\r\n  }\r\n  <ModalInformacionClientes dataGeneralIA={dataGeneralIA} tipo={tipo} jsonClientes={jsonClientes} botones={botonValidation} addCliente={addCliente} isOpen={showModelAttachment} toggle={() => { cerrarModal() }} />\r\n    </React.Fragment >\r\n  );\r\n})\r\nInformacionClientes.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default InformacionClientes;\r\n\r\n"]},"metadata":{},"sourceType":"module"}