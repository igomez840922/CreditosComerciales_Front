{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\Reciprocidad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Row, Col, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalReciprocidad from \"./ModalReciprocidad\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataReciprocity = [{\n  id: 1,\n  year: \"2019\",\n  month: \"enero\",\n  sales: '1500000',\n  deposits: '1000000',\n  averagebalance: \"2000\",\n  reciprocity: \"43%\",\n  sow: \"12%\"\n}, {\n  id: 2,\n  year: \"2019\",\n  month: \"enero\",\n  sales: '1500000',\n  deposits: '1000000',\n  averagebalance: \"2000\",\n  reciprocity: \"43%\",\n  sow: \"12%\"\n}, {\n  id: 3,\n  year: \"2019\",\n  month: \"enero\",\n  sales: '1500000',\n  deposits: '1000000',\n  averagebalance: \"2000\",\n  reciprocity: \"43%\",\n  sow: \"12%\"\n}, {\n  id: 4,\n  year: \"2019\",\n  month: \"enero\",\n  sales: '1500000',\n  deposits: '1000000',\n  averagebalance: \"2000\",\n  reciprocity: \"43%\",\n  sow: \"12%\"\n}];\nconst Reciprocidad = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [dataReturn, setdataReturn] = useState(props.dataReciprocidad);\n  const [dataLocation, setData] = useState(location.data);\n  /* -------------------------------------------------------- -------------------------------------- */\n\n  /*                        Variables de estados para los mensajes de alerta                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [tipo, setTipo] = useState(\"\");\n  const [botonValidation, setbotonValidation] = useState(true);\n  const [formValid, setFormValid] = useState(false);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\n  const [dataRecipro, setdataRecipro] = useState({\n    transactId: null,\n    year: null,\n    month: null,\n    sales: null,\n    deposits: null,\n    averageBalance: null,\n    reciprocity: null,\n    sow: null\n  });\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmReprocididad');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [showModalReciprocidad, setShowModalReciprocidad] = useState(false);\n  React.useEffect(() => {\n    // Read Api Serv ice ddasat a\n    setdataReturn(props.dataReciprocidad);\n    initializeData();\n  }, [props.dataReciprocidad]);\n\n  function initializeData() {\n    const api = new BackendServices(); // consultarListaReciprocidadIGR\n\n    api.consultIGRReciprocityList(dataLocation.transactionId).then(resp => {\n      if (resp.reciprocity.length > 0) {\n        dataReturn.dataTableReciprocidad = resp.reciprocity;\n        setdataReturn(dataReturn);\n        setdataReciprocityRows(resp.reciprocity.map(data => data.status ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.sales\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.deposits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.averageBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.reciprocity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.sow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : null));\n      } else {\n        setdataReciprocityRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: t(\"NoData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } // guardar y editar datos\n\n\n  function dataManagament(data, tipo) {\n    const api = new BackendServices();\n    data.transactId = dataLocation.transactionId;\n    let datos = {\n      \"transactId\": dataLocation.transactionId,\n      \"year\": Number(data.year),\n      \"month\": data.month,\n      \"sales\": Number(data.sales),\n      \"deposits\": Number(data.deposits),\n      \"averageBalance\": Number(data.averageBalance),\n      \"reciprocity\": Number(data.reciprocity),\n      \"sow\": data.sow\n    };\n\n    if (tipo == \"guardar\") {\n      // nuevoReciprocidadIGR\n      api.newReciprocityIGR(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      // actualizarReciprocidadIGR\n      api.updateReciprocityIGR(data).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModalReciprocidad(!showModalReciprocidad);\n    removeBodyCss();\n  }\n\n  function updateData(data) {\n    setdataRecipro(data);\n    setTipo(\"editar\");\n    setbotonValidation(true);\n    toggleShowModelAttachment();\n  }\n\n  function deleteData(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setFormValid(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Reciprocity\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmReprocididad\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mt-1\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Year\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Month\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Sales\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Deposits\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"AverageBalance\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Reciprocity\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Sow\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"float-end\",\n                    onClick: () => {\n                      setbotonValidation(true);\n                      setdataRecipro({\n                        transactId: null,\n                        year: null,\n                        month: null,\n                        sales: null,\n                        deposits: null,\n                        averageBalance: null,\n                        reciprocity: null,\n                        sow: null\n                      });\n                      setTipo(\"guardar\");\n                      toggleShowModelAttachment();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataReciprocityRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDescription\",\n              children: t(\"Description\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              type: \"textarea\",\n              name: \"companyHistoryDetails\",\n              id: \"companyHistoryDetails\",\n              maxLength: \"1000\",\n              rows: \"7\",\n              value: props.dataReciprocidad.observations,\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setdataReturn(dataReturn);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalReciprocidad, {\n      tipo: tipo,\n      botones: botonValidation,\n      dataRecipro: dataRecipro,\n      dataManagament: dataManagament,\n      isOpen: showModalReciprocidad,\n      toggle: () => {\n        toggleShowModelAttachment();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.removeReciprocityIGR({\n          transactId: dataLocation.transactionId,\n          reciprocityId: dataDelete.reciprocity_id\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}, \"UplpwHfc221/GGooh4Vtq6m0XOI=\", false, function () {\n  return [useTranslation, useLocation, React.useImperativeHandle];\n}));\n_c2 = Reciprocidad;\nReciprocidad.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Reciprocidad;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reciprocidad$React.forwardRef\");\n$RefreshReg$(_c2, \"Reciprocidad\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/Reciprocidad.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","Row","Col","Button","Label","Table","AvForm","AvField","AvGroup","ModalReciprocidad","BackendServices","SweetAlert","dataReciprocity","id","year","month","sales","deposits","averagebalance","reciprocity","sow","Reciprocidad","forwardRef","props","ref","t","i18n","location","dataReturn","setdataReturn","dataReciprocidad","dataLocation","setData","data","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","tipo","setTipo","botonValidation","setbotonValidation","formValid","setFormValid","dataDelete","setDataDelete","dataReciprocityRows","setdataReciprocityRows","dataRecipro","setdataRecipro","transactId","averageBalance","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","showModalReciprocidad","setShowModalReciprocidad","useEffect","initializeData","api","consultIGRReciprocityList","transactionId","then","resp","length","dataTableReciprocidad","map","status","textAlign","updateData","deleteData","dataManagament","datos","Number","newReciprocityIGR","undefined","toggleShowModelAttachment","catch","err","updateReciprocityIGR","removeBodyCss","body","classList","add","handleSubmit","event","errors","values","preventDefault","observations","e","target","value","apiBack","removeReciprocityIGR","reciprocityId","reciprocity_id","statusCode","error","propTypes","onSubmit","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,eAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,KALF,QAMO,YANP;AAOA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,gCAAzC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AACA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE,SAA9C;AAAyDC,EAAAA,QAAQ,EAAE,SAAnE;AAA8EC,EAAAA,cAAc,EAAE,MAA9F;AAAsGC,EAAAA,WAAW,EAAE,KAAnH;AAA0HC,EAAAA,GAAG,EAAE;AAA/H,CADsB,EAEtB;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE,SAA9C;AAAyDC,EAAAA,QAAQ,EAAE,SAAnE;AAA8EC,EAAAA,cAAc,EAAE,MAA9F;AAAsGC,EAAAA,WAAW,EAAE,KAAnH;AAA0HC,EAAAA,GAAG,EAAE;AAA/H,CAFsB,EAGtB;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE,SAA9C;AAAyDC,EAAAA,QAAQ,EAAE,SAAnE;AAA8EC,EAAAA,cAAc,EAAE,MAA9F;AAAsGC,EAAAA,WAAW,EAAE,KAAnH;AAA0HC,EAAAA,GAAG,EAAE;AAA/H,CAHsB,EAItB;AAAEP,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,MAAf;AAAuBC,EAAAA,KAAK,EAAE,OAA9B;AAAuCC,EAAAA,KAAK,EAAE,SAA9C;AAAyDC,EAAAA,QAAQ,EAAE,SAAnE;AAA8EC,EAAAA,cAAc,EAAE,MAA9F;AAAsGC,EAAAA,WAAW,EAAE,KAAnH;AAA0HC,EAAAA,GAAG,EAAE;AAA/H,CAJsB,CAAxB;AAMA,MAAMC,YAAY,gBAAG3B,KAAK,CAAC4B,UAAN,SAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACpD,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAc9B,cAAc,EAAlC;AACA,QAAM+B,QAAQ,GAAG3B,WAAW,EAA5B;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC4B,KAAK,CAACO,gBAAP,CAA5C;AACA,QAAM,CAACC,YAAD,EAAeC,OAAf,IAA0BrC,QAAQ,CAACgC,QAAQ,CAACM,IAAV,CAAxC;AACA;;AACA;;AACA;;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCxC,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACyC,SAAD,EAAYC,YAAZ,IAA4B1C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC2C,SAAD,EAAYC,YAAZ,IAA4B5C,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC6C,QAAD,EAAWC,WAAX,IAA0B9C,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC+C,QAAD,EAAWC,WAAX,IAA0BhD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiD,aAAD,EAAgBC,gBAAhB,IAAoClD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACmD,aAAD,EAAgBC,gBAAhB,IAAoCpD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACqD,WAAD,EAAcC,cAAd,IAAgCtD,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuD,mBAAD,EAAsBC,sBAAtB,IAAgDxD,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACyD,IAAD,EAAOC,OAAP,IAAkB1D,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC2D,eAAD,EAAkBC,kBAAlB,IAAwC5D,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAAC6D,SAAD,EAAYC,YAAZ,IAA4B9D,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC+D,UAAD,EAAaC,aAAb,IAA8BhE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiE,mBAAD,EAAsBC,sBAAtB,IAAgDlE,QAAQ,CAAC,IAAD,CAA9D;AACA,QAAM,CAACmE,WAAD,EAAcC,cAAd,IAAgCpE,QAAQ,CAAC;AAC7CqE,IAAAA,UAAU,EAAE,IADiC;AAE7ClD,IAAAA,IAAI,EAAE,IAFuC;AAG7CC,IAAAA,KAAK,EAAE,IAHsC;AAI7CC,IAAAA,KAAK,EAAE,IAJsC;AAK7CC,IAAAA,QAAQ,EAAE,IALmC;AAM7CgD,IAAAA,cAAc,EAAE,IAN6B;AAO7C9C,IAAAA,WAAW,EAAE,IAPgC;AAQ7CC,IAAAA,GAAG,EAAE;AARwC,GAAD,CAA9C;AAUA1B,EAAAA,KAAK,CAACwE,mBAAN,CAA0B1C,GAA1B,EAA+B,OAAO;AACpC2C,IAAAA,YAAY,EAAE,MAAM;AAClB,YAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAb;AACAF,MAAAA,IAAI,CAACG,aAAL;AACD,KAJmC;AAKpCC,IAAAA,iBAAiB,EAAE,MAAM;AACvB,aAAOhB,SAAP;AACD,KAPmC;AAOjC5B,IAAAA;AAPiC,GAAP,CAA/B;AASA,QAAM,CAAC6C,qBAAD,EAAwBC,wBAAxB,IAAoD/E,QAAQ,CAAC,KAAD,CAAlE;AACAD,EAAAA,KAAK,CAACiF,SAAN,CAAgB,MAAM;AACpB;AACA9C,IAAAA,aAAa,CAACN,KAAK,CAACO,gBAAP,CAAb;AACA8C,IAAAA,cAAc;AACf,GAJD,EAIG,CAACrD,KAAK,CAACO,gBAAP,CAJH;;AAKA,WAAS8C,cAAT,GAA0B;AACxB,UAAMC,GAAG,GAAG,IAAInE,eAAJ,EAAZ,CADwB,CAExB;;AACAmE,IAAAA,GAAG,CAACC,yBAAJ,CAA8B/C,YAAY,CAACgD,aAA3C,EAA0DC,IAA1D,CAA+DC,IAAI,IAAI;AACrE,UAAIA,IAAI,CAAC9D,WAAL,CAAiB+D,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BtD,QAAAA,UAAU,CAACuD,qBAAX,GAAmCF,IAAI,CAAC9D,WAAxC;AACAU,QAAAA,aAAa,CAACD,UAAD,CAAb;AACAiC,QAAAA,sBAAsB,CAACoB,IAAI,CAAC9D,WAAL,CAAiBiE,GAAjB,CAAsBnD,IAAD,IAC1CA,IAAI,CAACoD,MAAL,gBACE;AAAA,kCACE;AAAA,sBAAKpD,IAAI,CAACnB;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKmB,IAAI,CAAClB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKkB,IAAI,CAACjB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKiB,IAAI,CAAChB;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,sBAAKgB,IAAI,CAACgC;AAAV;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA,sBAAKhC,IAAI,CAACd;AAAV;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAA,sBAAKc,IAAI,CAACb;AAAV;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAI,YAAA,KAAK,EAAE;AAAEkE,cAAAA,SAAS,EAAE;AAAb,aAAX;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,MAA5B;AAAmC,cAAA,OAAO,EAAGL,IAAD,IAAU;AAAEM,gBAAAA,UAAU,CAACtD,IAAD,CAAV;AAAkB,eAA1E;AAA4E,cAAA,SAAS,EAAC,cAAtF;AAAA,qCAAsG;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAtG;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,MAA5B;AAAmC,cAAA,OAAO,EAAGgD,IAAD,IAAU;AAAEO,gBAAAA,UAAU,CAACvD,IAAD,CAAV;AAAkB,eAA1E;AAA4E,cAAA,SAAS,EAAC,cAAtF;AAAA,qCAAsG;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAtG;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WAASA,IAAI,CAACpB,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF,GAaU,IAdW,CAAD,CAAtB;AAgBD,OAnBD,MAmBO;AACLgD,QAAAA,sBAAsB,eACpB;AAAA,iCACE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAgB,YAAA,KAAK,EAAE;AAAEyB,cAAAA,SAAS,EAAE;AAAb,aAAvB;AAAA,mCAAgD;AAAA,wBAAK7D,CAAC,CAAC,QAAD;AAAN;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF,WAAS,CAAT;AAAA;AAAA;AAAA;AAAA,gBADoB,CAAtB;AAID;AACF,KA1BD;AA2BD,GA7EmD,CA8EpD;;;AACA,WAASgE,cAAT,CAAwBxD,IAAxB,EAA8BmB,IAA9B,EAAoC;AAClC,UAAMyB,GAAG,GAAG,IAAInE,eAAJ,EAAZ;AACAuB,IAAAA,IAAI,CAAC+B,UAAL,GAAkBjC,YAAY,CAACgD,aAA/B;AACA,QAAIW,KAAK,GAAG;AACV,oBAAc3D,YAAY,CAACgD,aADjB;AAEV,cAAQY,MAAM,CAAC1D,IAAI,CAACnB,IAAN,CAFJ;AAGV,eAASmB,IAAI,CAAClB,KAHJ;AAIV,eAAS4E,MAAM,CAAC1D,IAAI,CAACjB,KAAN,CAJL;AAKV,kBAAY2E,MAAM,CAAC1D,IAAI,CAAChB,QAAN,CALR;AAMV,wBAAkB0E,MAAM,CAAC1D,IAAI,CAACgC,cAAN,CANd;AAOV,qBAAe0B,MAAM,CAAC1D,IAAI,CAACd,WAAN,CAPX;AAQV,aAAOc,IAAI,CAACb;AARF,KAAZ;;AAUA,QAAIgC,IAAI,IAAI,SAAZ,EAAuB;AACrB;AACAyB,MAAAA,GAAG,CAACe,iBAAJ,CAAsBF,KAAtB,EAA6BV,IAA7B,CAAkCC,IAAI,IAAI;AACxC,YAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKY,SAA9B,EAAyC;AACvC1D,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA2D,UAAAA,yBAAyB;AAC1B,SAHD,MAGO;AACLA,UAAAA,yBAAyB;AACzBzD,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,OARD,EAQG0D,KARH,CAQSC,GAAG,IAAI;AACd3D,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAVD;AAWD,KAbD,MAaO;AACL;AACAwC,MAAAA,GAAG,CAACoB,oBAAJ,CAAyBhE,IAAzB,EAA+B+C,IAA/B,CAAoCC,IAAI,IAAI;AAC1C,YAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKY,SAA9B,EAAyC;AACvC1D,UAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA2D,UAAAA,yBAAyB;AAC1B,SAHD,MAGO;AACLA,UAAAA,yBAAyB;AACzBzD,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,OARD,EAQG0D,KARH,CAQSC,GAAG,IAAI;AACd3D,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAVD;AAWD;AACF,GAvHmD,CAwHpD;;;AACA,WAASyD,yBAAT,GAAqC;AACnCpB,IAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACAyB,IAAAA,aAAa;AACd;;AACD,WAASX,UAAT,CAAoBtD,IAApB,EAA0B;AACxB8B,IAAAA,cAAc,CAAC9B,IAAD,CAAd;AACAoB,IAAAA,OAAO,CAAC,QAAD,CAAP;AACAE,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAuC,IAAAA,yBAAyB;AAC1B;;AACD,WAASN,UAAT,CAAoBvD,IAApB,EAA0B;AACxB0B,IAAAA,aAAa,CAAC1B,IAAD,CAAb;AACAc,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;;AACD,WAASmD,aAAT,GAAyB;AACvB7B,IAAAA,QAAQ,CAAC8B,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACD,GAzImD,CA0IpD;;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6C;AAC3CF,IAAAA,KAAK,CAACG,cAAN;;AACA,QAAIF,MAAM,CAACtB,MAAP,GAAgB,CAApB,EAAuB;AACrB;AACD;;AACDzB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,gBACGhC,CAAC,CAAC,aAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,iBAAX;AAA6B,MAAA,SAAS,EAAC,kBAAvC;AAA0D,MAAA,QAAQ,EAAE6E,YAApE;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAA8B,YAAA,UAAU,MAAxC;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,aAAjB;AAAA,qCACE;AAAA,wCACE;AAAA,4BAAK7E,CAAC,CAAC,MAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA,4BAAKA,CAAC,CAAC,OAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAA,4BAAKA,CAAC,CAAC,OAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA,4BAAKA,CAAC,CAAC,UAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAA,4BAAKA,CAAC,CAAC,gBAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAA,4BAAKA,CAAC,CAAC,aAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBANF,eAOE;AAAA,4BAAKA,CAAC,CAAC,KAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBAPF,eAQE;AAAA,yCACE,QAAC,IAAD;AAAM,oBAAA,SAAS,EAAC,WAAhB;AAA4B,oBAAA,OAAO,EAAE,MAAM;AACzC8B,sBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AAA0BQ,sBAAAA,cAAc,CAAC;AACvCC,wBAAAA,UAAU,EAAE,IAD2B;AAEvClD,wBAAAA,IAAI,EAAE,IAFiC;AAGvCC,wBAAAA,KAAK,EAAE,IAHgC;AAIvCC,wBAAAA,KAAK,EAAE,IAJgC;AAKvCC,wBAAAA,QAAQ,EAAE,IAL6B;AAMvCgD,wBAAAA,cAAc,EAAE,IANuB;AAOvC9C,wBAAAA,WAAW,EAAE,IAP0B;AAQvCC,wBAAAA,GAAG,EAAE;AARkC,uBAAD,CAAd;AAStBiC,sBAAAA,OAAO,CAAC,SAAD,CAAP;AAAoByC,sBAAAA,yBAAyB;AAClD,qBAXD;AAAA,2CAWG;AAAG,sBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAXH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eA0BE;AAAA,wBACGlC;AADH;AAAA;AAAA;AAAA;AAAA,oBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAmCE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,IAAR;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,OAAO,EAAC,2BAAf;AAAA,wBAA4CnC,CAAC,CAAC,aAAD;AAA7C;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,OAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,IAAI,EAAC,uBAFP;AAGE,cAAA,EAAE,EAAC,uBAHL;AAIE,cAAA,SAAS,EAAC,MAJZ;AAKE,cAAA,IAAI,EAAC,GALP;AAME,cAAA,KAAK,EAAEF,KAAK,CAACO,gBAAN,CAAuB6E,YANhC;AAOE,cAAA,QAAQ,EAAGC,CAAD,IAAO;AAAEhF,gBAAAA,UAAU,CAAC+E,YAAX,GAA0BC,CAAC,CAACC,MAAF,CAASC,KAAnC;AAA0CjF,gBAAAA,aAAa,CAACD,UAAD,CAAb;AAA2B;AAP1F;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAyDE,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEwB,IAAzB;AAA+B,MAAA,OAAO,EAAEE,eAAxC;AAAyD,MAAA,WAAW,EAAEQ,WAAtE;AAAmF,MAAA,cAAc,EAAE2B,cAAnG;AAAmH,MAAA,MAAM,EAAEhB,qBAA3H;AAAkJ,MAAA,MAAM,EAAE,MAAM;AAAEqB,QAAAA,yBAAyB;AAAI;AAA/L;AAAA;AAAA;AAAA;AAAA,YAzDF,EA0DG5D,eAAe,gBACd,QAAC,UAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,KAAK,EAAET,CAAC,CAAC,eAAD,CAFV;AAGE,MAAA,SAAS,EAAE,MAAM;AACfU,QAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAyC,QAAAA,cAAc;AACf,OANH;AAAA,gBAQGnD,CAAC,CAAC,oBAAD;AARJ;AAAA;AAAA;AAAA;AAAA,YADc,GAWZ,IArEN,EAuEGW,SAAS,gBACR,QAAC,UAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAEX,CAAC,CAAC,aAAD,CAFV;AAGE,MAAA,SAAS,EAAE,MAAM;AACfY,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAuC,QAAAA,cAAc;AACf,OANH;AAAA,gBAQGtC;AARH;AAAA;AAAA;AAAA;AAAA,YADQ,GAWN,IAlFN,EAmFGQ,aAAa,gBACZ,QAAC,UAAD;AACE,MAAA,KAAK,EAAErB,CAAC,CAAC,YAAD,CADV;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,iBAAiB,EAAEA,CAAC,CAAC,aAAD,CAJtB;AAKE,MAAA,iBAAiB,EAAC,SALpB;AAME,MAAA,gBAAgB,EAAC,QANnB;AAOE,MAAA,SAAS,EAAE,MAAM;AACf,cAAMsF,OAAO,GAAG,IAAIrG,eAAJ,EAAhB;AACAqG,QAAAA,OAAO,CAACC,oBAAR,CAA6B;AAAEhD,UAAAA,UAAU,EAAEjC,YAAY,CAACgD,aAA3B;AAA0CkC,UAAAA,aAAa,EAAEvD,UAAU,CAACwD;AAApE,SAA7B,EAAmHlC,IAAnH,CAAwHC,IAAI,IAAI;AAC9H,cAAIA,IAAI,CAACkC,UAAL,IAAmB,KAAvB,EAA8B;AAC5BpE,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAV,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,WAHD,MAGO;AACLU,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAZ,YAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF,SARD,EAQG4D,KARH,CAQSqB,KAAK,IAAI;AAChBrE,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAV,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAXD;AAYD,OArBH;AAsBE,MAAA,QAAQ,EAAE,MAAMU,gBAAgB,CAAC,KAAD,CAtBlC;AAAA,gBAwBGtB,CAAC,CAAC,2BAAD;AAxBJ;AAAA;AAAA;AAAA;AAAA,YADY,GA2BV,IA9GN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmHD,CArQoB;AAAA,UACC7B,cADD,EAEFI,WAFE,EAgCnBN,KAAK,CAACwE,mBAhCa;AAAA,GAArB;MAAM7C,Y;AAsQNA,YAAY,CAACgG,SAAb,GAAyB;AACvBC,EAAAA,QAAQ,EAAExH,SAAS,CAACyH,IAAV,CAAeC;AADF,CAAzB;AAGA,eAAenG,YAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalReciprocidad from \"./ModalReciprocidad\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nconst dataReciprocity = [\r\n  { id: 1, year: \"2019\", month: \"enero\", sales: '1500000', deposits: '1000000', averagebalance: \"2000\", reciprocity: \"43%\", sow: \"12%\" },\r\n  { id: 2, year: \"2019\", month: \"enero\", sales: '1500000', deposits: '1000000', averagebalance: \"2000\", reciprocity: \"43%\", sow: \"12%\" },\r\n  { id: 3, year: \"2019\", month: \"enero\", sales: '1500000', deposits: '1000000', averagebalance: \"2000\", reciprocity: \"43%\", sow: \"12%\" },\r\n  { id: 4, year: \"2019\", month: \"enero\", sales: '1500000', deposits: '1000000', averagebalance: \"2000\", reciprocity: \"43%\", sow: \"12%\" },\r\n];\r\nconst Reciprocidad = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const [dataReturn, setdataReturn] = useState(props.dataReciprocidad);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  /* -------------------------------------------------------- -------------------------------------- */\r\n  /*                        Variables de estados para los mensajes de alerta                        */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [tipo, setTipo] = useState(\"\")\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\r\n  const [dataRecipro, setdataRecipro] = useState({\r\n    transactId: null,\r\n    year: null,\r\n    month: null,\r\n    sales: null,\r\n    deposits: null,\r\n    averageBalance: null,\r\n    reciprocity: null,\r\n    sow: null\r\n  });\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmReprocididad');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  const [showModalReciprocidad, setShowModalReciprocidad] = useState(false);\r\n  React.useEffect(() => {\r\n    // Read Api Serv ice ddasat a\r\n    setdataReturn(props.dataReciprocidad)\r\n    initializeData();\r\n  }, [props.dataReciprocidad]);\r\n  function initializeData() {\r\n    const api = new BackendServices();\r\n    // consultarListaReciprocidadIGR\r\n    api.consultIGRReciprocityList(dataLocation.transactionId).then(resp => {\r\n      if (resp.reciprocity.length > 0) {\r\n        dataReturn.dataTableReciprocidad = resp.reciprocity;\r\n        setdataReturn(dataReturn);\r\n        setdataReciprocityRows(resp.reciprocity.map((data) => (\r\n          data.status ?\r\n            <tr key={data.id}>\r\n              <td>{data.year}</td>\r\n              <td>{data.month}</td>\r\n              <td>{data.sales}</td>\r\n              <td>{data.deposits}</td>\r\n              <td>{data.averageBalance}</td>\r\n              <td>{data.reciprocity}</td>\r\n              <td>{data.sow}</td>\r\n              <td style={{ textAlign: \"right\" }}>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { deleteData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n              </td>\r\n            </tr> : null)\r\n        ));\r\n      } else {\r\n        setdataReciprocityRows(\r\n          <tr key={1}>\r\n            <td colSpan=\"7\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n          </tr>);\r\n      }\r\n    });\r\n  }\r\n  // guardar y editar datos\r\n  function dataManagament(data, tipo) {\r\n    const api = new BackendServices()\r\n    data.transactId = dataLocation.transactionId;\r\n    let datos = {\r\n      \"transactId\": dataLocation.transactionId,\r\n      \"year\": Number(data.year),\r\n      \"month\": data.month,\r\n      \"sales\": Number(data.sales),\r\n      \"deposits\": Number(data.deposits),\r\n      \"averageBalance\": Number(data.averageBalance),\r\n      \"reciprocity\": Number(data.reciprocity),\r\n      \"sow\": data.sow\r\n    }\r\n    if (tipo == \"guardar\") {\r\n      // nuevoReciprocidadIGR\r\n      api.newReciprocityIGR(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      // actualizarReciprocidadIGR\r\n      api.updateReciprocityIGR(data).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n    setShowModalReciprocidad(!showModalReciprocidad);\r\n    removeBodyCss()\r\n  }\r\n  function updateData(data) {\r\n    setdataRecipro(data);\r\n    setTipo(\"editar\");\r\n    setbotonValidation(true);\r\n    toggleShowModelAttachment();\r\n  }\r\n  function deleteData(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setFormValid(true)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Reciprocity\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmReprocididad\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Table className=\"table mt-1\" responsive>\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"Year\")}</th>\r\n                  <th>{t(\"Month\")}</th>\r\n                  <th>{t(\"Sales\")}</th>\r\n                  <th>{t(\"Deposits\")}</th>\r\n                  <th>{t(\"AverageBalance\")}</th>\r\n                  <th>{t(\"Reciprocity\")}</th>\r\n                  <th>{t(\"Sow\")}</th>\r\n                  <th>\r\n                    <Link className=\"float-end\" onClick={() => {\r\n                      setbotonValidation(true); setdataRecipro({\r\n                        transactId: null,\r\n                        year: null,\r\n                        month: null,\r\n                        sales: null,\r\n                        deposits: null,\r\n                        averageBalance: null,\r\n                        reciprocity: null,\r\n                        sow: null\r\n                      }); setTipo(\"guardar\"); toggleShowModelAttachment();\r\n                    }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataReciprocityRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDescription\">{t(\"Description\")}</Label>\r\n              <AvField\r\n                type=\"textarea\"\r\n                name=\"companyHistoryDetails\"\r\n                id=\"companyHistoryDetails\"\r\n                maxLength=\"1000\"\r\n                rows=\"7\"\r\n                value={props.dataReciprocidad.observations}\r\n                onChange={(e) => { dataReturn.observations = e.target.value; setdataReturn(dataReturn) }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      <ModalReciprocidad tipo={tipo} botones={botonValidation} dataRecipro={dataRecipro} dataManagament={dataManagament} isOpen={showModalReciprocidad} toggle={() => { toggleShowModelAttachment() }} />\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.removeReciprocityIGR({ transactId: dataLocation.transactionId, reciprocityId: dataDelete.reciprocity_id }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\nReciprocidad.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default Reciprocidad;\r\n"]},"metadata":{},"sourceType":"module"}