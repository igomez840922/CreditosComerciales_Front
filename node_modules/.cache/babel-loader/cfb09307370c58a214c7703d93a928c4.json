{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\LogProcess\\\\index.js\",\n    _s = $RefreshSig$();\n\n//Gestionar Log de los Procesos\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport functionshelper from \"../../helpers/functions_helper\";\nimport moment from \"moment\";\nimport { Table, Card, CardHeader, CardBody, UncontrolledAlert, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert'; //i18n\n\nimport { withTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport ModalNewLog from \"./ModalNewLog\";\nimport { BackendServices } from \"../../services/index\";\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { useTranslation } from 'react-i18next';\nimport { uniq_key } from \"../../helpers/unq_key\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  ExportCSVButton\n} = CSVExport;\nconst {\n  SearchBar\n} = Search;\n\nconst MyExportCSV = props => {\n  const handleClick = () => {\n    props.onExport();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn\",\n      color: \"success\",\n      type: \"button\",\n      style: {\n        margin: '5px'\n      },\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-file-csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 109\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyExportCSV;\n\nconst LogProcess = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\n  const [dataList, setDataList] = useState([]);\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  const [dataOptions, setDataOptions] = useState([]);\n  const [dataHeader, setDataHeader] = useState([]);\n  const [dataBody, setDataBody] = useState([]);\n  useEffect(() => {\n    if (logProcessModel !== undefined && logProcessModel !== null) {\n      loadMainDebtor(logProcessModel.transactId);\n      searchData(logProcessModel.transactId);\n    }\n  }, []);\n  useEffect(() => {\n    if (logProcessModel !== undefined && logProcessModel !== null) {\n      loadMainDebtor(logProcessModel.transactId);\n      searchData(logProcessModel.transactId);\n    }\n  }, [props.updatedata]); //nuevo log\n\n  function toggleDisplayNewLogModal() {\n    setDisplayNewLogModal(!displayNewLogModal);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function loadMainDebtor(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  } //buscamos las Propuestas de Credito\n\n\n  function searchData(transactId) {\n    loadTableData(transactId);\n    /*backendServices.getHistorical(transactId)\r\n      .then(resp => {\r\n        const dataRows = resp.map((dt, idx) => (\r\n          <tr key={idx}>\r\n            <td scope=\"row\">{moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n            <td>{dt.observations}</td>\r\n            <td>{dt.processBpmName }</td>\r\n            <td>{dt.activityBpmName }</td>\r\n            <td>{dt.statusDescription}</td>\r\n            <td>{dt.responsible}</td>\r\n          </tr>)\r\n        );\r\n        setDataList(dataRows);\r\n      }).catch(err => {console.log(err);});*/\n  }\n\n  async function loadTableData(transactId) {\n    var result = await backendServices.getHistorical(transactId);\n    console.log();\n\n    if (result !== undefined) {\n      for (var dt of result) {\n        dt.date = moment(dt.date).format(\"DD-MM-YYYY HH:mm:ss\");\n      }\n\n      setDataBody(result);\n    }\n\n    let options = {\n      textLabels: {\n        body: {\n          noMatch: t(\"NoData\"),\n          toolTip: t(\"Order\"),\n          key: uniq_key(),\n          columnHeaderTooltip: column => `${t(\"OrderBy\")} ${column.label}`\n        },\n        pagination: {\n          next: t(\"Next\"),\n          previous: t(\"Prev\"),\n          rowsPerPage: t(\"RowsPerPage\"),\n          displayRows: t(\"From\"),\n          sizePerPage: 5,\n          key: uniq_key(),\n          sizePerPageList: [{\n            text: '5th',\n            value: 5\n          }, {\n            text: '10th',\n            value: 10\n          }, {\n            text: 'All',\n            value: 20\n          }]\n        },\n        toolbar: {\n          search: t(\"Search\"),\n          downloadCsv: t(\"DownloadCSV\"),\n          print: t(\"Print\"),\n          viewColumns: t(\"ViewColumns\"),\n          filterTable: t(\"FilterTable\")\n        },\n        filter: {\n          all: t(\"All\"),\n          title: t(\"Filter\"),\n          reset: t(\"Restore\")\n        },\n        viewColumns: {\n          title: t(\"ShowColumns\"),\n          titleAria: t(\"ShowHideColumns\")\n        },\n        selectedRows: {\n          text: t(\"SelectedRows\"),\n          delete: t(\"Delete\"),\n          deleteAria: t(\"DeleteSelectedRows\")\n        }\n      }\n    }; //Header de la Tabla de Bandeja de Entrada\n\n    const columns = [{\n      text: t(\"Date\"),\n      dataField: 'date',\n      sort: true\n    }, {\n      text: t(\"Comment\"),\n      dataField: 'observations',\n      sort: true\n    }, {\n      text: t(\"Process\"),\n      dataField: 'processBpmName',\n      sort: true\n    }, {\n      text: t(\"Activity\"),\n      dataField: 'activityBpmName',\n      sort: true\n    }, {\n      text: t(\"Status\"),\n      dataField: 'statusDescription',\n      sort: true\n    }, {\n      text: t(\"Return Description\"),\n      dataField: 'devolutionDesc',\n      sort: true\n    }, {\n      text: t(\"User\"),\n      dataField: 'responsible',\n      sort: true\n    }];\n    setDataHeader(columns);\n    setDataOptions(options);\n  }\n\n  function onSaveLogProcess(observations) {\n    var _credentials$usr, _mainDebtor$personId;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    logProcessModel.responsible = (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\";\n    logProcessModel.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : logProcessModel.clientId;\n    logProcessModel.observations = observations;\n    console.log(\"logProcessModel\", logProcessModel);\n    backendServices.saveHistorical(logProcessModel).then(resp => {\n      if (resp !== undefined) {\n        searchData(logProcessModel.transactId);\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"ErrorSaveMessage\"), true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: t(\"Binnacle\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), !(props === null || props === void 0 ? void 0 : props.preview) && /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn\",\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                toggleDisplayNewLogModal();\n              },\n              title: t(\"Add\"),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-lg fa-plus-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 159\n              }, this), \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: dataHeader.length > 0 ? /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n          keyField: \"pooo\",\n          data: dataBody,\n          columns: dataHeader,\n          search: true,\n          exportCSV: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  className: \"custome-search-field float-end\",\n                  delay: 1000,\n                  placeholder: t(\"Search\"),\n                  ...props.searchProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                style: {\n                  textAlign: \"right\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n              keyField: \"date\",\n              bootstrap4: true,\n              bordered: false,\n              striped: true,\n              hover: true,\n              condensed: true,\n              classes: \"styled-table\",\n              style: {\n                cursor: \"pointer\"\n              },\n              data: dataBody,\n              columns: dataHeader,\n              ...props.baseProps,\n              pagination: paginationFactory({\n                sizePerPage: 30,\n                sizePerPageList: [30]\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewLog, {\n      onSaveLogProcess: observations => {\n        onSaveLogProcess(observations);\n      },\n      isOpen: displayNewLogModal,\n      toggle: () => {\n        toggleDisplayNewLogModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogProcess, \"9KXwTfaH4nCuxq0PeUvOB9CLeO4=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = LogProcess;\nLogProcess.propTypes = {\n  logProcessModel: PropTypes.any,\n  //LogProcessModel\n  updatedata: PropTypes.bool\n};\nexport default withTranslation()(LogProcess);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyExportCSV\");\n$RefreshReg$(_c2, \"LogProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/LogProcess/index.js"],"names":["React","useEffect","useState","PropTypes","Link","useLocation","functionshelper","moment","Table","Card","CardHeader","CardBody","UncontrolledAlert","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","Alert","withTranslation","SweetAlert","ModalNewLog","BackendServices","LocalStorageHelper","opt","BootstrapTable","ToolkitProvider","Search","CSVExport","paginationFactory","useTranslation","uniq_key","ExportCSVButton","SearchBar","MyExportCSV","props","handleClick","onExport","margin","LogProcess","t","i18n","logProcessModel","setlogProcessModel","dataList","setDataList","displayNewLogModal","setDisplayNewLogModal","mainDebtor","setmainDebtor","backendServices","setbackendServices","msgData","setmsgData","show","msg","isError","localStorageHelper","setlocalStorageHelper","dataOptions","setDataOptions","dataHeader","setDataHeader","dataBody","setDataBody","undefined","loadMainDebtor","transactId","searchData","updatedata","toggleDisplayNewLogModal","removeBodyCss","document","body","classList","add","transactionId","consultPrincipalDebtor","then","data","loadTableData","result","getHistorical","console","log","dt","date","format","options","textLabels","noMatch","toolTip","key","columnHeaderTooltip","column","label","pagination","next","previous","rowsPerPage","displayRows","sizePerPage","sizePerPageList","text","value","toolbar","search","downloadCsv","print","viewColumns","filterTable","filter","all","title","reset","titleAria","selectedRows","delete","deleteAria","columns","dataField","sort","onSaveLogProcess","observations","credentials","get","VARNAME_USRCREDENTIAL","responsible","usr","clientId","personId","saveHistorical","resp","showMessage","catch","err","message","preview","textAlign","length","searchProps","cursor","baseProps","propTypes","any","bool"],"mappings":"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","sourcesContent":["//Gestionar Log de los Procesos\r\nimport React, { useEffect, useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport functionshelper from \"../../helpers/functions_helper\"\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Table,\r\n  Card, CardHeader,\r\n  CardBody,\r\n  UncontrolledAlert,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport ModalNewLog from \"./ModalNewLog\"\r\nimport { BackendServices } from \"../../services/index\";\r\n\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\n\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\nimport { uniq_key } from \"../../helpers/unq_key\";\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst MyExportCSV = (props) => {\r\n  const handleClick = () => {\r\n    props.onExport();\r\n  };\r\n  return (\r\n    <div>\r\n      <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={handleClick}><i className=\"fas fa-file-csv\"></i> {(\" \")}</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst LogProcess = props => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\r\n\r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n\r\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n\r\n  const [dataOptions, setDataOptions] = useState([]);\r\n  const [dataHeader, setDataHeader] = useState([]);\r\n  const [dataBody, setDataBody] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (logProcessModel !== undefined && logProcessModel !== null) {\r\n      loadMainDebtor(logProcessModel.transactId);\r\n      searchData(logProcessModel.transactId)\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (logProcessModel !== undefined && logProcessModel !== null) {\r\n      loadMainDebtor(logProcessModel.transactId);\r\n      searchData(logProcessModel.transactId)\r\n    }\r\n  }, [props.updatedata]);\r\n\r\n  //nuevo log\r\n  function toggleDisplayNewLogModal() {\r\n    setDisplayNewLogModal(!displayNewLogModal);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function loadMainDebtor(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  //buscamos las Propuestas de Credito\r\n  function searchData(transactId) {\r\n\r\n    loadTableData(transactId);\r\n    /*backendServices.getHistorical(transactId)\r\n      .then(resp => {\r\n        const dataRows = resp.map((dt, idx) => (\r\n          <tr key={idx}>\r\n            <td scope=\"row\">{moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n            <td>{dt.observations}</td>\r\n            <td>{dt.processBpmName }</td>\r\n            <td>{dt.activityBpmName }</td>\r\n            <td>{dt.statusDescription}</td>\r\n            <td>{dt.responsible}</td>\r\n          </tr>)\r\n        );\r\n        setDataList(dataRows);\r\n      }).catch(err => {console.log(err);});*/\r\n  }\r\n\r\n  async function loadTableData(transactId) {\r\n\r\n    var result = await backendServices.getHistorical(transactId)\r\n    console.log();\r\n    if (result !== undefined) {\r\n      for (var dt of result) {\r\n        dt.date = moment(dt.date).format(\"DD-MM-YYYY HH:mm:ss\")\r\n      }\r\n      setDataBody(result);\r\n    }\r\n\r\n\r\n    let options = {\r\n      textLabels: {\r\n        body: {\r\n          noMatch: t(\"NoData\"),\r\n          toolTip: t(\"Order\"),\r\n          key: uniq_key(),\r\n          columnHeaderTooltip: (column) => `${t(\"OrderBy\")} ${column.label}`,\r\n        },\r\n        pagination: {\r\n          next: t(\"Next\"),\r\n          previous: t(\"Prev\"),\r\n          rowsPerPage: t(\"RowsPerPage\"),\r\n          displayRows: t(\"From\"),\r\n          sizePerPage: 5,\r\n          key: uniq_key(),\r\n          sizePerPageList: [{\r\n            text: '5th', value: 5\r\n          }, {\r\n            text: '10th', value: 10\r\n          }, {\r\n            text: 'All', value: 20\r\n          }]\r\n        },\r\n        toolbar: {\r\n          search: t(\"Search\"),\r\n          downloadCsv: t(\"DownloadCSV\"),\r\n          print: t(\"Print\"),\r\n          viewColumns: t(\"ViewColumns\"),\r\n          filterTable: t(\"FilterTable\"),\r\n        },\r\n        filter: {\r\n          all: t(\"All\"),\r\n          title: t(\"Filter\"),\r\n          reset: t(\"Restore\"),\r\n        },\r\n        viewColumns: {\r\n          title: t(\"ShowColumns\"),\r\n          titleAria: t(\"ShowHideColumns\"),\r\n        },\r\n        selectedRows: {\r\n          text: t(\"SelectedRows\"),\r\n          delete: t(\"Delete\"),\r\n          deleteAria: t(\"DeleteSelectedRows\"),\r\n        },\r\n      },\r\n    };\r\n\r\n    //Header de la Tabla de Bandeja de Entrada\r\n    const columns = [\r\n      { text: t(\"Date\"), dataField: 'date', sort: true },\r\n      { text: t(\"Comment\"), dataField: 'observations', sort: true },\r\n      { text: t(\"Process\"), dataField: 'processBpmName', sort: true },\r\n      { text: t(\"Activity\"), dataField: 'activityBpmName', sort: true },\r\n      { text: t(\"Status\"), dataField: 'statusDescription', sort: true },\r\n      { text: t(\"Return Description\"), dataField: 'devolutionDesc', sort: true },\r\n      { text: t(\"User\"), dataField: 'responsible', sort: true }\r\n    ];\r\n\r\n    setDataHeader(columns);\r\n    setDataOptions(options);\r\n  }\r\n\r\n  function onSaveLogProcess(observations) {\r\n\r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n\r\n    logProcessModel.responsible = credentials?.usr ?? \"admin\"\r\n    logProcessModel.clientId = mainDebtor?.personId ?? logProcessModel.clientId;\r\n    logProcessModel.observations = observations;\r\n    console.log(\"logProcessModel\",logProcessModel)\r\n    backendServices.saveHistorical(logProcessModel)\r\n      .then(resp => {\r\n        if (resp !== undefined) {\r\n          searchData(logProcessModel.transactId);\r\n        }\r\n        else {\r\n          //Mensaje ERROR\r\n          showMessage(t(\"ErrorSaveMessage\"), true);\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n\r\n        <CardHeader>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h4 className=\"card-title\">{t(\"Binnacle\")}</h4>\r\n            </Col>\r\n            {!props?.preview && <Col md={6} style={{ textAlign: \"right\" }}>\r\n              <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleDisplayNewLogModal() }} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n\r\n            </Col>}\r\n          </Row>\r\n        </CardHeader>\r\n        {/*<CardBody>\r\n              <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive styled-table-div\">\r\n              <Table className=\"table table-striped table-hover styled-table\">\r\n                <thead className=\"\">\r\n                  <tr>\r\n                    <th>{t(\"Date\")}</th>\r\n                    <th>{t(\"Comment\")}</th>\r\n                    <th>{t(\"Process\")}</th>\r\n                    <th>{t(\"Activity\")}</th>\r\n                    <th>{t(\"Status\")}</th>\r\n                    <th>{t(\"User\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataList!==undefined && dataList.length>0?\r\n                    dataList:\r\n                  <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td> }\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        \r\n      </CardBody>*/}\r\n\r\n        <CardBody>\r\n          {dataHeader.length > 0 ?\r\n            <ToolkitProvider\r\n              keyField={\"pooo\"}\r\n              data={dataBody}\r\n              columns={dataHeader}\r\n              search\r\n              exportCSV\r\n            >\r\n              {\r\n                props => (\r\n                  <div className=\"\">\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <SearchBar className=\"custome-search-field float-end\" delay={1000} placeholder={t(\"Search\")} {...props.searchProps} />\r\n                      </Col>\r\n                      <Col md={8} style={{ textAlign: \"right\" }}>\r\n                        {/*<MyExportCSV { ...props.csvProps } />*/}\r\n                      </Col>\r\n                    </Row>\r\n                    <BootstrapTable\r\n                      keyField=\"date\"\r\n                      bootstrap4\r\n                      bordered={false}\r\n                      striped\r\n                      hover\r\n                      condensed\r\n                      classes='styled-table'\r\n                      style={{ cursor: \"pointer\" }}\r\n                      data={dataBody} columns={dataHeader}\r\n                      {...props.baseProps}\r\n                      pagination={paginationFactory({\r\n                        sizePerPage: 30,\r\n                        sizePerPageList: [30]\r\n                      })}\r\n                    />\r\n                  </div>\r\n                )\r\n              }\r\n            </ToolkitProvider>\r\n            : null}\r\n        </CardBody>\r\n      </Card>\r\n      <ModalNewLog onSaveLogProcess={(observations) => { onSaveLogProcess(observations) }} isOpen={displayNewLogModal} toggle={() => { toggleDisplayNewLogModal() }} />\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\nLogProcess.propTypes = {\r\n  logProcessModel: PropTypes.any, //LogProcessModel\r\n  updatedata: PropTypes.bool,\r\n};\r\nexport default (withTranslation()(LogProcess))\r\n"]},"metadata":{},"sourceType":"module"}