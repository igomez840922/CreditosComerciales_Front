{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\17_RiesgoCredito\\\\RiesgoCreditoDetalle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { translationHelpers } from \"../../../helpers\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as url from \"../../../helpers/url_helper\";\nimport { withTranslation } from \"react-i18next\";\nimport { Row, Col, Button } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { GeneralSection } from \"../../../components/PropuestaCreditoComercial\";\nimport Analisis from \"./riesgoCredito/Analisis\";\nimport FormConclusiones from \"./riesgoCredito/Conclusiones\";\nimport { BpmServices } from \"../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport RiesgoCreditoContext from \"./RiesgoCreditoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RiesgoCreditoDetalle = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [context, setContext] = useState({});\n  const [n, t, c] = translationHelpers('navigation', 'commercial_credit', 'common'); // Component Refs\n\n  const formConclusionesRef = useRef();\n  useEffect(() => {\n    if (!location.data) {\n      location.data = {\n        \"requestId\": \"XYZ892022\",\n        \"facilityId\": \"\",\n        \"customerId\": \"68\",\n        \"transactionId\": \"110\",\n        \"processId\": \"6\",\n        \"activityId\": \"0\",\n        \"instanceId\": 9104,\n        \"taskId\": 456,\n        \"taskStatus\": \"InProgress\"\n      };\n    } // update context\n\n\n    console.log('context', location.data);\n    setContext({\n      transactionId: location.data.transactionId,\n      customerId: location.data.customerId,\n      instanceId: location.data.instanceId,\n      requestId: location.data.requestId\n    });\n  }, []);\n\n  function handleSubmit() {\n    formConclusionesRef.current.submit();\n  }\n\n  function handleSave() {\n    handleReturn();\n  }\n\n  function handleReturn() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                                      Avanzamos el proceso                                      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    const api = new BpmServices();\n    let taskId = \"\";\n    api.completedStatusTask(taskId).then(resp => {\n      if (resp !== undefined) {\n        setsuccessSave_dlg(true);\n      } else {\n        //Mensaje ERROR\n        seterror_msg(props.t(\"ErrorSaveMessage\"));\n        seterror_dlg(true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleClose() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n    let instanceId = 0;\n    api.abortProcess(instanceId).then(data => {\n      if (data !== undefined) {\n        history.push(url.URL_DASHBOARD);\n      } else {\n        //Mensaje ERROR\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n        seterror_dlg(true);\n      }\n    });\n  } //\"statuscredito\":\"completo\"\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: locationData !== null && locationData !== undefined ? /*#__PURE__*/_jsxDEV(RiesgoAmbientalContext.Provider, {\n      value: context,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          title: n(\"Commercial Credit\"),\n          breadcrumbItem: n(\"Credit Risk\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n          active: isActiveLoading,\n          spinner: true,\n          text: t(\"Processinginformation\"),\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xl: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(Analisis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: \"12\",\n              children: /*#__PURE__*/_jsxDEV(FormConclusiones, {\n                ref: formConclusionesRef,\n                locationData: locationData,\n                onSaveSuccess: handleSave\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12 text-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnClose\",\n              color: \"dark\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: handleClose,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), \" \", \" \", c(\"Close\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnSubmit\",\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                submitData();\n                setIsActiveLoading(true);\n                setTimeout(() => {\n                  submitData();\n                  setTimeout(() => {\n                    submitData();\n                  }, 1000);\n                }, 1000);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save mdi-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), \" \", c(\"Save\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n        },\n        children: t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RiesgoCreditoDetalle, \"IiCpAmF+h/zXQeK9Og0bbvvI97g=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = RiesgoCreditoDetalle;\nexport default withTranslation()(RiesgoCreditoDetalle);\n\nvar _c;\n\n$RefreshReg$(_c, \"RiesgoCreditoDetalle\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/17_RiesgoCredito/RiesgoCreditoDetalle.js"],"names":["React","useEffect","useState","useRef","translationHelpers","useLocation","useHistory","url","withTranslation","Row","Col","Button","Breadcrumbs","GeneralSection","Analisis","FormConclusiones","BpmServices","SweetAlert","RiesgoCreditoContext","RiesgoCreditoDetalle","props","history","location","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","context","setContext","n","t","c","formConclusionesRef","data","console","log","transactionId","customerId","instanceId","requestId","handleSubmit","current","submit","handleSave","handleReturn","api","taskId","completedStatusTask","then","resp","undefined","catch","err","handleClose","abortProcess","push","URL_DASHBOARD","locationData","isActiveLoading","margin","submitData","setIsActiveLoading","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport { translationHelpers } from \"../../../helpers\"\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport { withTranslation } from \"react-i18next\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { GeneralSection } from \"../../../components/PropuestaCreditoComercial\"\r\nimport Analisis from \"./riesgoCredito/Analisis\"\r\nimport FormConclusiones from \"./riesgoCredito/Conclusiones\"\r\nimport { BpmServices } from \"../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport RiesgoCreditoContext from \"./RiesgoCreditoContext\"\r\n\r\n\r\n\r\nconst RiesgoCreditoDetalle = (props) => {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [context, setContext] = useState({});\r\n\r\n  const [n, t, c] = translationHelpers('navigation', 'commercial_credit', 'common');\r\n\r\n  // Component Refs\r\n  const formConclusionesRef = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    if (!location.data) {\r\n      location.data = {\r\n        \"requestId\": \"XYZ892022\",\r\n        \"facilityId\": \"\",\r\n        \"customerId\": \"68\",\r\n        \"transactionId\": \"110\",\r\n        \"processId\": \"6\",\r\n        \"activityId\": \"0\",\r\n        \"instanceId\": 9104,\r\n        \"taskId\": 456,\r\n        \"taskStatus\": \"InProgress\"\r\n      }\r\n    }\r\n\r\n    // update context\r\n    console.log('context', location.data);\r\n    setContext({\r\n      transactionId: location.data.transactionId,\r\n      customerId: location.data.customerId,\r\n      instanceId: location.data.instanceId,\r\n      requestId: location.data.requestId,\r\n    });\r\n\r\n  }, []);\r\n\r\n\r\n  function handleSubmit() {\r\n    formConclusionesRef.current.submit();\r\n  }\r\n\r\n  function handleSave() {\r\n    handleReturn();\r\n  }\r\n\r\n  function handleReturn() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                      Avanzamos el proceso                                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const api = new BpmServices();\r\n    let taskId = \"\";\r\n    api.completedStatusTask(taskId).then(resp => {\r\n      if (resp !== undefined) {\r\n        setsuccessSave_dlg(true);\r\n      }\r\n      else {\r\n        //Mensaje ERROR\r\n        seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n        seterror_dlg(true)\r\n      }\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  function handleClose() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const api = new BpmServices();\r\n    // let instanceId = location.data.instanceId\r\n    let instanceId = 0\r\n    api.abortProcess(instanceId).then((data) => {\r\n      if (data !== undefined) {\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        //Mensaje ERROR\r\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n        seterror_dlg(true)\r\n      }\r\n    });\r\n  }\r\n  \r\n  //\"statuscredito\":\"completo\"\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      {locationData !== null && locationData !== undefined ?\r\n        <RiesgoAmbientalContext.Provider value={context}>\r\n\r\n          <div className=\"page-content\">\r\n\r\n          <Breadcrumbs title={n(\"Commercial Credit\")} breadcrumbItem={n(\"Credit Risk\")} />\r\n            <LoadingOverlay active={isActiveLoading} spinner text={t(\"Processinginformation\")}>\r\n\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col xl=\"12\">\r\n                    <Analisis />\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n              </Card>\r\n              <Row>\r\n                <Col xl=\"12\">\r\n                  <FormConclusiones ref={formConclusionesRef} locationData={locationData} onSaveSuccess={handleSave} />\r\n                </Col>\r\n              </Row>\r\n            </LoadingOverlay>\r\n\r\n            <Row className=\"my-2\">\r\n              <Col xl=\"12 text-end\">\r\n                <Button id=\"btnClose\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={handleClose}>\r\n                  <i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i>\r\n                  {\" \"} {c(\"Close\")}\r\n                </Button>\r\n                <Button id=\"btnSubmit\" color=\"success\" type=\"button\" style={{ margin: '5px' }}\r\n                  onClick={() => {\r\n                    submitData(); setIsActiveLoading(true); setTimeout(() => {\r\n                      submitData();\r\n                      setTimeout(() => {\r\n                        submitData();\r\n                      }, 1000);\r\n                    }, 1000);\r\n                  }}>\r\n                  <i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                  {\" \"}{c(\"Save\")}\r\n                </Button>\r\n\r\n              </Col>\r\n            </Row>\r\n\r\n          </div>\r\n          {successSave_dlg ? (\r\n            <SweetAlert\r\n              success\r\n              title={t(\"SuccessDialog\")}\r\n              onConfirm={() => {\r\n                setsuccessSave_dlg(false)\r\n              }}\r\n            >\r\n              {t(\"SuccessSaveMessage\")}\r\n            </SweetAlert>\r\n          ) : null}\r\n\r\n          {error_dlg ? (\r\n            <SweetAlert\r\n              error\r\n              title={t(\"ErrorDialog\")}\r\n              onConfirm={() => {\r\n                seterror_dlg(false)\r\n              }}\r\n            >\r\n              {error_msg}\r\n            </SweetAlert>\r\n          ) : null}\r\n        </RiesgoAmbientalContext.Provider>\r\n        : null}\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default (withTranslation()(RiesgoCreditoDetalle));\r\n"]},"metadata":{},"sourceType":"module"}