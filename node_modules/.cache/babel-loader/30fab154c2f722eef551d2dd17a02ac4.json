{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\ModalNewPaymentProgram.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Modal, ModalHeader, ModalBody, Label, Row, Col, Button } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalNewPaymentProgram = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataReturn, setdataReturn] = useState(null);\n\n  function handleSubmit() {\n    props.saveData(dataReturn, props.tipo);\n    props.toggle();\n  }\n\n  React.useEffect(() => {\n    setdataReturn(props.dataSet);\n  }, [props]);\n\n  function handleCancel() {\n    props.toggle();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    size: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggle,\n      color: \"primary\",\n      children: t(\"Payment Program\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"paymentProgram\",\n          children: t(\"Payment Program Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"paymentProgram\",\n          type: \"text\",\n          value: dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.paymentProgram,\n          onChange: e => {\n            dataReturn.paymentProgram = e.target.value;\n            setdataReturn(dataReturn);\n          },\n          id: \"paymentProgram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"observations\",\n          children: t(\"Description\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          className: \"form-control\",\n          name: \"observations\",\n          type: \"textarea\",\n          value: dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.observations,\n          onChange: e => {\n            dataReturn.observations = e.target.value;\n            setdataReturn(dataReturn);\n          },\n          id: \"observations\",\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"my-2\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12 text-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnCancel\",\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: handleCancel,\n            children: t(\"Cancel\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnSearch\",\n            color: \"success\",\n            type: \"button\",\n            onClick: e => {\n              handleSubmit();\n            },\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 130\n            }, this), \" \", \" \", props.tipo == \"PROGRAMA\" ? t(\"Save\") : t(\"Edit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalNewPaymentProgram, \"qKnHYJVQF5ag4agKe7gpW2jHMeE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalNewPaymentProgram;\nModalNewPaymentProgram.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  toggle: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default ModalNewPaymentProgram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewPaymentProgram\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/ModalNewPaymentProgram.js"],"names":["PropTypes","Modal","ModalHeader","ModalBody","Label","Row","Col","Button","AvForm","AvField","AvGroup","useTranslation","React","useState","ModalNewPaymentProgram","props","t","i18n","dataReturn","setdataReturn","handleSubmit","saveData","tipo","toggle","useEffect","dataSet","handleCancel","isOpen","paymentProgram","e","target","value","observations","margin","botones","propTypes","onSave","func","isRequired","bool"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useState } from 'react';\r\nconst ModalNewPaymentProgram = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [dataReturn, setdataReturn] = useState(null);\r\n  function handleSubmit() {\r\n    props.saveData(dataReturn, props.tipo);\r\n    props.toggle();\r\n  }\r\n  React.useEffect(() => {\r\n    setdataReturn(props.dataSet)\r\n  }, [props]);\r\n  function handleCancel() {\r\n    props.toggle();\r\n  }\r\n  return (\r\n    <Modal isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}\r\n      size=\"md\">\r\n      <ModalHeader toggle={props.toggle} color=\"primary\">{t(\"Payment Program\")}</ModalHeader>\r\n      <ModalBody>\r\n        <AvGroup className=\"mb-3\">\r\n          <Label htmlFor=\"paymentProgram\">{t(\"Payment Program Type\")}</Label>\r\n          <AvField\r\n            className=\"form-control\"\r\n            name=\"paymentProgram\"\r\n            type=\"text\"\r\n            value={dataReturn?.paymentProgram}\r\n            onChange={(e) => { dataReturn.paymentProgram = e.target.value; setdataReturn(dataReturn); }}\r\n            id=\"paymentProgram\" />\r\n        </AvGroup>\r\n        <AvGroup className=\"mb-3\">\r\n          <Label htmlFor=\"observations\">{t(\"Description\")}</Label>\r\n          <AvField\r\n            className=\"form-control\"\r\n            name=\"observations\"\r\n            type=\"textarea\"\r\n            value={dataReturn?.observations}\r\n            onChange={(e) => { dataReturn.observations = e.target.value; setdataReturn(dataReturn); }}\r\n            id=\"observations\"\r\n            rows=\"4\" />\r\n        </AvGroup>\r\n        <Row className=\"my-2\">\r\n          <Col xl=\"12 text-end\">\r\n            <Button id=\"btnCancel\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={handleCancel}>\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {props.botones ?\r\n              <Button id=\"btnSearch\" color=\"success\" type=\"button\" onClick={(e) => { handleSubmit() }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                {\" \"} {props.tipo == \"PROGRAMA\" ? t(\"Save\") : t(\"Edit\")}\r\n              </Button> : null}\r\n          </Col>\r\n        </Row>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n};\r\nModalNewPaymentProgram.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n  toggle: PropTypes.func,\r\n  isOpen: PropTypes.bool\r\n};\r\nexport default ModalNewPaymentProgram;\r\n"]},"metadata":{},"sourceType":"module"}