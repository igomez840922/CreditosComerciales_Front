{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\10_Fideicomiso\\\\AsignarNumeroFideicomiso\\\\ComisioinesFiduciarias.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardBody, CardHeader, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"; //i18n\n\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { BackendServices } from \"../../../../services\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComisioinesFiduciarias = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const apiBack = new BackendServices();\n  const [FormValid, setFormValid] = useState(false);\n  const [dataLocation, setData] = useState(location.data);\n  const [datoFacilidad, setdatoFacilidad] = useState(null);\n  const [dataReturn, setdataReturn] = useState(null);\n  const [listaRevision, setlistaRevision] = useState(null);\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmInformacionCliente');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return FormValid;\n    },\n    dataReturn\n  }));\n  React.useEffect(() => {\n    // Read Api Service data\n    initializeData();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n    setlistaRevisionSelect(undefined);\n\n    try {\n      if (listaRevision.length > 0 && props.dataFeduciario.structuring !== null && listaRevisionSelect === undefined) {\n        defaultVal = listaRevision.find(x => x.value.toUpperCase() === props.dataFeduciario.structuring.toUpperCase());\n\n        if (defaultVal !== undefined) {\n          setlistaRevisionSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props.dataFeduciario, listaRevision]);\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.listaRevisionSelect = listaRevisionSelect.value;\n    console.log(values);\n    setdataReturn(values);\n    setFormValid(true);\n  }\n\n  function initializeData() {\n    apiBack.consultFacilidadPropCred(12, \"XYZ892022\").then(resp => {\n      setdatoFacilidad(resp);\n    });\n    apiBack.retrieveRevisionType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      setlistaRevision(json);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmInformacionCliente\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: t(\"TrustCommissions\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"structuring\",\n                  children: t(\"Structuring\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setlistaRevisionSelect(listaRevision.find(x => x.value === e.value));\n                  },\n                  options: listaRevision,\n                  id: \"structuring\",\n                  classNamePrefix: \"select2-selection\",\n                  placeholder: t(\"Select\"),\n                  value: listaRevisionSelect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"facilityType\",\n                  children: t(\"FacilityType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"facilityType\",\n                  type: \"text\",\n                  value: props.dataFeduciario.facilityType,\n                  id: \"facilityType\" // value={datoFacilidad != null ? datoFacilidad.facilityType : \"Sin dato\"} \n                  ,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"creditLineRot\",\n                  children: t(\"RevolvingLineofCredit\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"creditLineRot\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: props.dataFeduciario.creditLineRot,\n                  id: \"creditLineRot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"creditLineNoRot\",\n                  children: t(\"NonrevolvingLineofCredit\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"creditLineNoRot\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: props.dataFeduciario.creditLineNoRot,\n                  id: \"creditLineNoRot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"declineLoan\",\n                  children: t(\"DecreasingLoan\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"declineLoan\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: props.dataFeduciario.declineLoan,\n                  id: \"declineLoan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}, \"xpTaOsoZe4Rvhm20cflOhrQ/dDM=\", false, function () {\n  return [useTranslation, useLocation, React.useImperativeHandle];\n}));\n_c2 = ComisioinesFiduciarias;\nComisioinesFiduciarias.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default ComisioinesFiduciarias;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComisioinesFiduciarias$React.forwardRef\");\n$RefreshReg$(_c2, \"ComisioinesFiduciarias\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/AsignarNumeroFideicomiso/ComisioinesFiduciarias.js"],"names":["React","useState","PropTypes","Row","Col","Card","CardBody","CardHeader","Button","Label","Table","AvForm","AvField","useTranslation","withTranslation","useLocation","BackendServices","Select","ComisioinesFiduciarias","forwardRef","props","ref","t","i18n","location","apiBack","FormValid","setFormValid","dataLocation","setData","data","datoFacilidad","setdatoFacilidad","dataReturn","setdataReturn","listaRevision","setlistaRevision","listaRevisionSelect","setlistaRevisionSelect","undefined","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","initializeData","defaultVal","length","dataFeduciario","structuring","find","x","value","toUpperCase","err","handleSubmit","event","errors","values","preventDefault","console","log","consultFacilidadPropCred","then","resp","retrieveRevisionType","response","json","i","push","label","e","facilityType","required","errorMessage","creditLineRot","creditLineNoRot","declineLoan","propTypes","onSubmit","func"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button,\r\n  Label,\r\n  Table\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\n\r\n//i18n\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BackendServices } from \"../../../../services\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nconst ComisioinesFiduciarias = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const apiBack = new BackendServices();\r\n  const [FormValid, setFormValid] = useState(false);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [datoFacilidad, setdatoFacilidad] = useState(null);\r\n  const [dataReturn, setdataReturn] = useState(null);\r\n  const [listaRevision, setlistaRevision] = useState(null);\r\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmInformacionCliente');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return FormValid;\r\n    }, dataReturn\r\n  }))\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n\r\n    initializeData();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    setlistaRevisionSelect(undefined);\r\n    try {\r\n      if (listaRevision.length > 0 && props.dataFeduciario.structuring !== null && listaRevisionSelect === undefined) {\r\n        defaultVal = listaRevision.find(x => (x.value).toUpperCase() === (props.dataFeduciario.structuring).toUpperCase());\r\n        if (defaultVal !== undefined) {\r\n          setlistaRevisionSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.dataFeduciario, listaRevision]);\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.listaRevisionSelect = listaRevisionSelect.value;\r\n    console.log(values);\r\n    setdataReturn(values)\r\n    setFormValid(true)\r\n  }\r\n  function initializeData() {\r\n    apiBack.consultFacilidadPropCred(12, \"XYZ892022\").then(resp => {\r\n      setdatoFacilidad(resp)\r\n    })\r\n    apiBack.retrieveRevisionType()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n          json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n        }\r\n        setlistaRevision(json);\r\n      });\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <AvForm id=\"frmInformacionCliente\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col lg=\"12\">\r\n            <p className=\"card-title-desc\"></p>\r\n            <h4 className=\"card-title\">{t(\"TrustCommissions\")}</h4>\r\n            <p className=\"card-title-desc\"></p>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"structuring\">{t(\"Structuring\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"} \r\n                    onChange={(e) => { setlistaRevisionSelect(listaRevision.find(x => x.value === e.value)); }}\r\n                    options={listaRevision}\r\n                    id=\"structuring\"\r\n                    classNamePrefix=\"select2-selection\"\r\n                    placeholder={t(\"Select\")}\r\n                    value={listaRevisionSelect}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"facilityType\">{t(\"FacilityType\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"facilityType\"\r\n                    type=\"text\"\r\n                    value={props.dataFeduciario.facilityType}\r\n                    id=\"facilityType\"\r\n                    // value={datoFacilidad != null ? datoFacilidad.facilityType : \"Sin dato\"} \r\n                    readOnly={true}\r\n                    />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"creditLineRot\">{t(\"RevolvingLineofCredit\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"creditLineRot\"\r\n                    type=\"text\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: t(\"Required Field\") },\r\n                    }}\r\n                    value={props.dataFeduciario.creditLineRot}\r\n                    id=\"creditLineRot\" />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"creditLineNoRot\">{t(\"NonrevolvingLineofCredit\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"creditLineNoRot\"\r\n                    type=\"text\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: t(\"Required Field\") },\r\n                    }}\r\n                    value={props.dataFeduciario.creditLineNoRot}\r\n                    id=\"creditLineNoRot\" />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"declineLoan\">{t(\"DecreasingLoan\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"declineLoan\"\r\n                    type=\"text\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: t(\"Required Field\") },\r\n                    }}\r\n                    value={props.dataFeduciario.declineLoan}\r\n                    id=\"declineLoan\" />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n    </React.Fragment>\r\n  );\r\n});\r\nComisioinesFiduciarias.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n}\r\nexport default ComisioinesFiduciarias\r\n"]},"metadata":{},"sourceType":"module"}