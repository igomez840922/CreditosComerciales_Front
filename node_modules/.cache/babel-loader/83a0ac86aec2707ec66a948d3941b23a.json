{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\Reciprocidad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalReciprocidad from \"./ModalReciprocidad\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reciprocidad = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [dataReturn, setdataReturn] = useState(props.dataReciprocidad);\n  const [dataLocation, setData] = useState(location.data);\n  /* -------------------------------------------------------- -------------------------------------- */\n\n  /*                        Variables de estados para los mensajes de alerta                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [tipo, setTipo] = useState(\"\");\n  const [botonValidation, setbotonValidation] = useState(true);\n  const [formValid, setFormValid] = useState(false);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\n  const [dataRecipro, setdataRecipro] = useState({\n    transactId: null,\n    year: null,\n    month: null,\n    sales: null,\n    deposits: null,\n    averageBalance: null,\n    reciprocity: null,\n    sow: null\n  });\n  const [locationData, setLocationData] = useState(null);\n  const history = useHistory();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmReprocididad');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [showModalReciprocidad, setShowModalReciprocidad] = useState(false);\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    } // Read Api Serv ice ddasat a\n\n\n    setdataReturn(props.dataReciprocidad);\n\n    if (props.activeTab == 16) {\n      initializeData(dataSession);\n    }\n  }, [props.activeTab == 16]);\n\n  function cerrarModal() {\n    setShowModalReciprocidad(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModalReciprocidad(true);\n    removeBodyCss();\n  }\n\n  function initializeData(dataLocation) {\n    const api = new BackendServices(); // consultarListaReciprocidadIGR\n\n    api.consultIGRReciprocityList(dataLocation.transactionId).then(resp => {\n      if (resp.reciprocity.length > 0) {\n        dataReturn.dataTableReciprocidad = resp.reciprocity;\n        setdataReturn(dataReturn);\n        setdataReciprocityRows(resp.reciprocity.map((data, index) => data.status ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", currencyData.format(data.sales)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", currencyData.format(data.deposits)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", currencyData.format(data.averageBalance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", currencyData.format(data.reciprocity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", currencyData.format(data.sow)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : null));\n      } else {\n        setdataReciprocityRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, 4567, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  } // guardar y editar datos\n\n\n  function dataManagament(data, tipo) {\n    var _data$sales, _data$deposits, _data$averageBalance, _data$reciprocity, _data$sow;\n\n    const api = new BackendServices();\n    data.transactId = locationData.transactionId;\n    let datos = {\n      \"transactId\": locationData.transactionId,\n      \"year\": Number(data.year),\n      \"month\": data.month,\n      \"sales\": Number(currencyData.getRealValue((_data$sales = data === null || data === void 0 ? void 0 : data.sales) !== null && _data$sales !== void 0 ? _data$sales : 0)),\n      \"deposits\": Number(currencyData.getRealValue((_data$deposits = data === null || data === void 0 ? void 0 : data.deposits) !== null && _data$deposits !== void 0 ? _data$deposits : 0)),\n      \"averageBalance\": Number(currencyData.getRealValue((_data$averageBalance = data === null || data === void 0 ? void 0 : data.averageBalance) !== null && _data$averageBalance !== void 0 ? _data$averageBalance : 0)),\n      \"reciprocity\": Number(currencyData.getRealValue((_data$reciprocity = data === null || data === void 0 ? void 0 : data.reciprocity) !== null && _data$reciprocity !== void 0 ? _data$reciprocity : 0)),\n      \"sow\": currencyData.getRealValue((_data$sow = data === null || data === void 0 ? void 0 : data.sow) !== null && _data$sow !== void 0 ? _data$sow : 0)\n    };\n\n    if (tipo == \"guardar\") {\n      // nuevoReciprocidadIGR\n      api.newReciprocityIGR(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      datos.reciprocity_id = dataRecipro.reciprocity_id; // actualizarReciprocidadIGR\n\n      api.updateReciprocityIGR(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModalReciprocidad(!showModalReciprocidad);\n    removeBodyCss();\n  }\n\n  function updateData(data) {\n    setdataRecipro(data);\n    setTipo(\"editar\");\n    setbotonValidation(true);\n    abrirModal();\n  }\n\n  function deleteData(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setFormValid(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Reciprocity\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmReprocididad\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"float-end\",\n            onClick: () => {\n              setbotonValidation(true);\n              setdataRecipro({\n                transactId: null,\n                year: null,\n                month: null,\n                sales: null,\n                deposits: null,\n                averageBalance: null,\n                reciprocity: null,\n                sow: null\n              });\n              setTipo(\"guardar\");\n              abrirModal();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          style: {\n            \"overflowX\": \"scroll\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Year\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Month\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Sales\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Deposits\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"AverageBalance\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Reciprocity\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Sow\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataReciprocityRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDescription\",\n              children: t(\"Description\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              type: \"textarea\",\n              name: \"companyHistoryDetails\",\n              id: \"companyHistoryDetails\",\n              maxLength: \"1000\",\n              rows: \"7\",\n              value: props.dataReciprocidad.observations,\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setdataReturn(dataReturn);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalReciprocidad, {\n      tipo: tipo,\n      botones: botonValidation,\n      dataRecipro: dataRecipro,\n      dataManagament: dataManagament,\n      isOpen: showModalReciprocidad,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData(locationData);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.removeReciprocityIGR({\n          transactId: locationData.transactionId,\n          reciprocityId: dataDelete.reciprocity_id\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            initializeData(locationData);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}, \"ROWxrs5YpsElha3TAJQ/Xti6Hj8=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = Reciprocidad;\nReciprocidad.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default Reciprocidad;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reciprocidad$React.forwardRef\");\n$RefreshReg$(_c2, \"Reciprocidad\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/Reciprocidad.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Button","Label","Table","AvForm","AvField","AvGroup","ModalReciprocidad","BackendServices","SweetAlert","url","Currency","Reciprocidad","forwardRef","props","ref","currencyData","t","i18n","location","dataReturn","setdataReturn","dataReciprocidad","dataLocation","setData","data","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","tipo","setTipo","botonValidation","setbotonValidation","formValid","setFormValid","dataDelete","setDataDelete","dataReciprocityRows","setdataReciprocityRows","dataRecipro","setdataRecipro","transactId","year","month","sales","deposits","averageBalance","reciprocity","sow","locationData","setLocationData","history","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","showModalReciprocidad","setShowModalReciprocidad","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","initializeData","cerrarModal","removeBodyCss","abrirModal","api","consultIGRReciprocityList","then","resp","dataTableReciprocidad","map","index","status","format","textAlign","updateData","deleteData","dataManagament","datos","Number","getRealValue","newReciprocityIGR","catch","err","reciprocity_id","updateReciprocityIGR","toggleShowModelAttachment","body","classList","add","handleSubmit","event","errors","values","preventDefault","observations","e","target","value","apiBack","removeReciprocityIGR","reciprocityId","statusCode","error","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalReciprocidad from \"./ModalReciprocidad\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport Currency from \"../../../../../helpers/currency\";\r\nconst Reciprocidad = React.forwardRef((props, ref) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const [dataReturn, setdataReturn] = useState(props.dataReciprocidad);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  /* -------------------------------------------------------- -------------------------------------- */\r\n  /*                        Variables de estados para los mensajes de alerta                        */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [tipo, setTipo] = useState(\"\")\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\r\n  const [dataRecipro, setdataRecipro] = useState({\r\n    transactId: null,\r\n    year: null,\r\n    month: null,\r\n    sales: null,\r\n    deposits: null,\r\n    averageBalance: null,\r\n    reciprocity: null,\r\n    sow: null\r\n  });\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  const history = useHistory();\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmReprocididad');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  const [showModalReciprocidad, setShowModalReciprocidad] = useState(false);\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // Read Api Serv ice ddasat a\r\n    setdataReturn(props.dataReciprocidad)\r\n    if (props.activeTab == 16) {\r\n      initializeData(dataSession);\r\n    }\r\n  }, [props.activeTab == 16]);\r\n  function cerrarModal() {\r\n    setShowModalReciprocidad(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModalReciprocidad(true);\r\n    removeBodyCss()\r\n  }\r\n  function initializeData(dataLocation) {\r\n    const api = new BackendServices();\r\n    // consultarListaReciprocidadIGR\r\n    api.consultIGRReciprocityList(dataLocation.transactionId).then(resp => {\r\n      if (resp.reciprocity.length > 0) {\r\n        dataReturn.dataTableReciprocidad = resp.reciprocity;\r\n        setdataReturn(dataReturn);\r\n        setdataReciprocityRows(resp.reciprocity.map((data, index) => (\r\n          data.status ?\r\n            <tr key={index}>\r\n              <td>{data.year}</td>\r\n              <td>{data.month}</td>\r\n              <td>${currencyData.format(data.sales)}</td>\r\n              <td>${currencyData.format(data.deposits)}</td>\r\n              <td>${currencyData.format(data.averageBalance)}</td>\r\n              <td>${currencyData.format(data.reciprocity)}</td>\r\n              <td>${currencyData.format(data.sow)}</td>\r\n              <td style={{ textAlign: \"right\" }}>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { deleteData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n              </td>\r\n            </tr> : null)\r\n        ));\r\n      } else {\r\n        setdataReciprocityRows(\r\n          <tr key={4567}>\r\n            <td colSpan=\"7\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    });\r\n  }\r\n  // guardar y editar datos\r\n  function dataManagament(data, tipo) {\r\n    const api = new BackendServices()\r\n    data.transactId = locationData.transactionId;\r\n    let datos = {\r\n      \"transactId\": locationData.transactionId,\r\n      \"year\": Number(data.year),\r\n      \"month\": data.month,\r\n      \"sales\": Number(currencyData.getRealValue(data?.sales ?? 0)),\r\n      \"deposits\": Number(currencyData.getRealValue(data?.deposits ?? 0)),\r\n      \"averageBalance\": Number(currencyData.getRealValue(data?.averageBalance ?? 0)),\r\n      \"reciprocity\": Number(currencyData.getRealValue(data?.reciprocity ?? 0)),\r\n      \"sow\": currencyData.getRealValue(data?.sow ?? 0)\r\n    }\r\n    if (tipo == \"guardar\") {\r\n      // nuevoReciprocidadIGR\r\n      api.newReciprocityIGR(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      datos.reciprocity_id = dataRecipro.reciprocity_id;\r\n      // actualizarReciprocidadIGR\r\n      api.updateReciprocityIGR(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n    setShowModalReciprocidad(!showModalReciprocidad);\r\n    removeBodyCss()\r\n  }\r\n  function updateData(data) {\r\n    setdataRecipro(data);\r\n    setTipo(\"editar\");\r\n    setbotonValidation(true);\r\n    abrirModal();\r\n  }\r\n  function deleteData(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setFormValid(true)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Reciprocity\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmReprocididad\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Link className=\"float-end\" onClick={() => {\r\n              setbotonValidation(true); setdataRecipro({\r\n                transactId: null,\r\n                year: null,\r\n                month: null,\r\n                sales: null,\r\n                deposits: null,\r\n                averageBalance: null,\r\n                reciprocity: null,\r\n                sow: null\r\n              }); setTipo(\"guardar\"); abrirModal();\r\n            }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n          </Col>\r\n          <Col md=\"12\" style={{ \"overflowX\": \"scroll\" }}>\r\n            <Table className=\"table mt-1\" >\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"Year\")}</th>\r\n                  <th>{t(\"Month\")}</th>\r\n                  <th>{t(\"Sales\")}</th>\r\n                  <th>{t(\"Deposits\")}</th>\r\n                  <th>{t(\"AverageBalance\")}</th>\r\n                  <th>{t(\"Reciprocity\")}</th>\r\n                  <th>{t(\"Sow\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataReciprocityRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDescription\">{t(\"Description\")}</Label>\r\n              <AvField\r\n                type=\"textarea\"\r\n                name=\"companyHistoryDetails\"\r\n                id=\"companyHistoryDetails\"\r\n                maxLength=\"1000\"\r\n                rows=\"7\"\r\n                value={props.dataReciprocidad.observations}\r\n                onChange={(e) => { dataReturn.observations = e.target.value; setdataReturn(dataReturn) }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      <ModalReciprocidad tipo={tipo} botones={botonValidation} dataRecipro={dataRecipro} dataManagament={dataManagament} isOpen={showModalReciprocidad} toggle={() => { cerrarModal() }} />\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          confirmButtonText= {t(\"Confirm\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          confirmButtonText= {t(\"Confirm\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.removeReciprocityIGR({ transactId: locationData.transactionId, reciprocityId: dataDelete.reciprocity_id }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                initializeData(locationData);\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\nReciprocidad.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default Reciprocidad;\r\n"]},"metadata":{},"sourceType":"module"}