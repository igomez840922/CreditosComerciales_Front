{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\LogProcess\\\\index.js\",\n    _s = $RefreshSig$();\n\n//Gestionar Log de los Procesos\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport functionshelper from \"../../helpers/functions_helper\";\nimport moment from \"moment\";\nimport { Table, Card, CardHeader, CardBody, UncontrolledAlert, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert'; //i18n\n\nimport { withTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport ModalNewLog from \"./ModalNewLog\";\nimport { BackendServices } from \"../../services/index\";\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogProcess = props => {\n  _s();\n\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\n  const [dataList, setDataList] = useState([]);\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  useEffect(() => {\n    if (logProcessModel !== undefined && logProcessModel !== null) {\n      loadMainDebtor(logProcessModel.transactId);\n      searchData(logProcessModel.transactId);\n    }\n  }, []); //nuevo log\n\n  function toggleDisplayNewLogModal() {\n    setDisplayNewLogModal(!displayNewLogModal);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function loadMainDebtor(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  } //buscamos las Propuestas de Credito\n\n\n  function searchData(transactId) {\n    backendServices.getHistorical(transactId).then(resp => {\n      const dataRows = resp.map((dt, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          scope: \"row\",\n          children: moment(dt.date).format(\"YYYY HH:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dt.observations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: functionshelper.getProcessName(dt.processId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: dt.responsible\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this));\n      setDataList(dataRows);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function onSaveLogProcess(observations) {\n    var _credentials$usr, _mainDebtor$personId;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    logProcessModel.responsible = (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\";\n    logProcessModel.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : logProcessModel.clientId;\n    logProcessModel.observations = observations;\n    backendServices.saveHistorical(logProcessModel).then(resp => {\n      if (resp !== undefined) {\n        searchData(logProcessModel.transactId);\n      } else {\n        //Mensaje ERROR\n        showMessage(props.t(\"ErrorSaveMessage\"), true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: props.t(\"Binnacle\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: msgData.show,\n              variant: msgData.isError ? \"danger\" : \"success\",\n              dismissible: true,\n              onClose: () => {\n                setmsgData({\n                  show: false,\n                  msg: \"\",\n                  isError: false\n                });\n              },\n              children: msgData.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"float-end\",\n              onClick: () => {\n                toggleDisplayNewLogModal();\n              },\n              title: props.t(\"Add\"),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 118\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: \"table mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Date\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Comment\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Activity\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"User\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: dataList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewLog, {\n      onSaveLogProcess: observations => {\n        onSaveLogProcess(observations);\n      },\n      isOpen: displayNewLogModal,\n      toggle: () => {\n        toggleDisplayNewLogModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogProcess, \"8ir2Zs568Ur+w0zf4hP/67soDDk=\");\n\n_c = LogProcess;\nLogProcess.propTypes = {\n  logProcessModel: PropTypes.any //LogProcessModel\n\n};\nexport default withTranslation()(LogProcess);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/LogProcess/index.js"],"names":["React","useEffect","useState","PropTypes","Link","useLocation","functionshelper","moment","Table","Card","CardHeader","CardBody","UncontrolledAlert","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","Alert","withTranslation","SweetAlert","ModalNewLog","BackendServices","LocalStorageHelper","opt","LogProcess","props","logProcessModel","setlogProcessModel","dataList","setDataList","displayNewLogModal","setDisplayNewLogModal","mainDebtor","setmainDebtor","backendServices","setbackendServices","msgData","setmsgData","show","msg","isError","localStorageHelper","setlocalStorageHelper","undefined","loadMainDebtor","transactId","searchData","toggleDisplayNewLogModal","removeBodyCss","document","body","classList","add","transactionId","consultPrincipalDebtor","then","data","getHistorical","resp","dataRows","map","dt","idx","date","format","observations","getProcessName","processId","responsible","catch","err","console","log","onSaveLogProcess","credentials","get","VARNAME_USRCREDENTIAL","usr","clientId","personId","saveHistorical","showMessage","t","message","textAlign","propTypes","any"],"mappings":"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","sourcesContent":["//Gestionar Log de los Procesos\r\nimport React, { useEffect, useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport functionshelper from \"../../helpers/functions_helper\"\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Table,\r\n  Card,CardHeader,\r\n  CardBody,\r\n  UncontrolledAlert,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport ModalNewLog from \"./ModalNewLog\"\r\nimport { BackendServices } from \"../../services/index\";\r\n\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\n\r\nconst LogProcess = props => {\r\n  \r\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\r\n  \r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n    \r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n    \r\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n\r\n  useEffect(() => {\r\n    if (logProcessModel !== undefined && logProcessModel !== null) {\r\n      loadMainDebtor(logProcessModel.transactId);\r\n      searchData(logProcessModel.transactId)\r\n    } \r\n  }, []);\r\n\r\n  //nuevo log\r\n  function toggleDisplayNewLogModal() {\r\n    setDisplayNewLogModal(!displayNewLogModal);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function loadMainDebtor(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n  \r\n  //buscamos las Propuestas de Credito\r\n  function searchData(transactId) {\r\n      backendServices.getHistorical(transactId)\r\n        .then(resp => {\r\n          const dataRows = resp.map((dt, idx) => (\r\n            <tr key={idx}>\r\n              <td scope=\"row\">{moment(dt.date).format(\"YYYY HH:mm\")}</td>\r\n              <td>{dt.observations}</td>\r\n              <td>{functionshelper.getProcessName(dt.processId)}</td>\r\n              <td>{dt.responsible}</td>\r\n            </tr>)\r\n          );\r\n          setDataList(dataRows);\r\n        }).catch(err => {console.log(err);});\r\n  }\r\n\r\n  function onSaveLogProcess(observations) {\r\n    \r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n    \r\n    logProcessModel.responsible = credentials?.usr??\"admin\"\r\n    logProcessModel.clientId = mainDebtor?.personId??logProcessModel.clientId;\r\n    logProcessModel.observations= observations;    \r\n    backendServices.saveHistorical(logProcessModel)\r\n        .then(resp => {\r\n          if (resp !== undefined) {\r\n            searchData(logProcessModel.transactId);\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            showMessage(props.t(\"ErrorSaveMessage\"), true);\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n\r\n      <CardHeader>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h4 className=\"card-title\">{props.t(\"Binnacle\")}</h4>\r\n                </Col>\r\n               </Row>                     \r\n            </CardHeader>\r\n          <CardBody>\r\n        \r\n              <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n        <Row>\r\n          <Col md={12} style={{ textAlign: \"right\"}}>\r\n            <Link to=\"#\" className=\"float-end\" onClick={() => { toggleDisplayNewLogModal() }} title={props.t(\"Add\")}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i>{\" \"}</Link>\r\n          </Col>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive\">\r\n              <Table className=\"table mb-0\">\r\n                <thead className=\"table-light\">\r\n                  <tr>\r\n                    <th>{props.t(\"Date\")}</th>\r\n                    <th>{props.t(\"Comment\")}</th>\r\n                    <th>{props.t(\"Activity\")}</th>\r\n                    <th>{props.t(\"User\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataList}\r\n                </tbody>\r\n              </Table>\r\n\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n      </Card>\r\n      <ModalNewLog onSaveLogProcess={(observations) => { onSaveLogProcess(observations) }} isOpen={displayNewLogModal} toggle={() => { toggleDisplayNewLogModal() }} />\r\n      \r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\nLogProcess.propTypes = {\r\n  logProcessModel: PropTypes.any, //LogProcessModel\r\n};\r\nexport default (withTranslation()(LogProcess))\r\n"]},"metadata":{},"sourceType":"module"}