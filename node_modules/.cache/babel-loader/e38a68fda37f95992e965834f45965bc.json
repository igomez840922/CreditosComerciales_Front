{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\11_DocumentacionLegal\\\\PantallaDetalle\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, Col, Button, CardFooter, Row } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport ResultadosBusqueda from \"./ResultadosBusqueda\";\nimport ApiServicesDetalleDocumentacion from \"../../../../services/DocumentacionLegal/ApiServicesDetalleDocumentacion\";\nimport ModalCloseOptions from \"./ModalCloseOptions\";\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BpmServices, BackendServices } from \"../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  var _Object$entries3;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    selectedData\n  } = location;\n  const [dataList, setDataList] = useState([]);\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const apiServiceBackend = new BackendServices();\n  const [locationData, setLocationData] = useState(null); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [mainDebtor, setmainDebtor] = useState(null); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadUserProspect(locationData.transactionId); // Read Api Service data\n\n    searchData(null);\n  }\n\n  function loadUserProspect(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  }\n\n  function searchData(values) {\n    const api = new ApiServicesDetalleDocumentacion();\n    api.getResultadosDetalleDocumentacionModel(values).then(data => {\n      setDataList(data);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    });\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n  } //Modal Opciones al Salir\n\n\n  function toggleModalModalAdvanceOptions() {\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\n  }\n\n  function validarCheck() {\n    ValidateChecked().then(resp => {\n      resp && toggleModalModalAdvanceOptions();\n    });\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option, values = null) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 3:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 4:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          let valores = values.frmSearch;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    } // history.push(\"/dashboard\");\n\n  }\n\n  const jsonCond = {\n    rotary: () => 'rotary',\n    commercialLoan: () => apiServiceBackend.ConsultarDatosComparecenciaJuridicaPrestAPlazo(location.data.transactionId),\n    multipleRotary: () => 'multipleRotary',\n    rotaryNumber: () => 'rotaryNumber',\n    overdraft: () => apiServiceBackend.ConsultarDatosComparecenciaJuridicaLineaSobregiro(location.data.transactionId),\n    transfer: () => 'transfer',\n    bail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaIlimitadaPJuri(location.data.transactionId),\n    trust: () => 'trust',\n    agroPawn: () => 'agroPawn',\n    naturalBail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaIlimitadaPNat(location.data.transactionId),\n    legalBail: () => 'legalBail',\n    crossedLegalBail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaLimitadaPJuri(location.data.transactionId),\n    crossedNaturalBail: () => 'crossedNaturalBail',\n    promiseLetter: () => 'promiseLetter',\n    privateRecord: () => apiServiceBackend.ConsultarDatosContratosPrivados(location.data.transactionId),\n    trustRecord: () => apiServiceBackend.ConsultarDatosActaFideicomiso(location.data.transactionId),\n    loanGuarantees: () => 'loanGuarantees',\n    fiduciaryLine: () => 'fiduciaryLine',\n    prefinance: () => 'prefinance'\n  };\n\n  function ValidateChecked() {\n    return new Promise((resolve, reject) => {\n      let validation = false;\n      apiServiceBackend.consultarDocumentacionLegal(location.data.transactionId).then(data => {\n        var _Object$entries, _Object$entries$filte, _Object$entries$map$s, _Object$entries2, _Object$entries2$map;\n\n        delete data.status;\n        delete data.legalDocumentationId;\n        delete data.transactId;\n        let json = (_Object$entries = Object.entries(data !== null && data !== void 0 ? data : {})) === null || _Object$entries === void 0 ? void 0 : (_Object$entries$filte = _Object$entries.filter(([key, value]) => value)) === null || _Object$entries$filte === void 0 ? void 0 : _Object$entries$filte.map(([key, value]) => key);\n\n        for (const iterator of json) {\n          console.log(jsonCond[iterator]());\n        }\n\n        validation = (_Object$entries$map$s = (_Object$entries2 = Object.entries(data !== null && data !== void 0 ? data : {})) === null || _Object$entries2 === void 0 ? void 0 : (_Object$entries2$map = _Object$entries2.map(([key, value]) => value)) === null || _Object$entries2$map === void 0 ? void 0 : _Object$entries2$map.some(Boolean)) !== null && _Object$entries$map$s !== void 0 ? _Object$entries$map$s : false;\n        seterror_dlg(!validation);\n        resolve(validation);\n      });\n    });\n  }\n  /*\r\n    // Camino Feliz ... \r\n    var values = {\r\n      \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n      \"activityId\": OPTs.ACT_NONE.toString(),\r\n      \"transactionId\": locationData.transactionId,\r\n      \"requestId\":locationData.requestId,\r\n      \"decision\":\"no\"\r\n    };\r\n      \r\n    //Requiere Ajustes \r\n    var values = {\r\n      \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n      \"activityId\": OPTs.ACT_NONE.toString(),\r\n      \"transactionId\": locationData.transactionId,\r\n      \"requestId\":locationData.requestId,\r\n      \"decision\":\"si\"\r\n    };\r\n    */\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"GenerateDocumentation\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"GenerateDocumentation\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [mainDebtor != null ? mainDebtor.typePerson === \"1\" ? mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2 : mainDebtor.name : \"\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: props.t(\"LegalDocumentation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSave\",\n                  color: \"success\",\n                  type: \"button\",\n                  onClick: () => {\n                    ValidateChecked();\n                  },\n                  style: {\n                    margin: '5px'\n                  },\n                  children: props.t(\"generate\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResultadosBusqueda, {\n            results: dataList,\n            JSONCompare: (_Object$entries3 = Object.entries(jsonCond)) === null || _Object$entries3 === void 0 ? void 0 : _Object$entries3.map(([key, value]) => key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(2);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 112\n            }, this), \" \", props.t(\"Exit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              validarCheck();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 112\n            }, this), \" \", props.t(\"Continue\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAdvanceOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalAdvanceOptions,\n        toggle: () => {\n          toggleModalModalAdvanceOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"lcWrKcB3AiIIO838fkXJ30ZAPM8=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {\n  // onSelectIdPropuesta: PropTypes.func.isRequired,\n  //selectedIdPropuesta:PropTypes.any\n  selectedId: PropTypes.any // onClose: PropTypes.func.isRequired\n\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/11_DocumentacionLegal/PantallaDetalle/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","Link","Card","CardBody","Col","Button","CardFooter","Row","Breadcrumbs","useTranslation","withTranslation","DatosGenerales","ResultadosBusqueda","ApiServicesDetalleDocumentacion","ModalCloseOptions","ModalAdvanceOptions","url","SweetAlert","BpmServices","BackendServices","PantallaBusqueda","props","t","i18n","history","location","selectedData","dataList","setDataList","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalAdvanceOptions","setDisplayModalAdvanceOptions","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","apiServiceBackend","locationData","setLocationData","backendServices","setbackendServices","bpmServices","setbpmServices","coreServices","setcoreServices","CoreServices","mainDebtor","setmainDebtor","useEffect","data","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","loadUserProspect","searchData","consultPrincipalDebtor","values","api","getResultadosDetalleDocumentacionModel","catch","error","console","toggleModalCloseOptions","toggleModalModalAdvanceOptions","validarCheck","ValidateChecked","resp","onSaveProcess","option","instanceId","abortProcess","valores","frmSearch","jsonCond","rotary","commercialLoan","ConsultarDatosComparecenciaJuridicaPrestAPlazo","multipleRotary","rotaryNumber","overdraft","ConsultarDatosComparecenciaJuridicaLineaSobregiro","transfer","bail","ConsultarDatosFianzaSolidariaIlimitadaPJuri","trust","agroPawn","naturalBail","ConsultarDatosFianzaSolidariaIlimitadaPNat","legalBail","crossedLegalBail","ConsultarDatosFianzaSolidariaLimitadaPJuri","crossedNaturalBail","promiseLetter","privateRecord","ConsultarDatosContratosPrivados","trustRecord","ConsultarDatosActaFideicomiso","loanGuarantees","fiduciaryLine","prefinance","Promise","resolve","reject","validation","consultarDocumentacionLegal","status","legalDocumentationId","transactId","json","Object","entries","filter","key","value","map","iterator","log","some","Boolean","typePerson","name","name2","lastName","lastName2","textAlign","margin","propTypes","selectedId","any"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n  Row,\r\n} from \"reactstrap\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport ResultadosBusqueda from \"./ResultadosBusqueda\"\r\nimport ApiServicesDetalleDocumentacion from \"../../../../services/DocumentacionLegal/ApiServicesDetalleDocumentacion\"\r\nimport ModalCloseOptions from \"./ModalCloseOptions\";\r\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\r\nimport * as url from \"../../../../helpers/url_helper\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { BpmServices, BackendServices } from \"../../../../services\";\r\n\r\nconst PantallaBusqueda = props => {\r\n  \r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const { selectedData } = location;\r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n\r\n  const apiServiceBackend = new BackendServices();\r\n\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n\r\n    loadUserProspect(locationData.transactionId)\r\n    // Read Api Service data\r\n    searchData(null);\r\n  }\r\n\r\n  function loadUserProspect(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  function searchData(values) {\r\n    const api = new ApiServicesDetalleDocumentacion()\r\n    api.getResultadosDetalleDocumentacionModel(values)\r\n      .then((data) => {\r\n        setDataList(data);\r\n\r\n      })\r\n      .catch((error) => {\r\n\r\n        console.error('Error fetching documents', error);\r\n      });\r\n  }\r\n\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n  }\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalModalAdvanceOptions() {\r\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\r\n  }\r\n\r\n  function validarCheck() {\r\n    ValidateChecked().then(resp => {\r\n      resp && toggleModalModalAdvanceOptions();\r\n    });\r\n  }\r\n\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option, values = null) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 3: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 4: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        let valores = values.frmSearch;\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n    // history.push(\"/dashboard\");\r\n  }\r\n\r\n  const jsonCond = {\r\n    rotary: () => ('rotary'),\r\n    commercialLoan: () => apiServiceBackend.ConsultarDatosComparecenciaJuridicaPrestAPlazo(location.data.transactionId),\r\n    multipleRotary: () => ('multipleRotary'),\r\n    rotaryNumber: () => ('rotaryNumber'),\r\n    overdraft: () => apiServiceBackend.ConsultarDatosComparecenciaJuridicaLineaSobregiro(location.data.transactionId),\r\n    transfer: () => ('transfer'),\r\n    bail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaIlimitadaPJuri(location.data.transactionId),\r\n    trust: () => ('trust'),\r\n    agroPawn: () => ('agroPawn'),\r\n    naturalBail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaIlimitadaPNat(location.data.transactionId),\r\n    legalBail: () => ('legalBail'),\r\n    crossedLegalBail: () => apiServiceBackend.ConsultarDatosFianzaSolidariaLimitadaPJuri(location.data.transactionId),\r\n    crossedNaturalBail: () => ('crossedNaturalBail'),\r\n    promiseLetter: () => ('promiseLetter'),\r\n    privateRecord: () => apiServiceBackend.ConsultarDatosContratosPrivados(location.data.transactionId),\r\n    trustRecord: () => apiServiceBackend.ConsultarDatosActaFideicomiso(location.data.transactionId),\r\n    loanGuarantees: () => ('loanGuarantees'),\r\n    fiduciaryLine: () => ('fiduciaryLine'),\r\n    prefinance: () => ('prefinance'),\r\n  }\r\n\r\n  function ValidateChecked() {\r\n    return new Promise((resolve, reject) => {\r\n      let validation = false;\r\n      apiServiceBackend.consultarDocumentacionLegal(location.data.transactionId).then(data => {\r\n        delete data.status;\r\n        delete data.legalDocumentationId;\r\n        delete data.transactId;\r\n\r\n        let json = Object.entries(data ?? {})?.filter(([key, value]) => value)?.map(([key, value]) => key);\r\n        for (const iterator of json) {\r\n          console.log(jsonCond[iterator]());\r\n        }\r\n\r\n        validation = Object.entries(data ?? {})?.map(([key, value]) => value)?.some(Boolean) ?? false;\r\n        seterror_dlg(!validation);\r\n        resolve(validation);\r\n      })\r\n    })\r\n  }\r\n\r\n/*\r\n  // Camino Feliz ... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Ajustes \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"GenerateDocumentation\")} />\r\n\r\n        <Card>\r\n\r\n        <CardHeader>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"card-title\">{t(\"GenerateDocumentation\")}</h4>\r\n                  <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n                </Col>\r\n              </Row> \r\n              <Row>\r\n                <Col sm={6}>\r\n                  <h5 className=\"card-title\">{mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? (mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2) : (mainDebtor.name)): \"\"} </h5>\r\n                </Col>\r\n                <Col sm={6}>\r\n                  <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                </Col>\r\n              </Row>                           \r\n            </CardHeader>\r\n        \r\n\r\n          <CardBody>\r\n            <CardBody>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <h4 className=\"card-title\">{props.t(\"LegalDocumentation\")}</h4>\r\n                </Col>\r\n                <Col md=\"6\" style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnSave\" color=\"success\" type=\"button\" onClick={() => { ValidateChecked() }} style={{ margin: '5px' }}>\r\n                    {props.t(\"generate\")}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n            </CardBody>\r\n            {/* <DatosGenerales /> */}\r\n\r\n            <ResultadosBusqueda results={dataList} JSONCompare={Object.entries(jsonCond)?.map(([key, value]) => key)} />\r\n\r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n            <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(2); }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n            <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { validarCheck() }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {props.t(\"Continue\")}</Button>\r\n            {/*\r\n          <Link className=\"btn btn-dark\" style={{ margin: '5px' }} to={ { pathname: \"/creditocomercial/documentacionlegal\", selectedData: undefined } }>{props.t(\"Close\")}</Link>\r\n\r\n            <Button color=\"negative\" type=\"button\" style={{ margin: '5px' }}>\r\n              { props.t(\"Refuse\") }\r\n            </Button>\r\n            <Button color=\"success\" type=\"button\" style={{ margin: '5px' }}>\r\n              { props.t(\"Advance\") }\r\n            </Button>\r\n            */}\r\n          </CardFooter>\r\n        </Card>\r\n        <ModalAdvanceOptions onSaveProcess={onSaveProcess} isOpen={displayModalAdvanceOptions} toggle={() => { toggleModalModalAdvanceOptions() }} />\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  // onSelectIdPropuesta: PropTypes.func.isRequired,\r\n  //selectedIdPropuesta:PropTypes.any\r\n  selectedId: PropTypes.any,\r\n  // onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}