{"ast":null,"code":"export default class Currency {\n  format(x) {\n    return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  getRealValue(x) {\n    return x.toString().replace(/,/g, \"\");\n  }\n\n  formatTable(x) {\n    return parseFloat(x).toFixed(2).toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  formatPercent(number, event) {\n    var _number$match;\n\n    event.preventDefault(); // console.log(\"ðŸš€ ~ file: currency.js ~ line 12 ~ Currency ~ formatPercent ~ number\", number.split(''))\n\n    if (!/^[0-9.%]*$/.test(number) || ((_number$match = number.match(/\\./g)) === null || _number$match === void 0 ? void 0 : _number$match.length) > 1) {\n      var _number$match2;\n\n      if (((_number$match2 = number.match(/\\./g)) === null || _number$match2 === void 0 ? void 0 : _number$match2.length) > 1) {\n        number = number.split(\".\")[0] + \".\" + number.split(\".\")[1];\n        console.log(\"fase 0\");\n      } else {\n        if (number.match(/\\./g)) {\n          var _number$split$0$split, _number$split$0$split2, _number$split$1$split, _number$split$1$split2;\n\n          console.log(\"fase 1\");\n          number = ((_number$split$0$split = number.split(\".\")[0].split('')) === null || _number$split$0$split === void 0 ? void 0 : (_number$split$0$split2 = _number$split$0$split.filter(Number)) === null || _number$split$0$split2 === void 0 ? void 0 : _number$split$0$split2.join('')) + '.' + ((_number$split$1$split = number.split(\".\")[1].split('')) === null || _number$split$1$split === void 0 ? void 0 : (_number$split$1$split2 = _number$split$1$split.filter(Number)) === null || _number$split$1$split2 === void 0 ? void 0 : _number$split$1$split2.join(''));\n        } else {\n          var _number$split, _number$split$filter;\n\n          console.log(\"fase 2\");\n          number = (_number$split = number.split('')) === null || _number$split === void 0 ? void 0 : (_number$split$filter = _number$split.filter(Number)) === null || _number$split$filter === void 0 ? void 0 : _number$split$filter.join('');\n        }\n      }\n    } else {\n      var _number$match3;\n\n      if (((_number$match3 = number.match(/\\./g)) === null || _number$match3 === void 0 ? void 0 : _number$match3.length) == 1) {\n        console.log(\"fase 3\");\n        let dato = number.split(\".\")[1].split(\"\");\n        let cadena = \"\";\n\n        if (dato.length > 0) {\n          console.log(\"fase 4\");\n          cadena = cadena + dato[0];\n\n          if (dato[1]) {\n            console.log(\"fase 5\");\n            cadena = cadena + dato[1];\n          }\n        }\n\n        number = number.split(\".\")[0] + \".\" + cadena;\n      }\n    }\n\n    return number + \"%\";\n  }\n\n  getRealPercent(x) {\n    return x.toString().replace(/%/g, \"\");\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/currency.js"],"names":["Currency","format","x","toString","replace","getRealValue","formatTable","parseFloat","toFixed","formatPercent","number","event","preventDefault","test","match","length","split","console","log","filter","Number","join","dato","cadena","getRealPercent"],"mappings":"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","sourcesContent":["export default class Currency {\r\n    format(x) {\r\n        return (x).toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    getRealValue(x) {\r\n        return x.toString().replace(/,/g, \"\");\r\n    }\r\n    formatTable(x) {\r\n        return parseFloat(x).toFixed(2).toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n    formatPercent(number, event) {\r\n        event.preventDefault();\r\n        // console.log(\"ðŸš€ ~ file: currency.js ~ line 12 ~ Currency ~ formatPercent ~ number\", number.split(''))\r\n        if (!/^[0-9.%]*$/.test(number) || number.match(/\\./g)?.length > 1) {\r\n            if (number.match(/\\./g)?.length > 1) {\r\n                number=number.split(\".\")[0]+\".\"+number.split(\".\")[1];\r\n                console.log(\"fase 0\");\r\n            } else {\r\n                if(number.match(/\\./g)){\r\n                    console.log(\"fase 1\");\r\n                    number = number.split(\".\")[0].split('')?.filter(Number)?.join('')+'.'+number.split(\".\")[1].split('')?.filter(Number)?.join('');\r\n                }else{\r\n                    console.log(\"fase 2\");\r\n                    number = number.split('')?.filter(Number)?.join('');\r\n                }\r\n            }\r\n        }else{\r\n            if(number.match(/\\./g)?.length== 1){\r\n                console.log(\"fase 3\");\r\n                let dato=number.split(\".\")[1].split(\"\")\r\n                let cadena=\"\";\r\n                if(dato.length>0){\r\n                    console.log(\"fase 4\");\r\n                    cadena=cadena+dato[0];\r\n                    if(dato[1]){\r\n                        console.log(\"fase 5\");\r\n                        cadena=cadena+dato[1];\r\n                    }\r\n                }\r\n                number=number.split(\".\")[0]+\".\"+cadena;\r\n                \r\n\r\n            }\r\n        }\r\n        return number + \"%\";\r\n    }\r\n    getRealPercent(x) {\r\n        return x.toString().replace(/%/g, \"\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}