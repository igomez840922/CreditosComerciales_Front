{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"; //i18n\n\nimport { useTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Search, ToolkitProvider } from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\nimport ClientForm from \"./ClientForm\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport ApiService from \"../../../services/ApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false); //Datos de la Tabla de Clientes\n\n  const [dataClientList, setdataClientList] = useState([]); //Cliente seleccionado\n\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]); //Servicios\n\n  const backendServices = new BackendServices();\n  const bpmServices = new BpmServices(); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId.length <= 0) {\n        location.data.transactionId = location.data.instanceId;\n      }\n\n      setLocationData(location.data);\n      fetchData(location.data);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n\n        if (data.length <= 0) {\n          onOpenNewClient();\n        }\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    console.log(dataClient);\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {//setselectedClient(dataClient)\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    return identificationTypeList.find(x => x.value === idType);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: t(\"PreRequest\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\",\n            children: t(\"This form is official and must be filled out correctly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(ClientForm, {\n                transactId: locationData.transactionId,\n                clientSelected: selectedClient,\n                onCancel: () => {\n                  onOpenNewClient(false);\n                  getProcessClients(locationData.transactionId);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"float-end\",\n                  onClick: () => {\n                    setselectedClient(undefined);\n                    onOpenNewClient;\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 105\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"table-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 187,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 19\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 194,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 197,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined ? item.blacklist.map((black, index) => black.backList === true ? \"Aplica\" : \"No Aplica\") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onEditClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-border-color mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 211,\n                              columnNumber: 76\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 211,\n                            columnNumber: 23\n                          }, this), /*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onDeleteClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-trash-can-outline mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 212,\n                              columnNumber: 78\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 212,\n                            columnNumber: 23\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 19\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 6\n  }, this);\n};\n\n_s(PreRequest, \"yDKQQCgvx3aiVriJ+ou8GsFuYTs=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","AvForm","AvField","Link","Breadcrumbs","useTranslation","SweetAlert","Search","ToolkitProvider","BootstrapTable","paginationFactory","LoadingOverlay","AttachmentFileCore","ClientForm","BackendServices","CoreServices","BpmServices","ApiService","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","backendServices","bpmServices","useEffect","data","transactionId","length","instanceId","fetchData","loadIdentificationTypes","loadPersonTypes","getProcessClients","consultarCatalogoTipoIdentificacion","then","json","i","push","label","value","catch","error","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","show","onEditClient","dataClient","console","log","onDeleteClient","getPersnoType","pType","find","x","getIdentificationType","idType","map","item","index","Number","personType","name","secondName","lastName","secondSurname","clientDocumentId","roles","rol","roleDescription","blacklist","black","backList","textAlign","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation,useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { Search,ToolkitProvider } from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\r\nimport ClientForm from \"./ClientForm\";\r\n\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../services\";\r\nimport ApiService from \"../../../services/ApiService\";\r\n\r\nconst PreRequest = props => {\r\n  \r\n  const { t, i18n } = useTranslation();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);     \r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n\r\n  //Datos de la Tabla de Clientes\r\n  const [dataClientList, setdataClientList ] = useState([]);\r\n  //Cliente seleccionado\r\n  const [selectedClient,setselectedClient]= useState(undefined);     \r\n\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);  \r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  \r\n  //Servicios\r\n  const backendServices = new BackendServices();\r\n  const bpmServices = new BpmServices();\r\n    \r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if(location.data!==null && location.data!==undefined){\r\n      if(location.data.transactionId.length <= 0){\r\n        location.data.transactionId=location.data.instanceId;\r\n      }\r\n      setLocationData(location.data);\r\n      fetchData(location.data);    \r\n    }    \r\n  }, []);\r\n\r\n    //Caraga Inicial de datos\r\n    function fetchData(locationData) {\r\n        loadIdentificationTypes();\r\n        loadPersonTypes();\r\n        getProcessClients(locationData.transactionId);\r\n    }   \r\n    \r\n    //cargar lista de tipo de identificacion\r\n    function loadIdentificationTypes(){\r\n      backendServices.consultarCatalogoTipoIdentificacion()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n                }\r\n                setidentificationTypeList(json);\r\n            }          \r\n      }).catch((error) => { });    \r\n    }\r\n    //cargar lista de tipo de personas\r\n    function loadPersonTypes(){\r\n      backendServices.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                setpersonTypeList(json);                \r\n            }          \r\n      }).catch((error) => { });    \r\n    }\r\n \r\n    //se buscan todos los clientes de este proceso \r\n    function getProcessClients(transactionId){\r\n      \r\n      backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n        .then((data) => {\r\n          if (data !== null && data !== undefined) {            \r\n            setdataClientList(data)\r\n\r\n            if(data.length<=0){\r\n              onOpenNewClient();\r\n            }\r\n          }         \r\n      }).catch((error) => { }); \r\n    }\r\n    //Abrir formulario Persona\r\n    function onOpenNewClient(show=true){\r\n      setopenNewClient(show)\r\n    }\r\n    //Editar Persona\r\n    function onEditClient(dataClient){\r\n      console.log(dataClient);\r\n      setselectedClient(dataClient)\r\n      onOpenNewClient();      \r\n    }\r\n    //Eliminar Persona\r\n    function onDeleteClient(dataClient){\r\n      //setselectedClient(dataClient)\r\n    }\r\n    \r\n    //retorna el Tipo de Persona\r\n    function getPersnoType(pType){\r\n      return personTypeList.find(x => x.value === pType);\r\n    }\r\n\r\n    //retorna el Tipo de identificacion\r\n    function getIdentificationType(idType){\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n\r\n  return (\r\n     <div className=\"page-content\">\r\n        \r\n        <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"PreRequest\")} />\r\n\r\n        <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        \r\n        <Card>\r\n          <CardHeader>\r\n          <h4 className=\"card-title\">{t(\"PreRequest\")}</h4>\r\n            <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n            \r\n          </CardHeader>\r\n            <CardBody>\r\n            \r\n\r\n        {openNewClient?\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={()=>{onOpenNewClient(false);getProcessClients(locationData.transactionId)}}></ClientForm>\r\n\r\n          </Col>\r\n        </Row>\r\n        :\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Link className=\"float-end\" onClick={()=>{setselectedClient(undefined); onOpenNewClient}}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n            </Col>\r\n              </Row>          \r\n            <Row>\r\n          <Col md=\"12\">\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"PersonType\")}</th>\r\n                  <th>{t(\"FullName\")}</th>\r\n                  <th>{t(\"IdentificationType\")}</th>\r\n                  <th>{t(\"IdentificationNumber\")}</th>\r\n                  <th>{t(\"Roles\")}</th>\r\n                  <th>{t(\"WatchList\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {dataClientList.map((item, index) => (\r\n                  <tr>\r\n                    <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                    <td>{Number(item.personType)>1?(item.name):(item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                    <td>{getIdentificationType(item.idType).label}</td>\r\n                    <td>{item.clientDocumentId}</td>\r\n                    <td>\r\n                      {item.roles!==undefined?\r\n                      item.roles.map((rol, index) => (\r\n                        rol.roleDescription + \" - \"\r\n                      )):null}\r\n                    </td>\r\n                    <td>\r\n                      {item.blacklist!==undefined?\r\n                        item.blacklist.map((black, index) => (\r\n                          black.backList===true?\"Aplica\":\"No Aplica\"\r\n                      )):null}\r\n                    </td> \r\n                    <td style={{ textAlign: \"right\" }}>\r\n                      <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                      <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                    </td>                   \r\n                  </tr>                   \r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n           \r\n          </Col>\r\n        </Row>\r\n        </React.Fragment>\r\n        }\r\n\r\n            </CardBody>\r\n        </Card>       \r\n      </LoadingOverlay>       \r\n\r\n      </div>      \r\n    \r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}