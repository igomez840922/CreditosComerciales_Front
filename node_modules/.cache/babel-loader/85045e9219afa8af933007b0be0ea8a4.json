{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\11_DocumentacionLegal\\\\PantallaDetalle\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, Col, Button, CardFooter, Row } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport ResultadosBusqueda from \"./ResultadosBusqueda\";\nimport ApiServicesDetalleDocumentacion from \"../../../../services/DocumentacionLegal/ApiServicesDetalleDocumentacion\";\nimport ModalCloseOptions from \"./ModalCloseOptions\";\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BpmServices, BackendServices } from \"../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    selectedData\n  } = location;\n  const [dataList, setDataList] = useState([]);\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const apiServiceBackend = new BackendServices();\n  React.useEffect(() => {\n    // Read Api Service data\n    searchData(null);\n  }, []);\n\n  function searchData(values) {\n    const api = new ApiServicesDetalleDocumentacion();\n    api.getResultadosDetalleDocumentacionModel(values).then(data => {\n      setDataList(data);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    });\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n  } //Modal Opciones al Salir\n\n\n  function toggleModalModalAdvanceOptions() {\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\n  }\n\n  function validarCheck() {\n    ValidateChecked().then(resp => {\n      resp && toggleModalModalAdvanceOptions();\n    });\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option, values = null) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 3:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 4:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          let valores = values.frmSearch;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    } // history.push(\"/dashboard\");\n\n  }\n\n  function ValidateChecked() {\n    return new Promise((resolve, reject) => {\n      let validation = false;\n      apiServiceBackend.consultarDocumentacionLegal(location.data.transactionId).then(data => {\n        var _Object$entries$map$s, _Object$entries, _Object$entries$map;\n\n        delete data.status;\n        delete data.legalDocumentationId;\n        delete data.transactId;\n        validation = (_Object$entries$map$s = (_Object$entries = Object.entries(data !== null && data !== void 0 ? data : {})) === null || _Object$entries === void 0 ? void 0 : (_Object$entries$map = _Object$entries.map(([key, value]) => value)) === null || _Object$entries$map === void 0 ? void 0 : _Object$entries$map.some(Boolean)) !== null && _Object$entries$map$s !== void 0 ? _Object$entries$map$s : false;\n        seterror_dlg(!validation);\n        resolve(validation);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"GenerateDocumentation\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: props.t(\"LegalDocumentation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSave\",\n                  color: \"success\",\n                  type: \"button\",\n                  onClick: () => {\n                    ValidateChecked();\n                  },\n                  style: {\n                    margin: '5px'\n                  },\n                  children: props.t(\"generate\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResultadosBusqueda, {\n            results: dataList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(2);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 112\n            }, this), \" \", props.t(\"Exit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              validarCheck();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 112\n            }, this), \" \", props.t(\"Continue\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAdvanceOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalAdvanceOptions,\n        toggle: () => {\n          toggleModalModalAdvanceOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"s29a7BWbdj9l3jhp0iqmhtUZhGs=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {\n  // onSelectIdPropuesta: PropTypes.func.isRequired,\n  //selectedIdPropuesta:PropTypes.any\n  selectedId: PropTypes.any,\n  onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/11_DocumentacionLegal/PantallaDetalle/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","Link","Card","CardBody","Col","Button","CardFooter","Row","Breadcrumbs","withTranslation","DatosGenerales","ResultadosBusqueda","ApiServicesDetalleDocumentacion","ModalCloseOptions","ModalAdvanceOptions","url","SweetAlert","BpmServices","BackendServices","PantallaBusqueda","props","history","location","selectedData","dataList","setDataList","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalAdvanceOptions","setDisplayModalAdvanceOptions","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","apiServiceBackend","useEffect","searchData","values","api","getResultadosDetalleDocumentacionModel","then","data","catch","error","console","toggleModalCloseOptions","toggleModalModalAdvanceOptions","validarCheck","ValidateChecked","resp","onSaveProcess","option","instanceId","abortProcess","undefined","t","valores","frmSearch","Promise","resolve","reject","validation","consultarDocumentacionLegal","transactionId","status","legalDocumentationId","transactId","Object","entries","map","key","value","some","Boolean","textAlign","margin","push","URL_DASHBOARD","propTypes","selectedId","any","onClose","func","isRequired"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n  Row,\r\n} from \"reactstrap\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport ResultadosBusqueda from \"./ResultadosBusqueda\"\r\nimport ApiServicesDetalleDocumentacion from \"../../../../services/DocumentacionLegal/ApiServicesDetalleDocumentacion\"\r\nimport ModalCloseOptions from \"./ModalCloseOptions\";\r\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\r\nimport * as url from \"../../../../helpers/url_helper\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { BpmServices, BackendServices } from \"../../../../services\";\r\n\r\nconst PantallaBusqueda = props => {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const { selectedData } = location;\r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n\r\n  const apiServiceBackend = new BackendServices();\r\n\r\n\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    searchData(null)\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  function searchData(values) {\r\n    const api = new ApiServicesDetalleDocumentacion()\r\n    api.getResultadosDetalleDocumentacionModel(values)\r\n      .then((data) => {\r\n\r\n        setDataList(data);\r\n\r\n      })\r\n      .catch((error) => {\r\n\r\n        console.error('Error fetching documents', error);\r\n      });\r\n  }\r\n\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n  }\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalModalAdvanceOptions() {\r\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\r\n  }\r\n\r\n  function validarCheck() {\r\n    ValidateChecked().then(resp => {\r\n      resp && toggleModalModalAdvanceOptions();\r\n    });\r\n  }\r\n\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option, values = null) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 3: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 4: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        let valores = values.frmSearch;\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n    // history.push(\"/dashboard\");\r\n  }\r\n\r\n  function ValidateChecked() {\r\n    return new Promise((resolve, reject) => {\r\n      let validation = false;\r\n      apiServiceBackend.consultarDocumentacionLegal(location.data.transactionId).then(data => {\r\n        delete data.status;\r\n        delete data.legalDocumentationId;\r\n        delete data.transactId;\r\n        validation = Object.entries(data ?? {})?.map(([key, value]) => value)?.some(Boolean) ?? false;\r\n        seterror_dlg(!validation);\r\n        resolve(validation);\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"GenerateDocumentation\")} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <CardBody>\r\n              <Row>\r\n                <Col md=\"6\">\r\n                  <h4 className=\"card-title\">{props.t(\"LegalDocumentation\")}</h4>\r\n                </Col>\r\n                <Col md=\"6\" style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnSave\" color=\"success\" type=\"button\" onClick={() => { ValidateChecked() }} style={{ margin: '5px' }}>\r\n                    {props.t(\"generate\")}\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n\r\n            </CardBody>\r\n            {/* <DatosGenerales /> */}\r\n\r\n            <ResultadosBusqueda results={dataList} />\r\n\r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n            <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(2); }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n            <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { validarCheck() }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {props.t(\"Continue\")}</Button>\r\n            {/*\r\n          <Link className=\"btn btn-dark\" style={{ margin: '5px' }} to={ { pathname: \"/creditocomercial/documentacionlegal\", selectedData: undefined } }>{props.t(\"Close\")}</Link>\r\n\r\n            <Button color=\"negative\" type=\"button\" style={{ margin: '5px' }}>\r\n              { props.t(\"Refuse\") }\r\n            </Button>\r\n            <Button color=\"success\" type=\"button\" style={{ margin: '5px' }}>\r\n              { props.t(\"Advance\") }\r\n            </Button>\r\n            */}\r\n          </CardFooter>\r\n        </Card>\r\n        <ModalAdvanceOptions onSaveProcess={onSaveProcess} isOpen={displayModalAdvanceOptions} toggle={() => { toggleModalModalAdvanceOptions() }} />\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  // onSelectIdPropuesta: PropTypes.func.isRequired,\r\n  //selectedIdPropuesta:PropTypes.any\r\n  selectedId: PropTypes.any,\r\n  onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}