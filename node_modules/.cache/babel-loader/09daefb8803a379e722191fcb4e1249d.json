{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\InformacionAccionosta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\";\nimport moment from \"moment\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { BackendServices, CoreServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport Alert from 'react-bootstrap/Alert';\nimport { uniq_key } from \"../../../../../helpers/unq_key\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacionAccionista = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  var _props$jsonAccionista, _props$jsonAccionista2;\n\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const history = useHistory();\n  const [botonValidation, setbotonValidation] = useState(false);\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\n  const [dataLocation, setLocationData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [shareholderRows, setShareholderRows] = useState([]);\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [tipo, settipo] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataAcciones, setdataAcciones] = useState({\n    \"transactId\": 0,\n    \"personId\": 0,\n    \"personType\": \"\",\n    \"idType\": \"\",\n    \"clientDocumentId\": \"\",\n    \"customerNumberT24\": \"\",\n    \"name\": \"\",\n    \"secondName\": \"\",\n    \"lastName\": \"\",\n    \"secondSurname\": \"\",\n    \"nationality\": \"\",\n    \"birthDate\": \"1998-08-17\",\n    \"yearsExperience\": 0,\n    \"participation\": 0\n  });\n  const currencyData = new Currency();\n  const [msgToShow, setmsgToShow] = useState({\n    show: false,\n    msg: \"\",\n    type: \"success\"\n  }); //success,info,warning,danger\n\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmInformacionAccionista');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      //dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount),0)\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [formValid, setFormValid] = useState(false); // Form Submission\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    checkParticipationAmt(null);\n    setFormValid(true);\n  }\n\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if (props.activeTab == 4) {\n      // Read Api Service data  \n      loadInitialData(dataSession);\n      setDataReturn(props.jsonAccionistas);\n    }\n  }, [props.activeTab == 4]);\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  function loadInitialData(dataLocation) {\n    const api = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    // consultarAccionistaBD\n\n    const apiCore = new CoreServices(); // getPaisesCatalogo\n\n    apiCore.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\n        if (resp.length > 0) {\n          setdataGeneralIA(resp);\n          dataReturn.datosTablaAccionistas = resp;\n          setDataReturn(dataReturn);\n          console.log();\n          setShareholderRows(resp.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"ID Number\"),\n              children: data.clientDocumentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"Name\"),\n              children: data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"Nationality\"),\n              children: json.find(x => x.value === data.nationality).label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"DBO\"),\n              children: formatDate(data.birthDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"Participation\"),\n              children: [currencyData.formatTable(data.participation), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"YearsExprience\"),\n              children: [data.yearsExperience, \" \", t(\"Year\"), \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                onClick: resp => {\n                  updateData(data);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-border-color mdi-24px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 73\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, uniq_key(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)));\n          checkParticipationAmt(resp);\n        } else {\n          setShareholderRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              style: {\n                textAlign: 'center'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, uniq_key(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this));\n        }\n      });\n    });\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  function addAccionist(values, tipo) {\n    const dataSet = dataAcciones;\n    dataSet.participation = Number(values.participation);\n    dataSet.yearsExperience = Number(values.yearsExprience);\n    dataSet.transactId = Number(dataLocation.transactionId);\n    const datos = {\n      \"transactId\": Number(dataLocation.transactionId),\n      \"participation\": Number(values.participation),\n      \"yearsExperience\": Number(values.yearsExprience),\n      \"status\": true\n    };\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Procedemos a guardar el accionista                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    const apiBack = new BackendServices();\n    datos.personId = dataAcciones.personId; // actualizarAccionistaBD\n\n    apiBack.salvarAccionistaBD(datos).then(resp => {\n      if (resp !== null && resp !== undefined) {\n        loadInitialData(dataLocation);\n        cerrarModal();\n      } else {\n        cerrarModal();\n        seterror_dlg(false);\n      }\n    }).catch(error => {// seterror_dlg(false);\n    });\n    /*if (tipo == \"guardar\") {\r\n      // nuevoAccionista\r\n      apiBack.salvarAccionistaBD(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(dataLocation);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(false);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(false);\r\n      })\r\n    } else {\r\n      datos.personId = dataAcciones.personId;\r\n      // actualizarAccionistaBD\r\n      apiBack.actualizarAccionistaBD(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(dataLocation);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(false);\r\n        }\r\n      }).catch(error => {\r\n        // seterror_dlg(false);\r\n      })\r\n    }*/\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function cerrarModal() {\n    setShowModelAttachment(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModelAttachment(true);\n    removeBodyCss();\n  }\n\n  function updateData(data) {\n    setdataAcciones(data);\n    settipo(\"editar\");\n    setbotonValidation(true);\n    abrirModal();\n  }\n\n  function procesarDatosTabla(option, value) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                       Aqui procedemos a agregar un accionista a la lista                       */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                         Procedemos a eliminar el accionista de la lista                        */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n    }\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function showMessage(data) {\n    if (data !== null) {\n      setmsgToShow(data);\n    } else {\n      setmsgToShow({\n        show: false,\n        msg: \"\",\n        type: \"\"\n      });\n    }\n  }\n\n  function checkParticipationAmt(data) {\n    try {\n      data = data !== null ? data : dataGeneralIA;\n      var amtTotal = data.reduce((total, currentValue) => total + Number(currentValue.participation), 0);\n\n      if (amtTotal < 100) {\n        showMessage({\n          show: true,\n          msg: \"La participación total no alcanza el 100%\",\n          type: \"warning\"\n        });\n      }\n    } catch (err) {}\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-title\",\n      children: t(\"Shareholder Information\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive styled-table-div\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table table-striped table-hover styled-table table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ID Number\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Participation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"YearsExprience\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: shareholderRows !== null && shareholderRows !== undefined && shareholderRows.length > 0 ? shareholderRows : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 7,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-info\",\n                    style: {\n                      textAlign: \"center\"\n                    },\n                    children: t(\"NoData\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmInformacionAccionista\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDetails\",\n              children: t(\"Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              className: \"form-control\",\n              name: \"informacionAccionistaDetails\",\n              id: \"informacionAccionistaDetails\",\n              type: \"textarea\",\n              rows: \"7\",\n              value: (_props$jsonAccionista = props === null || props === void 0 ? void 0 : (_props$jsonAccionista2 = props.jsonAccionistas) === null || _props$jsonAccionista2 === void 0 ? void 0 : _props$jsonAccionista2.observations) !== null && _props$jsonAccionista !== void 0 ? _props$jsonAccionista : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"12\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"text-center\",\n          show: msgToShow.show,\n          variant: msgToShow.type,\n          dismissible: true,\n          onClose: () => {\n            showMessage(null);\n          },\n          children: msgToShow.msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        loadInitialData(dataLocation);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        loadInitialData(dataLocation);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      cancelButtonText: t(\"Cancel\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarAccionista\n\n        apiBack.eliminarAccionistaBD(dataDelete.transactId, dataDelete.shareholderId).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(false);\n          } else {\n            setconfirm_alert(false);\n            loadInitialData(dataLocation);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(false);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalInfoAccionistas, {\n      dataGeneralIA: dataGeneralIA,\n      tipo: tipo,\n      addAccionist: addAccionist,\n      botones: botonValidation,\n      dataAcciones: dataAcciones,\n      procesarDatosTabla: procesarDatosTabla,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}, \"uHgCSD3zKlkg4Zfgv3C4vaNGuLc=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = InformacionAccionista;\nInformacionAccionista.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default InformacionAccionista;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InformacionAccionista$React.forwardRef\");\n$RefreshReg$(_c2, \"InformacionAccionista\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/InformacionAccionosta.js"],"names":["React","useState","useTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalInfoAccionistas","moment","ApiServicesCommon","BackendServices","CoreServices","SweetAlert","url","Alert","uniq_key","Currency","InformacionAccionista","forwardRef","props","ref","t","i18n","location","history","botonValidation","setbotonValidation","dataGeneralIA","setdataGeneralIA","dataLocation","setLocationData","data","showModelAttachment","setShowModelAttachment","shareholderRows","setShareholderRows","accionistasJSON","setAccionistasJson","jsonAccionistas","dataReturn","setDataReturn","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","tipo","settipo","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataAcciones","setdataAcciones","currencyData","msgToShow","setmsgToShow","show","msg","type","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","setFormValid","handleSubmit","event","errors","values","preventDefault","length","checkParticipationAmt","useEffect","dataSession","undefined","transactionId","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","loadInitialData","formatDate","date","format","api","apiCore","getPaisesCatalogo","then","response","json","i","Records","label","value","consultarAccionistaBD","resp","datosTablaAccionistas","console","log","map","index","clientDocumentId","name","secondName","lastName","secondSurname","find","x","nationality","birthDate","formatTable","participation","yearsExperience","textAlign","updateData","addAccionist","dataSet","Number","yearsExprience","transactId","datos","apiBack","personId","salvarAccionistaBD","cerrarModal","catch","error","toggleShowModelAttachment","removeBodyCss","abrirModal","procesarDatosTabla","option","body","classList","add","showMessage","amtTotal","reduce","total","currentValue","err","e","observations","target","eliminarAccionistaBD","shareholderId","statusCode","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\"\r\nimport moment from \"moment\";\r\n\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { BackendServices, CoreServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { uniq_key } from \"../../../../../helpers/unq_key\"\r\nimport Currency from \"../../../../../helpers/currency\"\r\n\r\nconst InformacionAccionista = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const history = useHistory();\r\n\r\n  const [botonValidation, setbotonValidation] = useState(false);\r\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\r\n  const [dataLocation, setLocationData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [shareholderRows, setShareholderRows] = useState([]);\r\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataAcciones, setdataAcciones] = useState({\r\n    \"transactId\": 0,\r\n    \"personId\": 0,\r\n    \"personType\": \"\",\r\n    \"idType\": \"\",\r\n    \"clientDocumentId\": \"\",\r\n    \"customerNumberT24\": \"\",\r\n    \"name\": \"\",\r\n    \"secondName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"secondSurname\": \"\",\r\n    \"nationality\": \"\",\r\n    \"birthDate\": \"1998-08-17\",\r\n    \"yearsExperience\": 0,\r\n    \"participation\": 0\r\n  });\r\n\r\n  const currencyData = new Currency();\r\n  const [msgToShow, setmsgToShow] = useState({ show: false, msg: \"\", type: \"success\" })//success,info,warning,danger\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmInformacionAccionista');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n\r\n      //dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount),0)\r\n\r\n      return formValid;\r\n    }, dataReturn\r\n  }))\r\n  const [formValid, setFormValid] = useState(false);\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n\r\n    checkParticipationAmt(null)\r\n\r\n    setFormValid(true);\r\n  }\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    if (props.activeTab == 4) {\r\n      // Read Api Service data  \r\n      loadInitialData(dataSession);\r\n      setDataReturn(props.jsonAccionistas)\r\n    }\r\n  }, [props.activeTab == 4]);\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  function loadInitialData(dataLocation) {\r\n    const api = new BackendServices()\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    // consultarAccionistaBD\r\n    const apiCore = new CoreServices();\r\n    // getPaisesCatalogo\r\n    apiCore.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\r\n          if (resp.length > 0) {\r\n            setdataGeneralIA(resp);\r\n            dataReturn.datosTablaAccionistas = resp;\r\n            setDataReturn(dataReturn)\r\n            console.log();\r\n            setShareholderRows(resp.map((data, index) => (\r\n              <tr key={uniq_key()}>\r\n                <td data-label={t(\"ID Number\")}>{data.clientDocumentId}</td>\r\n                <td data-label={t(\"Name\")}>{data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname}</td>\r\n                <td data-label={t(\"Nationality\")}>{json.find(x => x.value === data.nationality).label}</td>\r\n                <td data-label={t(\"DBO\")}>{formatDate(data.birthDate)}</td>\r\n                <td data-label={t(\"Participation\")}>{currencyData.formatTable(data.participation)}%</td>\r\n                <td data-label={t(\"YearsExprience\")}>{data.yearsExperience} {t(\"Year\")}s</td>\r\n                <td style={{ textAlign: \"right\" }}>\r\n                  <Link to=\"#\" onClick={(resp) => { updateData(data) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                </td>\r\n              </tr>)))\r\n\r\n            checkParticipationAmt(resp);\r\n          } else {\r\n            setShareholderRows(\r\n              <tr key={uniq_key()}>\r\n                <td colSpan=\"5\" style={{ textAlign: 'center' }}></td>\r\n              </tr>);\r\n          }\r\n        })\r\n      });\r\n\r\n\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  function addAccionist(values, tipo) {\r\n    const dataSet = dataAcciones;\r\n    dataSet.participation = Number(values.participation);\r\n    dataSet.yearsExperience = Number(values.yearsExprience);\r\n    dataSet.transactId = Number(dataLocation.transactionId);\r\n    const datos = {\r\n      \"transactId\": Number(dataLocation.transactionId),\r\n      \"participation\": Number(values.participation),\r\n      \"yearsExperience\": Number(values.yearsExprience),\r\n      \"status\": true\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Procedemos a guardar el accionista                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const apiBack = new BackendServices();\r\n    datos.personId = dataAcciones.personId;\r\n    // actualizarAccionistaBD\r\n    apiBack.salvarAccionistaBD(datos).then(resp => {\r\n      if (resp !== null && resp !== undefined) {\r\n        loadInitialData(dataLocation);\r\n        cerrarModal();\r\n      } else {\r\n        cerrarModal();\r\n        seterror_dlg(false);\r\n      }\r\n    }).catch(error => {\r\n      // seterror_dlg(false);\r\n    })\r\n    /*if (tipo == \"guardar\") {\r\n      // nuevoAccionista\r\n      apiBack.salvarAccionistaBD(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(dataLocation);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(false);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(false);\r\n      })\r\n    } else {\r\n      datos.personId = dataAcciones.personId;\r\n      // actualizarAccionistaBD\r\n      apiBack.actualizarAccionistaBD(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(dataLocation);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(false);\r\n        }\r\n      }).catch(error => {\r\n        // seterror_dlg(false);\r\n      })\r\n    }*/\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function cerrarModal() {\r\n    setShowModelAttachment(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModelAttachment(true);\r\n    removeBodyCss()\r\n  }\r\n  function updateData(data) {\r\n    setdataAcciones(data)\r\n    settipo(\"editar\");\r\n    setbotonValidation(true);\r\n    abrirModal()\r\n  }\r\n  function procesarDatosTabla(option, value) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                       Aqui procedemos a agregar un accionista a la lista                       */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                         Procedemos a eliminar el accionista de la lista                        */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function showMessage(data) {\r\n    if (data !== null) {\r\n      setmsgToShow(data)\r\n    }\r\n    else {\r\n      setmsgToShow({ show: false, msg: \"\", type: \"\" })\r\n    }\r\n  }\r\n\r\n  function checkParticipationAmt(data) {\r\n    try {\r\n      data = data !== null ? data : dataGeneralIA;\r\n      var amtTotal = data.reduce((total, currentValue) => total + Number(currentValue.participation), 0)\r\n      if (amtTotal < 100) {\r\n        showMessage({ show: true, msg: \"La participación total no alcanza el 100%\", type: \"warning\" });\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5 className=\"card-title\">\r\n        {t(\"Shareholder Information\")}\r\n      </h5>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"table-responsive styled-table-div\">\r\n            <Table className=\"table table-striped table-hover styled-table table\">\r\n              <thead  >\r\n                <tr>\r\n                  <th>{t(\"ID Number\")}</th>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Nationality\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Participation\")}</th>\r\n                  <th>{t(\"YearsExprience\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {shareholderRows !== null && shareholderRows !== undefined && shareholderRows.length > 0 ?\r\n                  shareholderRows :\r\n                  <tr>\r\n                    <td colSpan={7}>\r\n                      <div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div>\r\n                    </td>\r\n                  </tr>\r\n                }\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <AvForm id=\"frmInformacionAccionista\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDetails\">{t(\"Details\")}</Label>\r\n              <AvField onChange={(e) => { dataReturn.observations = e.target.value; setDataReturn(dataReturn); }}\r\n                className=\"form-control\"\r\n                name=\"informacionAccionistaDetails\"\r\n                id=\"informacionAccionistaDetails\"\r\n                type=\"textarea\"\r\n                rows=\"7\"\r\n                value={props?.jsonAccionistas?.observations??\"\"}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Alert className='text-center' show={msgToShow.show} variant={msgToShow.type} dismissible onClose={() => { showMessage(null) }}>\r\n            {msgToShow.msg}\r\n          </Alert>\r\n        </Col>\r\n      </Row>\r\n\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          confirmButtonText={t(\"Confirm\")}\r\n          cancelButtonText={t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            loadInitialData(dataLocation);\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          confirmButtonText={t(\"Confirm\")}\r\n          cancelButtonText={t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            loadInitialData(dataLocation);\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          cancelButtonText={t(\"Cancel\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarAccionista\r\n            apiBack.eliminarAccionistaBD(dataDelete.transactId, dataDelete.shareholderId).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(false)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                loadInitialData(dataLocation);\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(false)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n\r\n\r\n\r\n      <ModalInfoAccionistas dataGeneralIA={dataGeneralIA} tipo={tipo} addAccionist={addAccionist} botones={botonValidation} dataAcciones={dataAcciones} procesarDatosTabla={procesarDatosTabla} isOpen={showModelAttachment} toggle={() => { cerrarModal() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n})\r\n\r\nInformacionAccionista.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default InformacionAccionista;\r\n"]},"metadata":{},"sourceType":"module"}