{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalInformacionClientes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport { OnlyNumber } from \"../../../../../helpers/commons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalInformacionClientes = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [paises, setPaises] = useState([]);\n  const [dataReturn, setDataReturn] = useState(props.jsonClientes);\n  const [campoRequeridoCustomType, setcampoRequeridoCustomType] = useState(false);\n  const [campoRequeridoTipoVenta, setcampoRequeridoTipoVenta] = useState(false);\n  const [campoRequeridoPais, setcampoRequeridoPais] = useState(false);\n  const [paisSelect, setpaisSelect] = useState(undefined);\n  const [tipoClienteSelect, settipoClienteSelect] = useState(undefined);\n  const [sumaParticipacion, setsumaParticipacion] = useState(0);\n  const [sumaParticipacionMessage, setsumaParticipacionMessage] = useState(false);\n  const [tipoVentaSelect, settipoVentaSelect] = useState(undefined);\n  const clienteTipo = [{\n    label: \"Privado\",\n    value: \"1\"\n  }, {\n    label: \"Gobierno\",\n    value: \"2\"\n  }];\n  const tipoVentaData = [{\n    label: \"Credito\",\n    value: \"1\"\n  }, {\n    label: \"Contado\",\n    value: \"2\"\n  }];\n  React.useEffect(() => {\n    // Read Api Service data\n    loadCountry();\n    setcampoRequeridoCustomType(false);\n    setcampoRequeridoTipoVenta(false);\n    setcampoRequeridoPais(false);\n  }, [props.isOpen]);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setpaisSelect(undefined);\n    settipoClienteSelect(undefined);\n    settipoVentaSelect(undefined);\n\n    try {\n      if (paises.length > 0 && props.jsonClientes.country !== null && paisSelect === undefined) {\n        defaultVal = paises.find(x => x.label === props.jsonClientes.country);\n\n        if (defaultVal !== undefined) {\n          setpaisSelect(defaultVal);\n        }\n      }\n\n      if (clienteTipo.length > 0 && props.jsonClientes.customerType !== null && tipoClienteSelect === undefined) {\n        defaultVal = clienteTipo.find(x => x.label === props.jsonClientes.customerType);\n\n        if (defaultVal !== undefined) {\n          settipoClienteSelect(defaultVal);\n        }\n      }\n\n      if (tipoVentaData.length > 0 && props.jsonClientes.salesType !== null && tipoVentaSelect === undefined) {\n        defaultVal = tipoVentaData.find(x => x.label === props.jsonClientes.salesType);\n\n        if (defaultVal !== undefined) {\n          settipoVentaSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n\n    setDataReturn(props.jsonClientes);\n\n    if (props.dataGeneralIA != null) {\n      setsumaParticipacion(0);\n\n      if (props.tipo == \"guardar\") {\n        let sumaTotal = 0;\n\n        for (let i = 0; i < props.dataGeneralIA.length; i++) {\n          sumaTotal = sumaTotal + props.dataGeneralIA[i].salePercentage;\n        }\n\n        setsumaParticipacion(sumaTotal);\n      } else {\n        let sumaTotal = 0;\n\n        for (let i = 0; i < props.dataGeneralIA.length; i++) {\n          if (props.dataGeneralIA[i].customerInfoId != props.jsonClientes.customerInfoId) {\n            sumaTotal = sumaTotal + props.dataGeneralIA[i].salePercentage;\n          }\n        }\n\n        setsumaParticipacion(sumaTotal);\n      }\n    }\n  }, [props.isOpen, paises]); // Submitimos formulario para busqueda de clientes\n\n  function handleSubmit(event, errors, values) {\n    if (sumaParticipacionMessage) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    props.addCliente(dataReturn, props.tipo);\n  }\n\n  function loadCountry() {\n    const api = new CoreServices(); // getPaisesCatalogo\n\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setPaises(json);\n    });\n  }\n\n  function validationParticipation(value) {\n    let sumaFinal = parseFloat(value) + parseFloat(sumaParticipacion);\n\n    if (parseFloat(sumaFinal) > 100) {\n      setsumaParticipacionMessage(true);\n    } else {\n      setsumaParticipacionMessage(false);\n    }\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"name\") {\n      dataReturn.name = e.target.value;\n    }\n\n    if (tipo == \"country\") {\n      dataReturn.country = e.label;\n    }\n\n    if (tipo == \"salePercentage\") {\n      dataReturn.salePercentage = Number(e.target.value);\n    }\n\n    if (tipo == \"customerType\") {\n      dataReturn.customerType = e.label;\n    }\n\n    if (tipo == \"salesType\") {\n      dataReturn.salesType = e.label;\n    }\n\n    if (tipo == \"termDays\") {\n      // dataReturn.termDays = Number(e.target.value);\n      dataReturn.termDays = e.target.value;\n    }\n\n    if (tipo == \"delayReason\") {\n      dataReturn.delayReason = e.target.value;\n    }\n\n    setDataReturn(dataReturn);\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla == 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title mt-0\",\n          children: t(\"ClientsInfo\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.toggle,\n          \"data-dismiss\": \"modal\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"FullName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                onChange: e => {\n                  changeAll(e, \"name\");\n                },\n                className: \"form-control\",\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                },\n                value: props.jsonClientes.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"idcountry\",\n                children: t(\"Country\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setpaisSelect(paises.find(x => x.label === e.label));\n                  changeAll(e, \"country\");\n                },\n                options: paises,\n                id: \"paises\",\n                value: paisSelect,\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"SelectCountry\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), campoRequeridoPais ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"salePercent\",\n                children: [t(\"SalePercent\"), \" \", 100 - sumaParticipacion, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                onChange: e => {\n                  changeAll(e, \"salePercentage\");\n                  validationParticipation(e.target.value);\n                },\n                onKeyPress: e => {\n                  return check(e);\n                },\n                className: \"form-control\",\n                name: \"salePercent\",\n                min: 0,\n                type: \"number\",\n                validate: {\n                  number: {\n                    value: true,\n                    errorMessage: t(\"InvalidField\")\n                  },\n                  min: {\n                    value: 0,\n                    errorMessage: t(\"InvalidField\")\n                  }\n                },\n                value: props.jsonClientes.salePercentage,\n                id: \"salePercent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), sumaParticipacionMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Thepercentageexceeds100%\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"customerType\",\n                children: t(\"ClientType\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  settipoClienteSelect(clienteTipo.find(x => x.label === e.label));\n                  changeAll(e, \"customerType\");\n                },\n                options: clienteTipo,\n                id: \"sustainableCustomer\",\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"toselect\"),\n                value: tipoClienteSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), campoRequeridoCustomType ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"termDays\",\n                children: t(\"Crterm(days)\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                onChange: e => {\n                  changeAll(e, \"termDays\");\n                },\n                className: \"form-control\",\n                name: \"termDays\" // min={0}\n                ,\n                type: \"text\" // onKeyPress={(e) => { OnlyNumber(e) }}\n                // validate={{\n                //   number: { value: true, errorMessage: t(\"InvalidField\") },\n                //   min: { value: 0, errorMessage: t(\"InvalidField\") }\n                // }}\n                ,\n                value: props.jsonClientes.creditDays,\n                id: \"termDays\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"salesType\",\n                children: t(\"SaleType\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  settipoVentaSelect(tipoVentaData.find(x => x.label === e.label));\n                  changeAll(e, \"salesType\");\n                },\n                options: tipoVentaData,\n                id: \"sustainableCustomer\",\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"toselect\"),\n                value: tipoVentaSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this), campoRequeridoTipoVenta ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"companyHistoryDescription\",\n                children: t(\"IncaseofCollectionDelayindicateReasonforCollectionDelayandStartegia\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                onChange: e => {\n                  changeAll(e, \"delayReason\");\n                },\n                value: props.jsonClientes.delayReason,\n                type: \"textarea\",\n                name: \"companyHistoryDescription\",\n                id: \"companyHistoryDescription\",\n                maxLength: \"1000\",\n                rows: \"7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          style: {\n            margin: '5px 0px'\n          },\n          type: \"button\",\n          onClick: props.toggle,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi mdi-cancel mid-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), \" \", t(\"Cancel\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n          id: \"btnSearch\",\n          color: \"success\",\n          type: \"submit\",\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-content-save mdi-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalInformacionClientes, \"yNmjYQcKD9IswjuN2L5ejOutGLw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalInformacionClientes;\nModalInformacionClientes.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default withTranslation()(ModalInformacionClientes);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalInformacionClientes\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalInformacionClientes.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","Select","AvForm","AvField","AvGroup","CoreServices","OnlyNumber","ModalInformacionClientes","props","t","i18n","paises","setPaises","dataReturn","setDataReturn","jsonClientes","campoRequeridoCustomType","setcampoRequeridoCustomType","campoRequeridoTipoVenta","setcampoRequeridoTipoVenta","campoRequeridoPais","setcampoRequeridoPais","paisSelect","setpaisSelect","undefined","tipoClienteSelect","settipoClienteSelect","sumaParticipacion","setsumaParticipacion","sumaParticipacionMessage","setsumaParticipacionMessage","tipoVentaSelect","settipoVentaSelect","clienteTipo","label","value","tipoVentaData","useEffect","loadCountry","isOpen","defaultVal","length","country","find","x","customerType","salesType","err","dataGeneralIA","tipo","sumaTotal","i","salePercentage","customerInfoId","handleSubmit","event","errors","values","preventDefault","addCliente","api","getPaisesCatalogo","then","response","json","Records","push","validationParticipation","sumaFinal","parseFloat","changeAll","e","name","target","Number","termDays","delayReason","check","tecla","document","all","keyCode","which","toggle","required","number","errorMessage","min","creditDays","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport Select from \"react-select\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\nimport { OnlyNumber } from \"../../../../../helpers/commons\"\r\nconst ModalInformacionClientes = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [paises, setPaises] = useState([]);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonClientes);\r\n  const [campoRequeridoCustomType, setcampoRequeridoCustomType] = useState(false);\r\n  const [campoRequeridoTipoVenta, setcampoRequeridoTipoVenta] = useState(false);\r\n  const [campoRequeridoPais, setcampoRequeridoPais] = useState(false);\r\n  const [paisSelect, setpaisSelect] = useState(undefined);\r\n  const [tipoClienteSelect, settipoClienteSelect] = useState(undefined);\r\n  const [sumaParticipacion, setsumaParticipacion] = useState(0);\r\n  const [sumaParticipacionMessage, setsumaParticipacionMessage] = useState(false);\r\n\r\n  const [tipoVentaSelect, settipoVentaSelect] = useState(undefined);\r\n  const clienteTipo = [{ label: \"Privado\", value: \"1\" }, { label: \"Gobierno\", value: \"2\" }];\r\n  const tipoVentaData = [{ label: \"Credito\", value: \"1\" }, { label: \"Contado\", value: \"2\" }];\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    loadCountry()\r\n    setcampoRequeridoCustomType(false);\r\n    setcampoRequeridoTipoVenta(false);\r\n    setcampoRequeridoPais(false);\r\n  }, [props.isOpen]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setpaisSelect(undefined)\r\n    settipoClienteSelect(undefined)\r\n    settipoVentaSelect(undefined)\r\n    try {\r\n      if (paises.length > 0 && props.jsonClientes.country !== null && paisSelect === undefined) {\r\n        defaultVal = paises.find(x => x.label === props.jsonClientes.country);\r\n        if (defaultVal !== undefined) {\r\n          setpaisSelect(defaultVal);\r\n        }\r\n      }\r\n      if (clienteTipo.length > 0 && props.jsonClientes.customerType !== null && tipoClienteSelect === undefined) {\r\n        defaultVal = clienteTipo.find(x => x.label === props.jsonClientes.customerType);\r\n        if (defaultVal !== undefined) {\r\n          settipoClienteSelect(defaultVal);\r\n        }\r\n      }\r\n      if (tipoVentaData.length > 0 && props.jsonClientes.salesType !== null && tipoVentaSelect === undefined) {\r\n        defaultVal = tipoVentaData.find(x => x.label === props.jsonClientes.salesType);\r\n        if (defaultVal !== undefined) {\r\n          settipoVentaSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n    setDataReturn(props.jsonClientes)\r\n    if (props.dataGeneralIA != null) {\r\n      setsumaParticipacion(0);\r\n      if (props.tipo == \"guardar\") {\r\n        let sumaTotal = 0;\r\n        for (let i = 0; i < props.dataGeneralIA.length; i++) {\r\n          sumaTotal = sumaTotal + props.dataGeneralIA[i].salePercentage;\r\n        }\r\n        setsumaParticipacion(sumaTotal);\r\n      } else {\r\n        let sumaTotal = 0;\r\n        for (let i = 0; i < props.dataGeneralIA.length; i++) {\r\n          if (props.dataGeneralIA[i].customerInfoId != props.jsonClientes.customerInfoId) {\r\n            sumaTotal = sumaTotal + props.dataGeneralIA[i].salePercentage;\r\n          }\r\n        }\r\n        setsumaParticipacion(sumaTotal);\r\n      }\r\n    }\r\n  }, [props.isOpen, paises]);\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n    if (sumaParticipacionMessage) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    props.addCliente(dataReturn, props.tipo);\r\n  }\r\n  function loadCountry() {\r\n    const api = new CoreServices();\r\n    // getPaisesCatalogo\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        setPaises(json);\r\n      });\r\n  }\r\n  function validationParticipation(value) {\r\n    let sumaFinal = parseFloat(value) + parseFloat(sumaParticipacion);\r\n    if (parseFloat(sumaFinal) > 100) {\r\n      setsumaParticipacionMessage(true);\r\n    } else {\r\n      setsumaParticipacionMessage(false)\r\n    }\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"name\") {\r\n      dataReturn.name = e.target.value;\r\n    }\r\n    if (tipo == \"country\") {\r\n      dataReturn.country = e.label;\r\n    }\r\n    if (tipo == \"salePercentage\") {\r\n      dataReturn.salePercentage = Number(e.target.value);\r\n    }\r\n    if (tipo == \"customerType\") {\r\n      dataReturn.customerType = e.label;\r\n    }\r\n    if (tipo == \"salesType\") {\r\n      dataReturn.salesType = e.label;\r\n    }\r\n    if (tipo == \"termDays\") {\r\n      // dataReturn.termDays = Number(e.target.value);\r\n      dataReturn.termDays = e.target.value;\r\n    }\r\n    if (tipo == \"delayReason\") {\r\n      dataReturn.delayReason = e.target.value;\r\n    }\r\n    setDataReturn(dataReturn)\r\n  }\r\n\r\n  function check(e) {\r\n    let tecla = (document.all) ? e.keyCode : e.which;\r\n    //Tecla de retroceso para borrar, siempre la permite\r\n    if (tecla == 45) {\r\n      e.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title mt-0\">{t(\"ClientsInfo\")}</h5>\r\n          <button\r\n            type=\"button\"\r\n            onClick={props.toggle}\r\n            data-dismiss=\"modal\"\r\n            className=\"close\"\r\n            aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"name\">{t(\"FullName\")}</Label>\r\n                <AvField\r\n                  onChange={(e) => {\r\n                    changeAll(e, \"name\");\r\n                  }}\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  value={props.jsonClientes.name}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"idcountry\">{t(\"Country\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => {\r\n                    setpaisSelect(paises.find(x => x.label === e.label)); changeAll(e, \"country\");\r\n                  }}\r\n                  options={paises}\r\n                  id=\"paises\"\r\n                  value={paisSelect}\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"SelectCountry\")}\r\n                />\r\n                {campoRequeridoPais ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <AvGroup className=\"mb-3\">\r\n                <Label htmlFor=\"salePercent\">{t(\"SalePercent\")} {100 - sumaParticipacion}%</Label>\r\n                <AvField\r\n                  onChange={(e) => {\r\n                    changeAll(e, \"salePercentage\");\r\n                    validationParticipation(e.target.value)\r\n                  }}\r\n                  onKeyPress={(e) => { return check(e) }}\r\n                  className=\"form-control\"\r\n                  name=\"salePercent\"\r\n                  min={0}\r\n                  type=\"number\"\r\n                  validate={{\r\n                    number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                    min: { value: 0, errorMessage: t(\"InvalidField\") }\r\n                  }}\r\n                  value={props.jsonClientes.salePercentage}\r\n                  id=\"salePercent\" />\r\n                {sumaParticipacionMessage ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Thepercentageexceeds100%\")}</p>\r\n                  : null}\r\n              </AvGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"customerType\">{t(\"ClientType\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => { settipoClienteSelect(clienteTipo.find(x => x.label === e.label)); changeAll(e, \"customerType\"); }}\r\n                  options={clienteTipo}\r\n                  id=\"sustainableCustomer\"\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"toselect\")}\r\n                  value={tipoClienteSelect}\r\n                />\r\n                {campoRequeridoCustomType ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <AvGroup className=\"mb-3\">\r\n                <Label htmlFor=\"termDays\">{t(\"Crterm(days)\")}</Label>\r\n                <AvField\r\n                  onChange={(e) => {\r\n                    changeAll(e, \"termDays\");\r\n                  }}\r\n                  className=\"form-control\"\r\n                  name=\"termDays\"\r\n                  // min={0}\r\n                  type=\"text\"\r\n                  // onKeyPress={(e) => { OnlyNumber(e) }}\r\n                  // validate={{\r\n                  //   number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                  //   min: { value: 0, errorMessage: t(\"InvalidField\") }\r\n                  // }}\r\n                  value={props.jsonClientes.creditDays}\r\n                  id=\"termDays\" />\r\n              </AvGroup>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"salesType\">{t(\"SaleType\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => { settipoVentaSelect(tipoVentaData.find(x => x.label === e.label)); changeAll(e, \"salesType\"); }}\r\n                  options={tipoVentaData}\r\n                  id=\"sustainableCustomer\"\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"toselect\")}\r\n                  value={tipoVentaSelect}\r\n                />\r\n                {campoRequeridoTipoVenta ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"companyHistoryDescription\">{t(\"IncaseofCollectionDelayindicateReasonforCollectionDelayandStartegia\")}</Label>\r\n                <AvField\r\n                  onChange={(e) => {\r\n                    changeAll(e, \"delayReason\");\r\n                  }}\r\n                  value={props.jsonClientes.delayReason}\r\n                  type=\"textarea\"\r\n                  name=\"companyHistoryDescription\"\r\n                  id=\"companyHistoryDescription\"\r\n                  maxLength=\"1000\"\r\n                  rows=\"7\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={props.toggle}>\r\n            <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n          </Button>\r\n          {props.botones ?\r\n            <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}>\r\n              <i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n              {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n            </Button>\r\n            : null}\r\n        </div>\r\n      </AvForm>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalInformacionClientes.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\nexport default (withTranslation()(ModalInformacionClientes));\r\n"]},"metadata":{},"sourceType":"module"}