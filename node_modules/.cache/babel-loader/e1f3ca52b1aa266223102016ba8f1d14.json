{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\BlackListForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport Select from \"react-select\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table, Modal } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport Switch from \"react-switch\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport LoadingOverlay from 'react-loading-overlay';\nimport watchlist from \"../../../models/Core/WatchListModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlackListForm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [selectClient, setselectClient] = useState(props.clientSelected);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\n  const [dataBlackListResult, setdataBlackListResult] = useState([]);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [showLoading, setshowLoading] = useState(false);\n  const [alreadyVerified, setalreadyVerified] = useState(false);\n  React.useEffect(() => {\n    fetchData();\n  }, []); //Caraga Inicial de datos\n\n  function fetchData() {\n    loadIdentificationTypes();\n    loadPersonTypes();\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    // consultarCatalogoTipoIdentificacion\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n        setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    // consultarCatalogoTipoPersona\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n        setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\n      }\n    }).catch(error => {});\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormBlackList(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson[e.target.name] = e.target.value;\n    setselectClient(clientPerson); //si la persona es juridica auto seleccionamos RUC\n\n    if (clientPerson.personType === 2) {\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\n    }\n  } //Guardar el Cliente\n\n\n  function handleSubmitFormBlackList(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } //retornar los datos recolectados \n\n\n    let dataModel = watchlist.getRequestModel();\n\n    switch (selectClient.idType) {\n      case \"RUC\":\n        {\n          dataModel.pTypeId = 'JURIDICA';\n          dataModel.pCustomerId = selectClient.clientDocumentId;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: selectClient.name\n          });\n          break;\n        }\n\n      case \"CED\":\n        {\n          dataModel.pTypeId = 'CEDULA';\n          dataModel.pCustomerId = selectClient.clientDocumentId;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: selectClient.name\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: selectClient.secondName\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: selectClient.lastName\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: selectClient.secondSurname\n          });\n          break;\n        }\n\n      default:\n        {\n          dataModel.pTypeId = 'PASAPORTE';\n          dataModel.pCustomerId = selectClient.clientDocumentId;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: selectClient.name\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: selectClient.secondName\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: selectClient.lastName\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: selectClient.secondSurname\n          });\n          break;\n        }\n    }\n\n    searchOnWatchListCheck(dataModel);\n  } //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\n\n\n  function getClientDataFormByPersonType(personType) {\n    if (personType === undefined) {\n      return null;\n    }\n\n    switch (personType.value) {\n      case 1:\n        {\n          //Natural\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"FirstName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"name\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.name : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.secondName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.lastName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondSurname\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondSurname\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.secondSurname : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this);\n        }\n\n      case 2:\n        {\n          //Juridica\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"name\",\n                type: \"text\",\n                onChange: handleChangeInputFormBlackList,\n                value: selectClient !== undefined ? selectClient.name : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this);\n        }\n    }\n\n    return null;\n  } //mostar mensaje \n\n\n  function showMessage(message, isError = false) {\n    msgData.show = false;\n    setmsgData(msgData);\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } //realizar busqueda en listas de vigilancias\n\n\n  function searchOnWatchListCheck(dataModel) {\n    setshowLoading(true);\n    apiCoreServices.postWhatchList(dataModel).then(data => {\n      if (data.status === 200) {\n        if (data.result.length > 0) {\n          setdataBlackListResult(data.result);\n        } else {\n          showMessage(t('NoResults'));\n        }\n\n        setalreadyVerified(true);\n      } else {\n        showMessage(t('ErrorCode') + \": \" + data.error.errorCode + \"  \" + t('ErrorMsg') + \": \" + data.error.errorCode, true);\n      }\n    }).catch(error => {\n      console.error(error);\n    }).finally(() => {\n      setshowLoading(false);\n    });\n  } //funcion de Guardar Resultados y saber si tuvo coincidencias para enviarlo a cumplimiento\n\n\n  function saveresults(hasCoincidences = false) {\n    props.watchListResult({\n      blackList: hasCoincidences,\n      comments: selectClient.observations\n    });\n    props.toggle();\n  } //Abre un tab para busquedas en google\n\n\n  function onOpenGooleSearch() {\n    let query;\n\n    switch (selectClient.idType) {\n      case \"RUC\":\n        {\n          query = [identificationTypeList.find(x => x.value === selectClient.idType).label, selectClient.clientDocumentId, selectClient.name];\n          break;\n        }\n\n      default:\n        {\n          query = [identificationTypeList.find(x => x.value === selectClient.idType).label, selectClient.clientDocumentId, selectClient.name, selectClient.secondName, selectClient.lastName, selectClient.secondSurname];\n          break;\n        }\n    }\n\n    query = query.filter(item => item !== '').join('+');\n    var searchUrl = `https://www.google.com/search?igu=1&gws_rd=ssl&q=${query}`;\n    window.open(searchUrl, \"_blank\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"WatchListCheck\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        minHeight: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: showLoading,\n        spinner: true,\n        text: t(\"WaitingPlease\"),\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          id: \"frmBlackList\",\n          className: \"needs-validation\",\n          onSubmit: handleSubmitFormBlackList,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      htmlFor: \"personType\",\n                      children: t(\"PersonType\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      onChange: e => {\n                        setpersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                        handleChangeInputFormBlackList({\n                          target: {\n                            name: 'personType',\n                            value: e.value\n                          }\n                        });\n                      },\n                      options: personTypeList,\n                      classNamePrefix: \"select2-selection\",\n                      value: personTypeSelected,\n                      name: \"personType\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: ' '\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 44\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"success\",\n                      type: \"submit\",\n                      style: {\n                        margin: '5px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-file-find mdi-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 87\n                      }, this), \" \", t(\"Consult\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"warning\",\n                      type: \"button\",\n                      onClick: onOpenGooleSearch,\n                      style: {\n                        margin: '5px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-google mdi-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 294,\n                        columnNumber: 115\n                      }, this), \" \", t(\"Google\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: getClientDataFormByPersonType(personTypeSelected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"IdType\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      onChange: e => {\n                        setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                        handleChangeInputFormBlackList({\n                          target: {\n                            name: 'idType',\n                            value: e.value\n                          }\n                        });\n                      },\n                      options: identificationTypeList,\n                      classNamePrefix: \"select2-selection\",\n                      value: identificationTypeSelected,\n                      name: \"idType\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      htmlFor: \"idnumber\",\n                      children: t(\"IdNumber\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      onChange: handleChangeInputFormBlackList,\n                      className: \"form-control\",\n                      name: \"clientDocumentId\",\n                      type: \"text\" //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\n                      ,\n                      value: selectClient !== undefined ? selectClient.clientDocumentId : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                show: msgData.show,\n                variant: msgData.isError ? \"danger\" : \"success\",\n                dismissible: true,\n                onClose: () => {\n                  console.log(\"onClose\");\n                  setmsgData({\n                    show: false,\n                    msg: \"\",\n                    isError: false\n                  });\n                },\n                children: msgData.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: dataBlackListResult !== undefined && dataBlackListResult.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"Results\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive\",\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        className: \"table mb-0\",\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          className: \"table-light\",\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"#\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"FullName\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 345,\n                              columnNumber: 33\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"Evaluation\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 346,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 343,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 342,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: dataBlackListResult.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.id\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 352,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 353,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.evaluation\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 354,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 351,\n                            columnNumber: 33\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      htmlFor: \"observations\",\n                      children: t(\"Observation\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"observations\",\n                      rows: 7,\n                      type: \"textarea\",\n                      onChange: handleChangeInputFormBlackList\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"dark\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: props.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi mdi-cancel mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), \" \", t(\"Cancel\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"danger\",\n                type: \"button\",\n                onClick: () => {\n                  saveresults(true);\n                },\n                style: {\n                  margin: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-content-save mdi-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 118\n                }, this), \" \", t(\"WithMatches\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                type: \"button\",\n                onClick: () => {\n                  saveresults();\n                },\n                style: {\n                  margin: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-content-save mdi-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 115\n                }, this), \" \", t(\"WithoutMatches\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlackListForm, \"rCDcaB65LlGlgm0Yk93lHttuQnc=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BlackListForm;\nBlackListForm.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onCancel: PropTypes.func,\n  clientSelected: PropTypes.any,\n  watchListResult: PropTypes.func\n};\nexport default BlackListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackListForm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/BlackListForm.js"],"names":["React","useState","PropTypes","useTranslation","Select","Link","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","Modal","Alert","Switch","BackendServices","CoreServices","BpmServices","AvForm","AvField","AvGroup","AvInput","AvCheckbox","PersonModel","LoadingOverlay","watchlist","BlackListForm","props","t","i18n","selectClient","setselectClient","clientSelected","identificationTypeList","setidentificationTypeList","identificationTypeSelected","setidentificationTypeSelected","undefined","personTypeList","setpersonTypeList","personTypeSelected","setpersonTypeSelected","dataBlackListResult","setdataBlackListResult","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","msgData","setmsgData","show","msg","isError","showLoading","setshowLoading","alreadyVerified","setalreadyVerified","useEffect","fetchData","loadIdentificationTypes","loadPersonTypes","consultarCatalogoTipoIdentificacion","then","data","json","i","length","push","label","value","find","x","idType","catch","error","consultarCatalogoTipoPersona","Number","personType","handleChangeInputFormBlackList","e","clientPerson","target","name","handleSubmitFormBlackList","event","errors","values","preventDefault","dataModel","getRequestModel","pTypeId","pCustomerId","clientDocumentId","pCustomerListParams","KeyValueParam","_x003C_Key_x003E_k__BackingField","_x003C_Value_x003E_k__BackingField","secondName","lastName","secondSurname","searchOnWatchListCheck","getClientDataFormByPersonType","showMessage","message","postWhatchList","status","result","errorCode","console","finally","saveresults","hasCoincidences","watchListResult","blackList","comments","observations","toggle","onOpenGooleSearch","query","filter","item","join","searchUrl","window","open","isOpen","minHeight","textAlign","margin","log","map","index","id","evaluation","propTypes","bool","func","onCancel","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Select from \"react-select\";\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Modal,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Switch from \"react-switch\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport watchlist from \"../../../models/Core/WatchListModel\";\r\nconst BlackListForm = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const [selectClient, setselectClient] = useState(props.clientSelected);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\r\n  const [dataBlackListResult, setdataBlackListResult] = useState([]);\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  const [showLoading, setshowLoading] = useState(false);\r\n  const [alreadyVerified, setalreadyVerified] = useState(false);\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData() {\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    // consultarCatalogoTipoIdentificacion\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json)\r\n          setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    // consultarCatalogoTipoPersona\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n          setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormBlackList(e) {\r\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\r\n    clientPerson[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n    //si la persona es juridica auto seleccionamos RUC\r\n    if (clientPerson.personType === 2) {\r\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\r\n    }\r\n  }\r\n  //Guardar el Cliente\r\n  function handleSubmitFormBlackList(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    //retornar los datos recolectados \r\n    let dataModel = watchlist.getRequestModel();\r\n    switch (selectClient.idType) {\r\n      case \"RUC\": {\r\n        dataModel.pTypeId = 'JURIDICA';\r\n        dataModel.pCustomerId = selectClient.clientDocumentId;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"NOMBRE\", _x003C_Value_x003E_k__BackingField: selectClient.name });\r\n        break;\r\n      }\r\n      case \"CED\": {\r\n        dataModel.pTypeId = 'CEDULA';\r\n        dataModel.pCustomerId = selectClient.clientDocumentId;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"NOMBRE\", _x003C_Value_x003E_k__BackingField: selectClient.name });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\", _x003C_Value_x003E_k__BackingField: selectClient.secondName });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\", _x003C_Value_x003E_k__BackingField: selectClient.lastName });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\", _x003C_Value_x003E_k__BackingField: selectClient.secondSurname });\r\n        break;\r\n      }\r\n      default: {\r\n        dataModel.pTypeId = 'PASAPORTE';\r\n        dataModel.pCustomerId = selectClient.clientDocumentId;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"NOMBRE\", _x003C_Value_x003E_k__BackingField: selectClient.name });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\", _x003C_Value_x003E_k__BackingField: selectClient.secondName });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\", _x003C_Value_x003E_k__BackingField: selectClient.lastName });\r\n        dataModel.pCustomerListParams.KeyValueParam.push({ _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\", _x003C_Value_x003E_k__BackingField: selectClient.secondSurname });\r\n        break;\r\n      }\r\n    }\r\n    searchOnWatchListCheck(dataModel);\r\n  }\r\n  //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\r\n  function getClientDataFormByPersonType(personType) {\r\n    if (personType === undefined) {\r\n      return null;\r\n    }\r\n    switch (personType.value) {\r\n      case 1: {//Natural\r\n        return (<React.Fragment>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"FirstName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined ? selectClient.name : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondName\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined ? selectClient.secondName : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"lastName\">{t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined ? selectClient.lastName : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondSurname\">{t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondSurname\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined ? selectClient.secondSurname : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n        </React.Fragment>)\r\n      }\r\n      case 2: {//Juridica\r\n        return (\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined ? selectClient.name : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n        )\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  //mostar mensaje \r\n  function showMessage(message, isError = false) {\r\n    msgData.show = false;\r\n    setmsgData(msgData);\r\n    setmsgData({ show: true, msg: message, isError: isError });\r\n  }\r\n  //realizar busqueda en listas de vigilancias\r\n  function searchOnWatchListCheck(dataModel) {\r\n    setshowLoading(true);\r\n    apiCoreServices.postWhatchList(dataModel)\r\n      .then((data) => {\r\n        if (data.status === 200) {\r\n          if (data.result.length > 0) {\r\n            setdataBlackListResult(data.result);\r\n          }\r\n          else { showMessage(t('NoResults')); }\r\n          setalreadyVerified(true);\r\n        }\r\n        else {\r\n          showMessage(t('ErrorCode') + \": \" + data.error.errorCode + \"  \" + t('ErrorMsg') + \": \" + data.error.errorCode, true);\r\n        }\r\n      })\r\n      .catch((error) => { console.error(error); })\r\n      .finally(() => { setshowLoading(false); })\r\n  }\r\n  //funcion de Guardar Resultados y saber si tuvo coincidencias para enviarlo a cumplimiento\r\n  function saveresults(hasCoincidences = false) {\r\n    props.watchListResult({ blackList: hasCoincidences, comments: selectClient.observations });\r\n    props.toggle();\r\n  }\r\n  //Abre un tab para busquedas en google\r\n  function onOpenGooleSearch() {\r\n    let query;\r\n    switch (selectClient.idType) {\r\n      case \"RUC\": {\r\n        query = [\r\n          identificationTypeList.find(x => x.value === selectClient.idType).label,\r\n          selectClient.clientDocumentId,\r\n          selectClient.name\r\n        ];\r\n        break;\r\n      }\r\n      default: {\r\n        query = [\r\n          identificationTypeList.find(x => x.value === selectClient.idType).label,\r\n          selectClient.clientDocumentId,\r\n          selectClient.name,\r\n          selectClient.secondName,\r\n          selectClient.lastName,\r\n          selectClient.secondSurname\r\n        ];\r\n        break;\r\n      }\r\n    }\r\n    query = query.filter(item => item !== '').join('+');\r\n    var searchUrl = `https://www.google.com/search?igu=1&gws_rd=ssl&q=${query}`;\r\n    window.open(searchUrl, \"_blank\");\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"WatchListCheck\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ minHeight: '500px' }}>\r\n        <LoadingOverlay active={showLoading} spinner text={t(\"WaitingPlease\")}>\r\n          <AvForm id=\"frmBlackList\" className=\"needs-validation\" onSubmit={handleSubmitFormBlackList}>\r\n            <Card>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                      <Select\r\n                        onChange={(e) => { setpersonTypeSelected(personTypeList.find(x => x.value === e.value)); handleChangeInputFormBlackList({ target: { name: 'personType', value: e.value } }) }}\r\n                        options={personTypeList}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={personTypeSelected}\r\n                        name=\"personType\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <div className=\"mb-3\" style={{ textAlign: \"right\" }}>\r\n                      <Label>{' '}</Label> <br></br>\r\n                      <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-file-find mdi-12px\"></i>\r\n                        {\" \"}{t(\"Consult\")}\r\n                      </Button>\r\n                      <Button color=\"warning\" type=\"button\" onClick={onOpenGooleSearch} style={{ margin: '5px' }}><i className=\"mdi mdi-google mdi-12px\"></i>\r\n                        {\" \"}{t(\"Google\")}\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {getClientDataFormByPersonType(personTypeSelected)}\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <div className=\"mb-3\">\r\n                      <Label>{t(\"IdType\")}</Label>\r\n                      <Select\r\n                        onChange={(e) => { setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value)); handleChangeInputFormBlackList({ target: { name: 'idType', value: e.value } }) }}\r\n                        options={identificationTypeList}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={identificationTypeSelected}\r\n                        name=\"idType\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n\r\n                  <Col md=\"6\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                      <AvField onChange={handleChangeInputFormBlackList} className=\"form-control\"\r\n                        name=\"clientDocumentId\" type=\"text\"\r\n                        //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                        value={selectClient !== undefined ? selectClient.clientDocumentId : ''}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                  {msgData.msg}\r\n                </Alert>\r\n\r\n              </CardBody>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    {dataBlackListResult !== undefined && dataBlackListResult.length > 0 ?\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"Results\")}</Label>\r\n                        <div className=\"table-responsive\">\r\n                          <Table className=\"table mb-0\">\r\n                            <thead className=\"table-light\">\r\n                              <tr>\r\n                                <th>{t(\"#\")}</th>\r\n                                <th>{t(\"FullName\")}</th>\r\n                                <th>{t(\"Evaluation\")}</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {dataBlackListResult.map((item, index) => (\r\n                                <tr>\r\n                                  <td>{item.id}</td>\r\n                                  <td>{item.name}</td>\r\n                                  <td>{item.evaluation}</td>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          </Table>\r\n                        </div>\r\n                      </div>\r\n                      : null}\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <div className=\"mb-3\">\r\n                      <Label htmlFor=\"observations\">{t(\"Observation\")}</Label>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"observations\" rows={7}\r\n                        type=\"textarea\" onChange={handleChangeInputFormBlackList}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n              <CardFooter style={{ textAlign: \"right\" }}>\r\n                <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle}>\r\n                  <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                </Button>\r\n                <Button color=\"danger\" type=\"button\" onClick={() => { saveresults(true) }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                  {\" \"}{t(\"WithMatches\")}\r\n                </Button>\r\n                <Button color=\"success\" type=\"button\" onClick={() => { saveresults() }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                  {\" \"}{t(\"WithoutMatches\")}\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </AvForm>\r\n        </LoadingOverlay>\r\n      </div>\r\n    </Modal>\r\n\r\n  );\r\n};\r\n\r\nBlackListForm.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  clientSelected: PropTypes.any,\r\n  watchListResult: PropTypes.func,\r\n}\r\n\r\nexport default BlackListForm;\r\n"]},"metadata":{},"sourceType":"module"}