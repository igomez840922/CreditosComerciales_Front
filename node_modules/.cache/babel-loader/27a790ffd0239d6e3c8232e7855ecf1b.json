{"ast":null,"code":"import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef}from'react';import ReactApexChart from\"react-apexcharts\";import{Card,CardBody}from\"reactstrap\";import*as moment from'moment';import{formatCurrency,translationHelpers}from'../../helpers';import{BackendServices}from\"../../services\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ScatterChart=function ScatterChart(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),series=_useState2[0],setseries=_useState2[1];var _useState3=useState({chart:{height:350,type:'scatter',toolbar:{show:false},zoom:{enabled:true,type:'xy'}},colors:['#3b5de7','#45cb85'],xaxis:{tickAmount:10},legend:{position:'top'},yaxis:{tickAmount:7}}),_useState4=_slicedToArray(_useState3,2),options=_useState4[0],setoptions=_useState4[1];var backendServices=new BackendServices();var _translationHelpers=translationHelpers('commercial_credit','translation'),_translationHelpers2=_slicedToArray(_translationHelpers,2),tc=_translationHelpers2[0],tr=_translationHelpers2[1];React.useEffect(function(){inicialize();},[]);function inicialize(){backendServices.getBpmStatistics().then(function(resp){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var nowMonth=moment().month();var beforeMonth=moment().add(-1,'months').month();var nowDate=resp.filter(function(statistics){return moment(statistics.date).month()===nowMonth;});var beforeDate=resp.filter(function(statistics){return moment(statistics.date).month()===beforeMonth;});nowDate=groupBy(nowDate.map(function(statistics){return _objectSpread(_objectSpread({},statistics),{},{date:moment(statistics.date).format(\"DD/MM/YYYY\")});}),'date');beforeDate=groupBy(beforeDate.map(function(statistics){return _objectSpread(_objectSpread({},statistics),{},{date:moment(statistics.date).format(\"DD/MM/YYYY\")});}),'date');var nowSeries=nowDate.map(function($date){return[moment($date.at(0).date,\"DD/MM/YYYY\").date(),$date.length];});var beforeSeries=beforeDate.map(function($date){return[moment($date.at(0).date,\"DD/MM/YYYY\").date(),$date.length];});var series=[{name:tr(months[beforeMonth]),data:beforeSeries},{name:tr(months[nowMonth]),data:nowSeries}];setseries(series);}).catch(function(err){console.log(err);});}/**\r\n     * groupBy, agrupa los items de un JSON\r\n     * @param {Array} collection \r\n     * @param {string} property \r\n     * @returns {Array}\r\n     */function groupBy(collection,property){var i=0,val,index,values=[],result=[];for(;i<collection.length;i++){val=collection[i][property];index=values.indexOf(val);if(index>-1)result[index].push(collection[i]);else{values.push(val);result.push([collection[i]]);}}return result;}return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title mb-4\",children:\"Comportamiento en el Mes\"}),/*#__PURE__*/_jsx(ReactApexChart,{options:options,series:series,height:\"225\",type:\"scatter\",className:\"apex-charts\"})]})})});};export default ScatterChart;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/scatter-analytics.js"],"names":["React","useState","useRef","ReactApexChart","Card","CardBody","moment","formatCurrency","translationHelpers","BackendServices","ScatterChart","props","series","setseries","chart","height","type","toolbar","show","zoom","enabled","colors","xaxis","tickAmount","legend","position","yaxis","options","setoptions","backendServices","tc","tr","useEffect","inicialize","getBpmStatistics","then","resp","months","nowMonth","month","beforeMonth","add","nowDate","filter","statistics","date","beforeDate","groupBy","map","format","nowSeries","$date","at","length","beforeSeries","name","data","catch","err","console","log","collection","property","i","val","index","values","result","indexOf","push"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport {\r\n    Card,\r\n    CardBody,\r\n} from \"reactstrap\"\r\nimport * as moment from 'moment';\r\nimport { formatCurrency, translationHelpers } from '../../helpers';\r\nimport { BackendServices } from \"../../services\";\r\n\r\nconst ScatterChart = (props) => {\r\n\r\n    const [series, setseries] = useState([]);\r\n\r\n    const [options, setoptions] = useState({\r\n        chart: {\r\n            height: 350,\r\n            type: 'scatter',\r\n            toolbar: {\r\n                show: false\r\n            },\r\n            zoom: {\r\n                enabled: true,\r\n                type: 'xy'\r\n            }\r\n        },\r\n\r\n        colors: ['#3b5de7', '#45cb85'],\r\n        xaxis: {\r\n            tickAmount: 10,\r\n\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n        },\r\n        yaxis: {\r\n            tickAmount: 7\r\n        }\r\n    });\r\n\r\n    const backendServices = new BackendServices();\r\n    const [tc, tr] = translationHelpers('commercial_credit', 'translation');\r\n\r\n\r\n    React.useEffect(() => {\r\n        inicialize()\r\n    }, []);\r\n\r\n    function inicialize() {\r\n        backendServices.getBpmStatistics().then(resp => {\r\n\r\n            const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n            let nowMonth = moment().month();\r\n            let beforeMonth = moment().add(-1, 'months').month();\r\n\r\n            let nowDate = resp.filter(statistics => moment(statistics.date).month() === nowMonth);\r\n            let beforeDate = resp.filter(statistics => moment(statistics.date).month() === beforeMonth);\r\n\r\n            nowDate = groupBy(nowDate.map(statistics => ({ ...statistics, date: moment(statistics.date).format(\"DD/MM/YYYY\") })), 'date');\r\n            beforeDate = groupBy(beforeDate.map(statistics => ({ ...statistics, date: moment(statistics.date).format(\"DD/MM/YYYY\") })), 'date');\r\n\r\n\r\n            let nowSeries = nowDate.map($date => [moment($date.at(0).date, \"DD/MM/YYYY\").date(), $date.length]);\r\n\r\n            let beforeSeries = beforeDate.map($date => [moment($date.at(0).date, \"DD/MM/YYYY\").date(), $date.length]);\r\n\r\n            let series = [\r\n                {\r\n                    name: tr(months[beforeMonth]),\r\n                    data: beforeSeries\r\n                },\r\n                {\r\n                    name: tr(months[nowMonth]),\r\n                    data: nowSeries\r\n                }\r\n            ];\r\n\r\n            setseries(series);\r\n\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * groupBy, agrupa los items de un JSON\r\n     * @param {Array} collection \r\n     * @param {string} property \r\n     * @returns {Array}\r\n     */\r\n    function groupBy(collection, property) {\r\n        var i = 0, val, index,\r\n            values = [], result = [];\r\n        for (; i < collection.length; i++) {\r\n            val = collection[i][property];\r\n            index = values.indexOf(val);\r\n            if (index > -1)\r\n                result[index].push(collection[i]);\r\n            else {\r\n                values.push(val);\r\n                result.push([collection[i]]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Card>\r\n                <CardBody>\r\n                    <h4 className=\"card-title mb-4\">Comportamiento en el Mes</h4>\r\n\r\n                    <ReactApexChart\r\n                        options={options}\r\n                        series={series}\r\n                        height=\"225\"\r\n                        type=\"scatter\"\r\n                        className=\"apex-charts\"\r\n                    />\r\n\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ScatterChart"]},"metadata":{},"sourceType":"module"}