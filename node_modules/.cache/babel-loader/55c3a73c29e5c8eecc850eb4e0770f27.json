{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalSegurosActualesEmpresa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { BackendServices, CoreServices } from \"../../../../../services\";\nimport moment from \"moment\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalSegurosActualesEmpresa = props => {\n  _s();\n\n  var _props$dataSeguros, _props$dataSeguros2, _props$dataSeguros3, _props$dataSeguros4;\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoSeguro, setcampoRequeridoSeguro] = useState(false);\n  const [insuranceType, setinsuranceType] = useState(null);\n  const [tipoSeguro, settipoSeguro] = useState(undefined); // Submitimos formulario para busqueda de clientes\n\n  const [dataTipoSeguro, setdataTipoSeguro] = useState(null);\n\n  function handleSubmit(event, errors, values) {\n    if (tipoSeguro == undefined) {\n      setcampoRequeridoSeguro(true);\n      return;\n    } else {\n      setcampoRequeridoSeguro(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.insuranceType = {\n      code: tipoSeguro.label,\n      name: tipoSeguro.label\n    };\n\n    if (props.tipo == \"guardar\") {\n      props.dataManagament(values, props.tipo);\n    } else {\n      values.insuranceId = props.dataSeguros.insuranceId;\n      props.dataManagament(values, props.tipo);\n    }\n  }\n\n  React.useEffect(() => {\n    // Read Api Service data     \n    var defaultVal = null;\n    const api = new BackendServices();\n    settipoSeguro(undefined);\n    api.retrieveInsuranceType().then(resp => {\n      let json = [];\n\n      for (let i = 0; i < resp.length; i++) {\n        json.push({\n          label: resp[i][\"description\"],\n          value: resp[i][\"id\"]\n        });\n      }\n\n      setdataTipoSeguro(json);\n\n      try {\n        if (json.length > 0 && props.dataSeguros.insuranceType !== null && tipoSeguro === undefined) {\n          defaultVal = json.find(x => x.label === props.dataSeguros.insuranceType.code);\n\n          if (defaultVal !== undefined) {\n            settipoSeguro(defaultVal);\n          }\n        }\n      } catch (err) {}\n    });\n  }, [props.isOpen]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"md\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"CurrentCompanyInsurance\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"insuranceCompany\",\n                        children: t(\"InsuranceCompany\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"company\",\n                        value: props.dataSeguros.company,\n                        id: \"company\",\n                        errorMessage: t(\"Required Field\"),\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"insuranceType\",\n                        children: t(\"InsuranceType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          settipoSeguro(dataTipoSeguro.find(x => x.label === e.label));\n                          setinsuranceType(e);\n                        },\n                        options: dataTipoSeguro,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: tipoSeguro\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 25\n                      }, this), campoRequeridoSeguro ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"amount\",\n                        children: t(\"Amount\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        name: \"amount\",\n                        value: currencyData.format(props.dataSeguros.amount),\n                        id: \"amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"expiration\",\n                        children: t(\"Expiration\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"dueDate\",\n                        type: \"date\",\n                        value: (props === null || props === void 0 ? void 0 : (_props$dataSeguros = props.dataSeguros) === null || _props$dataSeguros === void 0 ? void 0 : _props$dataSeguros.dueDate) != null && (props === null || props === void 0 ? void 0 : (_props$dataSeguros2 = props.dataSeguros) === null || _props$dataSeguros2 === void 0 ? void 0 : _props$dataSeguros2.dueDate) != undefined && (props === null || props === void 0 ? void 0 : (_props$dataSeguros3 = props.dataSeguros) === null || _props$dataSeguros3 === void 0 ? void 0 : _props$dataSeguros3.dueDate) != \"\" ? props === null || props === void 0 ? void 0 : (_props$dataSeguros4 = props.dataSeguros) === null || _props$dataSeguros4 === void 0 ? void 0 : _props$dataSeguros4.dueDate : moment().format(\"YYYY-MM-DD\"),\n                        id: \"dueDate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalSegurosActualesEmpresa, \"/1mJHVxnFtBpiqcnOnn0ePcM9GY=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalSegurosActualesEmpresa;\nModalSegurosActualesEmpresa.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalSegurosActualesEmpresa;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalSegurosActualesEmpresa\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalSegurosActualesEmpresa.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","AvForm","AvField","AvGroup","Select","BackendServices","CoreServices","moment","Currency","ModalSegurosActualesEmpresa","props","currencyData","t","i18n","campoRequeridoSeguro","setcampoRequeridoSeguro","insuranceType","setinsuranceType","tipoSeguro","settipoSeguro","undefined","dataTipoSeguro","setdataTipoSeguro","handleSubmit","event","errors","values","preventDefault","length","code","label","name","tipo","dataManagament","insuranceId","dataSeguros","useEffect","defaultVal","api","retrieveInsuranceType","then","resp","json","i","push","value","find","x","err","isOpen","toggle","backgroundColor","company","required","e","getRealValue","target","format","amount","dueDate","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport { BackendServices,CoreServices } from \"../../../../../services\";\r\nimport moment from \"moment\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\nconst ModalSegurosActualesEmpresa = (props) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoSeguro, setcampoRequeridoSeguro] = useState(false);\r\n  const [insuranceType, setinsuranceType] = useState(null);\r\n  const [tipoSeguro, settipoSeguro] = useState(undefined);\r\n  // Submitimos formulario para busqueda de clientes\r\n  const [dataTipoSeguro, setdataTipoSeguro] = useState(null)\r\n  function handleSubmit(event, errors, values) {\r\n    if (tipoSeguro == undefined) {\r\n      setcampoRequeridoSeguro(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoSeguro(false);\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.insuranceType = { code: tipoSeguro.label, name: tipoSeguro.label }\r\n    if (props.tipo == \"guardar\") {\r\n      props.dataManagament(values, props.tipo);\r\n    } else {\r\n      values.insuranceId = props.dataSeguros.insuranceId;\r\n      props.dataManagament(values, props.tipo);\r\n\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    // Read Api Service data     \r\n    var defaultVal = null;\r\n    const api = new BackendServices();\r\n\r\n    settipoSeguro(undefined)\r\n    api.retrieveInsuranceType().then(resp => {\r\n      let json = [];\r\n      for (let i = 0; i < resp.length; i++) {\r\n        json.push({ label: resp[i][\"description\"], value: resp[i][\"id\"] })\r\n      }\r\n      setdataTipoSeguro(json);\r\n      try {\r\n        if (json.length > 0 && props.dataSeguros.insuranceType !== null && tipoSeguro === undefined) {\r\n          defaultVal = json.find(x => x.label === props.dataSeguros.insuranceType.code);\r\n          if (defaultVal !== undefined) {\r\n            settipoSeguro(defaultVal);\r\n          }\r\n        }\r\n\r\n      }\r\n      catch (err) { }\r\n    })\r\n\r\n  }, [props.isOpen]);\r\n\r\n  return (\r\n    <Modal\r\n      size=\"md\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"CurrentCompanyInsurance\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"insuranceCompany\">{t(\"InsuranceCompany\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"company\"\r\n                          value={props.dataSeguros.company}\r\n                          id=\"company\"\r\n                          errorMessage={t(\"Required Field\")}\r\n                          validate={{ required: { value: true } }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"insuranceType\">{t(\"InsuranceType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { settipoSeguro(dataTipoSeguro.find(x => x.label === e.label)); setinsuranceType(e) }}\r\n                          options={dataTipoSeguro}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={tipoSeguro}\r\n                        />\r\n                        {campoRequeridoSeguro ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"amount\">{t(\"Amount\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                          name=\"amount\"\r\n                          value={currencyData.format(props.dataSeguros.amount)}\r\n                          id=\"amount\" />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"expiration\">{t(\"Expiration\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"dueDate\"\r\n                          type=\"date\"\r\n                          value={props?.dataSeguros?.dueDate != null && props?.dataSeguros?.dueDate != undefined&& props?.dataSeguros?.dueDate != \"\" ? props?.dataSeguros?.dueDate : moment().format(\"YYYY-MM-DD\")}\r\n                          id=\"dueDate\" />\r\n                      </AvGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalSegurosActualesEmpresa.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\nexport default ModalSegurosActualesEmpresa;\r\n"]},"metadata":{},"sourceType":"module"}