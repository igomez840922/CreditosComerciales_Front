{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\5_PropuestaCredito\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport Select from \"react-select\"; // import './DatosGeneralesPropuesta.scss';\n\nimport { Row, Col, Label } from \"reactstrap\";\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { BackendServices, CoreServices } from \"../../../../services\";\nimport Switch from \"react-switch\";\nimport { useLocation } from \"react-router-dom\";\nimport { translationHelpers } from \"../../../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst DatosGeneralesPropuesta = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [context, setcontext] = useState(location.data);\n  const [formValid, setFormValid] = useState(false);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\n  const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\n  const [paises, setPais] = useState([]);\n  const [paisesRiesgo, setPaisRiesgo] = useState([]);\n  const [listaRevisionSet, setlistaRevisionSet] = useState(null);\n  const [listaRevision, setlistaRevision] = useState(null);\n  const [datosIGR, setdatosIGR] = useState(null);\n  const [datosAmbientales, setdatosAmbientales] = useState(null);\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\n  const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\n  const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\n  const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\n  const [transactId, setTransactId] = useState('');\n  const [customerNumber, setCustomerNumber] = useState('');\n  const [revisionType, setRevisionType] = useState('');\n  const [preapproval, setPreapproval] = useState(false);\n  const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\n  const [economicGroup, setEconomicGroup] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [countrySelect, setCountrySelect] = useState(undefined);\n  const [activityCompany, setActivityCompany] = useState('');\n  const [riskClassification, setRiskClassification] = useState('');\n  const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\n  const [relatedPart, setRelatedPart] = useState(false);\n  const [accountExecutive, setAccountExecutive] = useState('');\n  const [approvalLevel, setApprovalLevel] = useState('');\n  const [responsibleUnit, setResponsibleUnit] = useState('');\n  const [countryRisk, setCountryRisk] = useState(null);\n  const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\n  const [requestDate, setRequestDate] = useState('');\n  const [lastRequestDate, setLastRequestDate] = useState('');\n  const [proposedExpirationDate, setProposedExpirationDate] = useState('');\n  const [nextRevisionDate, setNextRevisionDate] = useState('');\n  const [flow, setFlow] = useState('');\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  React.useImperativeHandle(ref, () => ({\n    submit: (validate = true) => {\n      const form = document.getElementById('frmDatosGeneralesPropuesta');\n\n      if (validate) {\n        if (formValid) {\n          form.requestSubmit();\n          return true;\n        }\n\n        return false;\n      } else {\n        form.requestSubmit();\n        return true;\n      }\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  useEffect(() => {\n    updateDefaults();\n    loadListCountry();\n    loadListGroupEconomic();\n    loadActivityEconomic();\n    loadDataRisk();\n  }, []);\n  useEffect(() => {\n    updateDefaults();\n  }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\n\n  function updateDefaults() {\n    // set default values\n    setTransactId(props.values.transactId || context.transactionId);\n    setCustomerNumber(props.values.customerNumber || context.customerId);\n    setRevisionType(props.values.revisionType || 'Bimensual');\n    setPreapproval(props.values.preapproval || false);\n    setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\n    setRelatedPart(props.values.relatedPart || false);\n    setAccountExecutive(props.values.accountExecutive || '');\n    setApprovalLevel(props.values.approvalLevel || '');\n    setResponsibleUnit(props.values.responsibleUnit || '');\n    setRequestDate(props.values.requestDate || '');\n    setLastRequestDate(props.values.lastRequestDate || '');\n    setNextRevisionDate(props.values.nextRevisionDate || '');\n    setProposedExpirationDate(props.values.proposedExpirationDate || '');\n    setFlow(props.values.flow || '');\n    loadDataGeneral();\n    setrelatedPartSwitch(props.values.relatedPart);\n    setpreapprovalSwitch(props.values.preapproval);\n\n    try {\n      var defaultVal = null;\n\n      if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\n        defaultVal = listaRevision.find(x => x.value === props.values.revision);\n\n        if (defaultVal !== undefined) {\n          setlistaRevisionSelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\n        defaultVal = paises.find(x => x.value === props.values.country);\n\n        if (defaultVal !== undefined) {\n          setCountrySelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\n        defaultVal = paises.find(x => x.value === props.values.countryRisk);\n\n        if (defaultVal !== undefined) {\n          setCountryRiskSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  } // cargarListaPaises\n\n\n  function loadListCountry() {\n    const api = new CoreServices();\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      const json = response.Records ? response.Records.map(item => ({\n        label: item[\"Description\"],\n        value: item[\"Code\"]\n      })) : [];\n      setPais(json);\n      setPaisRiesgo(json);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // cargarActividadEconomica\n\n\n  function loadActivityEconomic() {\n    const api = new CoreServices();\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setActividadEmpresa(json);\n    });\n  } // cargarListaGrupoEconomico\n\n\n  function loadListGroupEconomic() {\n    const api = new CoreServices();\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setGruposEconomicos(json);\n    });\n  } // cargarListaRevision\n\n\n  function loadDataRisk() {\n    const api = new BackendServices();\n    api.retrieveRevisionType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      setlistaRevision(json);\n    });\n  } // Cargar datos generales\n\n\n  function loadDataGeneral() {\n    const apiBack = new BackendServices();\n    apiBack.consultarDatosGeneralesIGR(locationData.transactionId).then(resp => {\n      setdatosIGR(resp);\n\n      try {\n        var defaultVal = null;\n        seteconomicGroupSelect(undefined);\n\n        if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\n          defaultVal = gruposEconomicos.find(x => x.value === resp.economicGroup.code);\n          console.log(defaultVal);\n\n          if (defaultVal !== undefined) {\n            seteconomicGroupSelect(defaultVal);\n          }\n        } else {\n          seteconomicGroupSelect(gruposEconomicos[0]);\n        }\n\n        setActividadEmpresaSet(resp.economicActivity);\n\n        if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\n          defaultVal = actividadEmpresa.find(x => x.value === resp.economicActivity.code);\n\n          if (defaultVal !== undefined) {\n            setActividadEmpresaSelect(defaultVal);\n          }\n        } else {\n          setActividadEmpresaSelect(actividadEmpresa[0]);\n        }\n      } catch (err) {}\n    }).catch(error => {});\n    apiBack.consultarAspectosAmbientalesIGR(locationData.transactionId).then(resp => {\n      setdatosAmbientales(resp.environmentalAspectsDTO);\n    }).catch(error => {});\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault(); // if (event.target.id !== 'DatosGeneralesPropuesta') {\n    //     return;\n    // }\n\n    values.minimumProvisionSIB = Number(values.minimumProvisionSIB);\n    const data = Object.assign({\n      country: countrySelect != undefined ? countrySelect.value : '',\n      countryRisk: countryRiskSelect != undefined ? countryRiskSelect.value : '',\n      economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\n      activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.value : '',\n      revision: listaRevisionSet ? listaRevisionSet.value : '',\n      preapproval: preapprovalSwitch,\n      relatedPart: relatedPartSwitch,\n      approvalLevel: \"\"\n    }, values);\n    setFormValid(true);\n    console.log(data);\n    const apiBack = new BackendServices();\n    apiBack.nuevoDatosGeneralesPropCred(data).then(response => {\n      console.log('datos generales save success', response);\n    }).catch(error => {\n      console.log('error saving datos generales', error);\n    });\n  }\n\n  function handleDropdownChange(name, event) {\n    switch (name) {\n      case 'country':\n        setCountry(event);\n        break;\n\n      case 'countryRisk':\n        setCountryRisk(event);\n        break;\n\n      case 'economicGroupName':\n        setEconomicGroup(event);\n        break;\n\n      case 'activityCompany':\n        setActivityCompany(event);\n        break;\n\n      default:\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AvForm, {\n    id: \"frmDatosGeneralesPropuesta\",\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"transactId\",\n            children: t(\"Procedure Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"transactId\",\n            type: \"number\",\n            id: \"transactId\",\n            value: transactId,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"customerNumber\",\n            children: t(\"Customer ID\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"customerNumber\",\n            type: \"number\",\n            readOnly: true,\n            id: \"customerNumber\",\n            value: datosIGR != null ? datosIGR.customerNumberT24 : \"\",\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"revisionType\",\n          children: t(\"Revision Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: e => {\n            setlistaRevisionSelect(listaRevision.find(x => x.value === e.value));\n            setlistaRevisionSet(e);\n          },\n          options: listaRevision,\n          id: \"revision\",\n          classNamePrefix: \"select2-selection\",\n          placeholder: t(\"Select\"),\n          value: listaRevisionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"preapproval\",\n          children: t(\"Pre Approved\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"preapproval\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setpreapprovalSwitch(!preapprovalSwitch);\n            },\n            checked: preapprovalSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"relatedPart\",\n          children: t(\"Related Part\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"relatedPart\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 44\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 42\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setrelatedPartSwitch(!relatedPartSwitch);\n            },\n            checked: relatedPartSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"economicGroupName\",\n          children: t(\"Economic Group Name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"economicGroupName\",\n          name: \"economicGroupName\",\n          onChange: e => {\n            seteconomicGroupSelect(gruposEconomicos.find(x => x.value === e.value));\n            handleDropdownChange('economicGroupName', e);\n          },\n          options: gruposEconomicos,\n          classNamePrefix: \"select2-selection\",\n          value: economicGroupSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"economicGroupNumber\",\n            children: t(\"Economic Group Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"economicGroupNumber\",\n            type: \"text\",\n            id: \"economicGroupNumber\",\n            value: economicGroupSelect != undefined ? economicGroupSelect.value : '',\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"country\",\n          children: t(\"Country Class\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"country\",\n          name: \"country\",\n          onChange: e => {\n            setCountrySelect(paises.find(x => x.value === e.value));\n            handleDropdownChange('country', e);\n          },\n          placeholder: t(\"Select\"),\n          options: paises,\n          classNamePrefix: \"select2-selection\",\n          value: countrySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"riskClassification\",\n            children: t(\"Risk Assesment\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"riskClassification\",\n            type: \"text\",\n            readOnly: true,\n            id: \"riskClassification\",\n            value: datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"activityCompany\",\n          children: t(\"Company Activity\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          name: \"activityCompany\",\n          onChange: e => {\n            setActividadEmpresaSelect(actividadEmpresa.find(x => x.value === e.value));\n            setActividadEmpresaSet(e);\n          },\n          placeholder: t(\"Selectcompanyactivity\"),\n          options: actividadEmpresa,\n          classNamePrefix: \"select2-selection\",\n          value: actividadEmpresaSelect,\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"minimumProvisionSIB\",\n            children: t(\"SIB Minimum Provision\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"minimumProvisionSIB\",\n            type: \"text\",\n            id: \"minimumProvisionSIB\",\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              },\n              number: {\n                value: true,\n                errorMessage: c(\"Validation.Numeric\")\n              }\n            },\n            value: minimumProvisionSIB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"9\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"accountExecutive\",\n            children: t(\"Account Executive\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"accountExecutive\",\n            type: \"text\",\n            id: \"accountExecutive\",\n            value: accountExecutive,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"flow\",\n            children: t(\"Flow Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"flow\",\n            type: \"select\",\n            id: \"flow\",\n            value: flow,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Urgente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"responsibleUnit\",\n            children: t(\"Responsible Unit\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"responsibleUnit\",\n            type: \"text\",\n            id: \"responsibleUnit\",\n            value: responsibleUnit,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"countryRisk\",\n          children: t(\"Country Risk\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          required: true,\n          onChange: e => {\n            setCountryRiskSelect(paises.find(x => x.value === e.value));\n            handleDropdownChange('countryRisk', e);\n          },\n          defaultValue: paisesRiesgo.value,\n          placeholder: t(\"Selectacountry\"),\n          options: paisesRiesgo,\n          classNamePrefix: \"select2-selection\",\n          value: countryRiskSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"requestDate\",\n            children: t(\"Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"requestDate\",\n            type: \"date\",\n            id: \"requestDate\",\n            value: requestDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"lastRequestDate\",\n            children: t(\"Last Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"lastRequestDate\",\n            type: \"date\",\n            id: \"lastRequestDate\",\n            value: lastRequestDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"nextRevisionDate\",\n            children: t(\"Next Revision Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"nextRevisionDate\",\n            type: \"date\",\n            id: \"nextRevisionDate\",\n            value: nextRevisionDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"proposedExpirationDate\",\n            children: t(\"Expiration Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"proposedExpirationDate\",\n            type: \"date\",\n            id: \"proposedExpirationDate\",\n            value: proposedExpirationDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 9\n  }, this);\n}, \"pk4EQdA8iC/siqkCKLSnwADE5Po=\", false, function () {\n  return [useLocation, React.useImperativeHandle];\n}));\n_c4 = DatosGeneralesPropuesta;\nDatosGeneralesPropuesta.propTypes = {\n  values: PropTypes.object\n};\nDatosGeneralesPropuesta.defaultProps = {\n  values: {}\n};\nexport default DatosGeneralesPropuesta;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"DatosGeneralesPropuesta$React.forwardRef\");\n$RefreshReg$(_c4, \"DatosGeneralesPropuesta\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/5_PropuestaCredito/Secciones/DatosGenerales.js"],"names":["React","useState","useEffect","useContext","PropTypes","Select","Row","Col","Label","AvForm","AvGroup","AvField","AvFeedback","BackendServices","CoreServices","Switch","useLocation","translationHelpers","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","DatosGeneralesPropuesta","forwardRef","props","ref","location","locationData","setLocationData","data","context","setcontext","formValid","setFormValid","gruposEconomicos","setGruposEconomicos","actividadEmpresa","setActividadEmpresa","actividadEmpresaSet","setActividadEmpresaSet","actividadEmpresaSelect","setActividadEmpresaSelect","undefined","paises","setPais","paisesRiesgo","setPaisRiesgo","listaRevisionSet","setlistaRevisionSet","listaRevision","setlistaRevision","datosIGR","setdatosIGR","datosAmbientales","setdatosAmbientales","listaRevisionSelect","setlistaRevisionSelect","listaRevisionRequerido","setlistaRevisionRequerido","preapprovalSwitch","setpreapprovalSwitch","relatedPartSwitch","setrelatedPartSwitch","transactId","setTransactId","customerNumber","setCustomerNumber","revisionType","setRevisionType","preapproval","setPreapproval","economicGroupSelect","seteconomicGroupSelect","economicGroup","setEconomicGroup","country","setCountry","countrySelect","setCountrySelect","activityCompany","setActivityCompany","riskClassification","setRiskClassification","minimumProvisionSIB","setMinimunProvisionSIB","relatedPart","setRelatedPart","accountExecutive","setAccountExecutive","approvalLevel","setApprovalLevel","responsibleUnit","setResponsibleUnit","countryRisk","setCountryRisk","countryRiskSelect","setCountryRiskSelect","requestDate","setRequestDate","lastRequestDate","setLastRequestDate","proposedExpirationDate","setProposedExpirationDate","nextRevisionDate","setNextRevisionDate","flow","setFlow","t","c","useImperativeHandle","submit","validate","form","document","getElementById","requestSubmit","getFormValidation","updateDefaults","loadListCountry","loadListGroupEconomic","loadActivityEconomic","loadDataRisk","values","transactionId","customerId","loadDataGeneral","defaultVal","length","revision","find","x","value","err","api","getPaisesCatalogo","then","response","json","Records","map","item","label","catch","console","log","getActividadEconomicaCatalogo","i","push","getGrupoEconomicoCatalogo","retrieveRevisionType","apiBack","consultarDatosGeneralesIGR","resp","code","economicActivity","error","consultarAspectosAmbientalesIGR","environmentalAspectsDTO","handleSubmit","event","errors","preventDefault","Number","Object","assign","economicGroupName","nuevoDatosGeneralesPropCred","handleDropdownChange","name","title","customerNumberT24","required","errorMessage","e","riskPreClassification","number","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\nimport Select from \"react-select\";\r\n// import './DatosGeneralesPropuesta.scss';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport { BackendServices, CoreServices } from \"../../../../services\";\r\nimport Switch from \"react-switch\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { translationHelpers } from \"../../../../helpers\";\r\nconst Offsymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            No\r\n        </div>\r\n    );\r\n};\r\nconst OnSymbol = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: 12,\r\n                color: \"#fff\",\r\n                paddingRight: 2,\r\n            }}\r\n        >\r\n            {\" \"}\r\n            Si\r\n        </div>\r\n    );\r\n};\r\nconst DatosGeneralesPropuesta = React.forwardRef((props, ref) => {\r\n    const location = useLocation();\r\n    const [locationData, setLocationData] = useState(location.data);\r\n    const [context, setcontext] = useState(location.data);\r\n    const [formValid, setFormValid] = useState(false);\r\n    const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n    const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n    const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\r\n    const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\r\n    const [paises, setPais] = useState([]);\r\n    const [paisesRiesgo, setPaisRiesgo] = useState([]);\r\n    const [listaRevisionSet, setlistaRevisionSet] = useState(null);\r\n    const [listaRevision, setlistaRevision] = useState(null);\r\n    const [datosIGR, setdatosIGR] = useState(null);\r\n    const [datosAmbientales, setdatosAmbientales] = useState(null);\r\n    const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\r\n    const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\r\n    const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\r\n    const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\r\n    const [transactId, setTransactId] = useState('');\r\n    const [customerNumber, setCustomerNumber] = useState('');\r\n    const [revisionType, setRevisionType] = useState('');\r\n    const [preapproval, setPreapproval] = useState(false);\r\n    const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\r\n    const [economicGroup, setEconomicGroup] = useState(null);\r\n    const [country, setCountry] = useState(null);\r\n    const [countrySelect, setCountrySelect] = useState(undefined);\r\n    const [activityCompany, setActivityCompany] = useState('');\r\n    const [riskClassification, setRiskClassification] = useState('');\r\n    const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\r\n    const [relatedPart, setRelatedPart] = useState(false);\r\n    const [accountExecutive, setAccountExecutive] = useState('');\r\n    const [approvalLevel, setApprovalLevel] = useState('');\r\n    const [responsibleUnit, setResponsibleUnit] = useState('');\r\n    const [countryRisk, setCountryRisk] = useState(null);\r\n    const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\r\n    const [requestDate, setRequestDate] = useState('');\r\n    const [lastRequestDate, setLastRequestDate] = useState('');\r\n    const [proposedExpirationDate, setProposedExpirationDate] = useState('');\r\n    const [nextRevisionDate, setNextRevisionDate] = useState('');\r\n    const [flow, setFlow] = useState('');\r\n    const [t, c] = translationHelpers('commercial_credit', 'common');\r\n    React.useImperativeHandle(ref, () => ({\r\n        submit: (validate = true) => {\r\n            const form = document.getElementById('frmDatosGeneralesPropuesta');\r\n            if (validate) {\r\n                if (formValid) {\r\n                    form.requestSubmit();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            else {\r\n                form.requestSubmit();\r\n                return true;\r\n            }\r\n        },\r\n        getFormValidation: () => {\r\n            return formValid;\r\n        }\r\n    }));\r\n    useEffect(() => {\r\n        updateDefaults();\r\n        loadListCountry();\r\n        loadListGroupEconomic();\r\n        loadActivityEconomic();\r\n        loadDataRisk();\r\n    }, []);\r\n    useEffect(() => {\r\n        updateDefaults();\r\n    }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\r\n\r\n    function updateDefaults() {\r\n        // set default values\r\n        setTransactId(props.values.transactId || context.transactionId);\r\n        setCustomerNumber(props.values.customerNumber || context.customerId);\r\n        setRevisionType(props.values.revisionType || 'Bimensual');\r\n        setPreapproval(props.values.preapproval || false);\r\n        setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\r\n        setRelatedPart(props.values.relatedPart || false);\r\n        setAccountExecutive(props.values.accountExecutive || '');\r\n        setApprovalLevel(props.values.approvalLevel || '');\r\n        setResponsibleUnit(props.values.responsibleUnit || '');\r\n        setRequestDate(props.values.requestDate || '');\r\n        setLastRequestDate(props.values.lastRequestDate || '');\r\n        setNextRevisionDate(props.values.nextRevisionDate || '');\r\n        setProposedExpirationDate(props.values.proposedExpirationDate || '');\r\n        setFlow(props.values.flow || '');\r\n        loadDataGeneral();\r\n        setrelatedPartSwitch(props.values.relatedPart)\r\n        setpreapprovalSwitch(props.values.preapproval)\r\n        try {\r\n            var defaultVal = null;\r\n            if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\r\n                defaultVal = listaRevision.find(x => x.value === props.values.revision);\r\n                if (defaultVal !== undefined) {\r\n                    setlistaRevisionSelect(defaultVal);\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\r\n                defaultVal = paises.find(x => x.value === props.values.country);\r\n                if (defaultVal !== undefined) {\r\n                    setCountrySelect(defaultVal);\r\n                }\r\n            }\r\n            if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\r\n                defaultVal = paises.find(x => x.value === props.values.countryRisk);\r\n                if (defaultVal !== undefined) {\r\n                    setCountryRiskSelect(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n    }\r\n    // cargarListaPaises\r\n    function loadListCountry() {\r\n        const api = new CoreServices();\r\n        api.getPaisesCatalogo().then(response => {\r\n            if (response === null) { return; }\r\n            const json = response.Records ? response.Records.map(item => ({\r\n                label: item[\"Description\"],\r\n                value: item[\"Code\"]\r\n            })) : [];\r\n            setPais(json);\r\n            setPaisRiesgo(json);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    // cargarActividadEconomica\r\n    function loadActivityEconomic() {\r\n        const api = new CoreServices();\r\n        api.getActividadEconomicaCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                setActividadEmpresa(json);\r\n            });\r\n    }\r\n    // cargarListaGrupoEconomico\r\n    function loadListGroupEconomic() {\r\n        const api = new CoreServices();\r\n        api.getGrupoEconomicoCatalogo()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.Records.length; i++) {\r\n                    json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n                }\r\n                setGruposEconomicos(json);\r\n            });\r\n    }\r\n    // cargarListaRevision\r\n    function loadDataRisk() {\r\n        const api = new BackendServices();\r\n        api.retrieveRevisionType()\r\n            .then(response => {\r\n                if (response === null) { return; }\r\n                let json = [];\r\n                for (let i = 0; i < response.length; i++) {\r\n                    json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n                }\r\n                setlistaRevision(json);\r\n            });\r\n    }\r\n    // Cargar datos generales\r\n    function loadDataGeneral() {\r\n        const apiBack = new BackendServices();\r\n        apiBack.consultarDatosGeneralesIGR(locationData.transactionId).then(resp => {\r\n            setdatosIGR(resp)\r\n            try {\r\n                var defaultVal = null;\r\n                seteconomicGroupSelect(undefined);\r\n                if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\r\n                    defaultVal = gruposEconomicos.find(x => x.value === resp.economicGroup.code);\r\n                    console.log(defaultVal);\r\n                    if (defaultVal !== undefined) {\r\n                        seteconomicGroupSelect(defaultVal);\r\n                    }\r\n                } else {\r\n                    seteconomicGroupSelect(gruposEconomicos[0])\r\n                }\r\n                setActividadEmpresaSet(resp.economicActivity);\r\n                if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\r\n                    defaultVal = actividadEmpresa.find(x => x.value === resp.economicActivity.code);\r\n                    if (defaultVal !== undefined) {\r\n                        setActividadEmpresaSelect(defaultVal);\r\n                    }\r\n                }\r\n                else {\r\n                    setActividadEmpresaSelect(actividadEmpresa[0]);\r\n                }\r\n            }\r\n            catch (err) { }\r\n        }).catch((error) => {\r\n\r\n        });\r\n        apiBack.consultarAspectosAmbientalesIGR(locationData.transactionId).then(resp => {\r\n            setdatosAmbientales(resp.environmentalAspectsDTO)\r\n        }).catch((error) => {\r\n\r\n        });\r\n    }\r\n    function handleSubmit(event, errors, values) {\r\n        event.preventDefault();\r\n        // if (event.target.id !== 'DatosGeneralesPropuesta') {\r\n        //     return;\r\n        // }\r\n        values.minimumProvisionSIB = Number(values.minimumProvisionSIB)\r\n        const data = Object.assign({\r\n            country: countrySelect != undefined ? countrySelect.value : '',\r\n            countryRisk: countryRiskSelect != undefined ? countryRiskSelect.value : '',\r\n            economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\r\n            activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.value : '',\r\n            revision: listaRevisionSet ? listaRevisionSet.value : '',\r\n            preapproval: preapprovalSwitch,\r\n            relatedPart: relatedPartSwitch,\r\n            approvalLevel: \"\",\r\n        }, values);\r\n        setFormValid(true);\r\n        console.log(data);\r\n        const apiBack = new BackendServices();\r\n        apiBack.nuevoDatosGeneralesPropCred(data)\r\n            .then((response) => {\r\n                console.log('datos generales save success', response);\r\n            })\r\n            .catch((error) => {\r\n                console.log('error saving datos generales', error);\r\n            });\r\n    }\r\n    function handleDropdownChange(name, event) {\r\n        switch (name) {\r\n            case 'country':\r\n                setCountry(event);\r\n                break;\r\n            case 'countryRisk':\r\n                setCountryRisk(event);\r\n                break;\r\n            case 'economicGroupName':\r\n                setEconomicGroup(event);\r\n                break;\r\n            case 'activityCompany':\r\n                setActivityCompany(event);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    return (\r\n        <AvForm id=\"frmDatosGeneralesPropuesta\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n            <h5>{props.title}</h5>\r\n            <p className=\"card-title-desc\"></p>\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"transactId\">{t(\"Procedure Number\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"transactId\"\r\n                            type=\"number\"\r\n                            id=\"transactId\"\r\n                            value={transactId}\r\n                            readOnly />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"customerNumber\">{t(\"Customer ID\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"customerNumber\"\r\n                            type=\"number\"\r\n                            readOnly\r\n                            id=\"customerNumber\"\r\n                            value={datosIGR != null ? datosIGR.customerNumberT24 : \"\"}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <Label htmlFor=\"revisionType\">{t(\"Revision Type\")}</Label>\r\n                    <Select\r\n                        onChange={(e) => { setlistaRevisionSelect(listaRevision.find(x => x.value === e.value)); setlistaRevisionSet(e); }}\r\n                        options={listaRevision}\r\n                        id=\"revision\"\r\n                        classNamePrefix=\"select2-selection\"\r\n                        placeholder={t(\"Select\")}\r\n                        value={listaRevisionSelect}\r\n                    />\r\n                </Col>\r\n\r\n                <Col md=\"1\">\r\n                    <Label htmlFor=\"preapproval\">{t(\"Pre Approved\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"preapproval\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setpreapprovalSwitch(!preapprovalSwitch)\r\n                            }}\r\n                            checked={preapprovalSwitch}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"2\">\r\n                    <Label htmlFor=\"relatedPart\">{t(\"Related Part\")}</Label>\r\n                    <AvGroup check className=\"mb-3\">\r\n                        <Switch name=\"relatedPart\"\r\n                            uncheckedIcon={<Offsymbol />}\r\n                            checkedIcon={<OnSymbol />}\r\n                            onColor=\"#007943\"\r\n                            className=\"form-label\"\r\n                            onChange={() => {\r\n                                setrelatedPartSwitch(!relatedPartSwitch)\r\n                            }}\r\n                            checked={relatedPartSwitch}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"economicGroupName\">{t(\"Economic Group Name\")}</Label>\r\n                    <Select\r\n                        id=\"economicGroupName\"\r\n                        name=\"economicGroupName\"\r\n                        onChange={(e) => { seteconomicGroupSelect(gruposEconomicos.find(x => x.value === e.value)); handleDropdownChange('economicGroupName', e); }}\r\n                        options={gruposEconomicos}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={economicGroupSelect} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"economicGroupNumber\">{t(\"Economic Group Number\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"economicGroupNumber\"\r\n                            type=\"text\"\r\n                            id=\"economicGroupNumber\"\r\n                            value={economicGroupSelect != undefined ? economicGroupSelect.value : ''}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"country\">{t(\"Country Class\")}</Label>\r\n                    <Select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        onChange={(e) => { setCountrySelect(paises.find(x => x.value === e.value)); handleDropdownChange('country', e) }}\r\n                        placeholder={t(\"Select\")}\r\n                        options={paises}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countrySelect}\r\n                    />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"riskClassification\">{t(\"Risk Assesment\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"riskClassification\"\r\n                            type=\"text\"\r\n                            readOnly\r\n                            id=\"riskClassification\"\r\n                            value={datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"}\r\n                        />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"activityCompany\">{t(\"Company Activity\")}</Label>\r\n                    <Select\r\n                        name=\"activityCompany\"\r\n                        onChange={(e) => { setActividadEmpresaSelect(actividadEmpresa.find(x => x.value === e.value)); setActividadEmpresaSet(e); }}\r\n                        placeholder={t(\"Selectcompanyactivity\")}\r\n                        options={actividadEmpresa}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={actividadEmpresaSelect}\r\n                        isDisabled={true} />\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"minimumProvisionSIB\">{t(\"SIB Minimum Provision\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"minimumProvisionSIB\"\r\n                            type=\"text\"\r\n                            id=\"minimumProvisionSIB\"\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") },\r\n                                number: { value: true, errorMessage: c(\"Validation.Numeric\") },\r\n                            }}\r\n                            value={minimumProvisionSIB} />\r\n                    </AvGroup>\r\n                </Col>\r\n                {/* <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"approvalLevel\">{t(\"Approval Level\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"approvalLevel\"\r\n                            type=\"select\"\r\n                            id=\"approvalLevel\"\r\n                            value={approvalLevel}>\r\n                            <option value=\"1\">Nivel 1</option>\r\n                            <option value=\"2\">Nivel 2</option>\r\n                            <option value=\"3\">Nivel 3</option>\r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col> */}\r\n\r\n                <Col md=\"9\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"accountExecutive\">{t(\"Account Executive\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"accountExecutive\"\r\n                            type=\"text\"\r\n                            id=\"accountExecutive\"\r\n                            value={accountExecutive}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"flow\">{t(\"Flow Type\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"flow\"\r\n                            type=\"select\"\r\n                            id=\"flow\"\r\n                            value={flow}>\r\n                            <option value=\"1\">Normal</option>\r\n                            <option value=\"2\">Urgente</option>\r\n                        </AvField>\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"responsibleUnit\">{t(\"Responsible Unit\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"responsibleUnit\"\r\n                            type=\"text\"\r\n                            id=\"responsibleUnit\"\r\n                            value={responsibleUnit}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <Label htmlFor=\"countryRisk\">{t(\"Country Risk\")}</Label>\r\n                    <Select required\r\n                        onChange={(e) => { setCountryRiskSelect(paises.find(x => x.value === e.value)); handleDropdownChange('countryRisk', e) }}\r\n                        defaultValue={paisesRiesgo.value}\r\n                        placeholder={t(\"Selectacountry\")}\r\n                        options={paisesRiesgo}\r\n                        classNamePrefix=\"select2-selection\"\r\n                        value={countryRiskSelect} />\r\n                </Col>\r\n\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"requestDate\">{t(\"Application Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"requestDate\"\r\n                            type=\"date\"\r\n                            id=\"requestDate\"\r\n                            value={requestDate}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"lastRequestDate\">{t(\"Last Application Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"lastRequestDate\"\r\n                            type=\"date\"\r\n                            id=\"lastRequestDate\"\r\n                            value={lastRequestDate}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"nextRevisionDate\">{t(\"Next Revision Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"nextRevisionDate\"\r\n                            type=\"date\"\r\n                            id=\"nextRevisionDate\"\r\n                            value={nextRevisionDate}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n                <Col md=\"3\">\r\n                    <AvGroup>\r\n                        <Label htmlFor=\"proposedExpirationDate\">{t(\"Expiration Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"proposedExpirationDate\"\r\n                            type=\"date\"\r\n                            id=\"proposedExpirationDate\"\r\n                            value={proposedExpirationDate}\r\n                            validate={{\r\n                                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n                            }} />\r\n                    </AvGroup>\r\n                </Col>\r\n            </Row>\r\n        </AvForm>\r\n    );\r\n});\r\n\r\nDatosGeneralesPropuesta.propTypes = {\r\n    values: PropTypes.object\r\n};\r\n\r\nDatosGeneralesPropuesta.defaultProps = {\r\n    values: {}\r\n};\r\n\r\n\r\nexport default DatosGeneralesPropuesta;\r\n"]},"metadata":{},"sourceType":"module"}