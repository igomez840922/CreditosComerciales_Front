{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\14_AdminDesembolso\\\\Colateral\\\\CreacionLinea\\\\lineasHija\\\\ModalLineaHija.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup, Table } from \"reactstrap\";\nimport { Select } from 'antd';\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CoreServices } from \"../../../../../../services\";\nimport Currency from \"../../../../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalLineaHija = props => {\n  _s();\n\n  var _props$dataSet$linea, _props$dataSet, _props$dataSet$monto, _props$dataSet3, _props$dataSet$number, _props$dataSet4;\n\n  const {\n    Option\n  } = Select;\n  const currencyData = new Currency();\n  const history = useHistory();\n  const [typeLine, settypeLine] = useState(null);\n  const apiServiceCore = new CoreServices();\n  const [lineaSelect, setlineaSelect] = useState((_props$dataSet$linea = props === null || props === void 0 ? void 0 : (_props$dataSet = props.dataSet) === null || _props$dataSet === void 0 ? void 0 : _props$dataSet.linea) !== null && _props$dataSet$linea !== void 0 ? _props$dataSet$linea : {\n    Description: \"\",\n    Code: \"\"\n  });\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    var _props$dataSet2;\n\n    // setdatoSeleccionado(jsonPrioridad[0])\n    setlineaSelect(props === null || props === void 0 ? void 0 : (_props$dataSet2 = props.dataSet) === null || _props$dataSet2 === void 0 ? void 0 : _props$dataSet2.linea);\n    apiServiceCore.getTypeOfCreditLimitsCatalog().then(resp => {\n      settypeLine(resp.Records);\n    });\n  }, [props.isOpen]);\n\n  function handleSubmit() {\n    var _lineaSelect$Code, _lineaSelect$Descript, _document$getElementB;\n\n    props.dataManagament({\n      \"tipoLinea\": (_lineaSelect$Code = lineaSelect === null || lineaSelect === void 0 ? void 0 : lineaSelect.Code) !== null && _lineaSelect$Code !== void 0 ? _lineaSelect$Code : \"\",\n      \"descTipoLinea\": (_lineaSelect$Descript = lineaSelect === null || lineaSelect === void 0 ? void 0 : lineaSelect.Description) !== null && _lineaSelect$Descript !== void 0 ? _lineaSelect$Descript : \"\",\n      \"monto\": currencyData.getRealValue((_document$getElementB = document.getElementById(\"montoLineM\").value) !== null && _document$getElementB !== void 0 ? _document$getElementB : 0),\n      \"numberLine\": document.getElementById(\"numberLineM\").value,\n      estado: true\n    });\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla == 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"md\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: \"Nueva línea hija\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"Type of line\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      noOptionsMessage: () => \"\",\n                      showSearch: true,\n                      style: {\n                        width: \"100%\"\n                      },\n                      placeholder: t(\"SearchtoSelect\"),\n                      optionFilterProp: \"children\",\n                      defaultValue: props.dataSet.linea.Description,\n                      onChange: e => {\n                        let subProduct = JSON.parse(e);\n                        setlineaSelect(subProduct);\n                      },\n                      filterOption: (input, option) => {\n                        var _option$children;\n\n                        return ((_option$children = option.children) === null || _option$children === void 0 ? void 0 : _option$children.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                      },\n                      children: typeLine != null ? typeLine.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                        value: JSON.stringify(item),\n                        children: item.Description\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 57\n                      }, this)) : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"Monto de la línea\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"montoLineM\",\n                      onChange: e => {\n                        return check(e);\n                      },\n                      pattern: \"^[0-9,.]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      value: currencyData.format((_props$dataSet$monto = (_props$dataSet3 = props.dataSet) === null || _props$dataSet3 === void 0 ? void 0 : _props$dataSet3.monto) !== null && _props$dataSet$monto !== void 0 ? _props$dataSet$monto : 0),\n                      validate: {\n                        required: {\n                          value: true,\n                          errorMessage: t(\"Required Field\")\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"4\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"Número de línea\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      type: \"text\",\n                      name: \"numberLineM\",\n                      value: (_props$dataSet$number = (_props$dataSet4 = props.dataSet) === null || _props$dataSet4 === void 0 ? void 0 : _props$dataSet4.numberLine) !== null && _props$dataSet$number !== void 0 ? _props$dataSet$number : \"\",\n                      validate: {\n                        required: {\n                          value: true,\n                          errorMessage: t(\"Required Field\")\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnNew\",\n                color: \"danger\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: props.toggle,\n                \"data-dismiss\": \"modal\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi mdi-cancel mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this), \" \", t(\"Cancel\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                id: \"btnSearch\",\n                color: \"success\",\n                type: \"button\",\n                onClick: () => {\n                  handleSubmit();\n                },\n                style: {\n                  margin: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-content-save mdi-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 147\n                }, this), t(\"Save\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalLineaHija, \"MyldX9JzFMje3yTGJUBPdJfxIqE=\", false, function () {\n  return [useHistory, useTranslation];\n});\n\n_c = ModalLineaHija;\nexport default ModalLineaHija;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalLineaHija\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/14_AdminDesembolso/Colateral/CreacionLinea/lineasHija/ModalLineaHija.js"],"names":["React","useEffect","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","Table","Select","AvForm","AvField","AvGroup","Link","useHistory","CoreServices","Currency","ModalLineaHija","props","Option","currencyData","history","typeLine","settypeLine","apiServiceCore","lineaSelect","setlineaSelect","dataSet","linea","Description","Code","t","i18n","getTypeOfCreditLimitsCatalog","then","resp","Records","isOpen","handleSubmit","dataManagament","getRealValue","document","getElementById","value","estado","check","e","tecla","all","keyCode","which","preventDefault","toggle","backgroundColor","width","subProduct","JSON","parse","input","option","children","toLowerCase","indexOf","map","item","index","stringify","x","target","format","monto","required","errorMessage","numberLine","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n    InputGroup,\r\n    Table,\r\n} from \"reactstrap\"\r\nimport { Select } from 'antd';\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CoreServices } from \"../../../../../../services\";\r\nimport Currency from \"../../../../../../helpers/currency\";\r\nconst ModalLineaHija = (props) => {\r\n    const { Option } = Select;\r\n    const currencyData = new Currency();\r\n\r\n    const history = useHistory();\r\n    const [typeLine, settypeLine] = useState(null);\r\n    const apiServiceCore = new CoreServices();\r\n    const [lineaSelect, setlineaSelect] = useState(props?.dataSet?.linea ?? { Description: \"\", Code: \"\" })\r\n    const { t, i18n } = useTranslation();\r\n    useEffect(() => {\r\n        // setdatoSeleccionado(jsonPrioridad[0])\r\n        setlineaSelect(props?.dataSet?.linea)\r\n        apiServiceCore.getTypeOfCreditLimitsCatalog().then(resp => {\r\n            settypeLine(resp.Records)\r\n        });\r\n    }, [props.isOpen])\r\n    function handleSubmit() {\r\n        props.dataManagament({\r\n            \"tipoLinea\": lineaSelect?.Code ?? \"\",\r\n            \"descTipoLinea\": lineaSelect?.Description ?? \"\",\r\n            \"monto\": currencyData.getRealValue(document.getElementById(\"montoLineM\").value ?? 0),\r\n            \"numberLine\": document.getElementById(\"numberLineM\").value,\r\n            estado: true\r\n        })\r\n    }\r\n    function check(e) {\r\n        let tecla = (document.all) ? e.keyCode : e.which;\r\n        //Tecla de retroceso para borrar, siempre la permite\r\n        if (tecla == 45) {\r\n          e.preventDefault();\r\n          return true;\r\n        }\r\n    \r\n        return false;\r\n      }\r\n    return (\r\n        <Modal\r\n            size=\"md\"\r\n            isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}>\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title mt-0\">{\"Nueva línea hija\"}</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={props.toggle}\r\n                    data-dismiss=\"modal\"\r\n                    className=\"close\"\r\n                    aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n\r\n                <Row>\r\n                    <Col xl=\"12\">\r\n                        <Card>\r\n                            <CardBody>\r\n                                <Row>\r\n                                    <Col md=\"4\">\r\n                                        <div className=\"mb-2\">\r\n                                            <Label>{t(\"Type of line\")}</Label>\r\n                                            <Select noOptionsMessage={() => \"\"}\r\n                                                showSearch\r\n                                                style={{ width: \"100%\" }}\r\n                                                placeholder={t(\"SearchtoSelect\")}\r\n                                                optionFilterProp=\"children\"\r\n                                                defaultValue={props.dataSet.linea.Description}\r\n                                                onChange={(e) => {\r\n                                                    let subProduct = JSON.parse(e)\r\n                                                    setlineaSelect(subProduct)\r\n                                                }}\r\n                                                filterOption={(input, option) =>\r\n                                                    option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                                }\r\n                                            >\r\n                                                {typeLine != null ?\r\n\r\n                                                    typeLine.map((item, index) => (\r\n                                                        <Option key={index} value={JSON.stringify(item)}>{item.Description}</Option>\r\n                                                    ))\r\n                                                    : null}\r\n                                            </Select>\r\n\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md=\"4\">\r\n                                        <div className=\"mb-3\">\r\n                                            <Label>{t(\"Monto de la línea\")}</Label>\r\n                                            <AvField\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                name=\"montoLineM\"\r\n                                                onChange={(e) => { return check(e) }}\r\n                                                pattern=\"^[0-9,.]*$\"\r\n                                                onKeyUp={(e) => {\r\n                                                    let x = currencyData.getRealValue(e.target.value);\r\n                                                    e.target.value = currencyData.format(x);\r\n                                                }}\r\n                                                value={currencyData.format(props.dataSet?.monto ?? 0)}\r\n                                                validate={{ required: { value: true, errorMessage: t(\"Required Field\") } }}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col md=\"4\">\r\n                                        <div className=\"mb-3\">\r\n                                            <Label>{t(\"Número de línea\")}</Label>\r\n                                            <AvField\r\n                                                className=\"form-control\"\r\n                                                type=\"text\"\r\n                                                name=\"numberLineM\"\r\n                                                value={props.dataSet?.numberLine ?? \"\"}\r\n                                                validate={{ required: { value: true, errorMessage: t(\"Required Field\") } }}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </CardBody>\r\n                            <CardFooter style={{ textAlign: \"right\" }}>\r\n                                <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                                </Button>\r\n                                <Button id=\"btnSearch\" color=\"success\" type=\"button\" onClick={() => { handleSubmit() }} style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                                    {t(\"Save\")}\r\n                                </Button>\r\n                            </CardFooter>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\n\r\nexport default ModalLineaHija;\r\n"]},"metadata":{},"sourceType":"module"}