{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\Proyecciones.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Label, Table, InputGroup, input } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport AttachmentFileCore from \"../../../../../components/Common/AttachmentFileCore\";\nimport * as OPTs from \"../../../../../helpers/options_helper\";\nimport { AttachmentFileInputModel } from '../../../../../models/Common/AttachmentFileInputModel';\nimport { BackendServices } from \"../../../../../services/index.js\"; //Import Flatepicker\n\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport Currency from \"../../../../../helpers/currency\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Proyecciones = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  var _dataReturn$descripci, _dataReturn$assetsOpe, _dataReturn$assetsOpe2, _dataReturn$fixedAsse, _dataReturn$fixedAsse2, _dataReturn$othersAss, _dataReturn$othersAss2, _dataReturn$bankAmoun, _dataReturn$bankReaso, _dataReturn$providers, _dataReturn$providers2, _dataReturn$capitalAm, _dataReturn$capitalRe, _dataReturn$maximodeu;\n\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation(); // const { locationData } = props;\n\n  const currencyData = new Currency();\n  const location = useLocation();\n  const [dataLocation, setData] = useState(location.data);\n  const [formValid, setFormValid] = useState(false);\n  const [dataReturn, setDataReturn] = useState({});\n  const history = useHistory();\n  const [locationData, setLocationData] = useState(null);\n  const [fechaSet, setfechaSet] = useState(\"\");\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmProyecciones');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if (props.activeTab == 13) {\n      // Read Api Service data\n      initializeData(dataSession);\n    }\n  }, [props.activeTab == 13]);\n\n  function initializeData(dataLocation) {\n    const api = new BackendServices(); // consultarProyecciones\n\n    api.consultProjections(dataLocation.transactionId).then(resp => {\n      setfechaSet(moment().format(\"DD-MM-YYYY\"));\n      setDataReturn(resp.projectionsDTO);\n\n      if (resp.projectionsDTO == null) {} else {\n        setfechaSet(moment(resp.projectionsDTO.estimatedDate).format(\"DD-MM-YYYY\"));\n      }\n    });\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    let fecha = fechaSet.split(\"/\").length == 1 ? fechaSet.split(\"-\") : fechaSet.split(\"/\");\n    values.estimatedDate = fecha[2] + \"-\" + fecha[1] + \"-\" + fecha[0];\n    setDataReturn(values);\n    setFormValid(true); //props.onSubmit(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Projections\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmProyecciones\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDetails\",\n              children: t(\"Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"descripcion\",\n              type: \"textarea\",\n              value: (_dataReturn$descripci = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.descripcion) !== null && _dataReturn$descripci !== void 0 ? _dataReturn$descripci : \" \",\n              id: \"descripcion\",\n              rows: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), locationData ? (props === null || props === void 0 ? void 0 : props.activeTab) == 13 ? /*#__PURE__*/_jsxDEV(AttachmentFileCore, {\n        attachmentFileInputModel: new AttachmentFileInputModel(locationData.transactionId, OPTs.PROCESS_INFORMEGESTION, OPTs.ACT_PROYECCIONES)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : null : null, /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-sub-title\",\n            children: t(\"EstimatesVariationsInItsAssetStructure\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive styled-table-div\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table table-striped table-hover styled-table table table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Type\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Amount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Reason\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"OperatingAssets\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"assetsOperatingAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$assetsOpe = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.assetsOperatingAmount) !== null && _dataReturn$assetsOpe !== void 0 ? _dataReturn$assetsOpe : 0),\n                      id: \"assetsOperatingAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"assetsOperatingReason\",\n                      type: \"text\",\n                      value: (_dataReturn$assetsOpe2 = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.assetsOperatingReason) !== null && _dataReturn$assetsOpe2 !== void 0 ? _dataReturn$assetsOpe2 : \" \",\n                      id: \"assetsOperatingReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"FixedAssets\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"fixedAssetsAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$fixedAsse = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.fixedAssetsAmount) !== null && _dataReturn$fixedAsse !== void 0 ? _dataReturn$fixedAsse : 0),\n                      id: \"fixedAssetsAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"fixedAssetsReason\",\n                      type: \"text\",\n                      value: (_dataReturn$fixedAsse2 = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.fixedAssetsReason) !== null && _dataReturn$fixedAsse2 !== void 0 ? _dataReturn$fixedAsse2 : \" \",\n                      id: \"fixedAssetsReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"OthersAssets\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"othersAssetsAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$othersAss = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.othersAssetsAmount) !== null && _dataReturn$othersAss !== void 0 ? _dataReturn$othersAss : 0),\n                      id: \"othersAssetsAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"othersAssetsReason\",\n                      type: \"text\",\n                      value: (_dataReturn$othersAss2 = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.othersAssetsReason) !== null && _dataReturn$othersAss2 !== void 0 ? _dataReturn$othersAss2 : \" \",\n                      id: \"othersAssetsReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-sub-title\",\n            children: t(\"EstimatesVariationsInItsFinancingSources\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive styled-table-div\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table table-striped table-hover styled-table table table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Type\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Amount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Reason\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"Banking\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"bankAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$bankAmoun = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.bankAmount) !== null && _dataReturn$bankAmoun !== void 0 ? _dataReturn$bankAmoun : 0),\n                      id: \"bankAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"bankReason\",\n                      type: \"text\",\n                      value: (_dataReturn$bankReaso = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.bankReason) !== null && _dataReturn$bankReaso !== void 0 ? _dataReturn$bankReaso : \" \",\n                      id: \"bankReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"Providers\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"providersAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$providers = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.providersAmount) !== null && _dataReturn$providers !== void 0 ? _dataReturn$providers : 0),\n                      id: \"providersAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"providersReason\",\n                      type: \"text\",\n                      value: (_dataReturn$providers2 = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.providersReason) !== null && _dataReturn$providers2 !== void 0 ? _dataReturn$providers2 : \" \",\n                      id: \"providersReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: t(\"Capital\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"capitalAmount\",\n                      type: \"text\",\n                      value: currencyData.format((_dataReturn$capitalAm = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.capitalAmount) !== null && _dataReturn$capitalAm !== void 0 ? _dataReturn$capitalAm : 0),\n                      id: \"capitalAmount\",\n                      pattern: \"^[0-9,.-]*$\",\n                      onKeyUp: e => {\n                        let x = currencyData.getRealValue(e.target.value);\n                        e.target.value = currencyData.format(x);\n                      },\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(AvField, {\n                      className: \"form-control\",\n                      name: \"capitalReason\",\n                      type: \"text\",\n                      value: (_dataReturn$capitalRe = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.capitalReason) !== null && _dataReturn$capitalRe !== void 0 ? _dataReturn$capitalRe : \" \",\n                      id: \"capitalReason\" // validate={{\n                      //   required: { value: true, errorMessage: t(\"Required Field\") }\n                      // }}\n                      ,\n                      rows: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"MaximumAmountOfBankDebtToTake\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"maximodeuda\",\n              type: \"text\",\n              pattern: \"^[0-9,.-]*$\",\n              onKeyUp: e => {\n                let x = currencyData.getRealValue(e.target.value);\n                e.target.value = currencyData.format(x);\n              },\n              value: currencyData.format((_dataReturn$maximodeu = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.maximodeuda) !== null && _dataReturn$maximodeu !== void 0 ? _dataReturn$maximodeu : 0),\n              id: \"maximodeuda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"EstimatedDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), fechaSet != \"\" ? /*#__PURE__*/_jsxDEV(Flatpickr, {\n              name: \"estimatedDate\",\n              id: \"estimatedDate\",\n              className: \"form-control d-block\",\n              placeholder: OPTs.FORMAT_DATE_SHOW,\n              options: {\n                dateFormat: OPTs.FORMAT_DATE,\n                defaultDate: fechaSet //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n              },\n              onChange: (selectedDates, dateStr, instance) => {\n                setfechaSet(dateStr);\n              } // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr).format(\"YYYY-MM-DD\") } }) }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}, \"XU04KmQqEyNe2gd07ofXM9PD1tI=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = Proyecciones;\nProyecciones.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  locationData: PropTypes.any\n};\nexport default Proyecciones;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Proyecciones$React.forwardRef\");\n$RefreshReg$(_c2, \"Proyecciones\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/Proyecciones.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Label","Table","InputGroup","input","AvForm","AvField","AttachmentFileCore","OPTs","AttachmentFileInputModel","BackendServices","url","Currency","Flatpickr","moment","Proyecciones","forwardRef","props","ref","t","i18n","currencyData","location","dataLocation","setData","data","formValid","setFormValid","dataReturn","setDataReturn","history","locationData","setLocationData","fechaSet","setfechaSet","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","initializeData","api","consultProjections","then","resp","format","projectionsDTO","estimatedDate","handleSubmit","event","errors","values","preventDefault","fecha","split","descripcion","PROCESS_INFORMEGESTION","ACT_PROYECCIONES","assetsOperatingAmount","e","x","getRealValue","target","value","assetsOperatingReason","fixedAssetsAmount","fixedAssetsReason","othersAssetsAmount","othersAssetsReason","bankAmount","bankReason","providersAmount","providersReason","capitalAmount","capitalReason","maximodeuda","FORMAT_DATE_SHOW","dateFormat","FORMAT_DATE","defaultDate","selectedDates","dateStr","instance","propTypes","onSubmit","func","isRequired","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Table,\r\n  InputGroup,\r\n  input,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport AttachmentFileCore from \"../../../../../components/Common/AttachmentFileCore\";\r\nimport * as OPTs from \"../../../../../helpers/options_helper\";\r\nimport { AttachmentFileInputModel } from '../../../../../models/Common/AttachmentFileInputModel';\r\nimport { BackendServices } from \"../../../../../services/index.js\"\r\n//Import Flatepicker\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport Currency from \"../../../../../helpers/currency\"\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport moment from \"moment\";\r\n\r\nconst Proyecciones = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  // const { locationData } = props;\r\n  const currencyData = new Currency();\r\n  const location = useLocation()\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataReturn, setDataReturn] = useState({});\r\n  const history = useHistory();\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  const [fechaSet, setfechaSet] = useState(\"\");\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmProyecciones');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  React.useEffect(() => {\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    if (props.activeTab == 13) {\r\n      // Read Api Service data\r\n      initializeData(dataSession);\r\n    }\r\n  }, [props.activeTab == 13]);\r\n  function initializeData(dataLocation) {\r\n    const api = new BackendServices()\r\n    // consultarProyecciones\r\n    api.consultProjections(dataLocation.transactionId).then(resp => {\r\n      setfechaSet(moment().format(\"DD-MM-YYYY\"))\r\n      setDataReturn(resp.projectionsDTO);\r\n      if (resp.projectionsDTO == null) {\r\n      } else {\r\n        setfechaSet(moment(resp.projectionsDTO.estimatedDate).format(\"DD-MM-YYYY\"))\r\n      }\r\n    })\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    let fecha = fechaSet.split(\"/\").length == 1 ? fechaSet.split(\"-\") : fechaSet.split(\"/\");\r\n    values.estimatedDate = fecha[2] + \"-\" + fecha[1] + \"-\" + fecha[0]\r\n    setDataReturn(values)\r\n    setFormValid(true)\r\n    //props.onSubmit(values);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Projections\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmProyecciones\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDetails\">{t(\"Details\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"descripcion\"\r\n                type=\"textarea\"\r\n                value={dataReturn?.descripcion ?? \" \"}\r\n                id=\"descripcion\"\r\n                rows=\"7\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {locationData ? (props?.activeTab == 13 ?\r\n          <AttachmentFileCore attachmentFileInputModel={new AttachmentFileInputModel(locationData.transactionId, OPTs.PROCESS_INFORMEGESTION, OPTs.ACT_PROYECCIONES)} />\r\n          : null) : null}\r\n\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <h5 className=\"card-sub-title\">{t(\"EstimatesVariationsInItsAssetStructure\")}</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <div className='table-responsive styled-table-div'>\r\n              <Table className=\"table table-striped table-hover styled-table table table\">\r\n                <thead  >\r\n                  <tr>\r\n                    <th>{t(\"Type\")}</th>\r\n                    <th>{t(\"Amount\")}</th>\r\n                    <th>{t(\"Reason\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{t(\"OperatingAssets\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"assetsOperatingAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.assetsOperatingAmount ?? 0)}\r\n                        id=\"assetsOperatingAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"assetsOperatingReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.assetsOperatingReason ?? \" \"}\r\n                        id=\"assetsOperatingReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{t(\"FixedAssets\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"fixedAssetsAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.fixedAssetsAmount ?? 0)}\r\n                        id=\"fixedAssetsAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"fixedAssetsReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.fixedAssetsReason ?? \" \"}\r\n                        id=\"fixedAssetsReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{t(\"OthersAssets\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"othersAssetsAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.othersAssetsAmount ?? 0)}\r\n                        id=\"othersAssetsAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"othersAssetsReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.othersAssetsReason ?? \" \"}\r\n                        id=\"othersAssetsReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n\r\n\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <h5 className=\"card-sub-title\">{t(\"EstimatesVariationsInItsFinancingSources\")}</h5>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <div className='table-responsive styled-table-div'>\r\n              <Table className=\"table table-striped table-hover styled-table table table\">\r\n                <thead  >\r\n                  <tr>\r\n                    <th>{t(\"Type\")}</th>\r\n                    <th>{t(\"Amount\")}</th>\r\n                    <th>{t(\"Reason\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>{t(\"Banking\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"bankAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.bankAmount ?? 0)}\r\n                        id=\"bankAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"bankReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.bankReason ?? \" \"}\r\n                        id=\"bankReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{t(\"Providers\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"providersAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.providersAmount ?? 0)}\r\n                        id=\"providersAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"providersReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.providersReason ?? \" \"}\r\n                        id=\"providersReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{t(\"Capital\")}</td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"capitalAmount\"\r\n                        type=\"text\"\r\n                        value={currencyData.format(dataReturn?.capitalAmount ?? 0)}\r\n                        id=\"capitalAmount\"\r\n                        pattern=\"^[0-9,.-]*$\"\r\n                        onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                    <td>\r\n                      <AvField\r\n                        className=\"form-control\"\r\n                        name=\"capitalReason\"\r\n                        type=\"text\"\r\n                        value={dataReturn?.capitalReason ?? \" \"}\r\n                        id=\"capitalReason\"\r\n                        // validate={{\r\n                        //   required: { value: true, errorMessage: t(\"Required Field\") }\r\n                        // }}\r\n                        rows=\"7\" />\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"MaximumAmountOfBankDebtToTake\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"maximodeuda\"\r\n                type=\"text\"\r\n                pattern=\"^[0-9,.-]*$\"\r\n                onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                value={currencyData.format(dataReturn?.maximodeuda ?? 0)}\r\n                id=\"maximodeuda\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"EstimatedDate\")}</Label>\r\n              {/* <AvField\r\n                className=\"form-control\"\r\n                name=\"estimatedDate\"\r\n                type=\"date\"\r\n                value={dataReturn?.estimatedDate}\r\n                id=\"estimatedDate\"\r\n              /> */}\r\n              {fechaSet != \"\" ?\r\n                <Flatpickr\r\n                  name=\"estimatedDate\"\r\n                  id=\"estimatedDate\"\r\n                  className=\"form-control d-block\"\r\n                  placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                  options={{\r\n                    dateFormat: OPTs.FORMAT_DATE,\r\n                    defaultDate: fechaSet,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                  }}\r\n                  onChange={(selectedDates, dateStr, instance) => {\r\n                    setfechaSet(dateStr)\r\n                  }}\r\n                // onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr).format(\"YYYY-MM-DD\") } }) }}\r\n                /> : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n    </React.Fragment>\r\n  );\r\n});\r\nProyecciones.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  locationData: PropTypes.any,\r\n}\r\nexport default Proyecciones;\r\n"]},"metadata":{},"sourceType":"module"}