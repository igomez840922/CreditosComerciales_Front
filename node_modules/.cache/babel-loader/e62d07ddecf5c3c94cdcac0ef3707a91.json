{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalCapex1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport 'antd/dist/antd.css'; // import './index.css';\n\nimport { Select } from 'antd';\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalCapex1 = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    Option\n  } = Select;\n  const [options, setBancos] = useState([]);\n  const [codigoBanco, setCodigoBanco] = useState(null); // Submitimos formulario para busqueda de clientes\n\n  React.useEffect(() => {\n    // Read Api Service data\n    setCodigoBanco(null);\n    loadCatalog();\n  }, []);\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.bank = codigoBanco;\n\n    if (props.tipo == \"ECAPEX1\") {\n      values.capexId = props.dataCapex1.capexId;\n      props.UpdateData(values, props.tipo);\n    } else {\n      props.SaveData(values, props.tipo);\n    }\n  }\n\n  function loadCatalog() {\n    const api = new CoreServices(); // getBancosCatalogo\n\n    api.getBancosCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n\n        if (response.Records[i][\"Description\"] == props.dataCapex1.back) {\n          setCodigoBanco(props.dataCapex1.back);\n        }\n      }\n\n      setBancos(json);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Capex\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"description\",\n                        children: t(\"Description\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"description\",\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          }\n                        },\n                        value: props.dataCapex1.observations,\n                        id: \"description\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"usageThousands\",\n                        children: t(\"UsageThousands\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"useInMiles\",\n                        validate: {\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        },\n                        value: props.dataCapex1.thousandUse,\n                        id: \"useInMiles\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"shareholder\",\n                        children: t(\"Shareholder\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"shareholder\",\n                        value: props.dataCapex1.shareholder,\n                        id: \"shareholder\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"bank\",\n                        children: t(\"Bank\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        showSearch: true,\n                        style: {\n                          width: \"100%\"\n                        },\n                        placeholder: t(\"SearchtoSelect\"),\n                        optionFilterProp: \"children\",\n                        defaultValue: props.dataCapex1.back,\n                        onChange: e => {\n                          setCodigoBanco(e);\n                        },\n                        filterOption: (input, option) => {\n                          var _option$children;\n\n                          return ((_option$children = option.children) === null || _option$children === void 0 ? void 0 : _option$children.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                        },\n                        children: options.length > 0 ? options.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                          value: item.label,\n                          children: item.label\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 31\n                        }, this)) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"dark\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"CAPEX1\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalCapex1, \"BLAN7JUHab2oQdyajMoDanuXXCw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalCapex1;\nModalCapex1.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalCapex1;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCapex1\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalCapex1.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","Select","AvForm","AvField","AvGroup","CoreServices","ModalCapex1","props","t","i18n","Option","options","setBancos","codigoBanco","setCodigoBanco","useEffect","loadCatalog","handleSubmit","event","errors","values","preventDefault","length","bank","tipo","capexId","dataCapex1","UpdateData","SaveData","api","getBancosCatalogo","then","response","json","i","Records","push","label","value","back","isOpen","toggle","backgroundColor","required","errorMessage","observations","number","thousandUse","shareholder","width","e","input","option","children","toLowerCase","indexOf","map","item","index","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport 'antd/dist/antd.css';\r\n// import './index.css';\r\nimport { Select } from 'antd';\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\nconst ModalCapex1 = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const { Option } = Select;\r\n  const [options, setBancos] = useState([]);\r\n  const [codigoBanco, setCodigoBanco] = useState(null);\r\n  // Submitimos formulario para busqueda de clientes\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    setCodigoBanco(null);\r\n    loadCatalog();\r\n  }, []);\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.bank = codigoBanco;\r\n    if (props.tipo == \"ECAPEX1\") {\r\n      values.capexId = props.dataCapex1.capexId;\r\n      props.UpdateData(values, props.tipo);\r\n    } else {\r\n      props.SaveData(values, props.tipo);\r\n    }\r\n  }\r\n  function loadCatalog() {\r\n    const api = new CoreServices();\r\n    // getBancosCatalogo\r\n    api.getBancosCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] });\r\n          if (response.Records[i][\"Description\"] == props.dataCapex1.back) {\r\n            setCodigoBanco(props.dataCapex1.back);\r\n          }\r\n        }\r\n        setBancos(json);\r\n      });\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Capex\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"description\">{t(\"Description\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"description\"\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                          }}\r\n                          value={props.dataCapex1.observations}\r\n                          id=\"description\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"usageThousands\">{t(\"UsageThousands\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"useInMiles\"\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          value={props.dataCapex1.thousandUse}\r\n                          id=\"useInMiles\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"shareholder\">{t(\"Shareholder\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"shareholder\"\r\n                          \r\n                          value={props.dataCapex1.shareholder}\r\n                          id=\"shareholder\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"bank\">{t(\"Bank\")}</Label>\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder={t(\"SearchtoSelect\")}\r\n                          optionFilterProp=\"children\"\r\n                          defaultValue={props.dataCapex1.back}\r\n                          onChange={(e) => { setCodigoBanco(e) }}\r\n                          filterOption={(input, option) =>\r\n                            option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {options.length > 0 ?\r\n\r\n                            options.map((item, index) => (\r\n                              <Option key={index} value={item.label}>{item.label}</Option>\r\n                            ))\r\n                            : null}\r\n                        </Select>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"CAPEX1\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalCapex1.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func\r\n};\r\nexport default ModalCapex1;\r\n"]},"metadata":{},"sourceType":"module"}