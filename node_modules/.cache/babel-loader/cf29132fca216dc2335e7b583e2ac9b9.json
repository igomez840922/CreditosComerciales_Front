{"ast":null,"code":"import { GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL, UPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL, GET_TRAMIT_SUCCESS } from \"./actionTypes\";\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  tramits: [],\n  error: {}\n};\n\nconst Calendar = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return { ...state,\n        events: action.payload\n      };\n\n    case GET_EVENTS_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case ADD_EVENT_SUCCESS:\n      return { ...state,\n        events: [...state.events, action.payload]\n      };\n\n    case ADD_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.map(event => event.id.toString() === action.payload.id.toString() ? {\n          event,\n          ...action.payload\n        } : event)\n      };\n\n    case UPDATE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case DELETE_EVENT_SUCCESS:\n      return { ...state,\n        events: state.events.filter(event => event.id.toString() !== action.payload.id.toString())\n      };\n\n    case DELETE_EVENT_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state,\n        categories: action.payload\n      };\n\n    case GET_CATEGORIES_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case GET_TRAMIT_SUCCESS:\n      return { ...state,\n        tramits: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/store/calendar/reducer.js"],"names":["GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","GET_TRAMIT_SUCCESS","INIT_STATE","events","categories","tramits","error","Calendar","state","action","type","payload","map","event","id","toString","filter"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,oBALF,EAMEC,iBANF,EAOEC,oBAPF,EAQEC,iBARF,EASEC,sBATF,EAUEC,mBAVF,EAWEC,kBAXF,QAYO,eAZP;AAcA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,UAAU,EAAE,EAFK;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAAnB;;AAOA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGN,UAAT,EAAqBO,MAArB,KAAgC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,kBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAFV,OAAP;;AAKF,SAAKnB,eAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKlB,iBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELL,QAAAA,MAAM,EAAE,CAAC,GAAGK,KAAK,CAACL,MAAV,EAAkBM,MAAM,CAACE,OAAzB;AAFH,OAAP;;AAKF,SAAKjB,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKhB,oBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaS,GAAb,CAAiBC,KAAK,IAC5BA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAAxB,GACI;AAAEF,UAAAA,KAAF;AAAS,aAAGJ,MAAM,CAACE;AAAnB,SADJ,GAEIE,KAHE;AAFH,OAAP;;AASF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKd,oBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,MAAM,EAAEK,KAAK,CAACL,MAAN,CAAaa,MAAb,CACNH,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASC,QAAT,OAAwBN,MAAM,CAACE,OAAP,CAAeG,EAAf,CAAkBC,QAAlB,EAD3B;AAFH,OAAP;;AAOF,SAAKjB,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKZ,sBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFd,OAAP;;AAKF,SAAKX,mBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF,SAAKV,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAFX,OAAP;;AAKA;AACA,aAAOH,KAAP;AA1EJ;AA4ED,CA7ED;;KAAMD,Q;AA+EN,eAAeA,QAAf","sourcesContent":["import {\r\n  GET_EVENTS_SUCCESS,\r\n  GET_EVENTS_FAIL,\r\n  ADD_EVENT_SUCCESS,\r\n  ADD_EVENT_FAIL,\r\n  UPDATE_EVENT_SUCCESS,\r\n  UPDATE_EVENT_FAIL,\r\n  DELETE_EVENT_SUCCESS,\r\n  DELETE_EVENT_FAIL,\r\n  GET_CATEGORIES_SUCCESS,\r\n  GET_CATEGORIES_FAIL,\r\n  GET_TRAMIT_SUCCESS,\r\n} from \"./actionTypes\"\r\n\r\nconst INIT_STATE = {\r\n  events: [],\r\n  categories: [],\r\n  tramits: [],\r\n  error: {},\r\n}\r\n\r\nconst Calendar = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: action.payload,\r\n      }\r\n\r\n    case GET_EVENTS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ADD_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      }\r\n\r\n    case ADD_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case UPDATE_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: state.events.map(event =>\r\n          event.id.toString() === action.payload.id.toString()\r\n            ? { event, ...action.payload }\r\n            : event\r\n        ),\r\n      }\r\n\r\n    case UPDATE_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case DELETE_EVENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter(\r\n          event => event.id.toString() !== action.payload.id.toString()\r\n        ),\r\n      }\r\n\r\n    case DELETE_EVENT_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case GET_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n      }\r\n\r\n    case GET_CATEGORIES_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      }\r\n\r\n    case GET_TRAMIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        tramits: action.payload,\r\n      }\r\n\r\n      default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default Calendar\r\n"]},"metadata":{},"sourceType":"module"}