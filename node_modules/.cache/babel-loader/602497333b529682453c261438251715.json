{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\10_Fideicomiso\\\\AsignarNumeroFideicomiso\\\\Conclusiones.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardBody, CardHeader, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"; //i18n\n\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conslusiones = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataTrust, setdataTrust] = useState(props.dataTrust);\n  const [FormValid, setFormValid] = useState(false);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('formConclusiones');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return FormValid;\n    },\n    dataTrust\n  }));\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setFormValid(true); //props.onSubmit(values);\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormClient(e) {\n    dataTrust[e.target.name] = e.target.value;\n    setselectClient(clientPerson);\n    setdataTrust(dataTrust);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n          id: \"formConclusiones\",\n          className: \"needs-validation\",\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"conclusiones\",\n                  children: t(\"Conclusions\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"conclusions\",\n                  type: \"textarea\",\n                  rows: 7,\n                  value: props.dataTrust == null ? \"\" : props.dataTrust.conclusions,\n                  onChange: handleChangeInputFormClient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}, \"ArBO+56xqyyChhLQQJzledJN1LU=\", false, function () {\n  return [useTranslation, React.useImperativeHandle];\n}));\n_c2 = Conslusiones;\nConslusiones.propTypes = {\n  onSubmit: PropTypes.func,\n  dataTrust: PropTypes.any\n};\nexport default Conslusiones;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Conslusiones$React.forwardRef\");\n$RefreshReg$(_c2, \"Conslusiones\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/AsignarNumeroFideicomiso/Conclusiones.js"],"names":["React","useState","PropTypes","Row","Col","Card","CardBody","CardHeader","Button","Label","Table","AvForm","AvField","useTranslation","withTranslation","Conslusiones","forwardRef","props","ref","t","i18n","dataTrust","setdataTrust","FormValid","setFormValid","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","handleSubmit","event","errors","values","preventDefault","length","handleChangeInputFormClient","e","target","name","value","setselectClient","clientPerson","conclusions","propTypes","onSubmit","func","any"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button,\r\n  Label,\r\n  Table\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\n\r\n//i18n\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\n\r\n\r\nconst Conslusiones = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [dataTrust, setdataTrust] = useState(props.dataTrust);\r\n  const [FormValid, setFormValid] = useState(false);\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('formConclusiones');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return FormValid;\r\n    }, dataTrust\r\n  }))\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setFormValid(true)\r\n    //props.onSubmit(values);\r\n  }\r\n\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormClient(e) {\r\n    dataTrust[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n    \r\n    setdataTrust(dataTrust)\r\n  }\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <p className=\"card-title-desc\"></p>\r\n          <h4 className=\"card-title\"></h4>\r\n          <p className=\"card-title-desc\"></p>\r\n          <AvForm id=\"formConclusiones\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"conclusiones\">{t(\"Conclusions\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"conclusions\"\r\n                    type=\"textarea\" rows={7}\r\n                    value={props.dataTrust==null?\"\":props.dataTrust.conclusions}\r\n                    onChange={handleChangeInputFormClient} />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </AvForm>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n});\r\nConslusiones.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  dataTrust:PropTypes.any\r\n}\r\nexport default Conslusiones\r\n"]},"metadata":{},"sourceType":"module"}