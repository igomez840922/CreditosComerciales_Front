{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalCapex1IF.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport 'antd/dist/antd.css'; // import './index.css';\n\nimport { Select } from 'antd';\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport Currency from \"../../../../../helpers/currency\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalCapex1IF = props => {\n  _s();\n\n  var _props$dataCapex1$tho;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const {\n    Option\n  } = Select;\n  const [options, setBancos] = useState([]);\n  const [codigoBanco, setCodigoBanco] = useState(null);\n  const currencyData = new Currency();\n  const [isActiveLoading, setIsActiveLoading] = useState(false); // Submitimos formulario para busqueda de clientes\n\n  React.useEffect(() => {\n    // Read Api Service data\n    setCodigoBanco(null);\n    loadCatalog();\n  }, [props.isOpen]);\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.back = codigoBanco;\n    values.thousandUse = currencyData.getRealValue(values.thousandUse);\n\n    if (props.tipo == \"ECAPEX1\") {\n      values.capexId = props.dataCapex1.capexId;\n      props.UpdateData(values, props.tipo);\n    } else {\n      props.SaveData(values, props.tipo);\n    }\n  }\n\n  function loadCatalog() {\n    setIsActiveLoading(true);\n    const api = new CoreServices(); // getBancosCatalogo\n\n    api.getBancosCatalogo().then(response => {\n      setCodigoBanco(props.dataCapex1.back);\n      setBancos(response.Records);\n      setIsActiveLoading(false);\n    }).catch(err => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Capex\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isActiveLoading,\n        spinner: true,\n        text: t(\"WaitingPlease\"),\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AvForm, {\n              id: \"frmSearch\",\n              autocomplete: \"off\",\n              className: \"needs-validation\",\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"observations\",\n                          children: t(\"Description\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          type: \"text\",\n                          name: \"observations\",\n                          validate: {\n                            required: {\n                              value: true,\n                              errorMessage: t(\"Required Field\")\n                            }\n                          },\n                          value: props.dataCapex1.observations,\n                          id: \"observations\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"thousandUse\",\n                          children: t(\"UsageThousands\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 112,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          type: \"text\",\n                          name: \"thousandUse\",\n                          value: currencyData.format((_props$dataCapex1$tho = props.dataCapex1.thousandUse) !== null && _props$dataCapex1$tho !== void 0 ? _props$dataCapex1$tho : 0),\n                          pattern: \"^[0-9,.]*$\",\n                          onKeyUp: e => {\n                            let x = currencyData.getRealValue(e.target.value);\n                            e.target.value = currencyData.format(x);\n                          },\n                          id: \"thousandUse\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"shareholder\",\n                          children: t(\"Shareholder\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          type: \"text\",\n                          name: \"shareholder\",\n                          validate: {\n                            required: {\n                              value: true,\n                              errorMessage: t(\"Required Field\")\n                            }\n                          },\n                          value: props.dataCapex1.shareholder,\n                          id: \"shareholder\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 127,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"mb-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"back\",\n                          children: t(\"Bank\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          showSearch: true,\n                          style: {\n                            width: \"100%\"\n                          },\n                          placeholder: t(\"SearchtoSelect\"),\n                          optionFilterProp: \"children\",\n                          defaultValue: props.dataCapex1.back,\n                          onChange: e => {\n                            setCodigoBanco(e);\n                          },\n                          filterOption: (input, option) => {\n                            var _option$children;\n\n                            return ((_option$children = option.children) === null || _option$children === void 0 ? void 0 : _option$children.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                          },\n                          children: options.length > 0 ? options.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                            value: item.Description,\n                            children: item.Description\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 155,\n                            columnNumber: 33\n                          }, this)) : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    id: \"btnNew\",\n                    color: \"danger\",\n                    type: \"button\",\n                    style: {\n                      margin: '5px'\n                    },\n                    onClick: props.toggle,\n                    \"data-dismiss\": \"modal\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi mdi-cancel mid-12px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this), \" \", t(\"Cancel\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                    id: \"btnSearch\",\n                    color: \"success\",\n                    type: \"submit\",\n                    style: {\n                      margin: '5px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-content-save mdi-12px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 102\n                    }, this), \" \", \" \", props.tipo == \"CAPEX1\" ? t(\"Save\") : t(\"Save\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalCapex1IF, \"h5ZzhlOmcXqZiaoQs7BCnx0x3J4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalCapex1IF;\nModalCapex1IF.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalCapex1IF;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCapex1IF\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalCapex1IF.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","Select","AvForm","AvField","AvGroup","CoreServices","Currency","LoadingOverlay","ModalCapex1IF","props","t","i18n","Option","options","setBancos","codigoBanco","setCodigoBanco","currencyData","isActiveLoading","setIsActiveLoading","useEffect","loadCatalog","isOpen","handleSubmit","event","errors","values","preventDefault","length","back","thousandUse","getRealValue","tipo","capexId","dataCapex1","UpdateData","SaveData","api","getBancosCatalogo","then","response","Records","catch","err","toggle","backgroundColor","required","value","errorMessage","observations","format","e","x","target","shareholder","width","input","option","children","toLowerCase","indexOf","map","item","index","Description","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport 'antd/dist/antd.css';\r\n// import './index.css';\r\nimport { Select } from 'antd';\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n\r\nconst ModalCapex1IF = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const { Option } = Select;\r\n  const [options, setBancos] = useState([]);\r\n  const [codigoBanco, setCodigoBanco] = useState(null);\r\n\r\n  const currencyData = new Currency();\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n\r\n  // Submitimos formulario para busqueda de clientes\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    setCodigoBanco(null);\r\n    loadCatalog();\r\n  }, [props.isOpen]);\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    values.back = codigoBanco;\r\n    values.thousandUse = currencyData.getRealValue(values.thousandUse);\r\n\r\n    if (props.tipo == \"ECAPEX1\") {\r\n      values.capexId = props.dataCapex1.capexId;\r\n      props.UpdateData(values, props.tipo);\r\n    } else {\r\n      props.SaveData(values, props.tipo);\r\n    }\r\n  }\r\n  function loadCatalog() {\r\n    setIsActiveLoading(true);\r\n    const api = new CoreServices();\r\n    // getBancosCatalogo\r\n    api.getBancosCatalogo()\r\n      .then(response => {\r\n        setCodigoBanco(props.dataCapex1.back);\r\n        setBancos(response.Records);\r\n        setIsActiveLoading(false);\r\n      }).catch(err => {\r\n        setIsActiveLoading(false);\r\n      });\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Capex\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <AvForm id=\"frmSearch\" autocomplete=\"off\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"observations\">{t(\"Description\")}</Label>\r\n                          <AvField\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"observations\"\r\n                            validate={{\r\n                              required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            }}\r\n                            value={props.dataCapex1.observations}\r\n                            id=\"observations\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"thousandUse\">{t(\"UsageThousands\")}</Label>\r\n                          <AvField\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"thousandUse\"\r\n                            value={currencyData.format(props.dataCapex1.thousandUse ?? 0)}\r\n                            pattern=\"^[0-9,.]*$\"\r\n                            onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                            id=\"thousandUse\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"shareholder\">{t(\"Shareholder\")}</Label>\r\n                          <AvField\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"shareholder\"\r\n                            validate={{\r\n                              required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            }}\r\n                            value={props.dataCapex1.shareholder}\r\n                            id=\"shareholder\"\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <div className=\"mb-3\">\r\n                          <Label htmlFor=\"back\">{t(\"Bank\")}</Label>\r\n                          <Select\r\n                            showSearch\r\n                            style={{ width: \"100%\" }}\r\n                            placeholder={t(\"SearchtoSelect\")}\r\n                            optionFilterProp=\"children\"\r\n                            defaultValue={props.dataCapex1.back}\r\n                            onChange={(e) => { setCodigoBanco(e) }}\r\n                            filterOption={(input, option) =>\r\n                              option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                          >\r\n                            {options.length > 0 ?\r\n                              options.map((item, index) => (\r\n                                <Option key={index} value={item.Description}>{item.Description}</Option>\r\n                              ))\r\n                              : null}\r\n                          </Select>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                  <CardFooter style={{ textAlign: \"right\" }}>\r\n                    <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                      <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                    </Button>\r\n                    {props.botones ?\r\n                      <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                        {\" \"} {props.tipo == \"CAPEX1\" ? t(\"Save\") : t(\"Save\")}\r\n                      </Button> : null}\r\n                  </CardFooter>\r\n                </Card>\r\n              </AvForm>\r\n            </Col>\r\n          </Row>\r\n        </LoadingOverlay>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalCapex1IF.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func\r\n};\r\nexport default ModalCapex1IF;\r\n"]},"metadata":{},"sourceType":"module"}