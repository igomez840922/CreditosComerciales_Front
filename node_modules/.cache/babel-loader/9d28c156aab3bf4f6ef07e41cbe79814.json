{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\ActivityTask\\\\taskStatus.js\",\n    _s = $RefreshSig$();\n\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskStatus = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [showSweetAlert, setshowSweetAlert] = useState(false);\n  const history = useHistory();\n\n  function validateStatus(taskStatus, pathname, data) {\n    console.log(taskStatus);\n\n    if (taskStatus == \"Reservado\") {\n      setshowSweetAlert(true);\n    }\n  }\n\n  function cancelShow() {\n    setshowSweetAlert(false);\n  }\n\n  function readOnly() {\n    props.data.readOnly = true;\n    console.log(props.data);\n    history.push({\n      pathname: props.pathname,\n      data: props.data\n    });\n  }\n\n  function claim() {\n    props.data.readOnly = false;\n    console.log(props.data);\n    history.push({\n      pathname: props.pathname,\n      data: props.data\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [props.taskStatus == \"Reservado\" ? /*#__PURE__*/_jsxDEV(Link, {\n      onClick: e => {\n        validateStatus(props.taskStatus, props.pathname, props.data);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-file-search-outline mdi-24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: {\n        pathname: props.pathname,\n        data: props.data\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"mdi mdi-file-search-outline mdi-24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showSweetAlert,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: t(\"taskStatusTitle\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: t(\"taskStatusMessage\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\" \", t(\"taskStatusMessageDetail\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: cancelShow,\n          variant: \"contained\",\n          className: \"btn btn-danger-dialog\",\n          children: t(\"Cancel\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: claim,\n          variant: \"contained\",\n          className: \"btn btn-success-dialog\",\n          children: t(\"taskStatusClaim\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: readOnly,\n          variant: \"contained\",\n          className: \"btn btn-success-dialog\",\n          children: t(\"taskStatusReadOnly\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskStatus, \"hzu/4d/Kj3mmlSDSNbC1AWAB45o=\", false, function () {\n  return [useTranslation, useHistory];\n});\n\n_c = TaskStatus;\nTaskStatus.propTypes = {\n  taskStatus: PropTypes.any,\n  pathname: PropTypes.any,\n  data: PropTypes.any\n};\nexport default TaskStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskStatus\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/ActivityTask/taskStatus.js"],"names":["useTranslation","withTranslation","Link","React","useState","PropTypes","useHistory","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","TaskStatus","props","t","i18n","showSweetAlert","setshowSweetAlert","history","validateStatus","taskStatus","pathname","data","console","log","cancelShow","readOnly","push","claim","e","propTypes","any"],"mappings":"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","sourcesContent":["import { useTranslation, withTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Button,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nconst TaskStatus = props => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [showSweetAlert, setshowSweetAlert] = useState(false);\r\n    const history = useHistory();\r\n\r\n    function validateStatus(taskStatus, pathname, data) {\r\n        console.log(taskStatus);\r\n        if (taskStatus == \"Reservado\") {\r\n            setshowSweetAlert(true);\r\n        } \r\n    }\r\n\r\n    function cancelShow() {\r\n        setshowSweetAlert(false);\r\n    }\r\n\r\n    function readOnly() {\r\n        props.data.readOnly = true;\r\n        console.log(props.data);\r\n        history.push({\r\n            pathname: props.pathname,\r\n            data: props.data,\r\n        });\r\n    }\r\n\r\n    function claim() {\r\n        props.data.readOnly = false;\r\n        console.log(props.data);\r\n        history.push({\r\n            pathname: props.pathname,\r\n            data: props.data,\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {props.taskStatus == \"Reservado\" ?\r\n                <Link\r\n\r\n                    onClick={(e) => { validateStatus(props.taskStatus, props.pathname, props.data) }}\r\n                >\r\n                    <i className=\"mdi mdi-file-search-outline mdi-24px\"></i>\r\n                </Link> :\r\n                <Link\r\n                    to={{\r\n                        pathname: props.pathname,\r\n                        data: props.data,\r\n                    }}\r\n                >\r\n                    <i className=\"mdi mdi-file-search-outline mdi-24px\"></i>\r\n                </Link>\r\n            }\r\n\r\n            <Dialog\r\n                open={showSweetAlert}\r\n            >\r\n                <DialogTitle>\r\n                    {t(\"taskStatusTitle\")}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <Typography variant=\"body2\">\r\n                        {t(\"taskStatusMessage\")}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\"> {t(\"taskStatusMessageDetail\")}</Typography>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={cancelShow}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-danger-dialog\">\r\n                        {t(\"Cancel\")}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={claim}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-success-dialog\">\r\n                        {t(\"taskStatusClaim\")}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={readOnly}\r\n                        variant=\"contained\"\r\n                        className=\"btn btn-success-dialog\">\r\n                        {t(\"taskStatusReadOnly\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\nTaskStatus.propTypes = {\r\n    taskStatus: PropTypes.any,\r\n    pathname: PropTypes.any,\r\n    data: PropTypes.any\r\n}\r\nexport default TaskStatus;\r\n\r\n"]},"metadata":{},"sourceType":"module"}