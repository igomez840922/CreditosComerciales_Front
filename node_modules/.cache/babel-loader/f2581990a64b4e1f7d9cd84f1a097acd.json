{"ast":null,"code":"import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n/*\r\nexport default class ErrorHandler extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false,error:null,errorInfo: null };\r\n  }\r\n    componentDidCatch(error, errorInfo) {\r\n      console.log(\"componentDidCatch\",error, errorInfo);\r\n      this.setState({\r\n      \thasError: true,\r\n          error:error,\r\n          errorInfo: errorInfo\r\n      })\r\n  }\r\n    render() {\r\n      if (this.state.hasError) {\r\n          // Render error message or component\r\n          //variant={msgData.isError ? \"danger\" : \"success\"}\r\n          return \r\n          <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n              hasError: false,\r\n              error:null,\r\n              errorInfo: null\r\n          }) }}>\r\n          {this.state.errorInfo}\r\n        </Alert>\r\n      }\r\n      else{ return null}\r\n  }\r\n}\r\n*/","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/ErrorHandler.js"],"names":["React","Alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n  \r\n  /*\r\nexport default class ErrorHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false,error:null,errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(\"componentDidCatch\",error, errorInfo);\r\n        this.setState({\r\n        \thasError: true,\r\n            error:error,\r\n            errorInfo: errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Render error message or component\r\n            //variant={msgData.isError ? \"danger\" : \"success\"}\r\n            return \r\n            <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n                hasError: false,\r\n                error:null,\r\n                errorInfo: null\r\n            }) }}>\r\n            {this.state.errorInfo}\r\n          </Alert>\r\n        }\r\n        else{ return null}\r\n    }\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}