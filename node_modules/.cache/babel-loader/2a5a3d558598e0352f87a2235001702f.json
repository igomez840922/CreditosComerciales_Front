{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\ModalWacthProcess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { useTranslation } from 'react-i18next';\nimport { Modal } from \"reactstrap\";\nimport ApiServiceBpm from \"../../services/BpmServices/Services\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { translationHelpers } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalWatchProcess = props => {\n  _s();\n\n  const [svg, setSvg] = useState(null);\n  const [isActiveLoading, setisActiveLoading] = useState(false);\n  const {\n    t\n  } = useTranslation();\n  const api = new ApiServiceBpm();\n  React.useEffect(() => {\n    console.log('hola3');\n    setSvg(null);\n    setisActiveLoading(true);\n    wacthprocess(props.processInstanceId);\n  }, [props.processInstanceId]);\n\n  function wacthprocess(processInstanceId) {\n    api.wacthprocess(processInstanceId).then(data => {\n      const buff = new Buffer(data);\n      const base64data = buff.toString('base64');\n      setSvg(base64data);\n      setisActiveLoading(false);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: props.t(\"ProcessImages\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"Processinginformation\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minHeight: '150px'\n        },\n        className: \"m-3 d-flex justify-content-center\",\n        id: \"svgData\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"data:image/svg+xml;base64,\" + svg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalWatchProcess, \"V2PRQFxb9f7wxeb8SvnL0iE5Wo4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalWatchProcess;\nModalWatchProcess.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onSaveProcess: PropTypes.func\n};\nexport default withTranslation()(ModalWatchProcess);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWatchProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/ModalWacthProcess.js"],"names":["React","useState","withTranslation","PropTypes","useTranslation","Modal","ApiServiceBpm","LoadingOverlay","translationHelpers","ModalWatchProcess","props","svg","setSvg","isActiveLoading","setisActiveLoading","t","api","useEffect","console","log","wacthprocess","processInstanceId","then","data","buff","Buffer","base64data","toString","catch","error","isOpen","toggle","minHeight","propTypes","bool","func","onSaveProcess"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n    Modal,\r\n} from \"reactstrap\";\r\n\r\nimport ApiServiceBpm from \"../../services/BpmServices/Services\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { translationHelpers } from '../../helpers';\r\n\r\n\r\nconst ModalWatchProcess = (props) => {\r\n    const [svg, setSvg] = useState(null);\r\n    const [isActiveLoading, setisActiveLoading] = useState(false);\r\n    const { t } = useTranslation();\r\n\r\n    const api = new ApiServiceBpm();\r\n\r\n    React.useEffect(() => {\r\n        console.log('hola3')\r\n        setSvg(null);\r\n        setisActiveLoading(true);\r\n        wacthprocess(props.processInstanceId);\r\n    }, [props.processInstanceId])\r\n\r\n    function wacthprocess(processInstanceId) {\r\n        api.wacthprocess(processInstanceId)\r\n            .then((data) => {\r\n\r\n                const buff = new Buffer(data);\r\n                const base64data = buff.toString('base64');\r\n\r\n                setSvg(base64data)\r\n                setisActiveLoading(false);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n    }\r\n    return (\r\n        <Modal\r\n            size=\"xl\"\r\n            isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}\r\n        >\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title mt-0\">{props.t(\"ProcessImages\")}</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={props.toggle}\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <LoadingOverlay active={isActiveLoading} spinner text={t(\"Processinginformation\")}>\r\n                {/* <SvgIcon component={Logo} viewBox=\"500 500 500 500\" /> */}\r\n                {/* <Logo></Logo> */}\r\n\r\n                <div style={{ minHeight: '150px' }} className=\"m-3 d-flex justify-content-center\" id=\"svgData\">\r\n                    <img src={\"data:image/svg+xml;base64,\" + svg} alt=\"\" />\r\n                </div>\r\n            </LoadingOverlay>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nModalWatchProcess.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    toggle: PropTypes.func,\r\n    onSaveProcess: PropTypes.func,\r\n};\r\n\r\nexport default withTranslation()(ModalWatchProcess);\r\n"]},"metadata":{},"sourceType":"module"}