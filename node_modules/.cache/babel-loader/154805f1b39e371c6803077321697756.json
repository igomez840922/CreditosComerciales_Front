{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\LogProcess\\\\index.js\",\n    _s = $RefreshSig$();\n\n//Gestionar Log de los Procesos\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport functionshelper from \"../../helpers/functions_helper\";\nimport moment from \"moment\";\nimport { Table, Card, CardHeader, CardBody, UncontrolledAlert, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert'; //i18n\n\nimport { withTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport ModalNewLog from \"./ModalNewLog\";\nimport { BackendServices } from \"../../services/index\";\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  ExportCSVButton\n} = CSVExport;\nconst {\n  SearchBar\n} = Search;\n\nconst LogProcess = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\n  const [dataList, setDataList] = useState([]);\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  const [dataOptions, setDataOptions] = useState([]);\n  const [dataHeader, setDataHeader] = useState([]);\n  const [dataBody, setDataBody] = useState([]);\n  useEffect(() => {\n    if (logProcessModel !== undefined && logProcessModel !== null) {\n      loadMainDebtor(logProcessModel.transactId);\n      searchData(logProcessModel.transactId);\n    }\n  }, []); //nuevo log\n\n  function toggleDisplayNewLogModal() {\n    setDisplayNewLogModal(!displayNewLogModal);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function loadMainDebtor(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  } //buscamos las Propuestas de Credito\n\n\n  function searchData(transactId) {\n    loadTableData(transactId);\n    /*backendServices.getHistorical(transactId)\r\n      .then(resp => {\r\n        const dataRows = resp.map((dt, idx) => (\r\n          <tr key={idx}>\r\n            <td scope=\"row\">{moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n            <td>{dt.observations}</td>\r\n            <td>{dt.processBpmName }</td>\r\n            <td>{dt.activityBpmName }</td>\r\n            <td>{dt.statusDescription}</td>\r\n            <td>{dt.responsible}</td>\r\n          </tr>)\r\n        );\r\n        setDataList(dataRows);\r\n      }).catch(err => {console.log(err);});*/\n  }\n\n  async function loadTableData(transactId) {\n    var result = await backendServices.getHistorical(transactId);\n\n    if (result !== undefined) {\n      for (var dt of result) {\n        dt.date = moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\");\n      }\n\n      setDataBody(result);\n    }\n\n    console.log(\"loadTableData\", result);\n    let options = {\n      textLabels: {\n        body: {\n          noMatch: t(\"NoData\"),\n          toolTip: t(\"Order\"),\n          columnHeaderTooltip: column => `${t(\"OrderBy\")} ${column.label}`\n        },\n        pagination: {\n          next: t(\"Next\"),\n          previous: t(\"Prev\"),\n          rowsPerPage: t(\"RowsPerPage\"),\n          displayRows: t(\"From\"),\n          sizePerPage: 5,\n          sizePerPageList: [{\n            text: '5th',\n            value: 5\n          }, {\n            text: '10th',\n            value: 10\n          }, {\n            text: 'All',\n            value: 20\n          }]\n        },\n        toolbar: {\n          search: t(\"Search\"),\n          downloadCsv: t(\"DownloadCSV\"),\n          print: t(\"Print\"),\n          viewColumns: t(\"ViewColumns\"),\n          filterTable: t(\"FilterTable\")\n        },\n        filter: {\n          all: t(\"All\"),\n          title: t(\"Filter\"),\n          reset: t(\"Restore\")\n        },\n        viewColumns: {\n          title: t(\"ShowColumns\"),\n          titleAria: t(\"ShowHideColumns\")\n        },\n        selectedRows: {\n          text: t(\"SelectedRows\"),\n          delete: t(\"Delete\"),\n          deleteAria: t(\"DeleteSelectedRows\")\n        }\n      }\n    }; //Header de la Tabla de Bandeja de Entrada\n\n    const columns = [{\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Date\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }, this),\n      dataField: 'date',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Comment\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }, this),\n      dataField: 'observations',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Process\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }, this),\n      dataField: 'processBpmName',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Activity\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }, this),\n      dataField: 'activityBpmName',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Status\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }, this),\n      dataField: 'statusDescription',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"User\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }, this),\n      dataField: 'responsible',\n      sort: true\n    }];\n    setDataHeader(columns);\n    setDataOptions(options);\n  }\n\n  function onSaveLogProcess(observations) {\n    var _credentials$usr, _mainDebtor$personId;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    logProcessModel.responsible = (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\";\n    logProcessModel.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : logProcessModel.clientId;\n    logProcessModel.observations = observations;\n    console.log(\"onSaveLogProcess\", logProcessModel);\n    backendServices.saveHistorical(logProcessModel).then(resp => {\n      if (resp !== undefined) {\n        searchData(logProcessModel.transactId);\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"ErrorSaveMessage\"), true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: t(\"Binnacle\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn\",\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                toggleDisplayNewLogModal();\n              },\n              title: t(\"Add\"),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-lg fa-plus-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 161\n              }, this), \" \", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: dataHeader.length > 0 ? /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n          keyField: \"id\",\n          data: dataBody,\n          columns: dataHeader,\n          search: true,\n          exportCSV: true,\n          children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(SearchBar, {\n                  className: \"custome-search-field float-end\",\n                  delay: 1000,\n                  placeholder: t(\"Search\"),\n                  ...props.searchProps\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 8,\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn\",\n                  color: \"success\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    toggleDisplayNewLogModal();\n                  },\n                  title: t(\"Add\"),\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-lg fa-plus-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 161\n                  }, this), \" \", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n              bootstrap4: true,\n              bordered: false,\n              striped: true,\n              hover: true,\n              condensed: true,\n              classes: \"styled-table\",\n              style: {\n                cursor: \"pointer\"\n              },\n              data: dataBody,\n              columns: dataHeader,\n              ...props.baseProps,\n              pagination: paginationFactory({\n                sizePerPage: 30,\n                sizePerPageList: [30]\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 27\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewLog, {\n      onSaveLogProcess: observations => {\n        onSaveLogProcess(observations);\n      },\n      isOpen: displayNewLogModal,\n      toggle: () => {\n        toggleDisplayNewLogModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogProcess, \"fCQT5VRZt14W0sQSRB1mykUUDWw=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LogProcess;\nLogProcess.propTypes = {\n  logProcessModel: PropTypes.any //LogProcessModel\n\n};\nexport default withTranslation()(LogProcess);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/LogProcess/index.js"],"names":["React","useEffect","useState","PropTypes","Link","useLocation","functionshelper","moment","Table","Card","CardHeader","CardBody","UncontrolledAlert","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","Alert","withTranslation","SweetAlert","ModalNewLog","BackendServices","LocalStorageHelper","opt","BootstrapTable","ToolkitProvider","Search","CSVExport","paginationFactory","useTranslation","ExportCSVButton","SearchBar","LogProcess","props","t","i18n","logProcessModel","setlogProcessModel","dataList","setDataList","displayNewLogModal","setDisplayNewLogModal","mainDebtor","setmainDebtor","backendServices","setbackendServices","msgData","setmsgData","show","msg","isError","localStorageHelper","setlocalStorageHelper","dataOptions","setDataOptions","dataHeader","setDataHeader","dataBody","setDataBody","undefined","loadMainDebtor","transactId","searchData","toggleDisplayNewLogModal","removeBodyCss","document","body","classList","add","transactionId","consultPrincipalDebtor","then","data","loadTableData","result","getHistorical","dt","date","format","console","log","options","textLabels","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","rowsPerPage","displayRows","sizePerPage","sizePerPageList","text","value","toolbar","search","downloadCsv","print","viewColumns","filterTable","filter","all","title","reset","titleAria","selectedRows","delete","deleteAria","columns","dataField","sort","onSaveLogProcess","observations","credentials","get","VARNAME_USRCREDENTIAL","responsible","usr","clientId","personId","saveHistorical","resp","showMessage","catch","err","message","textAlign","margin","length","searchProps","cursor","baseProps","propTypes","any"],"mappings":"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","sourcesContent":["//Gestionar Log de los Procesos\r\nimport React, { useEffect, useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport functionshelper from \"../../helpers/functions_helper\"\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Table,\r\n  Card,CardHeader,\r\n  CardBody,\r\n  UncontrolledAlert,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport ModalNewLog from \"./ModalNewLog\"\r\nimport { BackendServices } from \"../../services/index\";\r\n\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\n\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst LogProcess = props => {\r\n  \r\n  const { t, i18n } = useTranslation();\r\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\r\n  \r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n    \r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n    \r\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n\r\n  const [dataOptions, setDataOptions] = useState([]);\r\n  const [dataHeader, setDataHeader] = useState([]);\r\n  const [dataBody, setDataBody] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (logProcessModel !== undefined && logProcessModel !== null) {\r\n      loadMainDebtor(logProcessModel.transactId);\r\n      searchData(logProcessModel.transactId)    \r\n    } \r\n  }, []);\r\n\r\n  //nuevo log\r\n  function toggleDisplayNewLogModal() {\r\n    setDisplayNewLogModal(!displayNewLogModal);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function loadMainDebtor(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n  \r\n  //buscamos las Propuestas de Credito\r\n  function searchData(transactId) {\r\n      \r\n    loadTableData(transactId);\r\n      /*backendServices.getHistorical(transactId)\r\n        .then(resp => {\r\n          const dataRows = resp.map((dt, idx) => (\r\n            <tr key={idx}>\r\n              <td scope=\"row\">{moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\")}</td>\r\n              <td>{dt.observations}</td>\r\n              <td>{dt.processBpmName }</td>\r\n              <td>{dt.activityBpmName }</td>\r\n              <td>{dt.statusDescription}</td>\r\n              <td>{dt.responsible}</td>\r\n            </tr>)\r\n          );\r\n          setDataList(dataRows);\r\n        }).catch(err => {console.log(err);});*/\r\n  }\r\n\r\n  async function loadTableData(transactId){\r\n\r\n   var result = await backendServices.getHistorical(transactId)\r\n       if(result!==undefined){\r\n        for (var dt of result) {          \r\n        dt.date = moment(dt.date).format(\"YYYY-MM-DD HH:mm:ss\")\r\n      }\r\n        setDataBody(result);\r\n       }\r\n    \r\n       console.log(\"loadTableData\",result);\r\n\r\n    let options = {\r\n      textLabels: {\r\n        body: {\r\n          noMatch: t(\"NoData\"),\r\n          toolTip: t(\"Order\"),\r\n          columnHeaderTooltip: (column) => `${t(\"OrderBy\")} ${column.label}`,\r\n        },\r\n        pagination: {\r\n          next: t(\"Next\"),\r\n          previous: t(\"Prev\"),\r\n          rowsPerPage: t(\"RowsPerPage\"),\r\n          displayRows: t(\"From\"),\r\n          sizePerPage: 5,\r\n          sizePerPageList: [{\r\n            text: '5th', value: 5\r\n          }, {\r\n            text: '10th', value: 10\r\n          }, {\r\n            text: 'All', value: 20\r\n          }]\r\n        },\r\n        toolbar: {\r\n          search: t(\"Search\"),\r\n          downloadCsv: t(\"DownloadCSV\"),\r\n          print: t(\"Print\"),\r\n          viewColumns: t(\"ViewColumns\"),\r\n          filterTable: t(\"FilterTable\"),\r\n        },\r\n        filter: {\r\n          all: t(\"All\"),\r\n          title: t(\"Filter\"),\r\n          reset: t(\"Restore\"),\r\n        },\r\n        viewColumns: {\r\n          title: t(\"ShowColumns\"),\r\n          titleAria: t(\"ShowHideColumns\"),\r\n        },\r\n        selectedRows: {\r\n          text: t(\"SelectedRows\"),\r\n          delete: t(\"Delete\"),\r\n          deleteAria: t(\"DeleteSelectedRows\"),\r\n        },\r\n      },\r\n    };\r\n\r\n    //Header de la Tabla de Bandeja de Entrada\r\n    const columns = [\r\n      { text: <strong>{t(\"Date\")}</strong>, dataField: 'date', sort: true },\r\n      { text: <strong>{t(\"Comment\")}</strong>, dataField: 'observations', sort: true },\r\n      { text: <strong>{t(\"Process\")}</strong>, dataField: 'processBpmName', sort: true },\r\n      { text: <strong>{t(\"Activity\")}</strong>, dataField: 'activityBpmName', sort: true },\r\n      { text: <strong>{t(\"Status\")}</strong>, dataField: 'statusDescription', sort: true },\r\n      { text: <strong>{t(\"User\")}</strong>, dataField: 'responsible', sort: true }\r\n    ];\r\n\r\n    setDataHeader(columns);\r\n    setDataOptions(options);\r\n  }\r\n\r\n  function onSaveLogProcess(observations) {\r\n    \r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n    \r\n    logProcessModel.responsible = credentials?.usr??\"admin\"\r\n    logProcessModel.clientId = mainDebtor?.personId??logProcessModel.clientId;\r\n    logProcessModel.observations= observations;    \r\n    console.log(\"onSaveLogProcess\",logProcessModel)\r\n    backendServices.saveHistorical(logProcessModel)\r\n        .then(resp => {\r\n          if (resp !== undefined) {\r\n            searchData(logProcessModel.transactId);\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            showMessage(t(\"ErrorSaveMessage\"), true);\r\n          }\r\n        }).catch(err => {\r\n          console.log(err);\r\n        });\r\n  }\r\n\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card>\r\n\r\n      <CardHeader>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h4 className=\"card-title\">{t(\"Binnacle\")}</h4>\r\n                </Col>\r\n                <Col md={6} style={{ textAlign: \"right\"}}>\r\n                <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleDisplayNewLogModal() }} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n         \r\n                </Col>\r\n               </Row>                     \r\n            </CardHeader>\r\n          {/*<CardBody>\r\n              <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div className=\"table-responsive styled-table-div\">\r\n              <Table className=\"table table-striped table-hover styled-table\">\r\n                <thead className=\"\">\r\n                  <tr>\r\n                    <th>{t(\"Date\")}</th>\r\n                    <th>{t(\"Comment\")}</th>\r\n                    <th>{t(\"Process\")}</th>\r\n                    <th>{t(\"Activity\")}</th>\r\n                    <th>{t(\"Status\")}</th>\r\n                    <th>{t(\"User\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataList!==undefined && dataList.length>0?\r\n                    dataList:\r\n                  <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td> }\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        \r\n      </CardBody>*/}\r\n\r\n      <CardBody>\r\n      {dataHeader.length > 0 ?\r\n                          <ToolkitProvider\r\n                            keyField=\"id\"\r\n                            data={dataBody}\r\n                            columns={dataHeader}\r\n                            search\r\n                            exportCSV\r\n                          >\r\n                            {\r\n                              props => (\r\n                                <div className=\"\">\r\n                                   <Row>\r\n                <Col md={4}>\r\n                <SearchBar className=\"custome-search-field float-end\" delay={1000} placeholder={t(\"Search\")} {...props.searchProps} />\r\n                                \r\n                </Col>\r\n                <Col md={8} style={{ textAlign: \"right\"}}>\r\n                <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleDisplayNewLogModal() }} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n         \r\n                </Col>\r\n               </Row>    \r\n                                    \r\n                                  <BootstrapTable\r\n                                    bootstrap4\r\n                                    bordered={false}\r\n                                    striped\r\n                                    hover\r\n                                    condensed\r\n                                    classes='styled-table'\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    data={dataBody} columns={dataHeader}\r\n                                    {...props.baseProps}\r\n                                    pagination={paginationFactory({\r\n                                      sizePerPage: 30,\r\n                                      sizePerPageList: [30]\r\n                                    })}\r\n                                  />\r\n                                </div>\r\n                              )\r\n                            }\r\n                          </ToolkitProvider>\r\n                          : null}\r\n      </CardBody>\r\n      </Card>\r\n      <ModalNewLog onSaveLogProcess={(observations) => { onSaveLogProcess(observations) }} isOpen={displayNewLogModal} toggle={() => { toggleDisplayNewLogModal() }} />\r\n      \r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\nLogProcess.propTypes = {\r\n  logProcessModel: PropTypes.any, //LogProcessModel\r\n};\r\nexport default (withTranslation()(LogProcess))\r\n"]},"metadata":{},"sourceType":"module"}