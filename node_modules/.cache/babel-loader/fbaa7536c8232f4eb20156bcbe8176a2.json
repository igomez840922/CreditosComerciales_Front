{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\financialSummary\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from '../../../helpers/translation-helper';\nimport { Table, Card, CardBody, Button, Col } from \"reactstrap\";\nimport { BackendServices } from '../../../services';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport ModalNewHistoryDetail from './ModalNewHistoryDetail';\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport HeaderSections from \"../../Common/HeaderSections\";\nimport { Link } from \"react-router-dom\";\nimport Currency from \"../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst History = props => {\n  _s();\n\n  var _location$data;\n\n  const location = useLocation();\n  const [t, c, tr] = translationHelpers('commercial_credit', 'common', 'translation');\n  const api = new BackendServices();\n  const {\n    editMode\n  } = props;\n  /**\r\n   * All useState\r\n   */\n\n  const [displayModalNewHistoryDetail, setDisplayModalNewHistoryDetail] = useState(false);\n  const [dataRows, setDataRows] = useState(null);\n  const [totals, setTotals] = useState(null);\n  const [totalRow, setTotalRow] = useState(null);\n  const [proportions, setProportions] = useState(null);\n  const [proportionRow, setProportionRow] = useState(null);\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [bank, setbank] = useState(null);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [dataEdit, setDataEdit] = useState(null);\n  const [action, setAction] = useState(null);\n  const [dataLocation, setdataLocaton] = useState((_location$data = location.data) !== null && _location$data !== void 0 ? _location$data : JSON.parse(sessionStorage.getItem('locationData')));\n  /**\r\n   * End All useState\r\n   */\n\n  const currencyData = new Currency();\n  const headers = [t('# days', {\n    days: 30\n  }), t('# days', {\n    days: 60\n  }), t('# days', {\n    days: 90\n  }), t('# days', {\n    days: 120\n  }), t('# days', {\n    days: 150\n  }), t('# days', {\n    days: 180\n  }), t('# days', {\n    days: 210\n  }), t('# days', {\n    days: 240\n  }), t('# days', {\n    days: 270\n  }), t('# days', {\n    days: 300\n  }), t('# days', {\n    days: 330\n  }), t('+# days', {\n    days: 331\n  }), tr('Totals'), tr('Actions')];\n  const data = [{\n    name: 'Banesco',\n    data: [100, 80, 80, 80, 100, 80, 80, 80, 100, 80, 80, 200, 0]\n  }, {\n    name: 'Banesco',\n    data: [100, 80, 80, 80, 100, 80, 80, 80, 100, 80, 80, 200, 0]\n  }];\n  React.useEffect(() => {\n    getDataHistory();\n  }, []);\n\n  function calculateTotals(headers, data) {\n    const totals = new Array(headers.length);\n    totals.fill(0, 0, headers.length);\n    headers.forEach((header, index) => {\n      totals[index] = data.reduce((total, current) => {\n        return total + current.data[index];\n      }, 0);\n    });\n    return totals;\n  }\n\n  function calculateProportions(headers, data) {\n    const cols = new Array(headers.length);\n    cols.fill(0, 0, headers.length);\n    return cols;\n  }\n\n  const dataHeaders = headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n    className: \"text-start\",\n    children: header\n  }, \"header-\" + index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this));\n\n  function getDataHistory() {\n    var _dataLocation$transac;\n\n    api.consultarDetalleAntiguedad((_dataLocation$transac = dataLocation === null || dataLocation === void 0 ? void 0 : dataLocation.transactionId) !== null && _dataLocation$transac !== void 0 ? _dataLocation$transac : 0, props.debtorId).then(data => {\n      let mapData = data === null || data === void 0 ? void 0 : data.map($$ => ({\n        data: [...Object.entries($$.details).map(([key, value]) => value), $$.total]\n      }));\n      setDataRows(data === null || data === void 0 ? void 0 : data.map((item, index) => {\n        var _item$total;\n\n        let key = 0;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Country / Client\"),\n            children: [item.bank, index]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), Object.entries(item.details).map(([data, col]) => /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": headers[key],\n            className: \"text-end\",\n            children: currencyData.format(col !== null && col !== void 0 ? col : 0)\n          }, \"col-\" + key++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": tr('Totals'),\n            className: \"text-end\",\n            children: currencyData.format((_item$total = item.total) !== null && _item$total !== void 0 ? _item$total : 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), !props.preview && /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"Actions\"),\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                editData(item);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteData(item.bank);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 32\n          }, this)]\n        }, 'row-' + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this);\n      })); // Calculate total\n\n      let totals = calculateTotals(headers, mapData);\n      setTotalRow( /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"table-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: t(\"Total\").toLocaleUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), totals.map((val, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"text-start\",\n          children: currencyData.format(val !== null && val !== void 0 ? val : 0)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)); // Calculate proportions\n\n      let proportions = calculateProportions(headers, mapData);\n      setProportionRow( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: t(\"Proportion\").toLocaleUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), proportions.map((val, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"text-start\",\n          children: val\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  function toggleModalNewHistoryItem() {\n    setDisplayModalNewHistoryDetail(!displayModalNewHistoryDetail);\n  }\n\n  async function onSave(values) {\n    values = {\n      details: values,\n      transactId: dataLocation.transactionId,\n      personId: props.debtorId,\n      total: values.totals,\n      percentage: values.totals / (headers.length - 2),\n      bank: values.bank\n    };\n    delete values.details.bank;\n    delete values.details.totals;\n    action == 'edit' && (await api.actualizarDetalleAntiguedad(values).then(resp => {\n      if (resp.statusCode == \"500\" || undefined) {\n        seterror_dlg(true);\n      } else {\n        setsuccessSave_dlg(true);\n      }\n    }).catch(err => {\n      seterror_dlg(true);\n    }));\n    action == 'new' && (await api.nuevoDetalleAntiguedad(values).then(resp => {\n      if (resp.statusCode == \"500\" || undefined) {\n        seterror_dlg(true);\n      } else {\n        setsuccessSave_dlg(true);\n      }\n    }).catch(err => {\n      seterror_dlg(true);\n    }));\n    getDataHistory();\n  }\n\n  function editData(data) {\n    setDataEdit(data);\n    toggleModalNewHistoryItem();\n    setAction('edit');\n  }\n\n  function deleteData(bank) {\n    setbank(bank);\n    setconfirm_alert(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n      title: \"History Details\",\n      t: t\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), (!props.preview || editMode) && /*#__PURE__*/_jsxDEV(Col, {\n      md: \"12\",\n      style: {\n        textAlign: \"right\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn\",\n        color: \"success\",\n        type: \"button\",\n        style: {\n          margin: '5px'\n        },\n        onClick: () => {\n          setAction('new');\n          toggleModalNewHistoryItem();\n          setDataEdit(null);\n        },\n        title: t(\"Add\"),\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lg fa-plus-circle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 192\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive styled-table-div mt-2\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-striped table-hover styled-table table mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Country / Client\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), dataHeaders]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [dataRows, (dataRows === null || dataRows === void 0 ? void 0 : dataRows.length) > 0 && totalRow]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewHistoryDetail, {\n      dataEdit: dataEdit,\n      setAction: setAction,\n      isOpen: displayModalNewHistoryDetail,\n      toggle: toggleModalNewHistoryItem,\n      onSave: onSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: tr(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: tr(\"Yesdeleteit\"),\n      cancelButtonText: tr(\"Cancel\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.eliminarDetalleAntiguedad(dataLocation.transactionId, props.debtorId, bank).then(resp => {\n          if (resp.statusCode == \"500\" || undefined) {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n\n          getDataHistory();\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: tr(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this) : null, successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        getDataHistory();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        getDataHistory();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(History, \"0NRNJrN3OonyGptlYaeWt4gh+Cs=\", false, function () {\n  return [useLocation];\n});\n\n_c = History;\nHistory.propTypes = {\n  title: PropTypes.string,\n  headers: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  editMode: PropTypes.bool,\n  addHistoryDetail: PropTypes.func\n};\nHistory.defaultProps = {\n  editMode: false\n};\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/financialSummary/History.js"],"names":["React","useEffect","useState","PropTypes","translationHelpers","Table","Card","CardBody","Button","Col","BackendServices","useLocation","useHistory","ModalNewHistoryDetail","SweetAlert","HeaderSections","Link","Currency","History","props","location","t","c","tr","api","editMode","displayModalNewHistoryDetail","setDisplayModalNewHistoryDetail","dataRows","setDataRows","totals","setTotals","totalRow","setTotalRow","proportions","setProportions","proportionRow","setProportionRow","confirm_alert","setconfirm_alert","error_dlg","seterror_dlg","bank","setbank","successSave_dlg","setsuccessSave_dlg","dataEdit","setDataEdit","action","setAction","dataLocation","setdataLocaton","data","JSON","parse","sessionStorage","getItem","currencyData","headers","days","name","getDataHistory","calculateTotals","Array","length","fill","forEach","header","index","reduce","total","current","calculateProportions","cols","dataHeaders","map","consultarDetalleAntiguedad","transactionId","debtorId","then","mapData","$$","Object","entries","details","key","value","item","col","format","preview","textAlign","resp","editData","deleteData","toLocaleUpperCase","val","toggleModalNewHistoryItem","onSave","values","transactId","personId","percentage","actualizarDetalleAntiguedad","statusCode","undefined","catch","err","nuevoDetalleAntiguedad","margin","apiBack","eliminarDetalleAntiguedad","error","propTypes","title","string","array","isRequired","bool","addHistoryDetail","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelpers } from '../../../helpers/translation-helper';\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Col\r\n} from \"reactstrap\"\r\nimport { BackendServices } from '../../../services';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport ModalNewHistoryDetail from './ModalNewHistoryDetail';\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport HeaderSections from \"../../Common/HeaderSections\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Currency from \"../../../helpers/currency\";\r\n\r\n\r\nconst History = (props) => {\r\n  const location = useLocation();\r\n\r\n  const [t, c, tr] = translationHelpers('commercial_credit', 'common', 'translation');\r\n\r\n  const api = new BackendServices();\r\n\r\n\r\n  const { editMode } = props;\r\n\r\n  /**\r\n   * All useState\r\n   */\r\n  const [displayModalNewHistoryDetail, setDisplayModalNewHistoryDetail] = useState(false);\r\n  const [dataRows, setDataRows] = useState(null);\r\n  const [totals, setTotals] = useState(null);\r\n  const [totalRow, setTotalRow] = useState(null);\r\n  const [proportions, setProportions] = useState(null);\r\n  const [proportionRow, setProportionRow] = useState(null);\r\n  const [confirm_alert, setconfirm_alert] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [bank, setbank] = useState(null);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [dataEdit, setDataEdit] = useState(null);\r\n  const [action, setAction] = useState(null);\r\n  const [dataLocation, setdataLocaton] = useState(location.data ?? JSON.parse(sessionStorage.getItem('locationData')));\r\n  /**\r\n   * End All useState\r\n   */\r\n\r\n  const currencyData = new Currency();\r\n\r\n  const headers = [\r\n    t('# days', { days: 30 }),\r\n    t('# days', { days: 60 }),\r\n    t('# days', { days: 90 }),\r\n    t('# days', { days: 120 }),\r\n    t('# days', { days: 150 }),\r\n    t('# days', { days: 180 }),\r\n    t('# days', { days: 210 }),\r\n    t('# days', { days: 240 }),\r\n    t('# days', { days: 270 }),\r\n    t('# days', { days: 300 }),\r\n    t('# days', { days: 330 }),\r\n    t('+# days', { days: 331 }),\r\n    tr('Totals'),\r\n    tr('Actions'),\r\n  ]\r\n\r\n\r\n  const data = [\r\n    {\r\n      name: 'Banesco',\r\n      data: [100, 80, 80, 80, 100, 80, 80, 80, 100, 80, 80, 200, 0]\r\n    },\r\n    {\r\n      name: 'Banesco',\r\n      data: [100, 80, 80, 80, 100, 80, 80, 80, 100, 80, 80, 200, 0]\r\n    }\r\n  ]\r\n\r\n  React.useEffect(() => {\r\n    getDataHistory();\r\n  }, []);\r\n\r\n  function calculateTotals(headers, data) {\r\n    const totals = new Array(headers.length);\r\n    totals.fill(0, 0, headers.length);\r\n    headers.forEach((header, index) => {\r\n      totals[index] = data.reduce((total, current) => {\r\n        return total + current.data[index];\r\n      }, 0);\r\n    });\r\n    return totals;\r\n  }\r\n\r\n  function calculateProportions(headers, data) {\r\n    const cols = new Array(headers.length);\r\n    cols.fill(0, 0, headers.length);\r\n    return cols;\r\n  }\r\n  const dataHeaders = headers.map((header, index) => (\r\n    <th key={\"header-\" + index} className=\"text-start\">{header}</th>\r\n  ));\r\n\r\n  function getDataHistory() {\r\n    api.consultarDetalleAntiguedad(dataLocation?.transactionId ?? 0, props.debtorId).then((data) => {\r\n\r\n      let mapData = data?.map($$ => ({ data: [...Object.entries($$.details).map(([key, value]) => value), $$.total] }));\r\n\r\n      setDataRows(data?.map((item, index) => {\r\n        let key = 0;\r\n        return (\r\n          <tr key={'row-' + index}>\r\n            <td data-label={t(\"Country / Client\")} key={index}>{item.bank}{index}</td>\r\n            {Object.entries(item.details).map(([data, col]) => (\r\n              <td key={\"col-\" + key++} data-label={headers[key]} className=\"text-end\">{currencyData.format(col ?? 0)}</td>\r\n            ))}\r\n            <td data-label={tr('Totals')} className=\"text-end\">{currencyData.format(item.total ?? 0)}</td>\r\n            {!props.preview && <td data-label={t(\"Actions\")} style={{ textAlign: \"right\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => {\r\n                editData(item)\r\n              }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => {\r\n                deleteData(item.bank)\r\n              }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n            </td>}\r\n          </tr>)\r\n      }\r\n      ));\r\n      // Calculate total\r\n      let totals = (calculateTotals(headers, mapData));\r\n      setTotalRow(\r\n        <tr className=\"table-info\">\r\n          <th>{t(\"Total\").toLocaleUpperCase()}</th>\r\n          {totals.map((val, index) => (\r\n            <th key={index} className=\"text-start\">{currencyData.format(val ?? 0)}</th>\r\n          ))}\r\n          <th></th>\r\n        </tr>\r\n      );\r\n\r\n      // Calculate proportions\r\n      let proportions = (calculateProportions(headers, mapData));\r\n      setProportionRow(\r\n        <tr>\r\n          <td>{t(\"Proportion\").toLocaleUpperCase()}</td>\r\n          {proportions.map((val, index) => (\r\n            <td key={index} className=\"text-start\">{val}</td>\r\n          ))}\r\n        </tr>\r\n      );\r\n    })\r\n\r\n\r\n  }\r\n\r\n  function toggleModalNewHistoryItem() {\r\n    setDisplayModalNewHistoryDetail(!displayModalNewHistoryDetail);\r\n  }\r\n\r\n  async function onSave(values) {\r\n\r\n    values = { details: values, transactId: dataLocation.transactionId, personId: props.debtorId, total: values.totals, percentage: (values.totals / (headers.length - 2)), bank: values.bank }\r\n    delete values.details.bank\r\n    delete values.details.totals\r\n    action == 'edit' && await api.actualizarDetalleAntiguedad(values).then(resp => {\r\n      if (resp.statusCode == \"500\" || undefined) {\r\n        seterror_dlg(true)\r\n      } else {\r\n        setsuccessSave_dlg(true)\r\n      }\r\n    }).catch(err => {\r\n      seterror_dlg(true)\r\n    });\r\n\r\n    action == 'new' && await api.nuevoDetalleAntiguedad(values).then(resp => {\r\n      if (resp.statusCode == \"500\" || undefined) {\r\n        seterror_dlg(true)\r\n      } else {\r\n        setsuccessSave_dlg(true)\r\n      }\r\n    }).catch(err => {\r\n      seterror_dlg(true)\r\n    });\r\n\r\n    getDataHistory();\r\n  }\r\n\r\n  function editData(data) {\r\n    setDataEdit(data);\r\n    toggleModalNewHistoryItem();\r\n    setAction('edit');\r\n  }\r\n\r\n  function deleteData(bank) {\r\n    setbank(bank);\r\n    setconfirm_alert(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HeaderSections title=\"History Details\" t={t}></HeaderSections>\r\n      <p className=\"card-title-desc\"></p>\r\n      {(!props.preview || editMode) && <Col md=\"12\" style={{ textAlign: \"right\" }}>\r\n        <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { setAction('new'); toggleModalNewHistoryItem(); setDataEdit(null); }} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n      </Col>}\r\n      <div className=\"table-responsive styled-table-div mt-2\">\r\n        <Table className=\"table table-striped table-hover styled-table table mb-0\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"Country / Client\")}</th>\r\n              {dataHeaders}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataRows}\r\n            {dataRows?.length > 0 && totalRow}\r\n            {/* {proportionRow} */}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <ModalNewHistoryDetail dataEdit={dataEdit} setAction={setAction} isOpen={displayModalNewHistoryDetail} toggle={toggleModalNewHistoryItem} onSave={onSave} />\r\n\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={tr(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={tr(\"Yesdeleteit\")}\r\n          cancelButtonText={tr(\"Cancel\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.eliminarDetalleAntiguedad(dataLocation.transactionId, props.debtorId, bank).then(resp => {\r\n              if (resp.statusCode == \"500\" || undefined) {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n              getDataHistory();\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {tr(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          confirmButtonText={t(\"Confirm\")}\r\n          cancelButtonText={t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            getDataHistory();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          confirmButtonText={t(\"Confirm\")}\r\n          cancelButtonText={t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            getDataHistory();\r\n          }}\r\n        >\r\n          { }\r\n        </SweetAlert>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nHistory.propTypes = {\r\n  title: PropTypes.string,\r\n  headers: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  editMode: PropTypes.bool,\r\n  addHistoryDetail: PropTypes.func\r\n};\r\n\r\nHistory.defaultProps = {\r\n  editMode: false\r\n};\r\n\r\n\r\nexport default History;\r\n"]},"metadata":{},"sourceType":"module"}