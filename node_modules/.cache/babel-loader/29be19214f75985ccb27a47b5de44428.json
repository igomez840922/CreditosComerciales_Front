{"ast":null,"code":"import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Link}from\"react-router-dom\";import Breadcrumbs from'../../components/Common/Breadcrumb';import{useTranslation}from'react-i18next';import{useLocation,useHistory}from'react-router-dom';import{Button,Label,Input,CardHeader,CardTitle,InputGroup,Table,CardFooter,Row,Col,Card,CardBody}from\"reactstrap\";import{Accordion}from'react-bootstrap';import SalesAnalytics from\"./sales-analytics\";import ScatterChart from\"./scatter-analytics\";import CreditProposalPage from'../CommercialCredit/5_PropuestaCredito/CreditProposalPage';import ApiServiceBpm from\"../../services/BpmServices/Services\";import BootstrapTable from'react-bootstrap-table-next';import ToolkitProvider,{Search}from'react-bootstrap-table2-toolkit';import paginationFactory from'react-bootstrap-table2-paginator';import ApiServiceCore from\"../../services/CoreServices/Services\";import*as opt from\"../../helpers/options_helper\";import{ResultadoChecklistCentroArchivoModel}from\"../../models\";import ModalWatchProces from\"./ModalWacthProcess\";import{formatCurrency,translationHelpers}from'../../helpers';import LoadingOverlay from\"react-loading-overlay\";//import ActiveDirectoryService from \"../../services/ActiveDirectory\";\nimport TaskStatus from\"../../components/ActivityTask/taskStatus\";import Currency from\"../../helpers/currency\";import ModalTransferProcess from\"./ModalTransferProcess\";import LocalStorageHelper from\"../../helpers/LocalStorageHelper\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SearchBar=Search.SearchBar;var Dashboard=function Dashboard(){var history=useHistory();var ordernar=new Currency();var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var _translationHelpers=translationHelpers('commercial_credit','translation'),_translationHelpers2=_slicedToArray(_translationHelpers,2),tc=_translationHelpers2[0],tr=_translationHelpers2[1];var localStorageHelper=new LocalStorageHelper();var customTotal=function customTotal(from,to,size){return/*#__PURE__*/_jsxs(\"span\",{className:\"react-bootstrap-table-pagination-total\",children:[t('Showing'),\" \",from,\" \",t('to'),\" \",to,\" \",t('of'),\" \",size,\" \",t('Results')]});};React.useEffect(function(){/* ------------------------------------------------------------------------------------------------------------------ */ /*                       Llamamos a la funcion para que se pueda renderizar y llenar la tabla                      */ /* ------------------------------------------------------------------------------------------------------------------ */var fixedDashboard=process.env.REACT_APP_FIXED_DASHBOARD;if(fixedDashboard){// If .env has REACT_APP_FIXED_DASHBOARD, load fixed data\n// LoadData();\n}else{getDashBoard();}//LoadData();\n},[]);/* ------------------------------------------------------------------------------------------------------------------ */ /*                                                Variables de estados                                                */ /* ------------------------------------------------------------------------------------------------------------------ */var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showResults=_useState2[0],setShowResults=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),dataList=_useState4[0],setDataLista=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),dataOptions=_useState6[0],setDataOptions=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),dataHeader=_useState8[0],setDataHeader=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),dataBody=_useState10[0],setDataBody=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),ShowDisplayModal=_useState12[0],setShowDisplayModal=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),processInstanceId=_useState14[0],setProcessInstanceId=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isActiveLoading=_useState16[0],setisActiveLoading=_useState16[1];var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),svg=_useState18[0],setSvg=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),ShowModalTransfer=_useState20[0],setShowModalTransfer=_useState20[1];var _useState21=useState(null),_useState22=_slicedToArray(_useState21,2),transferData=_useState22[0],settransferData=_useState22[1];var jsonPrioridad=[{value:\"1\",label:\"Muy Urgente\"},{value:\"2\",label:\"Urgencia Moderada\"},{value:\"3\",label:\"Importante\"},{value:\"4\",label:\"Baja Urgencia\"},{value:\"5\",label:\" Sin Urgencia\"}];var _useState23=useState(null),_useState24=_slicedToArray(_useState23,2),dataRows=_useState24[0],setdataRows=_useState24[1];/* ------------------------------------------------------------------------------------------------------------------ */ /*                                         Permite cargar los datos a la tabla                                        */ /* ------------------------------------------------------------------------------------------------------------------ */function getDashBoard(){return _getDashBoard.apply(this,arguments);}/* ------------------------------------------------------------------------------------------------------------------ */ /*                               Funcion temporal para poder navegar entre las pantallas                              */ /* ------------------------------------------------------------------------------------------------------------------ */function _getDashBoard(){_getDashBoard=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var api,options,columns;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setisActiveLoading(true);/* ------------------------------------------------------------------------------------------------------------------ */ /*   Instanciamos la api para el result de la api y asi enviar al modelo para retornar un json armado para la tabla   */ /* ------------------------------------------------------------------------------------------------------------------ */api=new ApiServiceBpm();//api.getLineSerial(\"asd\",\"asd\");\napi.getDashBoard().then(function(data){setisActiveLoading(false);/* ------------------------------------------------------------------------------------------------------------------ */ /*             Seteamos los valores de las columnas y filas a la variable que va al componene de la tabla             */ /* ------------------------------------------------------------------------------------------------------------------ */var credentials=localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);data.results=[].concat(_toConsumableArray(ordernar.orderByJSON(data.results.filter(function(x){return+x.priority>0;}),\"priority\",\"asc\")),_toConsumableArray(data.results.filter(function(x){return+x.priority==0;})));console.log(data.results.filter(function($$){return $$.instanceId==11430;}));setDataBody(_toConsumableArray(data.results.map(function($$){$$.action=/*#__PURE__*/_jsxs(_Fragment,{children:[$$.action,credentials.canAsign?/*#__PURE__*/_jsx(Link,{to:\"#\",onClick:function onClick(e){settransferData($$);setShowModalTransfer(true);},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-transit-transfer mdi-24px\"})}):null,/*#__PURE__*/_jsx(Link,{to:\"#\",onClick:function onClick(e){setProcessInstanceId($$.instanceId);toggleModalWatchProcess();},children:/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-eye mdi-24px\"})}),/*#__PURE__*/_jsx(TaskStatus,{taskStatus:$$.status,pathname:$$.pathname,data:$$.data})]});return $$;})));}).catch(function(error){setisActiveLoading(false);console.error(error);});/* ------------------------------------------------------------------------------------------------------------------ */ /*        Creamos un json con los datos que va a tener la tabla en general para mostrar resultados o paginacion       */ /* ------------------------------------------------------------------------------------------------------------------ */options={textLabels:{body:{noMatch:t(\"SorryNoMatchingRecordsWereFfound\"),toolTip:t(\"Order\"),columnHeaderTooltip:function columnHeaderTooltip(column){return\"\".concat(t(\"OrderBy\"),\" \").concat(column.label);}},pagination:{next:t(\"Next\"),previous:t(\"Prev\"),rowsPerPage:t(\"RowsPerPage\"),displayRows:t(\"From\"),sizePerPage:5,sizePerPageList:[{text:'5th',value:5},{text:'10th',value:10},{text:'All',value:20}]},toolbar:{search:t(\"Search\"),downloadCsv:t(\"DownloadCSV\"),print:t(\"Print\"),viewColumns:t(\"ViewColumns\"),filterTable:t(\"FilterTable\")},filter:{all:t(\"All\"),title:t(\"Filter\"),reset:t(\"Restore\")},viewColumns:{title:t(\"ShowColumns\"),titleAria:t(\"ShowHideColumns\")},selectedRows:{text:t(\"SelectedRows\"),delete:t(\"Delete\"),deleteAria:t(\"DeleteSelectedRows\")}}};//Header de la Tabla de Bandeja de Entrada\ncolumns=[//  { text: \"ID\", dataField: 'uniqueData' },\n{text:t(\"Date\"),dataField:'date',sort:true},{text:t(\"Process\"),dataField:'instanceId',sort:true},{text:t(\"Procedure\"),dataField:'transactionId',sort:true},{text:t(\"AssignedTo\"),dataField:'asignedTo',sort:true},{text:t(\"Client\"),dataField:'personName',sort:true},{text:t(\"FacilityType\"),dataField:'facilityTypeId',sort:true},{text:t(\"Activity\"),dataField:'activity',sort:true},{text:t(\"Sla\"),dataField:'sla',sort:true},{text:t(\"Status\"),dataField:'status',sort:true},{text:t(\"Prioridad\"),dataField:'priorityName',sort:true},{text:\"\",dataField:'action'}];setDataHeader(columns);setDataOptions(options);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getDashBoard.apply(this,arguments);}function NewInstance(){//creamos un nueva instancia de proceso en BPM...\nvar apiServiceBPM=new ApiServiceBpm();apiServiceBPM.startProcess().then(function(number){if(number!==null&&number!==undefined&&number>0){//buscamos la tarea que crea el nuevo proceso\napiServiceBPM.getTasksByPrcess(number).then(function(result){if(result!==undefined){//Inicializamos la nueva tarea en BPM\napiServiceBPM.startedStatusTask(result.taskId).then(function(iniresult){if(iniresult!==undefined){//datos que le enviamos a la pantalla de busqueda y descarte\nhistory.push({pathname:'/creditocomercial/busquedadescarte',data:{customerId:\"\",transactionId:\"\",processId:opt.PROCESS_BUSQUEDADESCARTE.toString(),activityId:opt.ACT_NONE.toString(),instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status}});}});}});}}).catch(function(error){//Mostrar Mensaje Proceso no instanciado\nconsole.error('api error: ',error);});}function toggleModalWatchProcess(){setShowDisplayModal(!ShowDisplayModal);}return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",children:[/*#__PURE__*/_jsx(Breadcrumbs,{title:t(\"Dashboard\"),breadcrumbItem:t(\"Inbox\")}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardTitle,{className:\"h4\",children:t(\"Management\")}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc\",children:t(\"Inboxofthecommercialcreditprocess\")}),/*#__PURE__*/_jsx(LoadingOverlay,{active:isActiveLoading,spinner:true,text:t(\"Processinginformation\"),children:dataHeader.length>0?/*#__PURE__*/_jsx(ToolkitProvider,{keyField:\"uniqueData\",data:dataBody,columns:dataHeader,search:true,children:function children(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsx(SearchBar,_objectSpread({className:\"custome-search-field float-end\",delay:1000,placeholder:t(\"Search\")},props.searchProps)),/*#__PURE__*/_jsx(BootstrapTable,_objectSpread(_objectSpread({keyField:\"uniqueData\",bootstrap4:true,bordered:false,striped:true,hover:true,condensed:true,classes:\"styled-table\",style:{cursor:\"pointer\"},data:dataBody,columns:dataHeader},props.baseProps),{},{pagination:paginationFactory({sizePerPage:30,sizePerPageList:[30]})}))]});}}):null}),showResults&&/*#__PURE__*/_jsx(CreditProposalPage,{})]})})]}),processInstanceId&&/*#__PURE__*/_jsx(ModalWatchProces,{isOpen:ShowDisplayModal,toggle:function toggle(){toggleModalWatchProcess();},svg:svg,processInstanceId:processInstanceId,t:tr}),/*#__PURE__*/_jsx(ModalTransferProcess,{isOpen:ShowModalTransfer,toggle:function toggle(){setShowModalTransfer(!ShowModalTransfer);},data:transferData,updateData:function updateData(){console.log(\"updateData\");var timer=setTimeout(function(){getDashBoard();},1000);return function(){return clearTimeout(timer);};}})]});};export default Dashboard;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/index.js"],"names":["React","useState","Link","Breadcrumbs","useTranslation","useLocation","useHistory","Button","Label","Input","CardHeader","CardTitle","InputGroup","Table","CardFooter","Row","Col","Card","CardBody","Accordion","SalesAnalytics","ScatterChart","CreditProposalPage","ApiServiceBpm","BootstrapTable","ToolkitProvider","Search","paginationFactory","ApiServiceCore","opt","ResultadoChecklistCentroArchivoModel","ModalWatchProces","formatCurrency","translationHelpers","LoadingOverlay","TaskStatus","Currency","ModalTransferProcess","LocalStorageHelper","SearchBar","Dashboard","history","ordernar","t","i18n","tc","tr","localStorageHelper","customTotal","from","to","size","useEffect","fixedDashboard","process","env","REACT_APP_FIXED_DASHBOARD","getDashBoard","showResults","setShowResults","dataList","setDataLista","dataOptions","setDataOptions","dataHeader","setDataHeader","dataBody","setDataBody","ShowDisplayModal","setShowDisplayModal","processInstanceId","setProcessInstanceId","isActiveLoading","setisActiveLoading","svg","setSvg","ShowModalTransfer","setShowModalTransfer","transferData","settransferData","jsonPrioridad","value","label","dataRows","setdataRows","api","then","data","credentials","get","VARNAME_USRCREDENTIAL","results","orderByJSON","filter","x","priority","console","log","$$","instanceId","map","action","canAsign","e","toggleModalWatchProcess","status","pathname","catch","error","options","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","rowsPerPage","displayRows","sizePerPage","sizePerPageList","text","toolbar","search","downloadCsv","print","viewColumns","filterTable","all","title","reset","titleAria","selectedRows","delete","deleteAria","columns","dataField","sort","NewInstance","apiServiceBPM","startProcess","number","undefined","getTasksByPrcess","result","startedStatusTask","taskId","iniresult","push","customerId","transactionId","processId","PROCESS_BUSQUEDADESCARTE","toString","activityId","ACT_NONE","taskStatus","length","props","searchProps","cursor","baseProps","timer","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport PropTypes from 'prop-types';\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport {\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  CardTitle,\r\n  InputGroup,\r\n  Table,\r\n  CardFooter,\r\n  Row, Col, Card, CardBody\r\n} from \"reactstrap\"\r\nimport { Accordion } from 'react-bootstrap';\r\nimport SalesAnalytics from \"./sales-analytics\"\r\nimport ScatterChart from \"./scatter-analytics\"\r\nimport CreditProposalPage from '../CommercialCredit/5_PropuestaCredito/CreditProposalPage'\r\nimport ApiServiceBpm from \"../../services/BpmServices/Services\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ApiServiceCore from \"../../services/CoreServices/Services\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport { ResultadoChecklistCentroArchivoModel } from \"../../models\";\r\n\r\nimport ModalWatchProces from \"./ModalWacthProcess\";\r\nimport { formatCurrency, translationHelpers } from '../../helpers';\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\n//import ActiveDirectoryService from \"../../services/ActiveDirectory\";\r\nimport TaskStatus from \"../../components/ActivityTask/taskStatus\";\r\nimport Currency from \"../../helpers/currency\";\r\nimport ModalTransferProcess from \"./ModalTransferProcess\";\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst Dashboard = () => {\r\n  const history = useHistory();\r\n  const ordernar = new Currency()\r\n  const { t, i18n } = useTranslation();\r\n  const [tc, tr] = translationHelpers('commercial_credit', 'translation');\r\n  const localStorageHelper = new LocalStorageHelper();\r\n\r\n  const customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total\">\r\n      {t('Showing')} {from} {t('to')} {to} {t('of')} {size} {t('Results')}\r\n    </span>\r\n  );\r\n  React.useEffect(() => {\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n    /*                       Llamamos a la funcion para que se pueda renderizar y llenar la tabla                      */\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n\r\n    const fixedDashboard = process.env.REACT_APP_FIXED_DASHBOARD;\r\n    if (fixedDashboard) {\r\n      // If .env has REACT_APP_FIXED_DASHBOARD, load fixed data\r\n      // LoadData();\r\n    }\r\n    else {\r\n      getDashBoard();\r\n    }\r\n    //LoadData();\r\n  }, []);\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  /*                                                Variables de estados                                                */\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [dataList, setDataLista] = useState([]);\r\n  const [dataOptions, setDataOptions] = useState([]);\r\n\r\n  const [dataHeader, setDataHeader] = useState([]);\r\n  const [dataBody, setDataBody] = useState([]);\r\n  const [ShowDisplayModal, setShowDisplayModal] = useState(false);\r\n  const [processInstanceId, setProcessInstanceId] = useState(null);\r\n  const [isActiveLoading, setisActiveLoading] = useState(false);\r\n  const [svg, setSvg] = useState(null);\r\n\r\n  const [ShowModalTransfer, setShowModalTransfer] = useState(false);\r\n  const [transferData, settransferData] = useState(null);\r\n\r\n  const jsonPrioridad = [\r\n    { value: \"1\", label: \"Muy Urgente\" },\r\n    { value: \"2\", label: \"Urgencia Moderada\" },\r\n    { value: \"3\", label: \"Importante\" },\r\n    { value: \"4\", label: \"Baja Urgencia\" },\r\n    { value: \"5\", label: \" Sin Urgencia\" }]\r\n  const [dataRows, setdataRows] = useState(null);\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  /*                                         Permite cargar los datos a la tabla                                        */\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  async function getDashBoard() {\r\n\r\n    setisActiveLoading(true)\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n    /*   Instanciamos la api para el result de la api y asi enviar al modelo para retornar un json armado para la tabla   */\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n    const api = new ApiServiceBpm();\r\n    //api.getLineSerial(\"asd\",\"asd\");\r\n\r\n    api.getDashBoard()\r\n      .then((data) => {\r\n        setisActiveLoading(false)\r\n        /* ------------------------------------------------------------------------------------------------------------------ */\r\n        /*             Seteamos los valores de las columnas y filas a la variable que va al componene de la tabla             */\r\n        /* ------------------------------------------------------------------------------------------------------------------ */\r\n        var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n\r\n        data.results = [...ordernar.orderByJSON(data.results.filter(x => (+x.priority) > 0), \"priority\", \"asc\"), ...data.results.filter(x => (+x.priority) == 0)]\r\n        console.log(data.results.filter($$ => $$.instanceId == 11430))\r\n        setDataBody([...data.results.map($$ => {\r\n          $$.action = (\r\n            <>\r\n              {$$.action}\r\n\r\n              {\r\n                credentials.canAsign ?\r\n                  <Link to=\"#\" onClick={(e) => { settransferData($$); setShowModalTransfer(true) }}>\r\n                    <i className=\"mdi mdi-transit-transfer mdi-24px\"></i>\r\n                  </Link>\r\n                  : null\r\n              }\r\n\r\n              <Link to=\"#\" onClick={(e) => { setProcessInstanceId($$.instanceId); toggleModalWatchProcess(); }}>\r\n                <i className=\"mdi mdi-eye mdi-24px\"></i>\r\n              </Link>\r\n              <TaskStatus taskStatus={$$.status}\r\n                pathname={$$.pathname}\r\n                data={$$.data}\r\n              />\r\n            </>\r\n          )\r\n          return $$;\r\n        })]);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        setisActiveLoading(false)\r\n        console.error(error);\r\n      });\r\n\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n    /*        Creamos un json con los datos que va a tener la tabla en general para mostrar resultados o paginacion       */\r\n    /* ------------------------------------------------------------------------------------------------------------------ */\r\n    let options = {\r\n      textLabels: {\r\n        body: {\r\n          noMatch: t(\"SorryNoMatchingRecordsWereFfound\"),\r\n          toolTip: t(\"Order\"),\r\n          columnHeaderTooltip: (column) => `${t(\"OrderBy\")} ${column.label}`,\r\n        },\r\n        pagination: {\r\n          next: t(\"Next\"),\r\n          previous: t(\"Prev\"),\r\n          rowsPerPage: t(\"RowsPerPage\"),\r\n          displayRows: t(\"From\"),\r\n          sizePerPage: 5,\r\n          sizePerPageList: [{\r\n            text: '5th', value: 5\r\n          }, {\r\n            text: '10th', value: 10\r\n          }, {\r\n            text: 'All', value: 20\r\n          }]\r\n        },\r\n        toolbar: {\r\n          search: t(\"Search\"),\r\n          downloadCsv: t(\"DownloadCSV\"),\r\n          print: t(\"Print\"),\r\n          viewColumns: t(\"ViewColumns\"),\r\n          filterTable: t(\"FilterTable\"),\r\n        },\r\n        filter: {\r\n          all: t(\"All\"),\r\n          title: t(\"Filter\"),\r\n          reset: t(\"Restore\"),\r\n        },\r\n        viewColumns: {\r\n          title: t(\"ShowColumns\"),\r\n          titleAria: t(\"ShowHideColumns\"),\r\n        },\r\n        selectedRows: {\r\n          text: t(\"SelectedRows\"),\r\n          delete: t(\"Delete\"),\r\n          deleteAria: t(\"DeleteSelectedRows\"),\r\n        },\r\n      },\r\n    };\r\n\r\n\r\n    //Header de la Tabla de Bandeja de Entrada\r\n    const columns = [\r\n      //  { text: \"ID\", dataField: 'uniqueData' },\r\n      { text: t(\"Date\"), dataField: 'date', sort: true },\r\n      { text: t(\"Process\"), dataField: 'instanceId', sort: true },\r\n      { text: t(\"Procedure\"), dataField: 'transactionId', sort: true },\r\n      { text: t(\"AssignedTo\"), dataField: 'asignedTo', sort: true },\r\n      { text: t(\"Client\"), dataField: 'personName', sort: true },\r\n      { text: t(\"FacilityType\"), dataField: 'facilityTypeId', sort: true },\r\n      { text: t(\"Activity\"), dataField: 'activity', sort: true },\r\n      { text: t(\"Sla\"), dataField: 'sla', sort: true },\r\n      { text: t(\"Status\"), dataField: 'status', sort: true },\r\n      { text: t(\"Prioridad\"), dataField: 'priorityName', sort: true },\r\n      { text: \"\", dataField: 'action' }\r\n    ];\r\n    setDataHeader(columns);\r\n    setDataOptions(options);\r\n  }\r\n\r\n\r\n\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n  /*                               Funcion temporal para poder navegar entre las pantallas                              */\r\n  /* ------------------------------------------------------------------------------------------------------------------ */\r\n\r\n  function NewInstance() {\r\n\r\n    //creamos un nueva instancia de proceso en BPM...\r\n    const apiServiceBPM = new ApiServiceBpm();\r\n    apiServiceBPM.startProcess()\r\n      .then((number) => {\r\n\r\n        if (number !== null && number !== undefined && number > 0) {\r\n          //buscamos la tarea que crea el nuevo proceso\r\n          apiServiceBPM.getTasksByPrcess(number)\r\n            .then((result) => {\r\n              if (result !== undefined) {\r\n\r\n                //Inicializamos la nueva tarea en BPM\r\n                apiServiceBPM.startedStatusTask(result.taskId)\r\n                  .then((iniresult) => {\r\n                    if (iniresult !== undefined) {\r\n                      //datos que le enviamos a la pantalla de busqueda y descarte\r\n                      history.push({\r\n                        pathname: '/creditocomercial/busquedadescarte',\r\n                        data: { customerId: \"\", transactionId: \"\", processId: opt.PROCESS_BUSQUEDADESCARTE.toString(), activityId: opt.ACT_NONE.toString(), instanceId: result.instanceId, taskId: result.taskId, taskStatus: result.status },\r\n                      });\r\n                    }\r\n                  })\r\n              }\r\n            })\r\n        }\r\n      })\r\n      .catch((error) => {\r\n\r\n        //Mostrar Mensaje Proceso no instanciado\r\n        console.error('api error: ', error);\r\n      });\r\n  }\r\n\r\n  function toggleModalWatchProcess() {\r\n    setShowDisplayModal(!ShowDisplayModal)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title={t(\"Dashboard\")} breadcrumbItem={t(\"Inbox\")} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n\r\n            <CardTitle className=\"h4\">{t(\"Management\")}</CardTitle>\r\n            <p className=\"card-title-desc\">\r\n              {t(\"Inboxofthecommercialcreditprocess\")}\r\n            </p>\r\n\r\n            <LoadingOverlay active={isActiveLoading} spinner text={t(\"Processinginformation\")}>\r\n              {dataHeader.length > 0 ?\r\n                <ToolkitProvider\r\n                  keyField=\"uniqueData\"\r\n                  data={dataBody}\r\n                  columns={dataHeader}\r\n                  search\r\n                >\r\n                  {\r\n                    props => (\r\n                      <div className=\"\">\r\n\r\n                        <SearchBar className=\"custome-search-field float-end\" delay={1000} placeholder={t(\"Search\")} {...props.searchProps} />\r\n                        <BootstrapTable\r\n                          keyField=\"uniqueData\"\r\n                          bootstrap4\r\n                          bordered={false}\r\n                          striped\r\n                          hover\r\n                          condensed\r\n                          classes='styled-table'\r\n                          style={{ cursor: \"pointer\" }}\r\n                          data={dataBody} columns={dataHeader}\r\n                          {...props.baseProps}\r\n                          pagination={paginationFactory({\r\n                            sizePerPage: 30,\r\n                            sizePerPageList: [30]\r\n                          })}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  }\r\n                </ToolkitProvider>\r\n                : null}\r\n            </LoadingOverlay>\r\n            {showResults && <CreditProposalPage />}\r\n\r\n\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n      {processInstanceId && (<ModalWatchProces isOpen={ShowDisplayModal} toggle={() => { toggleModalWatchProcess() }} svg={svg} processInstanceId={processInstanceId} t={tr} />)}\r\n\r\n      <ModalTransferProcess isOpen={ShowModalTransfer} toggle={() => { setShowModalTransfer(!ShowModalTransfer) }} data={transferData}\r\n        updateData={() => {\r\n          console.log(\"updateData\");\r\n          let timer = setTimeout(() => { getDashBoard(); }, 1000);\r\n          return () => clearTimeout(timer);\r\n        }\r\n        } />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}