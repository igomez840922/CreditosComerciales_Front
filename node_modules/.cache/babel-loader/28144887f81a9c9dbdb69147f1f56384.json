{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\14_AdminDesembolso\\\\Desembolso\\\\Instructivo\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as url from \"../../../../../helpers/url_helper\";\nimport * as OPTs from \"../../../../../helpers/options_helper\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Col, Button, CardFooter, Row } from \"reactstrap\";\nimport { Tabs, Tab } from 'react-bootstrap'; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport DatosGeneralesBL from \"./DatosGenerales2\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport ModalEndProcess from \"../../../../../components/EndProcess/ModalEndProcess\";\nimport { InfoBpmModel } from '../../../../../models/Common/InfoBpmModel';\nimport { LogProcessModel } from '../../../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../../../components/LogProcess/index\"; //Chequear pq hay que hacer dos pantallas para mostrar instructivo\n\n/*\r\n  // Camino Feliz No Require Ajustes... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Requiere Ajustes .. regresa a Formalizacion firma de Contrato\r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [instructiveType, setinstructiveType] = useState(null);\n  const [facilityId, setfacilityId] = useState(null);\n  const [tabsFacility, settabsFacility] = useState(null);\n  const [Facility, setFacility] = useState(null);\n  const [datosUsuario, setdatosUsuario] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(true);\n  const [facilityType, setfacilityType] = useState(null); ///////\n\n  const [locationData, setLocationData] = useState(null); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices()); //const [coreServices, setcoreServices] = useState(new CoreServices());\n\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [messageDlg, setmessageDlg] = useState({\n    msg: \"\",\n    show: false,\n    error: false\n  }); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadUserProspect(locationData.transactionId); // Read Api Service data\n\n    loadData(locationData);\n  }\n\n  function loadUserProspect(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  }\n\n  function loadData(data) {\n    setIsActiveLoading(true);\n    Promise.allSettled([backendServices.consultPrincipalDebtor(data.transactionId), backendServices.consultGeneralDataPropCred(data.transactionId), backendServices.retrieveFacilityType()]).then(data => {\n      const [{\n        value: PrincipalDebtor\n      }, {\n        value: GeneralDataPropCred\n      }, {\n        value: FacilityType\n      }] = data;\n      setdatosUsuario(PrincipalDebtor);\n      backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(resp => {\n        resp = resp.filter($$ => $$.debtor != '  ');\n\n        if (resp.length > 0) {\n          console.log(resp);\n          setFacility(resp);\n          setinstructiveType(resp[0].debtor);\n          setfacilityId(resp[0].facilityId);\n          setfacilityType(resp[0]);\n          settabsFacility(resp.map((items, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            className: \"m-0\",\n            eventKey: index,\n            title: FacilityType.find($$ => $$.id === items.facilityType).description\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)));\n        }\n\n        setIsActiveLoading(false);\n      }).catch(err => {\n        setIsActiveLoading(false);\n      });\n    }).catch(err => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  function handleSelect(e) {\n    let data = Facility.at(e);\n    setfacilityType(data);\n    setinstructiveType(data.debtor);\n    setfacilityId(data.facilityId);\n  }\n\n  async function onSaveProcess(option, values = null) {\n    return new Promise(async (resolve, reject) => {\n      backendServices.saveDisbursementInstructiveByFacility(values).then(resp => {\n        resolve();\n\n        if (resp.status.statusCode == 200) {//setsuccessSave_dlg(true)\n        } else {\n          showMessage({\n            msg: t(\"ErrorSaveMessage\"),\n            show: true,\n            error: true\n          });\n        }\n      }).catch(err => {\n        resolve();\n        showMessage({\n          msg: t(\"ErrorSaveMessage\"),\n          show: true,\n          error: true\n        });\n      });\n    });\n  } ////////////////////\n\n\n  async function checkToContinue() {\n    await guardarDatos();\n    setTimeout(async function () {\n      /*\r\n      if(!formIsValid){\r\n        showMessage({ msg: t(\"PleaseSaveDescicionBeforeContinue\"), error: true, show: true });\r\n        return;\r\n      }\r\n      */\n      saveJBPMProcess(OPTs.PROCESS_ADMINDISBURSEMENT);\n    }, 2000);\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\n  }\n\n  function onSaveProcess(option) {\n    switch (option) {\n      case OPTs.PROCESS_CANCELPROCESS:\n        {\n          break;\n        }\n    }\n\n    saveJBPMProcess(option);\n  }\n\n  async function saveJBPMProcess(option) {\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, locationData.processId, OPTs.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n\n    switch (option) {\n      case OPTs.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(infoBpmModel.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage({\n                msg: t(\"TheProcessCouldNotFinish\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1:\n        {\n          infoBpmModel.processId = locationData.processId;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId.toString()\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage({\n                msg: t(\"Datahasbeensavedsuccessfully\"),\n                error: false,\n                show: true\n              });\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n\n      case OPTs.PROCESS_ADMINDISBURSEMENT:\n        {\n          infoBpmModel.processId = OPTs.PROCESS_ADMINDISBURSEMENT;\n          infoBpmModel.activityId = OPTs.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId.toString()\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage({\n                msg: t(\"Datahasbeensavedsuccessfully\"),\n                error: false,\n                show: true\n              });\n              history.push(url.URL_DASHBOARD);\n            } else {\n              showMessage({\n                msg: t(\"ErrorSaveMessage\"),\n                error: true,\n                show: true\n              });\n            }\n          });\n          break;\n        }\n    }\n  }\n\n  function showMessage(data = null) {\n    if (data !== null) {\n      setmessageDlg(data);\n    } else {\n      setmessageDlg({\n        msg: \"\",\n        show: false,\n        error: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: t(\"CommercialCredit\"),\n        breadcrumbItem: t(\"DisbursementInstructions\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"DisbursementInstructions\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [mainDebtor != null ? mainDebtor.typePerson === \"1\" ? mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2 : mainDebtor.name : \"\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"0\",\n            id: \"uncontrolled-tab-example\",\n            className: \"mb-3\",\n            onSelect: e => {\n              handleSelect(e);\n            },\n            children: tabsFacility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), facilityType && (facilityType === null || facilityType === void 0 ? void 0 : facilityType.facilityType[0]) != 'L' && /*#__PURE__*/_jsxDEV(DatosGenerales, {\n            facilityId: facilityId,\n            instructiveType: instructiveType,\n            onSaveProcess: onSaveData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), facilityType && (facilityType === null || facilityType === void 0 ? void 0 : facilityType.facilityType[0]) == 'L' && /*#__PURE__*/_jsxDEV(DatosGeneralesBL, {\n            facilityId: facilityId,\n            instructiveType: instructiveType,\n            onSaveProcess: onSaveData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              style: {\n                textAlign: \"left\",\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"danger\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: () => {\n                  onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-cancel mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 142\n                }, this), \" \", t(\"Rejected\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              style: {\n                textAlign: \"right\",\n                marginTop: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: () => {\n                  onSaveProcess(OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-content-save-outline mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 152\n                }, this), \" \", t(\"Exit\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: () => {\n                  checkToContinue();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-check mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 57\n                }, this), \" \", t(\"Continue\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n        logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1, OPTs.ACT_NONE)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n        onSaveEndProcess: onSaveEndProcess,\n        isOpen: displayModalEndProcess,\n        toggle: () => {\n          showModalEndProcess(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), messageDlg && messageDlg.show ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        type: messageDlg.error ? \"error\" : \"success\",\n        title: messageDlg.error ? t(\"Error\") : t(\"Message\"),\n        onConfirm: () => {\n          showMessage();\n        },\n        children: messageDlg.msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"zEazsPcgonvBYu7vpi5XeuyjyLs=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {// selectedId: PropTypes.any,\n  // onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/14_AdminDesembolso/Desembolso/Instructivo/index.js"],"names":["React","useState","PropTypes","useHistory","useLocation","url","OPTs","Link","Card","CardHeader","CardBody","Col","Button","CardFooter","Row","Tabs","Tab","Breadcrumbs","withTranslation","DatosGenerales","DatosGeneralesBL","SweetAlert","BackendServices","CoreServices","BpmServices","AvForm","AvField","useTranslation","LoadingOverlay","ModalEndProcess","InfoBpmModel","LogProcessModel","LogProcess","PantallaBusqueda","props","t","i18n","history","location","instructiveType","setinstructiveType","facilityId","setfacilityId","tabsFacility","settabsFacility","Facility","setFacility","datosUsuario","setdatosUsuario","isActiveLoading","setIsActiveLoading","facilityType","setfacilityType","locationData","setLocationData","backendServices","setbackendServices","bpmServices","setbpmServices","mainDebtor","setmainDebtor","displayModalEndProcess","setdisplayModalEndProcess","messageDlg","setmessageDlg","msg","show","error","useEffect","data","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","loadUserProspect","loadData","consultPrincipalDebtor","Promise","allSettled","consultGeneralDataPropCred","retrieveFacilityType","value","PrincipalDebtor","GeneralDataPropCred","FacilityType","consultarFacilidades","requestId","resp","filter","$$","debtor","console","log","map","items","index","find","id","description","catch","err","handleSelect","e","at","onSaveProcess","option","values","resolve","reject","saveDisbursementInstructiveByFacility","status","statusCode","showMessage","checkToContinue","guardarDatos","setTimeout","saveJBPMProcess","PROCESS_ADMINDISBURSEMENT","showModalEndProcess","onSaveEndProcess","PROCESS_CANCELPROCESS","maindebtor","infoBpmModel","instanceId","processId","ACT_NONE","personId","personName","name","name2","lastName","lastName2","abortProcess","PROCESS_INSTRUCTIVEDISBURSEMENT1","activityId","PROCESS_SIGNCONTRACT","toString","updatevariables","textAlign","typePerson","onSaveData","marginTop","margin","propTypes"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport * as OPTs from \"../../../../../helpers/options_helper\";\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,CardHeader,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n  Row,\r\n} from \"reactstrap\"\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport DatosGeneralesBL from \"./DatosGenerales2\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport { BackendServices, CoreServices, BpmServices} from \"../../../../../services\";\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport LoadingOverlay from \"react-loading-overlay\"\r\n\r\nimport ModalEndProcess from \"../../../../../components/EndProcess/ModalEndProcess\"\r\nimport { InfoBpmModel } from '../../../../../models/Common/InfoBpmModel';\r\nimport { LogProcessModel } from '../../../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../../../components/LogProcess/index\";\r\n\r\n//Chequear pq hay que hacer dos pantallas para mostrar instructivo\r\n\r\n/*\r\n  // Camino Feliz No Require Ajustes... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Requiere Ajustes .. regresa a Formalizacion firma de Contrato\r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\r\n\r\nconst PantallaBusqueda = props => {\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  \r\n  const [instructiveType, setinstructiveType] = useState(null);\r\n  const [facilityId, setfacilityId] = useState(null);\r\n  const [tabsFacility, settabsFacility] = useState(null);\r\n  const [Facility, setFacility] = useState(null);\r\n  const [datosUsuario, setdatosUsuario] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(true);\r\n  const [facilityType, setfacilityType] = useState(null);\r\n\r\n  ///////\r\n  const [locationData, setLocationData] = useState(null);\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  //const [coreServices, setcoreServices] = useState(new CoreServices());\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [messageDlg, setmessageDlg] = useState({ msg: \"\", show: false, error: false });\r\n\r\n    //On Mounting (componentDidMount)\r\n    React.useEffect(() => {\r\n      if (location.data !== null && location.data !== undefined) {\r\n        if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n        else {\r\n          sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n          setLocationData(location.data);\r\n          fetchData(location.data);\r\n        }\r\n      }\r\n      else {\r\n        //chequeamos si tenemos guardado en session\r\n        var result = sessionStorage.getItem('locationData');\r\n        if (result !== undefined && result !== null) {\r\n          result = JSON.parse(result);\r\n          setLocationData(result);\r\n          fetchData(result);\r\n        }\r\n      }\r\n    }, []);\r\n    //Caraga Inicial de datos\r\n    function fetchData(locationData) {\r\n  \r\n      //chequear si la tarea no ha sido iniciada\r\n      bpmServices.checkAndStartTask(locationData)\r\n        .then((iniresult) => {\r\n          if (iniresult === false) {\r\n            history.push(url.URL_DASHBOARD);\r\n          }\r\n        })\r\n  \r\n      loadUserProspect(locationData.transactionId)\r\n      // Read Api Service data\r\n      loadData(locationData)\r\n    }\r\n    function loadUserProspect(transactionId) {\r\n      // consultarDeudorPrincipal\r\n      backendServices.consultPrincipalDebtor(transactionId)\r\n        .then((data) => {\r\n          if (data !== undefined) {\r\n            setmainDebtor(data);\r\n          }\r\n        });\r\n    }\r\n    \r\n\r\n  function loadData(data) {\r\n    setIsActiveLoading(true);\r\n    Promise.allSettled([\r\n      backendServices.consultPrincipalDebtor(data.transactionId),\r\n      backendServices.consultGeneralDataPropCred(data.transactionId),\r\n      backendServices.retrieveFacilityType()\r\n    ]).then(data => {\r\n      const [{ value: PrincipalDebtor }, { value: GeneralDataPropCred }, { value: FacilityType }] = data;\r\n\r\n      setdatosUsuario(PrincipalDebtor)\r\n\r\n      backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(resp => {\r\n        resp = resp.filter($$ => $$.debtor != '  ');\r\n        if (resp.length > 0) {\r\n          console.log(resp);\r\n          setFacility(resp);\r\n          setinstructiveType(resp[0].debtor)\r\n          setfacilityId(resp[0].facilityId)\r\n          setfacilityType(resp[0]);\r\n          settabsFacility(resp.map((items, index) => (\r\n            <Tab className=\"m-0\" key={index} eventKey={index} title={FacilityType.find($$ => $$.id === items.facilityType).description}></Tab>\r\n          )));\r\n        }\r\n        setIsActiveLoading(false)\r\n      }).catch(err => {\r\n        setIsActiveLoading(false)\r\n      });\r\n\r\n    }).catch(err => {\r\n      setIsActiveLoading(false)\r\n    })\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    let data = Facility.at(e);\r\n    setfacilityType(data);\r\n    setinstructiveType(data.debtor)\r\n    setfacilityId(data.facilityId)\r\n  }\r\n\r\n  async function onSaveProcess(option, values = null) {\r\n    return new Promise(async (resolve, reject) => {\r\n      backendServices.saveDisbursementInstructiveByFacility(values).then(resp => {\r\n        resolve();\r\n        if (resp.status.statusCode == 200) {\r\n          //setsuccessSave_dlg(true)\r\n        } else {\r\n         showMessage({ msg: t(\"ErrorSaveMessage\"), show: true, error: true })  \r\n        }\r\n      }).catch(err => {\r\n        resolve();\r\n        showMessage({ msg: t(\"ErrorSaveMessage\"), show: true, error: true }) \r\n      });\r\n    })\r\n  }\r\n\r\n  ////////////////////\r\n  async function checkToContinue() {\r\n\r\n    await guardarDatos();\r\n\r\n    setTimeout(async function () {\r\n      /*\r\n      if(!formIsValid){\r\n        showMessage({ msg: t(\"PleaseSaveDescicionBeforeContinue\"), error: true, show: true });\r\n        return;\r\n      }\r\n      */\r\n      saveJBPMProcess(OPTs.PROCESS_ADMINDISBURSEMENT);\r\n    }, 2000)\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(OPTs.PROCESS_CANCELPROCESS);\r\n  }\r\n  function onSaveProcess(option) {\r\n\r\n    switch (option) {\r\n      case OPTs.PROCESS_CANCELPROCESS: {\r\n        break;\r\n      }\r\n    }\r\n    saveJBPMProcess(option);\r\n  }\r\n  async function saveJBPMProcess(option) {\r\n\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n    var infoBpmModel = new InfoBpmModel( locationData.instanceId, locationData.transactionId,\r\n      locationData.processId, OPTs.ACT_NONE,\r\n      maindebtor?.personId\r\n    );\r\n    infoBpmModel.personName = maindebtor !== undefined ? (maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2) : \"\";\r\n\r\n    switch (option) {\r\n      case OPTs.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(infoBpmModel.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage({ msg: t(\"TheProcessCouldNotFinish\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1: {\r\n        infoBpmModel.processId = locationData.processId;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId.toString(),\r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage({ msg: t(\"Datahasbeensavedsuccessfully\"), error: false, show: true });\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.PROCESS_ADMINDISBURSEMENT: {\r\n        infoBpmModel.processId = OPTs.PROCESS_ADMINDISBURSEMENT;\r\n        infoBpmModel.activityId = OPTs.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": OPTs.PROCESS_SIGNCONTRACT.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId.toString(),\r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage({ msg: t(\"Datahasbeensavedsuccessfully\"), error: false, show: true });\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              showMessage({ msg: t(\"ErrorSaveMessage\"), error: true, show: true });\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      \r\n    }\r\n  }\r\n  function showMessage(data = null) {\r\n    if (data !== null) {\r\n      setmessageDlg(data)\r\n    }\r\n    else {\r\n      setmessageDlg({ msg: \"\", show: false, error: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"DisbursementInstructions\")} />\r\n        <Card>\r\n\r\n        <CardHeader>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h4 className=\"card-title\">{t(\"DisbursementInstructions\")}</h4>\r\n                  <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Row>\r\n                    <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                      <h5 className=\"card-title\">{mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? (mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2) : (mainDebtor.name)) : \"\"} </h5>\r\n                    </Col>\r\n                    <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                      <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </CardHeader>\r\n        \r\n\r\n          <CardBody>\r\n\r\n            <Tabs defaultActiveKey=\"0\" id=\"uncontrolled-tab-example\" className=\"mb-3\" onSelect={(e) => { handleSelect(e) }}>\r\n              {tabsFacility}\r\n            </Tabs>\r\n\r\n            {facilityType && facilityType?.facilityType[0] != 'L' &&\r\n              <DatosGenerales\r\n                facilityId={facilityId}\r\n                instructiveType={instructiveType}\r\n                onSaveProcess={onSaveData}\r\n              />}\r\n            {facilityType && facilityType?.facilityType[0] == 'L' &&\r\n              <DatosGeneralesBL\r\n                facilityId={facilityId}\r\n                instructiveType={instructiveType}\r\n                onSaveProcess={onSaveData}\r\n              />}\r\n\r\n          </CardBody>\r\n\r\n          <CardFooter>\r\n            <Row>\r\n              <Col md={6} style={{ textAlign: \"left\", marginTop: \"10px\" }}>\r\n                <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(OPTs.PROCESS_CANCELPROCESS) }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Rejected\")}</Button>\r\n              </Col>\r\n              <Col md={6} style={{ textAlign: \"right\", marginTop: \"10px\" }}>\r\n              <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1) }}><i className=\"mdi mdi-content-save-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n                <Button color=\"success\" type=\"button\" style={{ margin: '5px' }}\r\n                  onClick={() => { checkToContinue() }}><i className=\"mdi mdi-check mid-12px\"></i> {t(\"Continue\")}</Button>\r\n              </Col>\r\n            </Row>\r\n          </CardFooter>\r\n\r\n        </Card>\r\n\r\n        {locationData ?\r\n          <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", OPTs.PROCESS_INSTRUCTIVEDISBURSEMENT1, OPTs.ACT_NONE)} />\r\n          : null}\r\n\r\n        <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n\r\n        {\r\n          messageDlg && messageDlg.show ? (\r\n            <SweetAlert\r\n              type={messageDlg.error ? \"error\" : \"success\"}\r\n              title={messageDlg.error ? t(\"Error\") : t(\"Message\")}\r\n              onConfirm={() => { showMessage(); }}>\r\n              {messageDlg.msg}\r\n            </SweetAlert>\r\n          ) : null\r\n        }\r\n\r\n        \r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  // selectedId: PropTypes.any,\r\n  // onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}