{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as opt from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport moment from \"moment\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { setDefaults, useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"./ClientForm\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\nimport SessionHelper from \"../../../helpers/SessionHelper\";\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../components/LogProcess/index\";\nimport { addDays } from \"@fullcalendar/react\";\nimport LocalStorageHelper from \"../../../helpers/LocalStorageHelper\";\nimport ModalSearchClient from \"./ModalSearchClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false);\n  const [dataClientList, setdataClientList] = useState([]);\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  const [showModalSearchClient, setshowModalSearchClient] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    var data = location.data !== undefined ? location.data : sessionHelper.get(opt.VARNAME_LOCATIONDATA);\n\n    if (data !== null && data !== undefined) {\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\n        data.transactionId = 0;\n        checkAndCreateProcedure(data);\n      } else {\n        setLocationData(data);\n        fetchData(data);\n      }\n    } else {\n      history.push(url.URL_DASHBOARD);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    }); //checkAndCreateProcedure(locationData);\n\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\n\n\n  function checkAndCreateProcedure(locationData) {\n    var _credentials$usr;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\", \"0\").then(data => {\n      if (data !== null && data !== undefined) {\n        locationData.transactionId = data.transactId;\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\n        setLocationData(locationData);\n        fetchData(locationData);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n        /*if (data.length <= 0) {\r\n          setselectedClient(new PersonModel());\r\n          onOpenNewClient();\r\n        }*/\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    dataClient[\"isNew\"] = false;\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    if (idType !== undefined && idType !== null && idType.length > 0) {\n      return identificationTypeList.find(x => x.value === idType);\n    }\n\n    return \"\";\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.phone = dataClientT24.phoneNumber;\n    clientPerson.email = dataClientT24.email;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    clientPerson.isNew = false;\n    onEditClient(clientPerson);\n  }\n\n  function showSearchClient(show = true) {\n    setshowModalSearchClient(show);\n  } //Chequear si el deudor principal tiene accionistas y agregarlos automaticamente\n\n\n  async function checkDebtorShareholders() {\n    setIsActiveLoading(true);\n\n    try {\n      var lDdebtors = await backendServices.consultarDeudores(locationData.transactionId);\n\n      if (lDdebtors === null || lDdebtors === undefined || lDdebtors.length <= 0) {\n        showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n        return;\n      }\n\n      for (let p = 0; p < lDdebtors.length; p++) {\n        var maindebtor = lDdebtors[p];\n      } //buscamos a los accionistas de este deudor\n\n\n      var data = await coreServices.getPartiesStaff(maindebtor.customerNumberT24);\n\n      if (data !== null && data !== undefined && data.results.length > 0) {\n        data = data.results;\n\n        for (let i = 0; i < data.length; i++) {\n          try {\n            var _data$i$Identificatio, _data$i$Identificatio2, _data$i$Phone$0$Phone, _data$i$Phone$;\n\n            console.log(\"getPartiesStaff\" + i, data[i]);\n            var clientPerson = new PersonModel();\n            clientPerson.transactId = locationData.transactionId;\n            clientPerson.personType = \"1\"; //tipo de Persona\n\n            clientPerson.idType = \"CED\"; //tipo de Identificacion\n\n            clientPerson.clientDocumentId = data[i].Identification !== undefined ? (_data$i$Identificatio = (_data$i$Identificatio2 = data[i].Identification[0]) === null || _data$i$Identificatio2 === void 0 ? void 0 : _data$i$Identificatio2.Ident.IssuedIdentValue) !== null && _data$i$Identificatio !== void 0 ? _data$i$Identificatio : \"\" : \"\"; //No. de identificacion\n\n            clientPerson.customerNumberT24 = \"\"; //No. de Cliente T24\n\n            clientPerson.name = data[i].PersonName.FirstName !== undefined ? data[i].PersonName.FirstName : \"\"; //1er Nombre\n\n            clientPerson.secondName = data[i].PersonName.LastName !== undefined ? data[i].PersonName.LastName : \"\"; //2do Nombre\n\n            clientPerson.lastName = data[i].PersonName.SecondLastName !== undefined ? data[i].PersonName.SecondLastName : \"\"; //1er Apellido\n\n            clientPerson.secondSurname = data[i].PersonName.SecondName !== undefined ? data[i].PersonName.SecondName : \"\"; //2do Apellido\n\n            clientPerson.nationality = data[i].Nationality !== undefined ? data[i].Nationality : \"\"; //Nacionalidad\n\n            clientPerson.birthDate = data[i].BirthDt !== undefined ? moment(data[i].BirthDt).format(\"YYYY-MM-DD\") : moment().format(\"YYYY-MM-DD\"); //Fecha nacimiento \"1998-08-17\",\n\n            clientPerson.address = \"\"; //direccion\n\n            clientPerson.phone = data[i].Phone !== undefined ? (_data$i$Phone$0$Phone = (_data$i$Phone$ = data[i].Phone[0]) === null || _data$i$Phone$ === void 0 ? void 0 : _data$i$Phone$.PhoneNum) !== null && _data$i$Phone$0$Phone !== void 0 ? _data$i$Phone$0$Phone : \"\" : \"\"; //Telefono,\n            //clientPerson.email=data[i].Phone[0]?.PhoneNum??\"\";//Email\n\n            clientPerson.countryOfResidence = \"PA\"; //pais de residencia\n\n            clientPerson.comments = \"\";\n            clientPerson.roles = [{\n              roleId: 'ACC'\n            }];\n            clientPerson.blacklist = [{\n              blackList: false,\n              comment: \"\",\n              date: moment().format(\"YYYY-MM-DD\"),\n              personId: 0,\n              roleId: \"ACC\",\n              status: true,\n              transactId: locationData.transactionId\n            }];\n            await backendServices.nuevoOrquestadoListaPersonaSolicitud(clientPerson); //clientPerson.isNew =true;\n            //BirthDt: data[\"BirthDt\"],\n            //PersonName:data[\"PersonName\"],\n            //Nationality: data[\"PartyData\"][\"Nationality\"],\n            //Address: data[\"PartyData\"][\"Contact\"][\"Locator\"][\"PostAddr\"],\n            //Phone: data[\"PartyData\"][\"Contact\"][\"Locator\"][\"Phone\"],\n            //Identification: data[\"PartyData\"][\"IssuedIdent\"],\n          } catch (err) {\n            console.error(err);\n          }\n        }\n\n        getProcessClients(locationData.transactionId);\n      } else {\n        showMessage(t(\"NoResults\"), true);\n        return;\n      }\n    } catch (err) {} finally {\n      setIsActiveLoading(false);\n    }\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    var person = null;\n\n    for (var i = 0; i < dataClientList.length; i++) {\n      console.log(dataClientList[i]);\n\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\n        person = dataClientList[i];\n        break;\n      }\n    }\n\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\n      option = opt.PROCESS_CUMPLIMIENTO;\n    }\n\n    switch (option) {\n      case opt.PROCESS_LISTAEXCLUSION:\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          //chequear si existe algun deudor para poder continuar\n          backendServices.consultPrincipalDebtor(locationData.transactionId).then(data => {\n            if (data !== null && data !== undefined) {\n              saveJBPMProcess(option);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n            }\n          }).catch(error => {});\n          break;\n        }\n\n      default:\n        {\n          saveJBPMProcess(option);\n          break;\n        }\n    }\n  }\n\n  async function saveJBPMProcess(option) {\n    if (locationData.instanceId === undefined || locationData.instanceId.length <= 0) {\n      var result = await bpmServices.createNewInstance();\n\n      if (result !== undefined) {\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\n        locationData.instanceId = result.instanceId;\n        locationData.taskId = result.taskId;\n        locationData.taskStatus = result.status;\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData); //Actualizamos Variables\n\n        var values = {\n          \"transactionId\": locationData.transactionId\n        };\n        await bpmServices.updatevariables(locationData.instanceId, values);\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\n        return;\n      }\n    }\n\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n    console.log(\"infoBpmModel\", infoBpmModel, maindebtor);\n\n    switch (option) {\n      case opt.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_BUSQUEDADESCARTE:\n        {\n          infoBpmModel.processId = opt.PROCESS_BUSQUEDADESCARTE;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"no\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"PreRequest\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(ClientForm, {\n                transactId: locationData.transactionId,\n                clientSelected: selectedClient,\n                onCancel: () => {\n                  onOpenNewClient(false);\n                  getProcessClients(locationData.transactionId);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-sub-title\",\n                    children: t(\"ParticipantsList\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: 6,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-sub-title\",\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: \"#\",\n                      onClick: () => {\n                        showSearchClient();\n                      },\n                      title: t(\"Search\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-account-search-outline mdi-24px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 97\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 25\n                    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                      to: \"#\",\n                      onClick: () => {\n                        setselectedClient(undefined);\n                        onOpenNewClient();\n                      },\n                      title: t(\"AddNew\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-account-plus-outline mdi-24px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 487,\n                        columnNumber: 126\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      className: \"table mb-0\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        className: \"table-light\",\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"PersonType\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 498,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"FullName\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 499,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"IdentificationType\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 500,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"IdentificationNumber\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 501,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Roles\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 502,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"WatchList\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 503,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 504,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 497,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 496,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: dataClientList.length > 0 ? dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getPersnoType(Number(item.personType)).label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 512,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 513,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getIdentificationType(item.idType).label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 514,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.clientDocumentId\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 515,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 516,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.blacklist !== undefined && item.blacklist.length > 0 ? item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\" : \"No Aplica\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 522,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Link, {\n                              to: \"#\",\n                              onClick: e => {\n                                onEditClient(item);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"mdi mdi-border-color mdi-24px\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 527,\n                                columnNumber: 90\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 527,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Link, {\n                              to: \"#\",\n                              onClick: e => {\n                                onDeleteClient(item);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"mdi mdi-trash-can-outline mdi-24px\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 528,\n                                columnNumber: 92\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 528,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 526,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 511,\n                          columnNumber: 33\n                        }, this)) : /*#__PURE__*/_jsxDEV(\"td\", {\n                          colspan: \"7\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"alert alert-info\",\n                            style: {\n                              textAlign: \"center\"\n                            },\n                            children: t(\"NoData\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 532,\n                            columnNumber: 47\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 532,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 507,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CardFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"3\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    showModalEndProcess();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 126\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"9\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    checkDebtorShareholders();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-account-plus-outline mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 131\n                  }, this), \" \", t(\"AddShareholders\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    onSaveProcess(opt.PROCESS_LISTAEXCLUSION);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 147\n                  }, this), \" \", t(\"Advance\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 563,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), showModalSearchClient ? /*#__PURE__*/_jsxDEV(ModalSearchClient, {\n      isOpen: showSearchClient,\n      toggle: () => {\n        showSearchClient(!showModalSearchClient);\n      },\n      onClientSelect: data => {\n        loadClientDataT24(data);\n        showSearchClient(false);\n      },\n      onNewClientSelect: () => {\n        setselectedClient(undefined);\n        onOpenNewClient();\n        showSearchClient(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 444,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreRequest, \"VOc/NwIB58P3wUG/4RYA18U/qqg=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index2.js"],"names":["React","useState","PropTypes","useLocation","useHistory","opt","url","moment","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","Link","Breadcrumbs","setDefaults","useTranslation","LoadingOverlay","ClientForm","ModalEndProcess","BackendServices","CoreServices","BpmServices","PersonModel","InfoBpmModel","SearchClientCore","SessionHelper","LogProcessModel","LogProcess","addDays","LocalStorageHelper","ModalSearchClient","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","setbackendServices","coreServices","setcoreServices","bpmServices","setbpmServices","sessionHelper","setsessionHelper","localStorageHelper","setlocalStorageHelper","showModalSearchClient","setshowModalSearchClient","useEffect","data","get","VARNAME_LOCATIONDATA","transactionId","length","checkAndCreateProcedure","fetchData","push","URL_DASHBOARD","checkAndStartTask","then","iniresult","loadIdentificationTypes","loadPersonTypes","getProcessClients","credentials","VARNAME_USRCREDENTIAL","nuevoTramite","instanceId","PROCESS_BUSQUEDADESCARTE","usr","transactId","save","catch","error","consultarCatalogoTipoIdentificacion","json","i","label","value","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","getPersnoType","pType","find","x","getIdentificationType","idType","loadClientDataT24","dataClientT24","clientPerson","customerNumberT24","id","clientDocumentId","idnumber","name","firstname","secondName","secondname","lastName","lastname","secondSurname","secondlastname","phone","phoneNumber","email","personType","Number","partyType","idtype","isNew","showSearchClient","checkDebtorShareholders","lDdebtors","consultarDeudores","showMessage","p","maindebtor","getPartiesStaff","results","console","log","Identification","Ident","IssuedIdentValue","PersonName","FirstName","LastName","SecondLastName","SecondName","nationality","Nationality","birthDate","BirthDt","format","address","Phone","PhoneNum","countryOfResidence","comments","roles","roleId","blacklist","blackList","comment","date","personId","status","nuevoOrquestadoListaPersonaSolicitud","err","message","showModalEndProcess","onSaveProcess","option","person","PROCESS_LISTAEXCLUSION","PROCESS_CUMPLIMIENTO","consultPrincipalDebtor","saveJBPMProcess","result","createNewInstance","taskId","taskStatus","values","updatevariables","infoBpmModel","ACT_NONE","personName","name2","lastName2","PROCESS_CANCELPROCESS","abortProcess","processId","activityId","JSON","stringify","toString","completedStatusTask","onSaveEndProcess","textAlign","map","item","index","rol","roleDescription","e","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as opt from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport moment from \"moment\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { setDefaults, useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"./ClientForm\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { BackendServices, CoreServices, BpmServices} from \"../../../services\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\r\n\r\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\r\nimport SessionHelper from \"../../../helpers/SessionHelper\";\r\n\r\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../components/LogProcess/index\";\r\nimport { addDays } from \"@fullcalendar/react\";\r\n\r\nimport LocalStorageHelper from \"../../../helpers/LocalStorageHelper\";\r\nimport ModalSearchClient from \"./ModalSearchClient\"\r\n\r\nconst PreRequest = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [coreServices,setcoreServices] = useState(new CoreServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\r\n\r\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n  const [showModalSearchClient, setshowModalSearchClient] = useState(false);\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    var data = location.data !== undefined ? location.data : sessionHelper.get(opt.VARNAME_LOCATIONDATA);\r\n    if (data !== null && data !== undefined) {\r\n      if (data.transactionId === undefined || data.transactionId.length <= 0) {\r\n        data.transactionId = 0;\r\n        checkAndCreateProcedure(data);\r\n      }\r\n      else {\r\n        setLocationData(data);\r\n        fetchData(data);\r\n      }\r\n    }\r\n    else {\r\n      history.push(url.URL_DASHBOARD);\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    //checkAndCreateProcedure(locationData);\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n  }\r\n  //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\r\n  function checkAndCreateProcedure(locationData) {\r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, opt.PROCESS_BUSQUEDADESCARTE, opt.PROCESS_BUSQUEDADESCARTE, credentials?.usr ?? \"admin\", \"0\")\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          locationData.transactionId = data.transactId;\r\n          sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\r\n          setLocationData(locationData);\r\n          fetchData(locationData);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          /*if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }*/\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    dataClient[\"isNew\"] = false;\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    if (idType !== undefined && idType !== null && idType.length > 0) {\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n    return \"\";\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    var clientPerson = new PersonModel();\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n    clientPerson.phone=dataClientT24.phoneNumber;\r\n    clientPerson.email=dataClientT24.email;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    clientPerson.isNew=false;\r\n    onEditClient(clientPerson);\r\n  }\r\n\r\n  function showSearchClient(show = true) {\r\n    setshowModalSearchClient(show);\r\n  }\r\n\r\n  //Chequear si el deudor principal tiene accionistas y agregarlos automaticamente\r\n  async function checkDebtorShareholders(){\r\n    setIsActiveLoading(true)    \r\n    try{\r\n    var lDdebtors = await backendServices.consultarDeudores(locationData.transactionId)\r\n    if(lDdebtors===null || lDdebtors===undefined || lDdebtors.length<=0){\r\n      showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n      return;\r\n    }\r\n\r\n    for (let p = 0; p < lDdebtors.length; p++){\r\n      var maindebtor = lDdebtors[p];\r\n      \r\n    }\r\n    //buscamos a los accionistas de este deudor\r\n    var data = await coreServices.getPartiesStaff(maindebtor.customerNumberT24);\r\n    if (data !== null && data !== undefined && data.results.length>0) {          \r\n      data=data.results;      \r\n      for (let i = 0; i < data.length; i++) {\r\n        try{\r\n          console.log(\"getPartiesStaff\" + i,data[i]);\r\n        var clientPerson = new PersonModel();\r\n        clientPerson.transactId=locationData.transactionId;\r\n        clientPerson.personType=\"1\"; //tipo de Persona\r\n        clientPerson.idType=\"CED\"; //tipo de Identificacion\r\n        clientPerson.clientDocumentId=data[i].Identification!==undefined? data[i].Identification[0]?.Ident.IssuedIdentValue??\"\":\"\";//No. de identificacion\r\n        clientPerson.customerNumberT24=\"\"; //No. de Cliente T24\r\n        clientPerson.name=data[i].PersonName.FirstName!==undefined?data[i].PersonName.FirstName:\"\";//1er Nombre\r\n        clientPerson.secondName=data[i].PersonName.LastName!==undefined?data[i].PersonName.LastName:\"\";//2do Nombre\r\n        clientPerson.lastName=data[i].PersonName.SecondLastName!==undefined?data[i].PersonName.SecondLastName:\"\"; //1er Apellido\r\n        clientPerson.secondSurname=data[i].PersonName.SecondName!==undefined?data[i].PersonName.SecondName:\"\";//2do Apellido\r\n        clientPerson.nationality=data[i].Nationality!==undefined?data[i].Nationality:\"\";//Nacionalidad\r\n        clientPerson.birthDate= data[i].BirthDt!==undefined? moment(data[i].BirthDt).format(\"YYYY-MM-DD\"):moment().format(\"YYYY-MM-DD\");//Fecha nacimiento \"1998-08-17\",\r\n        clientPerson.address=\"\"; //direccion\r\n        clientPerson.phone= data[i].Phone!==undefined? data[i].Phone[0]?.PhoneNum??\"\":\"\"; //Telefono,\r\n        //clientPerson.email=data[i].Phone[0]?.PhoneNum??\"\";//Email\r\n        clientPerson.countryOfResidence=\"PA\";//pais de residencia\r\n        clientPerson.comments=\"\";\r\n        clientPerson.roles =[{roleId: 'ACC'}];\r\n        clientPerson.blacklist =[{blackList: false,comment: \"\",date:moment().format(\"YYYY-MM-DD\"),\r\n        personId: 0,roleId: \"ACC\",status: true,transactId: locationData.transactionId}];              \r\n\r\n        await backendServices.nuevoOrquestadoListaPersonaSolicitud(clientPerson);\r\n        //clientPerson.isNew =true;\r\n        //BirthDt: data[\"BirthDt\"],\r\n             //PersonName:data[\"PersonName\"],\r\n             //Nationality: data[\"PartyData\"][\"Nationality\"],\r\n             //Address: data[\"PartyData\"][\"Contact\"][\"Locator\"][\"PostAddr\"],\r\n             //Phone: data[\"PartyData\"][\"Contact\"][\"Locator\"][\"Phone\"],\r\n             //Identification: data[\"PartyData\"][\"IssuedIdent\"],\r\n        }\r\n        catch(err){console.error(err)}          \r\n      }\r\n      getProcessClients(locationData.transactionId)\r\n    }\r\n    else{\r\n      showMessage(t(\"NoResults\"), true);\r\n      return;\r\n    }\r\n  }\r\n  catch(err){}\r\n  finally{setIsActiveLoading(false)\r\n  }\r\n  }\r\n\r\n\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n\r\n    var person = null;\r\n    for (var i = 0; i < dataClientList.length; i++) {\r\n      console.log(dataClientList[i])\r\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\r\n        person = dataClientList[i];\r\n        break;\r\n      }\r\n    }\r\n    if (person !== null && option === opt.PROCESS_LISTAEXCLUSION) {\r\n      option = opt.PROCESS_CUMPLIMIENTO;\r\n    }\r\n    switch (option) {\r\n      case opt.PROCESS_LISTAEXCLUSION:\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        //chequear si existe algun deudor para poder continuar\r\n        backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              saveJBPMProcess(option);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n            }\r\n          }).catch((error) => { });\r\n        break;\r\n      }\r\n      default: {\r\n        saveJBPMProcess(option);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async function saveJBPMProcess(option) {\r\n\r\n    if (locationData.instanceId === undefined || locationData.instanceId.length <= 0) {\r\n      var result = await bpmServices.createNewInstance();\r\n      if (result !== undefined) {\r\n\r\n        //instanceId:result.instanceId,taskId:result.taskId,taskStatus:result.status\r\n        locationData.instanceId = result.instanceId;\r\n        locationData.taskId = result.taskId;\r\n        locationData.taskStatus = result.status;\r\n\r\n        sessionHelper.save(opt.VARNAME_LOCATIONDATA, locationData);\r\n\r\n        //Actualizamos Variables\r\n        var values = { \"transactionId\": locationData.transactionId };\r\n        await bpmServices.updatevariables(locationData.instanceId, values);\r\n      }\r\n      else {\r\n        //Mensaje ERROR\r\n        showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n        return;\r\n      }\r\n    }\r\n\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId,\r\n      opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE, maindebtor?.personId);\r\n    infoBpmModel.personName = maindebtor !== undefined ? (maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2) : \"\";\r\n\r\n    console.log(\"infoBpmModel\", infoBpmModel, maindebtor);\r\n\r\n    switch (option) {\r\n      case opt.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_BUSQUEDADESCARTE: {\r\n\r\n        infoBpmModel.processId = opt.PROCESS_BUSQUEDADESCARTE;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n\r\n        infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_LISTAEXCLUSION: {\r\n\r\n        infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\r\n        infoBpmModel.activityId = opt.ACT_NONE;\r\n\r\n        var values = {\r\n          \"info\": JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"no\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"PreRequest\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <Card>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col md={6}>\r\n                <h4 className=\"card-title\">{t(\"PreRequest\")}</h4>\r\n                <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n              </Col>\r\n              <Col md={6}>\r\n                <Row>\r\n                  <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                    <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n\r\n            {openNewClient ?\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n                </Col>\r\n              </Row>\r\n              :\r\n              <React.Fragment>\r\n                {/*<Row>\r\n                  <Col md=\"12\">\r\n                    <SearchClientCore onClientSelect={loadClientDataT24} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient() }}/>      \r\n                  </Col>\r\n            </Row>*/}\r\n                <Card>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <h5 className=\"card-sub-title\">{t(\"ParticipantsList\")}</h5>\r\n                    </Col>\r\n                    <Col md={6} style={{ textAlign: \"right\", }}>\r\n                      <h5 className=\"card-sub-title\">\r\n                        <Link to=\"#\" onClick={() => { showSearchClient() }} title={t(\"Search\")}><i className=\"mdi mdi-account-search-outline mdi-24px\"></i>{\" \"}</Link>\r\n                        &nbsp;&nbsp;\r\n                        <Link to=\"#\" onClick={() => { setselectedClient(undefined); onOpenNewClient() }} title={t(\"AddNew\")}><i className=\"mdi mdi-account-plus-outline mdi-24px\"></i>{\" \"}</Link>\r\n                      </h5>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <div className=\"table-responsive\">\r\n                        <Table className=\"table mb-0\">\r\n                          <thead className=\"table-light\">\r\n                            <tr>\r\n                              <th>{t(\"PersonType\")}</th>\r\n                              <th>{t(\"FullName\")}</th>\r\n                              <th>{t(\"IdentificationType\")}</th>\r\n                              <th>{t(\"IdentificationNumber\")}</th>\r\n                              <th>{t(\"Roles\")}</th>\r\n                              <th>{t(\"WatchList\")}</th>\r\n                              <th></th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n\r\n                            {dataClientList.length > 0 ?\r\n                              dataClientList.map((item, index) => (\r\n                                <tr>\r\n                                  <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                                  <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                                  <td>{getIdentificationType(item.idType).label}</td>\r\n                                  <td>{item.clientDocumentId}</td>\r\n                                  <td>\r\n                                    {item.roles !== undefined ?\r\n                                      item.roles.map((rol, index) => (\r\n                                        rol.roleDescription + \" - \"\r\n                                      )) : null}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.blacklist !== undefined && item.blacklist.length > 0 ?\r\n                                      (item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"}\r\n                                  </td>\r\n                                  <td style={{ textAlign: \"right\" }}>\r\n                                    <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                    <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                                  </td>\r\n                                </tr>\r\n                              )) :\r\n                              <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td>\r\n                            }\r\n                          </tbody>\r\n                        </Table>\r\n                      </div>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </React.Fragment>\r\n            }\r\n          </CardBody>\r\n\r\n          {!openNewClient ?\r\n            <React.Fragment>\r\n\r\n              <CardFooter>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md=\"3\" style={{ textAlign: \"left\" }}>\r\n                    <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  </Col>\r\n                  <Col md=\"9\" style={{ textAlign: \"right\" }}>\r\n                    <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { checkDebtorShareholders() }}><i className=\"mdi mdi-account-plus-outline mid-12px\"></i> {t(\"AddShareholders\")}</Button>\r\n                    <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardFooter>\r\n            </React.Fragment>\r\n            : null\r\n          }\r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      {locationData ?\r\n        <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE)} />\r\n        : null}\r\n\r\n      <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n\r\n      {showModalSearchClient ?\r\n        <ModalSearchClient isOpen={showSearchClient} toggle={() => { showSearchClient(!showModalSearchClient) }} onClientSelect={(data) => { loadClientDataT24(data); showSearchClient(false); }} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient(); showSearchClient(false) }} />\r\n        : null}\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}