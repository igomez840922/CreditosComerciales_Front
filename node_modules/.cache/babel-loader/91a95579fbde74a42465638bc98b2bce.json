{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\10_Fideicomiso\\\\AsignarNumeroFideicomiso\\\\ModalBeneficiosFideicomiso.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport Select from \"react-select\";\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ApiServiceBackend from \"../../../../services/ApiServiceBackend\";\nimport { CoreServices, BackendServices } from \"../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalBeneficiosFideicomiso = props => {\n  _s();\n\n  const [paises, setPaises] = useState([]);\n  const [codigoPais, setCodigoPais] = useState(null);\n  const [sumaParticipacion, setsumaParticipacion] = useState(0);\n  const [sumaParticipacionMessage, setsumaParticipacionMessage] = useState(false);\n  const [identificationType, setidentificationType] = useState(\"1\"); //1-Juridico, 2-Persona\n\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\n  const [tipo, setTipo] = useState(null);\n  const [nacionalidadSelect, setnacionalidadSelect] = useState(undefined);\n  const [tipoPersona, settipoPersona] = useState(undefined);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [cambio, setcambio] = useState(1);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\n  const [tipoIdentificacion, settipoIdentificacion] = useState(null);\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false); // Submitimos formulario para busqueda de clientes\n\n  const personTypeData = [{\n    label: props.t(\"Legal\"),\n    value: \"1\"\n  }, {\n    label: props.t(\"Natural\"),\n    value: \"2\"\n  }];\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  React.useEffect(() => {\n    // Read Api Service data\n    console.log(props);\n    cargarPaises();\n\n    if (props.tipo != \"guardar\") {\n      setidentificationType(props.dataSet.personType);\n    }\n  }, [props.isOpen]);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null; // setnacionalidadSelect(undefined)\n    // setIdentificationTypeSelected(undefined)\n    // setpersonTypeSelect(undefined)\n\n    try {\n      if (paises.length > 0 && props.dataSet.nationality !== null) {\n        defaultVal = paises.find(x => x.label === props.dataSet.nationality);\n\n        if (defaultVal !== undefined) {\n          setCodigoPais(defaultVal);\n          setnacionalidadSelect(defaultVal);\n        }\n      }\n\n      if (personTypeData.length > 0 && props.dataSet.personType !== null) {\n        defaultVal = personTypeData.find(x => x.label === props.dataSet.personType);\n\n        if (defaultVal !== undefined) {\n          setTipo(defaultVal.label);\n          setpersonTypeSelect(defaultVal);\n        }\n      }\n\n      if (identificationTypeList.length > 0 && props.dataSet.documentType !== null) {\n        defaultVal = identificationTypeList.find(x => x.label === props.dataSet.documentType);\n\n        if (defaultVal !== undefined) {\n          setidentificationType(defaultVal.label);\n          settipoIdentificacion(defaultVal.label);\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props.isOpen, paises]);\n\n  function changePais(event) {\n    setCodigoPais(event);\n  }\n\n  function changeTipo(event) {\n    setTipo(event);\n    setidentificationType(event.value);\n  }\n\n  function cargarPaises() {\n    const api = new CoreServices();\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"Selectacountry\"),\n        options: json\n      }];\n      setPaises(json);\n      setcambio(null);\n      setcambio(2);\n    });\n    const apiServiceBackend = new BackendServices();\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"ID Type\"),\r\n            options: json,\r\n          },\r\n        ];*/\n\n\n        setIdentificationTypeList(json);\n      }\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit(event, errors, values) {\n    var _identificationTypeSe, _personTypeSelect$lab;\n\n    if (tipo == null) {\n      setcampoRequeridoTipo(true);\n      return;\n    } else {\n      setcampoRequeridoTipo(false);\n    }\n\n    if (codigoPais == null) {\n      setcampoRequeridoNacionalidad(true);\n      return;\n    } else {\n      setcampoRequeridoNacionalidad(false);\n    }\n\n    if (tipoIdentificacion == null) {\n      setcampoRequeridoIdentificacion(true);\n      return;\n    } else {\n      setcampoRequeridoIdentificacion(false);\n    }\n\n    if (sumaParticipacionMessage) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.codigoPais = codigoPais;\n    values.documentType = (_identificationTypeSe = identificationTypeSelected === null || identificationTypeSelected === void 0 ? void 0 : identificationTypeSelected.label) !== null && _identificationTypeSe !== void 0 ? _identificationTypeSe : \"\";\n    values.personType = (_personTypeSelect$lab = personTypeSelect === null || personTypeSelect === void 0 ? void 0 : personTypeSelect.label) !== null && _personTypeSelect$lab !== void 0 ? _personTypeSelect$lab : \"\";\n    props.gestionDatos(values, props.tipo);\n  }\n\n  function handleChangeInputfrmSearch(e) {\n    //selectedData[e.target.name] = e.target.value;\n    //props.updateDataModel(selectedData);    \n    switch (e.target.name) {\n      case \"identificationType\":\n        {\n          setidentificationType(e.target.value);\n          break;\n        }\n    }\n  }\n\n  function getSearchForm(tipo) {\n    console.log(tipo);\n\n    if (tipo != undefined) {\n      if ((tipo === null || tipo === void 0 ? void 0 : tipo.label) == \"Jur√≠dica\") {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"firstName\",\n              children: props.t(\"SocialReason\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"firstName\",\n              type: \"text\",\n              onChange: handleChangeInputfrmSearch,\n              value: props.dataSet.firstName,\n              errorMessage: props.t(\"Required Field\"),\n              validate: {\n                required: {\n                  value: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstName\",\n                children: props.t(\"First Name\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"firstName\",\n                value: props.dataSet.firstName,\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                errorMessage: props.t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"secondName\",\n                children: props.t(\"SecondName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"secondName\",\n                value: props.dataSet.secondName,\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                errorMessage: props.t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstLastName\",\n                children: props.t(\"FirstLastName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"firstLastName\",\n                value: props.dataSet.firstLastName,\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                errorMessage: props.t(\"Required Field\"),\n                className: \"form-control\",\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"secondLastName\",\n                children: props.t(\"SecondLastName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                name: \"secondLastName\",\n                value: props.dataSet.secondLastName,\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                errorMessage: props.t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"firstName\",\n              children: props.t(\"First Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              className: \"form-control\",\n              name: \"firstName\",\n              value: props.dataSet.firstName,\n              type: \"text\",\n              onChange: handleChangeInputfrmSearch,\n              errorMessage: props.t(\"Required Field\"),\n              validate: {\n                required: {\n                  value: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"secondName\",\n              children: props.t(\"SecondName\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              name: \"secondName\",\n              value: props.dataSet.secondName,\n              type: \"text\",\n              onChange: handleChangeInputfrmSearch,\n              errorMessage: props.t(\"Required Field\"),\n              validate: {\n                required: {\n                  value: true\n                }\n              },\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"firstLastName\",\n              children: props.t(\"FirstLastName\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              name: \"firstLastName\",\n              value: props.dataSet.firstLastName,\n              type: \"text\",\n              onChange: handleChangeInputfrmSearch,\n              errorMessage: props.t(\"Required Field\"),\n              className: \"form-control\",\n              validate: {\n                required: {\n                  value: true\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"secondLastName\",\n              children: props.t(\"SecondLastName\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              name: \"secondLastName\",\n              value: props.dataSet.secondLastName,\n              type: \"text\",\n              onChange: handleChangeInputfrmSearch,\n              errorMessage: props.t(\"Required Field\"),\n              validate: {\n                required: {\n                  value: true\n                }\n              },\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this);\n    } //segun tipo de identiicaci√≥n\n    // if (tipo != undefined && tipo.value) {\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\n    //     if (identificationTypeSelected.value == \"RUC\" || tipo.value == \"1\") {\n    //       return (\n    //         <Col md=\"8\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n    //             <AvField\n    //               className=\"form-control\"\n    //               name=\"firstName2\"\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               value={props.dataSet.firstName}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               validate={{ required: { value: true } }} />\n    //           </div>\n    //         </Col>\n    //       );\n    //     } else {\n    //       return (\n    //         <React.Fragment>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n    //               <AvField\n    //                 className=\"form-control\"\n    //                 name=\"firstName\"\n    //                 value={props.dataSet.firstName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }} />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n    //               <AvField\n    //                 name=\"secondName\"\n    //                 value={props.dataSet.secondName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }}\n    //                 className=\"form-control\" />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n    //               <AvField\n    //                 name=\"firstLastName\"\n    //                 value={props.dataSet.firstLastName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 className=\"form-control\"\n    //                 validate={{ required: { value: true } }} />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n    //               <AvField\n    //                 name=\"secondLastName\"\n    //                 value={props.dataSet.secondLastName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }}\n    //                 className=\"form-control\" />\n    //             </div>\n    //           </Col>\n    //         </React.Fragment>\n    //       )\n    //     }\n    //   } else {\n    //     return (\n    //       <Col md=\"8\">\n    //         <div className=\"mb-3\">\n    //           <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n    //           <AvField\n    //             className=\"form-control\"\n    //             name=\"firstName2\"\n    //             type=\"text\" onChange={handleChangeInputfrmSearch}\n    //             value={props.dataSet.firstName}\n    //             errorMessage={props.t(\"Required Field\")}\n    //             validate={{ required: { value: true } }} />\n    //         </div>\n    //       </Col>\n    //     );\n    //   }\n    // } else {\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\n    //     if (identificationTypeSelected.value == \"RUC\") {\n    //       return (\n    //         <Col md=\"8\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n    //             <AvField\n    //               className=\"form-control\"\n    //               name=\"firstName2\"\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               value={props.dataSet.firstName}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               validate={{ required: { value: true } }} />\n    //           </div>\n    //         </Col>\n    //       );\n    //     } else {\n    //       return (\n    //         <React.Fragment>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n    //               <AvField\n    //                 className=\"form-control\"\n    //                 name=\"firstName\"\n    //                 value={props.dataSet.firstName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }} />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n    //               <AvField\n    //                 name=\"secondName\"\n    //                 value={props.dataSet.secondName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }}\n    //                 className=\"form-control\" />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n    //               <AvField\n    //                 name=\"firstLastName\"\n    //                 value={props.dataSet.firstLastName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 className=\"form-control\"\n    //                 validate={{ required: { value: true } }} />\n    //             </div>\n    //           </Col>\n    //           <Col md=\"4\">\n    //             <div className=\"mb-3\">\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n    //               <AvField\n    //                 name=\"secondLastName\"\n    //                 value={props.dataSet.secondLastName}\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\n    //                 errorMessage={props.t(\"Required Field\")}\n    //                 validate={{ required: { value: true } }}\n    //                 className=\"form-control\" />\n    //             </div>\n    //           </Col>\n    //         </React.Fragment>\n    //       )\n    //     }\n    //   } else {\n    //     return (\n    //       <React.Fragment>\n    //         <Col md=\"4\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n    //             <AvField\n    //               className=\"form-control\"\n    //               name=\"firstName\"\n    //               value={props.dataSet.firstName}\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               validate={{ required: { value: true } }} />\n    //           </div>\n    //         </Col>\n    //         <Col md=\"4\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n    //             <AvField\n    //               name=\"secondName\"\n    //               value={props.dataSet.secondName}\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               validate={{ required: { value: true } }}\n    //               className=\"form-control\" />\n    //           </div>\n    //         </Col>\n    //         <Col md=\"4\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n    //             <AvField\n    //               name=\"firstLastName\"\n    //               value={props.dataSet.firstLastName}\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               className=\"form-control\"\n    //               validate={{ required: { value: true } }} />\n    //           </div>\n    //         </Col>\n    //         <Col md=\"4\">\n    //           <div className=\"mb-3\">\n    //             <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n    //             <AvField\n    //               name=\"secondLastName\"\n    //               value={props.dataSet.secondLastName}\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\n    //               errorMessage={props.t(\"Required Field\")}\n    //               validate={{ required: { value: true } }}\n    //               className=\"form-control\" />\n    //           </div>\n    //         </Col>\n    //         <Col md=\"4\">\n    //           <AvGroup className=\"mb-3\">\n    //             <Label htmlFor=\"startDate\">{props.t(\"DBO\")}</Label>\n    //             <AvField\n    //               className=\"form-control\"\n    //               name=\"startDate\"\n    //               type=\"date\"\n    //               value={props.dataSet.birthDate}\n    //               id=\"startDate\" />\n    //           </AvGroup>\n    //         </Col>\n    //       </React.Fragment>\n    //     )\n    //   }\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: props.true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: props.t(\"SecondaryBeneficiary\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: props.t(\"ID Type\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        onChange: e => {\n                          setIdentificationTypeSelected(identificationTypeList.find(x => x.label === e.label));\n                          settipoIdentificacion(e.value);\n                        },\n                        options: identificationTypeList,\n                        placeholder: props.t(\"SelectType\"),\n                        value: identificationTypeSelected\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 25\n                      }, this), campoRequeridoIdentificacion ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: props.t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 569,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idnumber\",\n                        children: props.t(\"ID Number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 576,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"documentNumber\",\n                        type: \"text\",\n                        id: \"documentNumber\",\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          } // number: { value: true, errorMessage: t(\"InvalidField\") },\n\n                        },\n                        value: props.dataSet.documentNumber\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 577,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 575,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"identificationType\",\n                        children: props.t(\"PersonType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        onChange: e => {\n                          setpersonTypeSelect(personTypeData.find(x => x.label === e.label));\n                          changeTipo(e);\n                        },\n                        options: personTypeData,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: props.t(\"toselect\"),\n                        value: personTypeSelect // value={props.dataSet.shareholderName}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 595,\n                        columnNumber: 25\n                      }, this), campoRequeridoTipo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: props.t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 605,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 21\n                  }, this), getSearchForm(personTypeSelect)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"nationality\",\n                        children: props.t(\"Nationality\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 615,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        onChange: e => {\n                          setnacionalidadSelect(paises.find(x => x.label === e.label));\n                          changePais(e);\n                        },\n                        options: paises,\n                        id: \"paises\",\n                        name: \"paises\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: props.t(\"toselect\"),\n                        value: nacionalidadSelect // value={props.dataSet.nationality}\n                        // defaultValue={props.datosEmpresa.countryIdentification}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 616,\n                        columnNumber: 25\n                      }, this), campoRequeridoNacionalidad ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: props.t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"address\",\n                        children: props.t(\"Address\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 637,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"address\",\n                        type: \"text\",\n                        id: \"address\",\n                        value: props.dataSet.address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 638,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"telephone\",\n                        children: props.t(\"Phone\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"telephone\",\n                        type: \"text\",\n                        id: \"telephone\",\n                        value: props.dataSet.telephone\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 650,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 648,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 647,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"relationship\",\n                        children: props.t(\"Relationship\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 659,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"relationship\",\n                        type: \"text\",\n                        id: \"relationship\",\n                        value: props.dataSet.relationship\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 658,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"percentage\",\n                        children: props.t(\"Percent\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 669,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"percentage\",\n                        type: \"text\",\n                        validate: {\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        },\n                        id: \"percentage\",\n                        value: props.dataSet.percentage\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 670,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 684,\n                    columnNumber: 21\n                  }, this), \" \", props.t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 532,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalBeneficiosFideicomiso, \"KeWNesE072OqWH96+WEfetORlUI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalBeneficiosFideicomiso;\nModalBeneficiosFideicomiso.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default withTranslation()(ModalBeneficiosFideicomiso);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBeneficiosFideicomiso\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/AsignarNumeroFideicomiso/ModalBeneficiosFideicomiso.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Select","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","AvForm","AvField","AvGroup","ApiServiceBackend","CoreServices","BackendServices","ModalBeneficiosFideicomiso","props","paises","setPaises","codigoPais","setCodigoPais","sumaParticipacion","setsumaParticipacion","sumaParticipacionMessage","setsumaParticipacionMessage","identificationType","setidentificationType","campoRequeridoTipo","setcampoRequeridoTipo","campoRequeridoNacionalidad","setcampoRequeridoNacionalidad","tipo","setTipo","nacionalidadSelect","setnacionalidadSelect","undefined","tipoPersona","settipoPersona","dataReturn","setDataReturn","jsonAccionistas","cambio","setcambio","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","personTypeSelect","setpersonTypeSelect","tipoIdentificacion","settipoIdentificacion","campoRequeridoIdentificacion","setcampoRequeridoIdentificacion","personTypeData","label","t","value","i18n","useEffect","console","log","cargarPaises","dataSet","personType","isOpen","defaultVal","length","nationality","find","x","documentType","err","changePais","event","changeTipo","api","getPaisesCatalogo","then","response","json","i","Records","push","optionGroup1","options","apiServiceBackend","consultarCatalogoTipoIdentificacion","data","catch","error","handleSubmit","errors","values","preventDefault","gestionDatos","handleChangeInputfrmSearch","e","target","name","getSearchForm","firstName","required","secondName","firstLastName","secondLastName","toggle","true","backgroundColor","errorMessage","documentNumber","address","telephone","relationship","number","percentage","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ApiServiceBackend from \"../../../../services/ApiServiceBackend\";\r\nimport { CoreServices, BackendServices } from \"../../../../services\";\r\nconst ModalBeneficiosFideicomiso = (props) => {\r\n  const [paises, setPaises] = useState([]);\r\n  const [codigoPais, setCodigoPais] = useState(null);\r\n  const [sumaParticipacion, setsumaParticipacion] = useState(0);\r\n  const [sumaParticipacionMessage, setsumaParticipacionMessage] = useState(false);\r\n  const [identificationType, setidentificationType] = useState(\"1\");//1-Juridico, 2-Persona\r\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\r\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\r\n  const [tipo, setTipo] = useState(null);\r\n  const [nacionalidadSelect, setnacionalidadSelect] = useState(undefined);\r\n  const [tipoPersona, settipoPersona] = useState(undefined);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [cambio, setcambio] = useState(1);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\r\n  const [tipoIdentificacion, settipoIdentificacion] = useState(null);\r\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\r\n  // Submitimos formulario para busqueda de clientes\r\n  const personTypeData = [{ label: props.t(\"Legal\"), value: \"1\" }, { label: props.t(\"Natural\"), value: \"2\" }]\r\n  const { t, i18n } = useTranslation();\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    console.log(props);\r\n    cargarPaises()\r\n    if (props.tipo != \"guardar\") {\r\n      setidentificationType(props.dataSet.personType)\r\n    }\r\n  }, [props.isOpen]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    // setnacionalidadSelect(undefined)\r\n    // setIdentificationTypeSelected(undefined)\r\n    // setpersonTypeSelect(undefined)\r\n    try {\r\n      if (paises.length > 0 && props.dataSet.nationality !== null) {\r\n        defaultVal = paises.find(x => x.label === props.dataSet.nationality);\r\n        if (defaultVal !== undefined) {\r\n          setCodigoPais(defaultVal)\r\n          setnacionalidadSelect(defaultVal);\r\n        }\r\n      }\r\n      if (personTypeData.length > 0 && props.dataSet.personType !== null) {\r\n        defaultVal = personTypeData.find(x => x.label === props.dataSet.personType);\r\n        if (defaultVal !== undefined) {\r\n\r\n          setTipo(defaultVal.label)\r\n          setpersonTypeSelect(defaultVal);\r\n        }\r\n      }\r\n      if (identificationTypeList.length > 0 && props.dataSet.documentType !== null) {\r\n        defaultVal = identificationTypeList.find(x => x.label === props.dataSet.documentType);\r\n        if (defaultVal !== undefined) {\r\n          setidentificationType(defaultVal.label)\r\n          settipoIdentificacion(defaultVal.label)\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n\r\n  }, [props.isOpen, paises]);\r\n  function changePais(event) {\r\n    setCodigoPais(event);\r\n  }\r\n  function changeTipo(event) {\r\n    setTipo(event);\r\n    setidentificationType(event.value);\r\n  }\r\n  function cargarPaises() {\r\n    const api = new CoreServices();\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"Selectacountry\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        setPaises(json);\r\n        setcambio(null)\r\n        setcambio(2)\r\n      });\r\n    const apiServiceBackend = new BackendServices();\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          /*const optionGroup1 = [\r\n            {\r\n              label: t(\"ID Type\"),\r\n              options: json,\r\n            },\r\n          ];*/\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n  }\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n    if (tipo == null) {\r\n      setcampoRequeridoTipo(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoTipo(false);\r\n    }\r\n    if (codigoPais == null) {\r\n      setcampoRequeridoNacionalidad(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoNacionalidad(false);\r\n    }\r\n    if (tipoIdentificacion == null) {\r\n      setcampoRequeridoIdentificacion(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoIdentificacion(false);\r\n    }\r\n    if (sumaParticipacionMessage) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.codigoPais = codigoPais;\r\n    values.documentType = identificationTypeSelected?.label ?? \"\";\r\n    values.personType = personTypeSelect?.label ?? \"\";\r\n    props.gestionDatos(values, props.tipo);\r\n\r\n  }\r\n  function handleChangeInputfrmSearch(e) {\r\n    //selectedData[e.target.name] = e.target.value;\r\n    //props.updateDataModel(selectedData);    \r\n\r\n    switch (e.target.name) {\r\n      case \"identificationType\": {\r\n        setidentificationType(e.target.value);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function getSearchForm(tipo) {\r\n    console.log(tipo);\r\n    if (tipo != undefined) {\r\n      if (tipo?.label == \"Jur√≠dica\") {\r\n        return (\r\n          <Col md=\"8\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                value={props.dataSet.firstName}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  value={props.dataSet.firstName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n                <AvField\r\n                  name=\"secondName\"\r\n                  value={props.dataSet.secondName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n                <AvField\r\n                  name=\"firstLastName\"\r\n                  value={props.dataSet.firstLastName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  className=\"form-control\"\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n                <AvField\r\n                  name=\"secondLastName\"\r\n                  value={props.dataSet.secondLastName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                value={props.dataSet.firstName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n              <AvField\r\n                name=\"secondName\"\r\n                value={props.dataSet.secondName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n                className=\"form-control\" />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                name=\"firstLastName\"\r\n                value={props.dataSet.firstLastName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                className=\"form-control\"\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                name=\"secondLastName\"\r\n                value={props.dataSet.secondLastName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n                className=\"form-control\" />\r\n            </div>\r\n          </Col>\r\n\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    //segun tipo de identiicaci√≥n\r\n    // if (tipo != undefined && tipo.value) {\r\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\r\n    //     if (identificationTypeSelected.value == \"RUC\" || tipo.value == \"1\") {\r\n    //       return (\r\n    //         <Col md=\"8\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName2\"\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               value={props.dataSet.firstName}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //       );\r\n    //     } else {\r\n    //       return (\r\n    //         <React.Fragment>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //               <AvField\r\n    //                 className=\"form-control\"\r\n    //                 name=\"firstName\"\r\n    //                 value={props.dataSet.firstName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondName\"\r\n    //                 value={props.dataSet.secondName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"firstLastName\"\r\n    //                 value={props.dataSet.firstLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 className=\"form-control\"\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondLastName\"\r\n    //                 value={props.dataSet.secondLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n\r\n    //         </React.Fragment>\r\n    //       )\r\n    //     }\r\n    //   } else {\r\n    //     return (\r\n    //       <Col md=\"8\">\r\n    //         <div className=\"mb-3\">\r\n    //           <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //           <AvField\r\n    //             className=\"form-control\"\r\n    //             name=\"firstName2\"\r\n    //             type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //             value={props.dataSet.firstName}\r\n    //             errorMessage={props.t(\"Required Field\")}\r\n    //             validate={{ required: { value: true } }} />\r\n    //         </div>\r\n    //       </Col>\r\n    //     );\r\n    //   }\r\n    // } else {\r\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\r\n    //     if (identificationTypeSelected.value == \"RUC\") {\r\n    //       return (\r\n    //         <Col md=\"8\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName2\"\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               value={props.dataSet.firstName}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //       );\r\n    //     } else {\r\n    //       return (\r\n    //         <React.Fragment>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //               <AvField\r\n    //                 className=\"form-control\"\r\n    //                 name=\"firstName\"\r\n    //                 value={props.dataSet.firstName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondName\"\r\n    //                 value={props.dataSet.secondName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"firstLastName\"\r\n    //                 value={props.dataSet.firstLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 className=\"form-control\"\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondLastName\"\r\n    //                 value={props.dataSet.secondLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n\r\n    //         </React.Fragment>\r\n    //       )\r\n    //     }\r\n    //   } else {\r\n    //     return (\r\n    //       <React.Fragment>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName\"\r\n    //               value={props.dataSet.firstName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"secondName\"\r\n    //               value={props.dataSet.secondName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }}\r\n    //               className=\"form-control\" />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"firstLastName\"\r\n    //               value={props.dataSet.firstLastName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               className=\"form-control\"\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"secondLastName\"\r\n    //               value={props.dataSet.secondLastName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }}\r\n    //               className=\"form-control\" />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <AvGroup className=\"mb-3\">\r\n    //             <Label htmlFor=\"startDate\">{props.t(\"DBO\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"startDate\"\r\n    //               type=\"date\"\r\n    //               value={props.dataSet.birthDate}\r\n    //               id=\"startDate\" />\r\n    //           </AvGroup>\r\n    //         </Col>\r\n    //       </React.Fragment>\r\n    //     )\r\n    //   }\r\n    // }\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={props.true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{props.t(\"SecondaryBeneficiary\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{props.t(\"ID Type\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => {\r\n                            setIdentificationTypeSelected(identificationTypeList.find(x => x.label === e.label))\r\n                            settipoIdentificacion(e.value);\r\n                          }}\r\n                          options={identificationTypeList}\r\n                          placeholder={props.t(\"SelectType\")}\r\n                          value={identificationTypeSelected}\r\n                        />\r\n                        {campoRequeridoIdentificacion ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idnumber\">{props.t(\"ID Number\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"documentNumber\"\r\n                          type=\"text\"\r\n                          id=\"documentNumber\"\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            // number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          value={props.dataSet.documentNumber}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"identificationType\">{props.t(\"PersonType\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => { setpersonTypeSelect(personTypeData.find(x => x.label === e.label)); changeTipo(e) }}\r\n                          options={personTypeData}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={props.t(\"toselect\")}\r\n                          value={personTypeSelect}\r\n                        // value={props.dataSet.shareholderName}\r\n                        />\r\n                        {campoRequeridoTipo ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n\r\n                      </div>\r\n                    </Col>\r\n                    {getSearchForm(personTypeSelect)}\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"nationality\">{props.t(\"Nationality\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => {\r\n                            setnacionalidadSelect(paises.find(x => x.label === e.label))\r\n                            changePais(e);\r\n                          }}\r\n                          options={paises}\r\n                          id=\"paises\"\r\n                          name=\"paises\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={props.t(\"toselect\")}\r\n                          value={nacionalidadSelect}\r\n                        // value={props.dataSet.nationality}\r\n                        // defaultValue={props.datosEmpresa.countryIdentification}\r\n                        />\r\n                        {campoRequeridoNacionalidad ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"address\">{props.t(\"Address\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"address\"\r\n                          type=\"text\"\r\n                          id=\"address\" value={props.dataSet.address} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"telephone\">{props.t(\"Phone\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"telephone\"\r\n                          type=\"text\"\r\n                          id=\"telephone\" value={props.dataSet.telephone} />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"relationship\">{props.t(\"Relationship\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"relationship\"\r\n                          type=\"text\"\r\n                          id=\"relationship\" value={props.dataSet.relationship} />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"percentage\">{props.t(\"Percent\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"percentage\"\r\n                          type=\"text\"\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          id=\"percentage\" value={props.dataSet.percentage} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{props.t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalBeneficiosFideicomiso.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func\r\n};\r\nexport default (withTranslation()(ModalBeneficiosFideicomiso));\r\n"]},"metadata":{},"sourceType":"module"}