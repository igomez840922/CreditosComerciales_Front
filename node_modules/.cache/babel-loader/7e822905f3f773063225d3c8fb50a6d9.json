{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../../helpers/options_helper\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { Table, Button, Row, Col, Card, CardBody, Nav, NavLink, TabContent, TabPane } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport classnames from \"classnames\";\nimport DatosGenerales from \"./Secciones/DatosGenerales\";\nimport GeneralesEmpresa from \"./Secciones/GeneralesEmpresa\";\nimport HistoriaEmpresa from \"./Secciones/HistoriaEmpresa\";\nimport InformacionAccionista from \"./Secciones/InformacionAccionosta\";\nimport EstructuraOrganizacionalEmpresa from \"./Secciones/EstructuraOrganizacionalEmpresa\";\nimport GobiernoCorporativo from \"./Secciones/GobiernoCorporativo\";\nimport RelevoGeneracional from \"./Secciones/RelevoGeneracional\";\nimport FlujoOperativo from \"./Secciones/FlujoOperativo\";\nimport EmpresasRelacionadas from \"./Secciones/EmpresasRelacionadas\";\nimport InformacionClientes from \"./Secciones/InformacionClientes\";\nimport InformacionProveedores from \"./Secciones/InformacionProveedores\";\nimport PrincipalesCompetidores from \"./Secciones/PrincipalesCompetidores\";\nimport Proyecciones from \"./Secciones/Proyecciones\";\nimport RelacionesBancarias from \"./Secciones/RelacionesBancarias\";\nimport MoviemientosCuentas from \"./Secciones/MoviemientosCuentas\";\nimport Reciprocidad from \"./Secciones/Reciprocidad\";\nimport FacilidadActivosFijos from \"./Secciones/FacilidadActivosFijos\";\nimport AspectosAmbientales from \"./Secciones/AspectosAmbientales\";\nimport InformacionGarante from \"./Secciones/InformacionGarante\";\nimport SegurosActualesEmpresa from \"./Secciones/SegurosActualesEmpresa\";\nimport ArquitecturaEmpresarial from \"./Secciones/ArquitecturaEmpresarial\";\nimport CuentasCobrar from \"./Secciones/CuentasCobrar\";\nimport Capex from \"./Secciones/Capex\";\nimport FlujoCaja from \"./Secciones/FlujoCaja\";\nimport NegociosObtener from \"./Secciones/NegociosObtener\";\nimport MatrizCompetitiva from \"./Secciones/MatrizCompetitiva\";\nimport RecomendacionesOtros from \"./Secciones/RecomendacionesOtros\";\nimport ApiServices from \"../../../../services/BackendServices/Services\"; //import SeleccionarCliente from \"../SeleccionarCliente/index\"\n\nimport ModalCloseOptions from \"../../../../components/UI/ModalCloseOptions\";\nimport ModalEndProcess from \"../../../../components/EndProcess/ModalEndProcess\";\nimport LogProcess from \"../../../../components/LogProcess/index\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport ModalPrevicualizarIGR from \"./previsualizarIGR\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet modelo = {\n  datosGenerales: {\n    codigoTipoIdentificacion: null,\n    numeroCliente: null,\n    primerNombre: null,\n    segundoNombre: null,\n    primerApellido: null,\n    segundoApellido: null,\n    numeroIdentificacion: null,\n    transactId: 0,\n    economicGroup: {\n      code: \"\",\n      name: \"\"\n    },\n    economicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    subeconomicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    bank: {\n      code: \"\",\n      name: \"\"\n    }\n  },\n  datosEmpresa: {\n    transactId: \"\",\n    referencePoint: \"\",\n    residency: \"\",\n    houseNumber: \"\",\n    phoneNumber: \"\",\n    mobileNumber: \"\",\n    workNumber: \"\",\n    email: \"\",\n    exclusion: false,\n    sustainable: false,\n    apto: \"\",\n    country: {\n      code: \"\",\n      name: \"\"\n    },\n    province: {\n      code: \"\",\n      name: \"\"\n    },\n    district: {\n      code: \"\",\n      name: \"\"\n    },\n    township: {\n      code: \"\",\n      name: \"\"\n    },\n    city: {\n      code: \"\",\n      name: \"\"\n    },\n    sector: {\n      code: \"\",\n      name: \"\"\n    },\n    subSector: {\n      code: \"\",\n      name: \"\"\n    }\n  },\n  historiaEmpresa: {\n    transactId: 0,\n    description: null,\n    employeesNumber: null,\n    details: null\n  },\n  dataAccionistas: {\n    transactId: 0,\n    informacionAccionistaDetails: null,\n    datosTablaAccionistas: null,\n    observations: null\n  },\n  dataGobiernoCorporativo: {\n    transactId: 0,\n    corporateIdentification: 0,\n    name: null,\n    position: null,\n    birthDate: null,\n    age: null,\n    status: true,\n    dataTableGobiernoCorporativo: null\n  },\n  dataRelevoGenrencial: {\n    trasactId: 0,\n    observations: null,\n    dataTableRelevoGerencial: null\n  },\n  dataFlujoOperativo: {\n    transactId: 0,\n    observations: null,\n    infoDate: null\n  },\n  dataEstructuraOrganizacional: {\n    transactId: 0,\n    description: null,\n    date: \"\"\n  },\n  dataEmpresaRelacionada: {\n    transactId: 0,\n    description: null,\n    observations: null,\n    dataTableEmpresaRelacionada: null,\n    date: \"\"\n  },\n  dataInformacionClientes: {\n    transactId: 0,\n    dataTableInformacionClientes: null,\n    description: null,\n    cicloVenta: false,\n    porcenVenta: null,\n    \"seasonalSales\": false,\n    \"percSeasonalPeriodSales\": 0\n  },\n  dataInformacionProveedores: {\n    transactId: 0,\n    dataTableInformacionProveedores: null,\n    cicloCompra: null,\n    description: \"\",\n    purchasingCycle: \"\"\n  },\n  dataPrincipalesCompetidores: {\n    transactId: 0,\n    dataTablePrincipalesCompetidores: null\n  },\n  dataProyecciones: {\n    transactId: 0,\n    descripcion: null,\n    assetsOperatingAmount: null,\n    assetsOperatingReason: null,\n    fixedAssetsAmount: null,\n    fixedAssetsReason: null,\n    othersAssetsAmount: null,\n    othersAssetsReason: null,\n    bankAmount: null,\n    bankReason: null,\n    providersAmount: null,\n    providersReason: null,\n    capitalAmount: null,\n    capitalReason: null,\n    maximodeuda: null,\n    estimatedDate: null\n  },\n  dataRelacionesBancarias: {\n    transactId: 0,\n    observations: null,\n    dataTablDeudaCorto: null,\n    dataTablDeudaLargo: null,\n    dataTablSowActual: null,\n    dataTablSowPropuesto: null,\n    sumatoriaDeudaCorto: {\n      monto: 0,\n      saldo1: 0,\n      saldo2: 0,\n      saldo3: 0\n    },\n    sumatoriaDeudaLargo: {\n      monto: 0,\n      saldo1: 0,\n      saldo2: 0,\n      saldo3: 0\n    }\n  },\n  dataMoviemientosCuentas: {\n    transactId: 0,\n    dataTableMovimientoCuentas: null,\n    details: null,\n    observations: null\n  },\n  dataReciprocidad: {\n    transactId: 0,\n    dataTableReciprocidad: null,\n    description: null,\n    observations: null\n  },\n  dataFacilidadActivosFijos: {\n    transactId: 0,\n    dataTableFacilidadActivosFijos: null,\n    variationsAssets: false,\n    variationsAssetsObs: \"\",\n    manufacturingAgroCompanies: false,\n    productionLine: \"\",\n    capacity: \"\",\n    usedCapacity: \"\",\n    tradingCompany: false,\n    warehouseCapacity: \"\",\n    transportDistributionFleet: false,\n    units: \"\",\n    renovation: \"\"\n  },\n  dataAspectosAmbientales: {\n    transactId: 0,\n    riskPreClassification: null,\n    sustainableCreditRating: \"2\",\n    riskClassificationConfirmation: null,\n    natureLocationProject: false,\n    physicalResettlement: false,\n    environmentalPermits: false,\n    newProject: false,\n    workersContractors: false\n  },\n  dataInformacionGarante: {\n    transactId: 0,\n    dataTbleInformacionGarantes: null\n  },\n  dataSegurosActualesEmpresa: {\n    transactId: 0,\n    dataTableSegurosActualesEmpresa: null\n  },\n  dataArquitecturaEmpresarial: {\n    transactId: 0,\n    ticCompanyUse: null,\n    auditedAreas: null\n  },\n  dataCuentasCobrar: {\n    transactId: 0,\n    dataTableCuentasCobrar: null\n  },\n  dataCapex: {\n    transactId: 0,\n    dataTableCapex1: null,\n    dataTableCapex2: null,\n    dataTableCapex3: null\n  },\n  dataFlujoCaja: {\n    transactId: 0,\n    dataTableFlujoCaja1: null,\n    dataTableFlujoCaja2: null,\n    dataTableFlujoCaja3: null,\n    dataTableFlujoCaja4: null,\n    dataTableFlujoCaja5: null,\n    dataTableFlujoCaja6: null\n  },\n  dataNegociosObtener: {\n    transactId: 0,\n    observations: null\n  },\n  dataMatrizCompetitiva: {\n    transactId: 0,\n    observations: null\n  },\n  dataRecomendacionesOtros: {\n    transactId: 0,\n    recommendations: \"\",\n    valueChain: \"\",\n    background: \"\",\n    refinancingLog: \"\"\n  }\n};\n\nconst FormularioIgr = props => {\n  _s();\n\n  const location = useLocation();\n  const history = useHistory();\n  const {\n    t,\n    i18n\n  } = useTranslation(); // modelo.datosGenerales.transactId=location.data.transactionId;\n  //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(location.data); //Entidad Busqueda y Descarte\n\n  const [selectedData, setSelectedData] = useState(modelo);\n  const [ModalPrevisualizardata, settoogleModalPrevisualizar] = useState(false);\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                          Variables de refactor para todos los paneles                          */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const datosGeneralesRef = useRef();\n  const generalesEmpresaRef = useRef();\n  const historiaEmpresaRef = useRef();\n  const informacionAccionistaRef = useRef();\n  const gobiernoCorporativoRef = useRef();\n  const flujoOperativoRef = useRef();\n  const estructuraOrganizacionalEmpresaRef = useRef();\n  const relevoGeneracionalRef = useRef();\n  const empresaRelacionadaRef = useRef();\n  const informacionClientesRef = useRef();\n  const InformacionProveedoresRef = useRef();\n  const PrincipalesCompetidoresRef = useRef();\n  const ProyeccionesRef = useRef();\n  const RelacionesBancariasRef = useRef();\n  const MoviemientosCuentasRef = useRef();\n  const ReciprocidadRef = useRef();\n  const FacilidadActivosFijosRef = useRef();\n  const AspectosAmbientalesRef = useRef();\n  const InformacionGaranteRef = useRef();\n  const SegurosActualesEmpresaRef = useRef();\n  const ArquitecturaEmpresarialRef = useRef();\n  const CuentasCobrarRef = useRef();\n  const CapexRef = useRef();\n  const FlujoCajaRef = useRef();\n  const NegociosObtenerRef = useRef();\n  const MatrizCompetitivaRef = useRef();\n  const RecomendacionesOtrosRef = useRef();\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                            Variables de estado para el indice de IGR                           */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const [isActiveLoading, setIsActiveLoading] = useState(false); //loading de la pagina\n\n  const [selectedClient, setSelectedClient] = useState(undefined); //cargar la data seleccionada\n\n  const [activeTab, setactiveTab] = useState(1); //Tab seleccionado. Por defecto 1\n\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalSeleccionarCliente, setDisplayModalSeleccionarCliente] = useState(false);\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\n  const [activarPantallas, setactivarPantallas] = useState(false);\n  const [dataAccionistas, setDataAccionistas] = useState([]); // Cargamos los datos al iniciar los datos\n  //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    setSelectedData({\n      datosGenerales: {\n        codigoTipoIdentificacion: null,\n        numeroCliente: null,\n        primerNombre: null,\n        segundoNombre: null,\n        primerApellido: null,\n        segundoApellido: null,\n        numeroIdentificacion: null,\n        transactId: 0,\n        economicGroup: {\n          code: \"\",\n          name: \"\"\n        },\n        economicActivity: {\n          code: \"\",\n          name: \"\"\n        },\n        subeconomicActivity: {\n          code: \"\",\n          name: \"\"\n        },\n        bank: {\n          code: \"\",\n          name: \"\"\n        }\n      },\n      datosEmpresa: {\n        transactId: \"\",\n        referencePoint: \"\",\n        residency: \"\",\n        houseNumber: \"\",\n        phoneNumber: \"\",\n        mobileNumber: \"\",\n        workNumber: \"\",\n        email: \"\",\n        exclusion: false,\n        sustainable: false,\n        apto: \"\",\n        country: {\n          code: \"\",\n          name: \"\"\n        },\n        province: {\n          code: \"\",\n          name: \"\"\n        },\n        district: {\n          code: \"\",\n          name: \"\"\n        },\n        township: {\n          code: \"\",\n          name: \"\"\n        },\n        city: {\n          code: \"\",\n          name: \"\"\n        },\n        sector: {\n          code: \"\",\n          name: \"\"\n        },\n        subSector: {\n          code: \"\",\n          name: \"\"\n        }\n      },\n      historiaEmpresa: {\n        transactId: 0,\n        description: null,\n        employeesNumber: null,\n        details: null\n      },\n      dataAccionistas: {\n        transactId: 0,\n        informacionAccionistaDetails: null,\n        datosTablaAccionistas: null,\n        observations: null\n      },\n      dataGobiernoCorporativo: {\n        transactId: 0,\n        corporateIdentification: 0,\n        name: null,\n        position: null,\n        birthDate: null,\n        age: null,\n        status: true,\n        dataTableGobiernoCorporativo: null\n      },\n      dataRelevoGenrencial: {\n        trasactId: 0,\n        observations: null,\n        dataTableRelevoGerencial: null\n      },\n      dataFlujoOperativo: {\n        transactId: 0,\n        observations: null,\n        infoDate: null\n      },\n      dataEstructuraOrganizacional: {\n        transactId: 0,\n        description: null,\n        date: \"\"\n      },\n      dataEmpresaRelacionada: {\n        transactId: 0,\n        description: null,\n        observations: null,\n        dataTableEmpresaRelacionada: null,\n        date: \"\"\n      },\n      dataInformacionClientes: {\n        transactId: 0,\n        dataTableInformacionClientes: null,\n        description: null,\n        cicloVenta: false,\n        porcenVenta: null,\n        \"seasonalSales\": false,\n        \"percSeasonalPeriodSales\": 0\n      },\n      dataInformacionProveedores: {\n        transactId: 0,\n        dataTableInformacionProveedores: null,\n        cicloCompra: null,\n        description: \"\",\n        purchasingCycle: \"\"\n      },\n      dataPrincipalesCompetidores: {\n        transactId: 0,\n        dataTablePrincipalesCompetidores: null\n      },\n      dataProyecciones: {\n        transactId: 0,\n        descripcion: null,\n        assetsOperatingAmount: null,\n        assetsOperatingReason: null,\n        fixedAssetsAmount: null,\n        fixedAssetsReason: null,\n        othersAssetsAmount: null,\n        othersAssetsReason: null,\n        bankAmount: null,\n        bankReason: null,\n        providersAmount: null,\n        providersReason: null,\n        capitalAmount: null,\n        capitalReason: null,\n        maximodeuda: null,\n        estimatedDate: null\n      },\n      dataRelacionesBancarias: {\n        transactId: 0,\n        observations: null,\n        dataTablDeudaCorto: null,\n        dataTablDeudaLargo: null,\n        dataTablSowActual: null,\n        dataTablSowPropuesto: null,\n        sumatoriaDeudaCorto: {\n          monto: 0,\n          saldo1: 0,\n          saldo2: 0,\n          saldo3: 0\n        },\n        sumatoriaDeudaLargo: {\n          monto: 0,\n          saldo1: 0,\n          saldo2: 0,\n          saldo3: 0\n        }\n      },\n      dataMoviemientosCuentas: {\n        transactId: 0,\n        dataTableMovimientoCuentas: null,\n        details: null\n      },\n      dataReciprocidad: {\n        transactId: 0,\n        dataTableReciprocidad: null,\n        description: null,\n        observations: null\n      },\n      dataFacilidadActivosFijos: {\n        transactId: 0,\n        dataTableFacilidadActivosFijos: null,\n        variationsAssets: true,\n        variationsAssetsObs: \"\",\n        manufacturingAgroCompanies: true,\n        productionLine: \"\",\n        capacity: \"\",\n        usedCapacity: \"\",\n        tradingCompany: true,\n        warehouseCapacity: \"\",\n        transportDistributionFleet: true,\n        units: \"\",\n        renovation: \"\"\n      },\n      dataAspectosAmbientales: {\n        transactId: 0,\n        riskPreClassification: null,\n        sustainableCreditRating: \"2\",\n        riskClassificationConfirmation: null,\n        natureLocationProject: false,\n        physicalResettlement: false,\n        environmentalPermits: false,\n        newProject: false,\n        workersContractors: false\n      },\n      dataInformacionGarante: {\n        transactId: 0,\n        dataTbleInformacionGarantes: null\n      },\n      dataSegurosActualesEmpresa: {\n        transactId: 0,\n        dataTableSegurosActualesEmpresa: null\n      },\n      dataArquitecturaEmpresarial: {\n        transactId: 0,\n        ticCompanyUse: null,\n        auditedAreas: null\n      },\n      dataCuentasCobrar: {\n        transactId: 0,\n        dataTableCuentasCobrar: null\n      },\n      dataCapex: {\n        transactId: 0,\n        dataTableCapex1: null,\n        dataTableCapex2: null,\n        dataTableCapex3: null\n      },\n      dataFlujoCaja: {\n        transactId: 0,\n        dataTableFlujoCaja1: null,\n        dataTableFlujoCaja2: null,\n        dataTableFlujoCaja3: null,\n        dataTableFlujoCaja4: null,\n        dataTableFlujoCaja5: null,\n        dataTableFlujoCaja6: null\n      },\n      dataNegociosObtener: {\n        transactId: 0,\n        observations: null\n      },\n      dataMatrizCompetitiva: {\n        transactId: 0,\n        observations: null\n      },\n      dataRecomendacionesOtros: {\n        transactId: 0,\n        recommendations: \"\",\n        valueChain: \"\",\n        background: \"\",\n        refinancingLog: \"\"\n      }\n    });\n    setLocationData(location.data);\n    initializeData(location.data);\n  }, []); //Caraga Inicial\n\n  function initializeData(InputData) {\n    if (InputData !== undefined && InputData !== null) {\n      //chequear si la tarea no ha sido iniciada\n      if (InputData.taskStatus === \"Ready\") {\n        const apiBpmServices = new BpmServices(); //Iniciamos la nueva tarea en BPM   \n\n        apiBpmServices.startedStatusTask(InputData.taskId).then(iniresult => {\n          if (iniresult === undefined) {\n            history.push(url.URL_DASHBOARD);\n          }\n        });\n      } else {\n        setactivarPantallas(true);\n        /* ---------------------------------------------------------------------------------------------- */\n\n        /*              Cargamos todos los datos si existe algun registro de datos generales              */\n\n        /* ---------------------------------------------------------------------------------------------- */\n\n        const apiBack = new BackendServices();\n        /* ---------------------------------------------------------------------------------------------- */\n\n        /*            Cargatos todos los datos si exite algun registro de datos para la empresa           */\n\n        /* ---------------------------------------------------------------------------------------------- */\n\n        apiBack.consultarDatosEmpresaIGR(InputData.transactionId).then(resp => {\n          modelo.datosEmpresa.transactId = InputData.transactionId;\n          modelo.datosEmpresa.country.code = resp.country.code;\n          modelo.datosEmpresa.country.name = resp.country.name;\n          modelo.datosEmpresa.province.name = resp.province.name;\n          modelo.datosEmpresa.province.code = resp.province.code;\n          modelo.datosEmpresa.district.code = resp.district.code;\n          modelo.datosEmpresa.district.name = resp.district.name;\n          modelo.datosEmpresa.township.name = resp.township.name;\n          modelo.datosEmpresa.township.code = resp.township.code;\n          modelo.datosEmpresa.city.code = resp.city.code;\n          modelo.datosEmpresa.city.name = resp.city.name;\n          modelo.datosEmpresa.referencePoint = resp.referencePoint;\n          modelo.datosEmpresa.residency = resp.residency;\n          modelo.datosEmpresa.houseNumber = resp.houseNumber;\n          modelo.datosEmpresa.phoneNumber = resp.phoneNumber;\n          modelo.datosEmpresa.mobileNumber = resp.mobileNumber;\n          modelo.datosEmpresa.workNumber = resp.workNumber;\n          modelo.datosEmpresa.email = resp.email;\n          modelo.datosEmpresa.sector.name = resp.sector.name;\n          modelo.datosEmpresa.sector.code = resp.sector.code;\n          modelo.datosEmpresa.subSector.name = resp.subSector.name;\n          modelo.datosEmpresa.subSector.code = resp.subSector.code;\n          modelo.datosEmpresa.exclusion = resp.exclusion;\n          modelo.datosEmpresa.sustainable = resp.sustainable;\n          setSelectedData(modelo);\n        }).catch(error => {});\n        /* ---------------------------------------------------------------------------------------------- */\n\n        /*           Cargatos todos los datos si exite algun registro de historia de la empresa           */\n\n        /* ----------------------------------------------------------------------------------------------*/\n\n        apiBack.consultarHistorialEmpresaIGR(InputData.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.historiaEmpresa.transactId = InputData.transactionId;\n            modelo.historiaEmpresa.description = resp.data.description;\n            modelo.historiaEmpresa.employeesNumber = resp.data.employeesNumber;\n            modelo.historiaEmpresa.details = resp.data.details;\n            setSelectedData(modelo);\n          }\n        });\n        /* ---------------------------------------------------------------------------------------------- */\n\n        /*                      Cargamos los datos por defecto del flujo de operativo                      */\n\n        /* ---------------------------------------------------------------------------------------------- */\n\n        apiBack.consultarFlujoOperativo(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataFlujoOperativo.transactId = location.data.transactionId;\n            modelo.dataFlujoOperativo.observations = resp.observations;\n            modelo.dataFlujoOperativo.infoDate = resp.infoDate;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarSeccionAccionista(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataAccionistas.observations = resp;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarDatosEmpresaRelacionada(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataEmpresaRelacionada.observations = resp.observations;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarSeccionRelevoGeneracional(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataRelevoGenrencial.observations = resp;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarSeccionReciprocidad(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataReciprocidad.observations = resp;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarMatrizSeccionIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataMatrizCompetitiva.observations = resp.observations;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarSeccionMovimientosCuentas(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataMoviemientosCuentas.observations = resp.observations;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarActivosFijosIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataFacilidadActivosFijos.variationsAssets = resp.variationsAssets;\n            modelo.dataFacilidadActivosFijos.variationsAssetsObs = resp.variationsAssetsObs;\n            modelo.dataFacilidadActivosFijos.manufacturingAgroCompanies = resp.manufacturingAgroCompanies;\n            modelo.dataFacilidadActivosFijos.productionLine = resp.productionLine;\n            modelo.dataFacilidadActivosFijos.capacity = resp.capacity;\n            modelo.dataFacilidadActivosFijos.usedCapacity = resp.usedCapacity;\n            modelo.dataFacilidadActivosFijos.tradingCompany = resp.tradingCompany;\n            modelo.dataFacilidadActivosFijos.warehouseCapacity = resp.warehouseCapacity;\n            modelo.dataFacilidadActivosFijos.transportDistributionFleet = resp.transportDistributionFleet;\n            modelo.dataFacilidadActivosFijos.units = resp.units;\n            modelo.dataFacilidadActivosFijos.renovation = resp.renovation;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarSeccionProveedorIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataInformacionProveedores.description = resp.description;\n            modelo.dataInformacionProveedores.purchasingCycle = resp.purchasingCycle;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarNegocioObtenerIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataNegociosObtener.observations = resp.observations;\n            setSelectedData(modelo);\n          }\n        });\n        /* ---------------------------------------------------------------------------------------------- */\n\n        /*                               Cargamos los datos de Proyecciones                               */\n\n        /* ---------------------------------------------------------------------------------------------- */\n\n        apiBack.consultarProyecciones(location.data.transactionId).then(resp => {\n          modelo.dataProyecciones.descripcion = resp.projectionsDTO.descripcion;\n          modelo.dataProyecciones.assetsOperatingAmount = resp.projectionsDTO.assetsOperatingAmount;\n          modelo.dataProyecciones.assetsOperatingReason = resp.projectionsDTO.assetsOperatingReason;\n          modelo.dataProyecciones.fixedAssetsAmount = resp.projectionsDTO.fixedAssetsAmount;\n          modelo.dataProyecciones.fixedAssetsReason = resp.projectionsDTO.fixedAssetsReason;\n          modelo.dataProyecciones.othersAssetsAmount = resp.projectionsDTO.othersAssetsAmount;\n          modelo.dataProyecciones.othersAssetsReason = resp.projectionsDTO.othersAssetsReason;\n          modelo.dataProyecciones.bankAmount = resp.projectionsDTO.bankAmount;\n          modelo.dataProyecciones.bankReason = resp.projectionsDTO.bankReason;\n          modelo.dataProyecciones.providersAmount = resp.projectionsDTO.providersAmount;\n          modelo.dataProyecciones.providersReason = resp.projectionsDTO.providersReason;\n          modelo.dataProyecciones.capitalAmount = resp.projectionsDTO.capitalAmount;\n          modelo.dataProyecciones.capitalReason = resp.projectionsDTO.capitalReason;\n          modelo.dataProyecciones.maximodeuda = resp.projectionsDTO.maximodeuda;\n          modelo.dataProyecciones.estimatedDate = resp.projectionsDTO.estimatedDate;\n          modelo.dataProyecciones.transactId = location.data.transactionId;\n          setSelectedData(modelo);\n        });\n        apiBack.consultarEstructuraEmpresaIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataEstructuraOrganizacional.transactId = location.data.transactionId;\n            modelo.dataEstructuraOrganizacional.description = resp.observations;\n            modelo.dataEstructuraOrganizacional.date = resp.infoDate;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarRelacionesBancariasSeccionIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataRelacionesBancarias.transactId = location.data.transactionId;\n            modelo.dataRelacionesBancarias.observations = resp.bankingRelationSection.observations;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarAspectosAmbientalesIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            console.log(resp);\n            modelo.dataAspectosAmbientales.transactId = location.data.transactionId;\n            modelo.dataAspectosAmbientales.riskPreClassification = resp.environmentalAspectsDTO.riskPreClassification;\n            modelo.dataAspectosAmbientales.sustainableCreditRating = resp.environmentalAspectsDTO.sustainableCreditRating;\n            modelo.dataAspectosAmbientales.riskClassificationConfirmation = resp.environmentalAspectsDTO.riskClassificationConfirmation;\n            modelo.dataAspectosAmbientales.natureLocationProject = resp.environmentalAspectsDTO.natureLocationProject;\n            modelo.dataAspectosAmbientales.physicalResettlement = resp.environmentalAspectsDTO.physicalResettlement;\n            modelo.dataAspectosAmbientales.environmentalPermits = resp.environmentalAspectsDTO.environmentalPermits;\n            modelo.dataAspectosAmbientales.newProject = resp.environmentalAspectsDTO.newProject;\n            modelo.dataAspectosAmbientales.workersContractors = resp.environmentalAspectsDTO.workersContractors; // modelo.dataAspectosAmbientales.workersContractors=resp.environmentalAspectsDTO.workersContractors;\n\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarArquitecturaEmpresarialIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataArquitecturaEmpresarial.transactId = location.data.transactionId;\n            modelo.dataArquitecturaEmpresarial.ticCompanyUse = resp.ticCompanyUse;\n            modelo.dataArquitecturaEmpresarial.auditedAreas = resp.auditedAreas;\n            setSelectedData(modelo);\n          }\n        });\n        apiBack.consultarRecomendacionesIGR(location.data.transactionId).then(resp => {\n          if (resp !== undefined) {\n            modelo.dataRecomendacionesOtros.transactId = location.data.transactionId;\n            modelo.dataRecomendacionesOtros.recommendations = resp.recommendations;\n            modelo.dataRecomendacionesOtros.valueChain = resp.valueChain;\n            modelo.dataRecomendacionesOtros.background = resp.background;\n            modelo.dataRecomendacionesOtros.refinancingLog = resp.refinancingLog;\n            setSelectedData(modelo);\n          }\n        });\n      } //carga inicial de cada seccion\n\n    } else {\n      history.push(url.URL_DASHBOARD);\n    }\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\n      toggleModalEndProcess();\n      return;\n    }\n\n    switch (option) {\n      case OPTs.OPT_FINALIZARPROCESO:\n        {\n          toggleModalEndProcess();\n          return;\n        }\n\n      case OPTs.OPT_SALVAPARCIAL:\n        {\n          break;\n        }\n\n      case OPTs.OPT_SALVAFULL:\n        {\n          if (!submitData()) {\n            return;\n          }\n\n          break;\n        }\n    }\n\n    history.push(url.URL_DASHBOARD);\n  } // funcion que sirve para ir guardando cada vez que se da en siguiente\n\n\n  function guardarDatosTabs() {\n    if (activeTab == 1) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*                    VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS GENERALES                    */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!datosGeneralesRef.current.getFormValidation()) {\n        datosGeneralesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(1);\n        return false;\n      }\n\n      datosGeneralesRef.current.dataReturn2.transactId = Number(locationData.transactionId);\n      selectedData.datosGenerales = datosGeneralesRef.current.dataReturn2;\n      setSelectedData(selectedData);\n      toggleTab(activeTab + 1);\n    } else if (activeTab == 2) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*                  VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA EMPRESA                  */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!generalesEmpresaRef.current.getFormValidation()) {\n        generalesEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(2);\n        return false;\n      }\n\n      generalesEmpresaRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.datosEmpresa = generalesEmpresaRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices();\n      console.log(generalesEmpresaRef);\n      apiBack.guardarDatosEmpresaIGR(selectedData.datosEmpresa).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 3) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!historiaEmpresaRef.current.getFormValidation()) {\n        historiaEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(3);\n        return false;\n      }\n\n      historiaEmpresaRef.current.dataReturn.transactId = locationData.transactionId;\n      selectedData.historiaEmpresa = historiaEmpresaRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices();\n      apiBack.guardarHistorialEmpresaIGR(selectedData.historiaEmpresa).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 4) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!informacionAccionistaRef.current.getFormValidation()) {\n        informacionAccionistaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(4);\n        return false;\n      }\n\n      informacionAccionistaRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataAccionistas = informacionAccionistaRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices();\n      apiBack.guardarSeccionAccionista(selectedData.dataAccionistas).then(resp => {\n        // toggleTab(activeTab + 1);\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 5) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!estructuraOrganizacionalEmpresaRef.current.getFormValidation()) {\n        estructuraOrganizacionalEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(5);\n        return false;\n      }\n\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      today = yyyy + '-' + mm + '-' + dd;\n      estructuraOrganizacionalEmpresaRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      estructuraOrganizacionalEmpresaRef.current.dataReturn.date = today;\n      selectedData.dataEstructuraOrganizacional = estructuraOrganizacionalEmpresaRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarEstructuraEmpresaIGR(selectedData.dataEstructuraOrganizacional).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 7) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!relevoGeneracionalRef.current.getFormValidation()) {\n        relevoGeneracionalRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(7);\n        return false;\n      }\n\n      relevoGeneracionalRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataRelevoGenrencial = relevoGeneracionalRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices();\n      let dataSet = {\n        transactId: Number(locationData.transactionId),\n        observations: selectedData.dataRelevoGenrencial.observations\n      };\n      apiBack.guardarSeccionRelevoGeneracional(dataSet).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 8) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!flujoOperativoRef.current.getFormValidation()) {\n        flujoOperativoRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(8);\n        return false;\n      }\n\n      var today = new Date();\n      var dd = today.getDate();\n      var mm = today.getMonth() + 1; //January is 0!\n\n      var yyyy = today.getFullYear();\n\n      if (dd < 10) {\n        dd = '0' + dd;\n      }\n\n      if (mm < 10) {\n        mm = '0' + mm;\n      }\n\n      today = yyyy + '-' + mm + '-' + dd;\n      flujoOperativoRef.current.dataReturn.transactId = locationData.transactionId;\n      flujoOperativoRef.current.dataReturn.infoDate = today;\n      selectedData.dataFlujoOperativo = flujoOperativoRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarFlujoOperativo(selectedData.dataFlujoOperativo).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 9) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!empresaRelacionadaRef.current.getFormValidation()) {\n        empresaRelacionadaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(9);\n        return false;\n      }\n\n      empresaRelacionadaRef.current.dataReturn2.trasactId = Number(locationData.transactionId);\n      selectedData.dataEmpresaRelacionada = empresaRelacionadaRef.current.dataReturn2;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionEmpresaRelacionada(selectedData.dataEmpresaRelacionada).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 10) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!informacionClientesRef.current.getFormValidation()) {\n        informacionClientesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(10);\n        return false;\n      }\n\n      informacionClientesRef.current.dataReturn.transactId = locationData.transactionId;\n      let arr = Object.keys(informacionClientesRef.current.dataReturn);\n      let indice = arr.some($$ => informacionClientesRef.current.dataReturn[$$] == null); // if (indice) {\n      //   informacionClientesRef.current.validateForm();\n      //   //nos movemos al tab para llenar los campos\n      //   toggleTab(10);\n      //   return false;\n      // }\n\n      selectedData.dataInformacionClientes = informacionClientesRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionClienteIGR(selectedData.dataInformacionClientes).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 11) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!InformacionProveedoresRef.current.getFormValidation()) {\n        InformacionProveedoresRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(11);\n        return false;\n      }\n\n      InformacionProveedoresRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataInformacionProveedores = InformacionProveedoresRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices();\n      let datos = {\n        \"transactId\": Number(locationData.transactionId),\n        \"description\": InformacionProveedoresRef.current.dataReturn.description,\n        \"purchasingCycle\": InformacionProveedoresRef.current.dataReturn.purchasingCycle\n      }; // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionProveedorIGR(datos).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 12) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!PrincipalesCompetidoresRef.current.getFormValidation()) {\n        PrincipalesCompetidoresRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(12);\n        return false;\n      }\n\n      PrincipalesCompetidoresRef.current.dataReturn.transactId = locationData.transactionId;\n      let arr = Object.keys(PrincipalesCompetidoresRef.current.dataReturn);\n      let indice = arr.some($$ => PrincipalesCompetidoresRef.current.dataReturn[$$] == null); // if (indice) {\n      //   PrincipalesCompetidoresRef.current.validateForm();\n      //   //nos movemos al tab para llenar los campos\n      //   toggleTab(12);\n      //   return false;\n      // }\n\n      selectedData.dataPrincipalesCompetidores = PrincipalesCompetidoresRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarFlujoOperativo(selectedData.dataPrincipalesCompetidores).then(resp => {});\n      toggleTab(activeTab + 1);\n    } else if (activeTab == 13) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!ProyeccionesRef.current.getFormValidation()) {\n        ProyeccionesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(13);\n        return false;\n      }\n\n      ProyeccionesRef.current.dataReturn.transactId = locationData.transactionId;\n      let arr = Object.keys(ProyeccionesRef.current.dataReturn);\n      selectedData.dataProyecciones = ProyeccionesRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarProyecciones(selectedData.dataProyecciones).then(resp => {\n        toggleTab(activeTab + 1);\n      });\n    } else if (activeTab == 14) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!RelacionesBancariasRef.current.getFormValidation()) {\n        RelacionesBancariasRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(14);\n        return false;\n      }\n\n      RelacionesBancariasRef.current.dataReturn.transactId = locationData.transactionId;\n      let arr = Object.keys(RelacionesBancariasRef.current.dataReturn);\n      let indice = arr.some($$ => RelacionesBancariasRef.current.dataReturn[$$] == null);\n\n      if (indice) {\n        RelacionesBancariasRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(14);\n        return false;\n      }\n\n      selectedData.dataRelacionesBancarias = RelacionesBancariasRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarRelacionesBancariasSeccionIGR(selectedData.dataRelacionesBancarias).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 15) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!MoviemientosCuentasRef.current.getFormValidation()) {\n        MoviemientosCuentasRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(15);\n        return false;\n      }\n\n      MoviemientosCuentasRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      let arr = Object.keys(MoviemientosCuentasRef.current.dataReturn);\n      let indice = arr.some($$ => MoviemientosCuentasRef.current.dataReturn[$$] == null); // if (indice) {\n      //   MoviemientosCuentasRef.current.validateForm();\n      //   //nos movemos al tab para llenar los campos\n      //   toggleTab(15);\n      //   return false;\n      // }\n\n      selectedData.dataMoviemientosCuentas = MoviemientosCuentasRef.current.dataReturn;\n      setSelectedData(selectedData);\n      let datos = {\n        trasactId: Number(locationData.transactionId),\n        observations: MoviemientosCuentasRef.current.dataReturn.observations\n      };\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionMovimientosCuentas(datos).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 16) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!ReciprocidadRef.current.getFormValidation()) {\n        ReciprocidadRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(16);\n        return false;\n      }\n\n      ReciprocidadRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      let arr = Object.keys(ReciprocidadRef.current.dataReturn);\n      let indice = arr.some($$ => ReciprocidadRef.current.dataReturn[$$] == null); // if (indice) {\n      //   ReciprocidadRef.current.validateForm();\n      //   //nos movemos al tab para llenar los campos\n      //   toggleTab(16);\n      //   return false;\n      // }\n\n      selectedData.dataReciprocidad = ReciprocidadRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionReciprocidad(selectedData.dataReciprocidad).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 17) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!FacilidadActivosFijosRef.current.getFormValidation()) {\n        FacilidadActivosFijosRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(17);\n        return false;\n      }\n\n      FacilidadActivosFijosRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataFacilidadActivosFijos = FacilidadActivosFijosRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarSeccionActivosFijosIGR(selectedData.dataFacilidadActivosFijos).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 18) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!AspectosAmbientalesRef.current.getFormValidation()) {\n        AspectosAmbientalesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(18);\n        return false;\n      }\n\n      AspectosAmbientalesRef.current.dataReturn.transactId = locationData.transactionId;\n      let arr = Object.keys(AspectosAmbientalesRef.current.dataReturn); // let indice = arr.some(($$) => AspectosAmbientalesRef.current.dataReturn[$$] == null);\n      // if (indice) {\n      //   AspectosAmbientalesRef.current.validateForm();\n      //   //nos movemos al tab para llenar los campos\n      //   toggleTab(18);\n      //   return false;\n      // }\n\n      selectedData.dataAspectosAmbientales = AspectosAmbientalesRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarAspectosAmbientalesIGR(selectedData.dataAspectosAmbientales).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 21) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!ArquitecturaEmpresarialRef.current.getFormValidation()) {\n        ArquitecturaEmpresarialRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(21);\n        return false;\n      }\n\n      ArquitecturaEmpresarialRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataArquitecturaEmpresarial = ArquitecturaEmpresarialRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarArquitecturaEmpresarialIGR(selectedData.dataArquitecturaEmpresarial).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 25) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!NegociosObtenerRef.current.getFormValidation()) {\n        NegociosObtenerRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(25);\n        return false;\n      }\n\n      NegociosObtenerRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataNegociosObtener = NegociosObtenerRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarNegocioObtenerIGR(selectedData.dataNegociosObtener).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 26) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!MatrizCompetitivaRef.current.getFormValidation()) {\n        MatrizCompetitivaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(26);\n        return false;\n      }\n\n      MatrizCompetitivaRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataMatrizCompetitiva = MatrizCompetitivaRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarMatrizSeccionIGR(selectedData.dataMatrizCompetitiva).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else if (activeTab == 27) {\n      /* ---------------------------------------------------------------------------------------------- */\n\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\n\n      /* ---------------------------------------------------------------------------------------------- */\n      if (!RecomendacionesOtrosRef.current.getFormValidation()) {\n        RecomendacionesOtrosRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n        toggleTab(27);\n        return false;\n      }\n\n      RecomendacionesOtrosRef.current.dataReturn.transactId = Number(locationData.transactionId);\n      selectedData.dataRecomendacionesOtros = RecomendacionesOtrosRef.current.dataReturn;\n      setSelectedData(selectedData);\n      const apiBack = new BackendServices(); // Pasamos a guardar o actualizar los datos del flujo de operativo\n\n      apiBack.guardarRecomendacionesIGR(selectedData.dataRecomendacionesOtros).then(resp => {\n        if (resp != undefined) {\n          toggleTab(activeTab + 1);\n        }\n      });\n    } else {\n      toggleTab(activeTab + 1);\n    }\n  } //guardar la data\n\n\n  function submitData() {\n    //si no es valido\n    if (!datosGeneralesRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      datosGeneralesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(1);\n      return false;\n    } //si no es valido\n\n\n    if (!generalesEmpresaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      generalesEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(2);\n      return false;\n    } //si no es valido\n\n\n    if (!historiaEmpresaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      historiaEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(3);\n      return false;\n    } //si no es valido\n\n\n    if (!informacionAccionistaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      informacionAccionistaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(4);\n      return false;\n    } //si no es valido\n\n\n    if (!estructuraOrganizacionalEmpresaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      estructuraOrganizacionalEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(5);\n      return false;\n    } //si no es valido\n\n\n    if (!gobiernoCorporativoRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      gobiernoCorporativoRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(6);\n      return false;\n    }\n\n    if (!relevoGeneracionalRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      relevoGeneracionalRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(7);\n      return false;\n    }\n\n    if (!flujoOperativoRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      flujoOperativoRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(8);\n      return false;\n    }\n\n    if (!InformacionProveedoresRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      InformacionProveedoresRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(11);\n      return false;\n    }\n\n    if (!PrincipalesCompetidoresRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      PrincipalesCompetidoresRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(12);\n      return false;\n    }\n\n    if (!ProyeccionesRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      ProyeccionesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(13);\n      return false;\n    }\n\n    if (!RelacionesBancariasRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      RelacionesBancariasRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(14);\n      return false;\n    }\n\n    if (!MoviemientosCuentasRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      MoviemientosCuentasRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(15);\n      return false;\n    }\n\n    if (!ReciprocidadRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      ReciprocidadRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(16);\n      return false;\n    }\n\n    if (!FacilidadActivosFijosRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      FacilidadActivosFijosRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(17);\n      return false;\n    }\n\n    if (!AspectosAmbientalesRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      AspectosAmbientalesRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(18);\n      return false;\n    }\n\n    if (!InformacionGaranteRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      InformacionGaranteRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(19);\n      return false;\n    }\n\n    if (!SegurosActualesEmpresaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      SegurosActualesEmpresaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(20);\n      return false;\n    }\n\n    if (!ArquitecturaEmpresarialRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      ArquitecturaEmpresarialRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(21);\n      return false;\n    }\n\n    if (!CuentasCobrarRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      CuentasCobrarRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(22);\n      return false;\n    }\n\n    if (!CapexRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      CapexRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(23);\n      return false;\n    }\n\n    if (!FlujoCajaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      FlujoCajaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(24);\n      return false;\n    }\n\n    if (!NegociosObtenerRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      NegociosObtenerRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(25);\n      return false;\n    }\n\n    if (!MatrizCompetitivaRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      MatrizCompetitivaRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(26);\n      return false;\n    }\n\n    if (!RecomendacionesOtrosRef.current.getFormValidation()) {\n      //mandamos a validar el formulario\n      RecomendacionesOtrosRef.current.validateForm(); //nos movemos al tab para llenar los campos\n\n      toggleTab(27);\n      return false;\n    }\n\n    return true;\n  } //moverse entre los tabs\n\n\n  function toggleTab(tab) {\n    if (activeTab !== tab) {\n      if (tab >= 1 && tab <= 27) {\n        setactiveTab(tab);\n        window.scrollTo(0, 0);\n      }\n    }\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n    removeBodyCss();\n  }\n\n  function toogleModalPrevisualizar() {\n    settoogleModalPrevisualizar(!ModalPrevisualizardata);\n    removeBodyCss();\n  } //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function toggleModalEndProcess() {\n    setDisplayModalEndProcess(!displayModalEndProcess);\n  } //nuevo informe abrimos modal para buscar y seleccionar cliente\n\n\n  function toggleShowSeleccionarCliente() {\n    setDisplayModalSeleccionarCliente(!displayModalSeleccionarCliente);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    history.push(url.URL_DASHBOARD);\n  } // toggleTab(1);\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: t(\"CommercialCredit\"),\n        breadcrumbItem: t(\"ReinforcedManagementReport\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1588,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: t(\"Reinforced Management Report\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\",\n            children: t(\"This form is official and must be filled out correctly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1593,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-wizard-wrapper wizard clearfix\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(Nav, {\n                  pills: true,\n                  className: \"flex-column\",\n                  children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 1\n                    }),\n                    onClick: () => {\n                      toggleTab(1);\n                    },\n                    children: t(\"General Data\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1600,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 2\n                    }),\n                    onClick: () => {\n                      toggleTab(2);\n                    },\n                    children: t(\"General of the Company\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1607,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 3\n                    }),\n                    onClick: () => {\n                      toggleTab(3);\n                    },\n                    children: t(\"History of the Company\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1616,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 4\n                    }),\n                    onClick: () => {\n                      toggleTab(4);\n                    },\n                    children: t(\"Shareholder Information\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1625,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 5\n                    }),\n                    onClick: () => {\n                      toggleTab(5);\n                    },\n                    children: t(\"OrganizationalStructure\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1634,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 6\n                    }),\n                    onClick: () => {\n                      toggleTab(6);\n                    },\n                    children: [\" \", t(\"CorporateGovernance\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1642,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 7\n                    }),\n                    onClick: () => {\n                      toggleTab(7);\n                    },\n                    children: [\" \", t(\"ManagementRelays\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1650,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 8\n                    }),\n                    onClick: () => {\n                      toggleTab(8);\n                    },\n                    children: [\" \", t(\"OperationalFlow\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1658,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 9\n                    }),\n                    onClick: () => {\n                      toggleTab(9);\n                    },\n                    children: [\" \", t(\"RelatedCompanies\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1666,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 10\n                    }),\n                    onClick: () => {\n                      setactiveTab(10);\n                    },\n                    children: [\" \", t(\"ClientsInfo\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1674,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 11\n                    }),\n                    onClick: () => {\n                      toggleTab(11);\n                    },\n                    children: [\" \", t(\"ProvidersInfo\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1682,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 12\n                    }),\n                    onClick: () => {\n                      toggleTab(12);\n                    },\n                    children: [\" \", t(\"MainCompetitorsintheMarket\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1690,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 13\n                    }),\n                    onClick: () => {\n                      toggleTab(13);\n                    },\n                    children: [\" \", t(\"Projections\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1698,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 14\n                    }),\n                    onClick: () => {\n                      toggleTab(14);\n                    },\n                    children: [\" \", t(\"CurrentBankingRelations\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1706,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 15\n                    }),\n                    onClick: () => {\n                      toggleTab(15);\n                    },\n                    children: [\" \", t(\"AccountMovements\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1714,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 16\n                    }),\n                    onClick: () => {\n                      toggleTab(16);\n                    },\n                    children: [\" \", t(\"Reciprocity\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1722,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 17\n                    }),\n                    onClick: () => {\n                      toggleTab(17);\n                    },\n                    children: [\" \", t(\"FixedAssetsFacilities\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1730,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 18\n                    }),\n                    onClick: () => {\n                      toggleTab(18);\n                    },\n                    children: [\" \", t(\"EnvironmentalAspects\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1738,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 19\n                    }),\n                    onClick: () => {\n                      toggleTab(19);\n                    },\n                    children: [\" \", t(\"GuarantorInformation\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1746,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 20\n                    }),\n                    onClick: () => {\n                      toggleTab(20);\n                    },\n                    children: [\" \", t(\"CurrentCompanyInsurance\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1754,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 21\n                    }),\n                    onClick: () => {\n                      toggleTab(21);\n                    },\n                    children: [\" \", t(\"EnterpriseArchitecture\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1762,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 22\n                    }),\n                    onClick: () => {\n                      toggleTab(22);\n                    },\n                    children: [\" \", t(\"AccountsReceivable\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1770,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 23\n                    }),\n                    onClick: () => {\n                      toggleTab(23);\n                    },\n                    children: [\" \", t(\"Capex\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1778,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 24\n                    }),\n                    onClick: () => {\n                      toggleTab(24);\n                    },\n                    children: [\" \", t(\"CashFlow\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1786,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 25\n                    }),\n                    onClick: () => {\n                      toggleTab(25);\n                    },\n                    children: [\" \", t(\"BusinessObtain\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1794,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 26\n                    }),\n                    onClick: () => {\n                      toggleTab(26);\n                    },\n                    children: [\" \", t(\"Matriz Competitiva\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1802,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                    className: classnames({\n                      active: activeTab === 27\n                    }),\n                    onClick: () => {\n                      toggleTab(27);\n                    },\n                    children: [\" \", t(\"RecomendationsAndOthers\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1810,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1598,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1597,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 9,\n                children: [/*#__PURE__*/_jsxDEV(TabContent, {\n                  activeTab: activeTab,\n                  className: \"body\",\n                  children: [/*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 1,\n                    children: /*#__PURE__*/_jsxDEV(DatosGenerales, {\n                      datosGenerales: selectedData.datosGenerales,\n                      ref: datosGeneralesRef,\n                      onSubmit: submitData,\n                      onOpenClientSelection: () => {\n                        toggleShowSeleccionarCliente();\n                      },\n                      selectedClient: selectedClient\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1823,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1822,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 2,\n                    children: /*#__PURE__*/_jsxDEV(GeneralesEmpresa, {\n                      datosEmpresa: selectedData.datosEmpresa,\n                      ref: generalesEmpresaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1826,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1825,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 3,\n                    children: /*#__PURE__*/_jsxDEV(HistoriaEmpresa, {\n                      locationData: locationData,\n                      historiaEmpresa: selectedData.historiaEmpresa,\n                      ref: historiaEmpresaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1829,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1828,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 4,\n                    children: /*#__PURE__*/_jsxDEV(InformacionAccionista, {\n                      jsonAccionistas: selectedData.dataAccionistas,\n                      ref: informacionAccionistaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1832,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1831,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 5,\n                    children: /*#__PURE__*/_jsxDEV(EstructuraOrganizacionalEmpresa, {\n                      locationData: locationData,\n                      dataEstructuraOrganizacional: selectedData.dataEstructuraOrganizacional,\n                      ref: estructuraOrganizacionalEmpresaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1835,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1834,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 6,\n                    children: /*#__PURE__*/_jsxDEV(GobiernoCorporativo, {\n                      ref: gobiernoCorporativoRef,\n                      jsonCorporativo: selectedData.dataGobiernoCorporativo,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1838,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1837,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 7,\n                    children: /*#__PURE__*/_jsxDEV(RelevoGeneracional, {\n                      dataRelevoGenrencial: selectedData.dataRelevoGenrencial,\n                      ref: relevoGeneracionalRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1841,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1840,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 8,\n                    children: /*#__PURE__*/_jsxDEV(FlujoOperativo, {\n                      locationData: locationData,\n                      dataFlujoOperativo: selectedData.dataFlujoOperativo,\n                      ref: flujoOperativoRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1844,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1843,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 9,\n                    children: /*#__PURE__*/_jsxDEV(EmpresasRelacionadas, {\n                      dataEmpresaRelacionada: selectedData.dataEmpresaRelacionada,\n                      ref: empresaRelacionadaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1847,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1846,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 10,\n                    children: /*#__PURE__*/_jsxDEV(InformacionClientes, {\n                      dataInformacionClientes: selectedData.dataInformacionClientes,\n                      ref: informacionClientesRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1850,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1849,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 11,\n                    children: /*#__PURE__*/_jsxDEV(InformacionProveedores, {\n                      dataInformacionProveedores: selectedData.dataInformacionProveedores,\n                      ref: InformacionProveedoresRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1853,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1852,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 12,\n                    children: /*#__PURE__*/_jsxDEV(PrincipalesCompetidores, {\n                      dataPrincipalesCompetidores: selectedData.dataPrincipalesCompetidores,\n                      ref: PrincipalesCompetidoresRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1856,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1855,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 13,\n                    children: /*#__PURE__*/_jsxDEV(Proyecciones, {\n                      locationData: locationData,\n                      dataProyecciones: selectedData.dataProyecciones,\n                      ref: ProyeccionesRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1859,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1858,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 14,\n                    children: /*#__PURE__*/_jsxDEV(RelacionesBancarias, {\n                      dataRelacionesBancarias: selectedData.dataRelacionesBancarias,\n                      ref: RelacionesBancariasRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1862,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1861,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 15,\n                    children: /*#__PURE__*/_jsxDEV(MoviemientosCuentas, {\n                      dataMoviemientosCuentas: selectedData.dataMoviemientosCuentas,\n                      ref: MoviemientosCuentasRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1865,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1864,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 16,\n                    children: /*#__PURE__*/_jsxDEV(Reciprocidad, {\n                      dataReciprocidad: selectedData.dataReciprocidad,\n                      ref: ReciprocidadRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1868,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1867,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 17,\n                    children: /*#__PURE__*/_jsxDEV(FacilidadActivosFijos, {\n                      locationData: locationData,\n                      dataFacilidadActivosFijos: selectedData.dataFacilidadActivosFijos,\n                      ref: FacilidadActivosFijosRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1871,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1870,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 18,\n                    children: /*#__PURE__*/_jsxDEV(AspectosAmbientales, {\n                      locationData: locationData,\n                      dataAspectosAmbientales: selectedData.dataAspectosAmbientales,\n                      ref: AspectosAmbientalesRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1874,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1873,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 19,\n                    children: /*#__PURE__*/_jsxDEV(InformacionGarante, {\n                      dataInformacionGarante: selectedData.dataInformacionGarante,\n                      ref: InformacionGaranteRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1877,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1876,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 20,\n                    children: /*#__PURE__*/_jsxDEV(SegurosActualesEmpresa, {\n                      dataSegurosActualesEmpresa: selectedData.dataSegurosActualesEmpresa,\n                      ref: SegurosActualesEmpresaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1880,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1879,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 21,\n                    children: /*#__PURE__*/_jsxDEV(ArquitecturaEmpresarial, {\n                      locationData: locationData,\n                      dataArquitecturaEmpresarial: selectedData.dataArquitecturaEmpresarial,\n                      ref: ArquitecturaEmpresarialRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1883,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1882,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 22,\n                    children: /*#__PURE__*/_jsxDEV(CuentasCobrar, {\n                      locationData: locationData,\n                      dataCuentasCobrar: selectedData.dataCuentasCobrar,\n                      ref: CuentasCobrarRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1886,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1885,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 23,\n                    children: /*#__PURE__*/_jsxDEV(Capex, {\n                      locationData: locationData,\n                      dataCapex: selectedData.dataCapex,\n                      ref: CapexRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1889,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1888,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 24,\n                    children: /*#__PURE__*/_jsxDEV(FlujoCaja, {\n                      locationData: locationData,\n                      dataFlujoCaja: selectedData.dataFlujoCaja,\n                      ref: FlujoCajaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1892,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1891,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 25,\n                    children: /*#__PURE__*/_jsxDEV(NegociosObtener, {\n                      dataNegociosObtener: selectedData.dataNegociosObtener,\n                      ref: NegociosObtenerRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1895,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1894,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 26,\n                    children: /*#__PURE__*/_jsxDEV(MatrizCompetitiva, {\n                      dataMatrizCompetitiva: selectedData.dataMatrizCompetitiva,\n                      ref: MatrizCompetitivaRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1898,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1897,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n                    tabId: 27,\n                    children: /*#__PURE__*/_jsxDEV(RecomendacionesOtros, {\n                      dataRecomendacionesOtros: selectedData.dataRecomendacionesOtros,\n                      ref: RecomendacionesOtrosRef,\n                      onSubmit: submitData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1901,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1900,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1821,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    md: 12,\n                    style: {\n                      textAlign: \"right\",\n                      marginTop: \"10px\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      color: \"info\",\n                      type: \"button\",\n                      style: {\n                        margin: '5px'\n                      },\n                      onClick: () => {\n                        toogleModalPrevisualizar();\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-eye mdi-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1908,\n                        columnNumber: 131\n                      }, this), \" Previsualizar\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1908,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"dark\",\n                      type: \"button\",\n                      style: {\n                        margin: '5px'\n                      },\n                      onClick: () => {\n                        toggleModalCloseOptions();\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1909,\n                        columnNumber: 130\n                      }, this), \" \", t(\"Exit\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1909,\n                      columnNumber: 23\n                    }, this), activeTab > 1 && /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"success\",\n                      type: \"button\",\n                      style: {\n                        margin: '5px'\n                      },\n                      onClick: () => {\n                        toggleTab(activeTab - 1);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-arrow-left-bold mid-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1912,\n                        columnNumber: 135\n                      }, this), \" \", t(\"Previous\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1912,\n                      columnNumber: 25\n                    }, this), activeTab < 27 && /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"success\",\n                      type: \"button\",\n                      style: {\n                        margin: '5px'\n                      },\n                      onClick: () => {\n                        guardarDatosTabs();\n                        setTimeout(() => {\n                          guardarDatosTabs();\n                        }, 1000);\n                      },\n                      children: [t(\"Next\"), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-arrow-right-bold mid-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1921,\n                        columnNumber: 40\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1917,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      color: \"success\",\n                      type: \"button\",\n                      style: {\n                        marginLeft: '5px'\n                      },\n                      onClick: () => {\n                        guardarDatosTabs();\n                        onSaveProcess(OPTs.OPT_SALVAFULL);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1925,\n                        columnNumber: 165\n                      }, this), \" \", t(\"Continue\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1925,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1906,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1905,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1820,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1596,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1594,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1591,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogProcess, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1934,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalCloseOptions,\n        toggle: () => {\n          toggleModalCloseOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1936,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n        onSaveEndProcess: onSaveEndProcess,\n        isOpen: displayModalEndProcess,\n        toggle: () => {\n          toggleModalEndProcess();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1938,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalPrevicualizarIGR, {\n        dataIGR: selectedData,\n        isOpen: ModalPrevisualizardata,\n        toggle: () => {\n          toogleModalPrevisualizar();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1939,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1585,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormularioIgr, \"2X0Uncnd/nqqQh/A6PWvum2Hiyc=\", false, function () {\n  return [useLocation, useHistory, useTranslation];\n});\n\n_c = FormularioIgr;\nexport default FormularioIgr;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioIgr\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/index.js"],"names":["React","useState","useEffect","useRef","PropTypes","useLocation","useHistory","OPTs","url","Table","Button","Row","Col","Card","CardBody","Nav","NavLink","TabContent","TabPane","Breadcrumbs","useTranslation","withTranslation","classnames","DatosGenerales","GeneralesEmpresa","HistoriaEmpresa","InformacionAccionista","EstructuraOrganizacionalEmpresa","GobiernoCorporativo","RelevoGeneracional","FlujoOperativo","EmpresasRelacionadas","InformacionClientes","InformacionProveedores","PrincipalesCompetidores","Proyecciones","RelacionesBancarias","MoviemientosCuentas","Reciprocidad","FacilidadActivosFijos","AspectosAmbientales","InformacionGarante","SegurosActualesEmpresa","ArquitecturaEmpresarial","CuentasCobrar","Capex","FlujoCaja","NegociosObtener","MatrizCompetitiva","RecomendacionesOtros","ApiServices","ModalCloseOptions","ModalEndProcess","LogProcess","BackendServices","CoreServices","BpmServices","ModalPrevicualizarIGR","modelo","datosGenerales","codigoTipoIdentificacion","numeroCliente","primerNombre","segundoNombre","primerApellido","segundoApellido","numeroIdentificacion","transactId","economicGroup","code","name","economicActivity","subeconomicActivity","bank","datosEmpresa","referencePoint","residency","houseNumber","phoneNumber","mobileNumber","workNumber","email","exclusion","sustainable","apto","country","province","district","township","city","sector","subSector","historiaEmpresa","description","employeesNumber","details","dataAccionistas","informacionAccionistaDetails","datosTablaAccionistas","observations","dataGobiernoCorporativo","corporateIdentification","position","birthDate","age","status","dataTableGobiernoCorporativo","dataRelevoGenrencial","trasactId","dataTableRelevoGerencial","dataFlujoOperativo","infoDate","dataEstructuraOrganizacional","date","dataEmpresaRelacionada","dataTableEmpresaRelacionada","dataInformacionClientes","dataTableInformacionClientes","cicloVenta","porcenVenta","dataInformacionProveedores","dataTableInformacionProveedores","cicloCompra","purchasingCycle","dataPrincipalesCompetidores","dataTablePrincipalesCompetidores","dataProyecciones","descripcion","assetsOperatingAmount","assetsOperatingReason","fixedAssetsAmount","fixedAssetsReason","othersAssetsAmount","othersAssetsReason","bankAmount","bankReason","providersAmount","providersReason","capitalAmount","capitalReason","maximodeuda","estimatedDate","dataRelacionesBancarias","dataTablDeudaCorto","dataTablDeudaLargo","dataTablSowActual","dataTablSowPropuesto","sumatoriaDeudaCorto","monto","saldo1","saldo2","saldo3","sumatoriaDeudaLargo","dataMoviemientosCuentas","dataTableMovimientoCuentas","dataReciprocidad","dataTableReciprocidad","dataFacilidadActivosFijos","dataTableFacilidadActivosFijos","variationsAssets","variationsAssetsObs","manufacturingAgroCompanies","productionLine","capacity","usedCapacity","tradingCompany","warehouseCapacity","transportDistributionFleet","units","renovation","dataAspectosAmbientales","riskPreClassification","sustainableCreditRating","riskClassificationConfirmation","natureLocationProject","physicalResettlement","environmentalPermits","newProject","workersContractors","dataInformacionGarante","dataTbleInformacionGarantes","dataSegurosActualesEmpresa","dataTableSegurosActualesEmpresa","dataArquitecturaEmpresarial","ticCompanyUse","auditedAreas","dataCuentasCobrar","dataTableCuentasCobrar","dataCapex","dataTableCapex1","dataTableCapex2","dataTableCapex3","dataFlujoCaja","dataTableFlujoCaja1","dataTableFlujoCaja2","dataTableFlujoCaja3","dataTableFlujoCaja4","dataTableFlujoCaja5","dataTableFlujoCaja6","dataNegociosObtener","dataMatrizCompetitiva","dataRecomendacionesOtros","recommendations","valueChain","background","refinancingLog","FormularioIgr","props","location","history","t","i18n","locationData","setLocationData","data","selectedData","setSelectedData","ModalPrevisualizardata","settoogleModalPrevisualizar","datosGeneralesRef","generalesEmpresaRef","historiaEmpresaRef","informacionAccionistaRef","gobiernoCorporativoRef","flujoOperativoRef","estructuraOrganizacionalEmpresaRef","relevoGeneracionalRef","empresaRelacionadaRef","informacionClientesRef","InformacionProveedoresRef","PrincipalesCompetidoresRef","ProyeccionesRef","RelacionesBancariasRef","MoviemientosCuentasRef","ReciprocidadRef","FacilidadActivosFijosRef","AspectosAmbientalesRef","InformacionGaranteRef","SegurosActualesEmpresaRef","ArquitecturaEmpresarialRef","CuentasCobrarRef","CapexRef","FlujoCajaRef","NegociosObtenerRef","MatrizCompetitivaRef","RecomendacionesOtrosRef","isActiveLoading","setIsActiveLoading","selectedClient","setSelectedClient","undefined","activeTab","setactiveTab","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalSeleccionarCliente","setDisplayModalSeleccionarCliente","displayModalEndProcess","setDisplayModalEndProcess","activarPantallas","setactivarPantallas","setDataAccionistas","initializeData","InputData","taskStatus","apiBpmServices","startedStatusTask","taskId","then","iniresult","push","URL_DASHBOARD","apiBack","consultarDatosEmpresaIGR","transactionId","resp","catch","error","consultarHistorialEmpresaIGR","consultarFlujoOperativo","consultarSeccionAccionista","consultarDatosEmpresaRelacionada","consultarSeccionRelevoGeneracional","consultarSeccionReciprocidad","consultarMatrizSeccionIGR","consultarSeccionMovimientosCuentas","consultarActivosFijosIGR","consultarSeccionProveedorIGR","consultarNegocioObtenerIGR","consultarProyecciones","projectionsDTO","consultarEstructuraEmpresaIGR","consultarRelacionesBancariasSeccionIGR","bankingRelationSection","consultarAspectosAmbientalesIGR","console","log","environmentalAspectsDTO","consultarArquitecturaEmpresarialIGR","consultarRecomendacionesIGR","onSaveProcess","option","OPT_PREFINALIZARPROCESO","toggleModalEndProcess","OPT_FINALIZARPROCESO","OPT_SALVAPARCIAL","OPT_SALVAFULL","submitData","guardarDatosTabs","current","getFormValidation","validateForm","toggleTab","dataReturn2","Number","dataReturn","guardarDatosEmpresaIGR","guardarHistorialEmpresaIGR","guardarSeccionAccionista","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","guardarEstructuraEmpresaIGR","dataSet","guardarSeccionRelevoGeneracional","guardarFlujoOperativo","guardarSeccionEmpresaRelacionada","arr","Object","keys","indice","some","$$","guardarSeccionClienteIGR","datos","guardarSeccionProveedorIGR","guardarProyecciones","guardarRelacionesBancariasSeccionIGR","guardarSeccionMovimientosCuentas","guardarSeccionReciprocidad","guardarSeccionActivosFijosIGR","guardarAspectosAmbientalesIGR","guardarArquitecturaEmpresarialIGR","guardarNegocioObtenerIGR","guardarMatrizSeccionIGR","guardarRecomendacionesIGR","tab","window","scrollTo","toggleModalCloseOptions","removeBodyCss","toogleModalPrevisualizar","toggleShowSeleccionarCliente","document","body","classList","add","onSaveEndProcess","values","active","textAlign","marginTop","margin","setTimeout","marginLeft"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState, useEffect, useRef } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../../helpers/options_helper\"\r\nimport * as url from \"../../../../helpers/url_helper\"\r\nimport {\r\n  Table,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Nav,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n//i18n\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport classnames from \"classnames\"\r\nimport DatosGenerales from \"./Secciones/DatosGenerales\"\r\nimport GeneralesEmpresa from \"./Secciones/GeneralesEmpresa\"\r\nimport HistoriaEmpresa from \"./Secciones/HistoriaEmpresa\"\r\nimport InformacionAccionista from \"./Secciones/InformacionAccionosta\"\r\nimport EstructuraOrganizacionalEmpresa from \"./Secciones/EstructuraOrganizacionalEmpresa\"\r\nimport GobiernoCorporativo from \"./Secciones/GobiernoCorporativo\"\r\nimport RelevoGeneracional from \"./Secciones/RelevoGeneracional\"\r\nimport FlujoOperativo from \"./Secciones/FlujoOperativo\"\r\nimport EmpresasRelacionadas from \"./Secciones/EmpresasRelacionadas\"\r\nimport InformacionClientes from \"./Secciones/InformacionClientes\"\r\nimport InformacionProveedores from \"./Secciones/InformacionProveedores\"\r\nimport PrincipalesCompetidores from \"./Secciones/PrincipalesCompetidores\"\r\nimport Proyecciones from \"./Secciones/Proyecciones\"\r\nimport RelacionesBancarias from \"./Secciones/RelacionesBancarias\"\r\nimport MoviemientosCuentas from \"./Secciones/MoviemientosCuentas\"\r\nimport Reciprocidad from \"./Secciones/Reciprocidad\"\r\nimport FacilidadActivosFijos from \"./Secciones/FacilidadActivosFijos\"\r\nimport AspectosAmbientales from \"./Secciones/AspectosAmbientales\"\r\nimport InformacionGarante from \"./Secciones/InformacionGarante\"\r\nimport SegurosActualesEmpresa from \"./Secciones/SegurosActualesEmpresa\"\r\nimport ArquitecturaEmpresarial from \"./Secciones/ArquitecturaEmpresarial\"\r\nimport CuentasCobrar from \"./Secciones/CuentasCobrar\"\r\nimport Capex from \"./Secciones/Capex\"\r\nimport FlujoCaja from \"./Secciones/FlujoCaja\"\r\nimport NegociosObtener from \"./Secciones/NegociosObtener\"\r\nimport MatrizCompetitiva from \"./Secciones/MatrizCompetitiva\"\r\nimport RecomendacionesOtros from \"./Secciones/RecomendacionesOtros\"\r\nimport ApiServices from \"../../../../services/BackendServices/Services\";\r\n//import SeleccionarCliente from \"../SeleccionarCliente/index\"\r\nimport ModalCloseOptions from \"../../../../components/UI/ModalCloseOptions\"\r\nimport ModalEndProcess from \"../../../../components/EndProcess/ModalEndProcess\"\r\nimport LogProcess from \"../../../../components/LogProcess/index\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../services\";\r\nimport ModalPrevicualizarIGR from \"./previsualizarIGR\";\r\nlet modelo = {\r\n  datosGenerales: {\r\n    codigoTipoIdentificacion: null,\r\n    numeroCliente: null,\r\n    primerNombre: null,\r\n    segundoNombre: null,\r\n    primerApellido: null,\r\n    segundoApellido: null,\r\n    numeroIdentificacion: null,\r\n    transactId: 0,\r\n    economicGroup: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    economicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    subeconomicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    bank: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n  },\r\n  datosEmpresa: {\r\n    transactId: \"\",\r\n    referencePoint: \"\",\r\n    residency: \"\",\r\n    houseNumber: \"\",\r\n    phoneNumber: \"\",\r\n    mobileNumber: \"\",\r\n    workNumber: \"\",\r\n    email: \"\",\r\n    exclusion: false,\r\n    sustainable: false,\r\n    apto: \"\",\r\n    country: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    province: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    district: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    township: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    city: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    sector: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    subSector: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n  },\r\n  historiaEmpresa: {\r\n    transactId: 0,\r\n    description: null,\r\n    employeesNumber: null,\r\n    details: null\r\n  },\r\n  dataAccionistas: {\r\n    transactId: 0,\r\n    informacionAccionistaDetails: null,\r\n    datosTablaAccionistas: null,\r\n    observations: null,\r\n  },\r\n  dataGobiernoCorporativo: {\r\n    transactId: 0,\r\n    corporateIdentification: 0,\r\n    name: null,\r\n    position: null,\r\n    birthDate: null,\r\n    age: null,\r\n    status: true,\r\n    dataTableGobiernoCorporativo: null\r\n  },\r\n  dataRelevoGenrencial: {\r\n    trasactId: 0,\r\n    observations: null,\r\n    dataTableRelevoGerencial: null\r\n  },\r\n  dataFlujoOperativo: {\r\n    transactId: 0,\r\n    observations: null,\r\n    infoDate: null\r\n  },\r\n  dataEstructuraOrganizacional: {\r\n    transactId: 0,\r\n    description: null,\r\n    date: \"\"\r\n  },\r\n  dataEmpresaRelacionada: {\r\n    transactId: 0,\r\n    description: null,\r\n    observations: null,\r\n    dataTableEmpresaRelacionada: null,\r\n    date: \"\"\r\n  },\r\n  dataInformacionClientes: {\r\n    transactId: 0,\r\n    dataTableInformacionClientes: null,\r\n    description: null,\r\n    cicloVenta: false,\r\n    porcenVenta: null,\r\n    \"seasonalSales\": false,\r\n    \"percSeasonalPeriodSales\": 0,\r\n  },\r\n  dataInformacionProveedores: {\r\n    transactId: 0,\r\n    dataTableInformacionProveedores: null,\r\n    cicloCompra: null,\r\n    description: \"\",\r\n    purchasingCycle: \"\"\r\n  },\r\n  dataPrincipalesCompetidores: {\r\n    transactId: 0,\r\n    dataTablePrincipalesCompetidores: null\r\n  },\r\n  dataProyecciones: {\r\n    transactId: 0,\r\n    descripcion: null,\r\n    assetsOperatingAmount: null,\r\n    assetsOperatingReason: null,\r\n    fixedAssetsAmount: null,\r\n    fixedAssetsReason: null,\r\n    othersAssetsAmount: null,\r\n    othersAssetsReason: null,\r\n    bankAmount: null,\r\n    bankReason: null,\r\n    providersAmount: null,\r\n    providersReason: null,\r\n    capitalAmount: null,\r\n    capitalReason: null,\r\n    maximodeuda: null,\r\n    estimatedDate: null,\r\n  },\r\n  dataRelacionesBancarias: {\r\n    transactId: 0,\r\n    observations: null,\r\n    dataTablDeudaCorto: null,\r\n    dataTablDeudaLargo: null,\r\n    dataTablSowActual: null,\r\n    dataTablSowPropuesto: null,\r\n    sumatoriaDeudaCorto: { monto: 0, saldo1: 0, saldo2: 0, saldo3: 0 },\r\n    sumatoriaDeudaLargo: { monto: 0, saldo1: 0, saldo2: 0, saldo3: 0 }\r\n  },\r\n  dataMoviemientosCuentas: {\r\n    transactId: 0,\r\n    dataTableMovimientoCuentas: null,\r\n    details: null,\r\n    observations: null,\r\n  },\r\n  dataReciprocidad: {\r\n    transactId: 0,\r\n    dataTableReciprocidad: null,\r\n    description: null,\r\n    observations: null,\r\n  },\r\n  dataFacilidadActivosFijos: {\r\n    transactId: 0,\r\n    dataTableFacilidadActivosFijos: null,\r\n    variationsAssets: false,\r\n    variationsAssetsObs: \"\",\r\n    manufacturingAgroCompanies: false,\r\n    productionLine: \"\",\r\n    capacity: \"\",\r\n    usedCapacity: \"\",\r\n    tradingCompany: false,\r\n    warehouseCapacity: \"\",\r\n    transportDistributionFleet: false,\r\n    units: \"\",\r\n    renovation: \"\",\r\n\r\n  },\r\n  dataAspectosAmbientales: {\r\n    transactId: 0,\r\n    riskPreClassification: null,\r\n    sustainableCreditRating: \"2\",\r\n    riskClassificationConfirmation: null,\r\n    natureLocationProject: false,\r\n    physicalResettlement: false,\r\n    environmentalPermits: false,\r\n    newProject: false,\r\n    workersContractors: false\r\n  },\r\n  dataInformacionGarante: {\r\n    transactId: 0,\r\n    dataTbleInformacionGarantes: null\r\n  },\r\n  dataSegurosActualesEmpresa: {\r\n    transactId: 0,\r\n    dataTableSegurosActualesEmpresa: null\r\n  },\r\n  dataArquitecturaEmpresarial: {\r\n    transactId: 0,\r\n    ticCompanyUse: null,\r\n    auditedAreas: null\r\n  },\r\n  dataCuentasCobrar: {\r\n    transactId: 0,\r\n    dataTableCuentasCobrar: null\r\n  },\r\n  dataCapex: {\r\n    transactId: 0,\r\n    dataTableCapex1: null,\r\n    dataTableCapex2: null,\r\n    dataTableCapex3: null,\r\n  },\r\n  dataFlujoCaja: {\r\n     transactId: 0,\r\n     dataTableFlujoCaja1:null,\r\n     dataTableFlujoCaja2:null,\r\n     dataTableFlujoCaja3:null,\r\n     dataTableFlujoCaja4:null,\r\n     dataTableFlujoCaja5:null,\r\n     dataTableFlujoCaja6:null,\r\n     },\r\n  dataNegociosObtener: { transactId: 0, observations: null },\r\n  dataMatrizCompetitiva: {\r\n    transactId: 0,\r\n    observations: null,\r\n  },\r\n  dataRecomendacionesOtros: {\r\n    transactId: 0,\r\n    recommendations: \"\",\r\n    valueChain: \"\",\r\n    background: \"\",\r\n    refinancingLog: \"\"\r\n  },\r\n}\r\nconst FormularioIgr = props => {\r\n  const location = useLocation()\r\n  const history = useHistory();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  // modelo.datosGenerales.transactId=location.data.transactionId;\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(location.data);\r\n  //Entidad Busqueda y Descarte\r\n  const [selectedData, setSelectedData] = useState(modelo);\r\n  const [ModalPrevisualizardata, settoogleModalPrevisualizar] = useState(false);\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                          Variables de refactor para todos los paneles                          */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const datosGeneralesRef = useRef();\r\n  const generalesEmpresaRef = useRef();\r\n  const historiaEmpresaRef = useRef();\r\n  const informacionAccionistaRef = useRef();\r\n  const gobiernoCorporativoRef = useRef();\r\n  const flujoOperativoRef = useRef();\r\n  const estructuraOrganizacionalEmpresaRef = useRef();\r\n  const relevoGeneracionalRef = useRef();\r\n  const empresaRelacionadaRef = useRef();\r\n  const informacionClientesRef = useRef();\r\n  const InformacionProveedoresRef = useRef();\r\n  const PrincipalesCompetidoresRef = useRef();\r\n  const ProyeccionesRef = useRef();\r\n  const RelacionesBancariasRef = useRef();\r\n  const MoviemientosCuentasRef = useRef();\r\n  const ReciprocidadRef = useRef();\r\n  const FacilidadActivosFijosRef = useRef();\r\n  const AspectosAmbientalesRef = useRef();\r\n  const InformacionGaranteRef = useRef();\r\n  const SegurosActualesEmpresaRef = useRef();\r\n  const ArquitecturaEmpresarialRef = useRef();\r\n  const CuentasCobrarRef = useRef();\r\n  const CapexRef = useRef();\r\n  const FlujoCajaRef = useRef();\r\n  const NegociosObtenerRef = useRef();\r\n  const MatrizCompetitivaRef = useRef();\r\n  const RecomendacionesOtrosRef = useRef();\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                            Variables de estado para el indice de IGR                           */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false); //loading de la pagina\r\n  const [selectedClient, setSelectedClient] = useState(undefined); //cargar la data seleccionada\r\n  const [activeTab, setactiveTab] = useState(1) //Tab seleccionado. Por defecto 1\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalSeleccionarCliente, setDisplayModalSeleccionarCliente] = useState(false);\r\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\r\n  const [activarPantallas, setactivarPantallas] = useState(false);\r\n  const [dataAccionistas, setDataAccionistas] = useState([]); // Cargamos los datos al iniciar los datos\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    setSelectedData({\r\n      datosGenerales: {\r\n        codigoTipoIdentificacion: null,\r\n        numeroCliente: null,\r\n        primerNombre: null,\r\n        segundoNombre: null,\r\n        primerApellido: null,\r\n        segundoApellido: null,\r\n        numeroIdentificacion: null,\r\n        transactId: 0,\r\n        economicGroup: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        economicActivity: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        subeconomicActivity: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        bank: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n      },\r\n      datosEmpresa: {\r\n        transactId: \"\",\r\n        referencePoint: \"\",\r\n        residency: \"\",\r\n        houseNumber: \"\",\r\n        phoneNumber: \"\",\r\n        mobileNumber: \"\",\r\n        workNumber: \"\",\r\n        email: \"\",\r\n        exclusion: false,\r\n        sustainable: false,\r\n        apto: \"\",\r\n        country: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        province: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        district: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        township: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        city: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        sector: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n        subSector: {\r\n          code: \"\",\r\n          name: \"\"\r\n        },\r\n      },\r\n      historiaEmpresa: {\r\n        transactId: 0,\r\n        description: null,\r\n        employeesNumber: null,\r\n        details: null\r\n      },\r\n      dataAccionistas: {\r\n        transactId: 0,\r\n        informacionAccionistaDetails: null,\r\n        datosTablaAccionistas: null,\r\n        observations: null,\r\n      },\r\n      dataGobiernoCorporativo: {\r\n        transactId: 0,\r\n        corporateIdentification: 0,\r\n        name: null,\r\n        position: null,\r\n        birthDate: null,\r\n        age: null,\r\n        status: true,\r\n        dataTableGobiernoCorporativo: null\r\n      },\r\n      dataRelevoGenrencial: {\r\n        trasactId: 0,\r\n        observations: null,\r\n        dataTableRelevoGerencial: null\r\n      },\r\n      dataFlujoOperativo: {\r\n        transactId: 0,\r\n        observations: null,\r\n        infoDate: null\r\n      },\r\n      dataEstructuraOrganizacional: {\r\n        transactId: 0,\r\n        description: null,\r\n        date: \"\"\r\n      },\r\n      dataEmpresaRelacionada: {\r\n        transactId: 0,\r\n        description: null,\r\n        observations: null,\r\n        dataTableEmpresaRelacionada: null,\r\n        date: \"\"\r\n      },\r\n      dataInformacionClientes: {\r\n        transactId: 0,\r\n        dataTableInformacionClientes: null,\r\n        description: null,\r\n        cicloVenta: false,\r\n        porcenVenta: null,\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0,\r\n      },\r\n      dataInformacionProveedores: {\r\n        transactId: 0,\r\n        dataTableInformacionProveedores: null,\r\n        cicloCompra: null,\r\n        description: \"\",\r\n        purchasingCycle: \"\"\r\n      },\r\n      dataPrincipalesCompetidores: {\r\n        transactId: 0,\r\n        dataTablePrincipalesCompetidores: null\r\n      },\r\n      dataProyecciones: {\r\n        transactId: 0,\r\n        descripcion: null,\r\n        assetsOperatingAmount: null,\r\n        assetsOperatingReason: null,\r\n        fixedAssetsAmount: null,\r\n        fixedAssetsReason: null,\r\n        othersAssetsAmount: null,\r\n        othersAssetsReason: null,\r\n        bankAmount: null,\r\n        bankReason: null,\r\n        providersAmount: null,\r\n        providersReason: null,\r\n        capitalAmount: null,\r\n        capitalReason: null,\r\n        maximodeuda: null,\r\n        estimatedDate: null,\r\n      },\r\n      dataRelacionesBancarias: {\r\n        transactId: 0,\r\n        observations: null,\r\n        dataTablDeudaCorto: null,\r\n        dataTablDeudaLargo: null,\r\n        dataTablSowActual: null,\r\n        dataTablSowPropuesto: null,\r\n        sumatoriaDeudaCorto: { monto: 0, saldo1: 0, saldo2: 0, saldo3: 0 },\r\n        sumatoriaDeudaLargo: { monto: 0, saldo1: 0, saldo2: 0, saldo3: 0 }\r\n      },\r\n      dataMoviemientosCuentas: {\r\n        transactId: 0,\r\n        dataTableMovimientoCuentas: null,\r\n        details: null\r\n      },\r\n      dataReciprocidad: {\r\n        transactId: 0,\r\n        dataTableReciprocidad: null,\r\n        description: null,\r\n        observations: null,\r\n      },\r\n      dataFacilidadActivosFijos: {\r\n        transactId: 0,\r\n        dataTableFacilidadActivosFijos: null,\r\n        variationsAssets: true,\r\n        variationsAssetsObs: \"\",\r\n        manufacturingAgroCompanies: true,\r\n        productionLine: \"\",\r\n        capacity: \"\",\r\n        usedCapacity: \"\",\r\n        tradingCompany: true,\r\n        warehouseCapacity: \"\",\r\n        transportDistributionFleet: true,\r\n        units: \"\",\r\n        renovation: \"\",\r\n    \r\n      },\r\n      dataAspectosAmbientales: {\r\n        transactId: 0,\r\n        riskPreClassification: null,\r\n        sustainableCreditRating: \"2\",\r\n        riskClassificationConfirmation: null,\r\n        natureLocationProject: false,\r\n        physicalResettlement: false,\r\n        environmentalPermits: false,\r\n        newProject: false,\r\n        workersContractors: false\r\n      },\r\n      dataInformacionGarante: {\r\n        transactId: 0,\r\n        dataTbleInformacionGarantes: null\r\n      },\r\n      dataSegurosActualesEmpresa: {\r\n        transactId: 0,\r\n        dataTableSegurosActualesEmpresa: null\r\n      },\r\n      dataArquitecturaEmpresarial: {\r\n        transactId: 0,\r\n        ticCompanyUse: null,\r\n        auditedAreas: null\r\n      },\r\n      dataCuentasCobrar: {\r\n        transactId: 0,\r\n        dataTableCuentasCobrar: null\r\n      },\r\n      dataCapex: {\r\n        transactId: 0,\r\n        dataTableCapex1: null,\r\n        dataTableCapex2: null,\r\n        dataTableCapex3: null,\r\n      },\r\n      dataFlujoCaja: {\r\n         transactId: 0,\r\n         dataTableFlujoCaja1:null,\r\n         dataTableFlujoCaja2:null,\r\n         dataTableFlujoCaja3:null,\r\n         dataTableFlujoCaja4:null,\r\n         dataTableFlujoCaja5:null,\r\n         dataTableFlujoCaja6:null,\r\n         },\r\n      dataNegociosObtener: { transactId: 0, observations: null },\r\n      dataMatrizCompetitiva: {\r\n        transactId: 0,\r\n        observations: null,\r\n      },\r\n      dataRecomendacionesOtros: {\r\n        transactId: 0,\r\n        recommendations: \"\",\r\n        valueChain: \"\",\r\n        background: \"\",\r\n        refinancingLog: \"\"\r\n      },\r\n    })\r\n    setLocationData(location.data);\r\n    initializeData(location.data);\r\n\r\n  }, []);\r\n  //Caraga Inicial\r\n  function initializeData(InputData) {\r\n    if (InputData !== undefined && InputData !== null) {\r\n\r\n      //chequear si la tarea no ha sido iniciada\r\n      if (InputData.taskStatus === \"Ready\") {\r\n        const apiBpmServices = new BpmServices();\r\n        //Iniciamos la nueva tarea en BPM   \r\n        apiBpmServices.startedStatusTask(InputData.taskId)\r\n          .then((iniresult) => {\r\n            if (iniresult === undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n          })\r\n      } else {\r\n        setactivarPantallas(true)\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*              Cargamos todos los datos si existe algun registro de datos generales              */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const apiBack = new BackendServices();\r\n        \r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*            Cargatos todos los datos si exite algun registro de datos para la empresa           */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        apiBack.consultarDatosEmpresaIGR(InputData.transactionId).then(resp => {\r\n          modelo.datosEmpresa.transactId = InputData.transactionId;\r\n          modelo.datosEmpresa.country.code = resp.country.code;\r\n          modelo.datosEmpresa.country.name = resp.country.name;\r\n          modelo.datosEmpresa.province.name = resp.province.name;\r\n          modelo.datosEmpresa.province.code = resp.province.code;\r\n          modelo.datosEmpresa.district.code = resp.district.code;\r\n          modelo.datosEmpresa.district.name = resp.district.name;\r\n          modelo.datosEmpresa.township.name = resp.township.name;\r\n          modelo.datosEmpresa.township.code = resp.township.code;\r\n          modelo.datosEmpresa.city.code = resp.city.code;\r\n          modelo.datosEmpresa.city.name = resp.city.name;\r\n          modelo.datosEmpresa.referencePoint = resp.referencePoint;\r\n          modelo.datosEmpresa.residency = resp.residency;\r\n          modelo.datosEmpresa.houseNumber = resp.houseNumber;\r\n          modelo.datosEmpresa.phoneNumber = resp.phoneNumber;\r\n          modelo.datosEmpresa.mobileNumber = resp.mobileNumber;\r\n          modelo.datosEmpresa.workNumber = resp.workNumber;\r\n          modelo.datosEmpresa.email = resp.email;\r\n          modelo.datosEmpresa.sector.name = resp.sector.name;\r\n          modelo.datosEmpresa.sector.code = resp.sector.code;\r\n          modelo.datosEmpresa.subSector.name = resp.subSector.name;\r\n          modelo.datosEmpresa.subSector.code = resp.subSector.code;\r\n          modelo.datosEmpresa.exclusion = resp.exclusion;\r\n          modelo.datosEmpresa.sustainable = resp.sustainable;\r\n          setSelectedData(modelo);\r\n        }).catch((error) => {\r\n        });\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*           Cargatos todos los datos si exite algun registro de historia de la empresa           */\r\n        /* ----------------------------------------------------------------------------------------------*/\r\n        apiBack.consultarHistorialEmpresaIGR(InputData.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.historiaEmpresa.transactId = InputData.transactionId\r\n            modelo.historiaEmpresa.description = resp.data.description;\r\n            modelo.historiaEmpresa.employeesNumber = resp.data.employeesNumber;\r\n            modelo.historiaEmpresa.details = resp.data.details;\r\n            setSelectedData(modelo);\r\n          }\r\n        })\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                      Cargamos los datos por defecto del flujo de operativo                      */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        apiBack.consultarFlujoOperativo(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataFlujoOperativo.transactId = location.data.transactionId;\r\n            modelo.dataFlujoOperativo.observations = resp.observations;\r\n            modelo.dataFlujoOperativo.infoDate = resp.infoDate;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarSeccionAccionista(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataAccionistas.observations = resp;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarDatosEmpresaRelacionada(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataEmpresaRelacionada.observations = resp.observations;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarSeccionRelevoGeneracional(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataRelevoGenrencial.observations = resp;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarSeccionReciprocidad(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataReciprocidad.observations = resp;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarMatrizSeccionIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataMatrizCompetitiva.observations = resp.observations;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarSeccionMovimientosCuentas(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataMoviemientosCuentas.observations = resp.observations;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarActivosFijosIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataFacilidadActivosFijos.variationsAssets = resp.variationsAssets;\r\n            modelo.dataFacilidadActivosFijos.variationsAssetsObs = resp.variationsAssetsObs;\r\n            modelo.dataFacilidadActivosFijos.manufacturingAgroCompanies = resp.manufacturingAgroCompanies;\r\n            modelo.dataFacilidadActivosFijos.productionLine = resp.productionLine;\r\n            modelo.dataFacilidadActivosFijos.capacity = resp.capacity;\r\n            modelo.dataFacilidadActivosFijos.usedCapacity = resp.usedCapacity;\r\n            modelo.dataFacilidadActivosFijos.tradingCompany = resp.tradingCompany;\r\n            modelo.dataFacilidadActivosFijos.warehouseCapacity = resp.warehouseCapacity;\r\n            modelo.dataFacilidadActivosFijos.transportDistributionFleet = resp.transportDistributionFleet;\r\n            modelo.dataFacilidadActivosFijos.units = resp.units;\r\n            modelo.dataFacilidadActivosFijos.renovation = resp.renovation;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarSeccionProveedorIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataInformacionProveedores.description = resp.description;\r\n            modelo.dataInformacionProveedores.purchasingCycle = resp.purchasingCycle;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarNegocioObtenerIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataNegociosObtener.observations = resp.observations;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                               Cargamos los datos de Proyecciones                               */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        apiBack.consultarProyecciones(location.data.transactionId).then(resp => {\r\n\r\n          modelo.dataProyecciones.descripcion = resp.projectionsDTO.descripcion;\r\n          modelo.dataProyecciones.assetsOperatingAmount = resp.projectionsDTO.assetsOperatingAmount;\r\n          modelo.dataProyecciones.assetsOperatingReason = resp.projectionsDTO.assetsOperatingReason;\r\n          modelo.dataProyecciones.fixedAssetsAmount = resp.projectionsDTO.fixedAssetsAmount;\r\n          modelo.dataProyecciones.fixedAssetsReason = resp.projectionsDTO.fixedAssetsReason;\r\n          modelo.dataProyecciones.othersAssetsAmount = resp.projectionsDTO.othersAssetsAmount;\r\n          modelo.dataProyecciones.othersAssetsReason = resp.projectionsDTO.othersAssetsReason;\r\n          modelo.dataProyecciones.bankAmount = resp.projectionsDTO.bankAmount;\r\n          modelo.dataProyecciones.bankReason = resp.projectionsDTO.bankReason;\r\n          modelo.dataProyecciones.providersAmount = resp.projectionsDTO.providersAmount;\r\n          modelo.dataProyecciones.providersReason = resp.projectionsDTO.providersReason;\r\n          modelo.dataProyecciones.capitalAmount = resp.projectionsDTO.capitalAmount;\r\n          modelo.dataProyecciones.capitalReason = resp.projectionsDTO.capitalReason;\r\n          modelo.dataProyecciones.maximodeuda = resp.projectionsDTO.maximodeuda;\r\n          modelo.dataProyecciones.estimatedDate = resp.projectionsDTO.estimatedDate;\r\n          modelo.dataProyecciones.transactId = location.data.transactionId;\r\n          setSelectedData(modelo);\r\n\r\n        });\r\n        apiBack.consultarEstructuraEmpresaIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) { \r\n            modelo.dataEstructuraOrganizacional.transactId = location.data.transactionId;\r\n            modelo.dataEstructuraOrganizacional.description = resp.observations;\r\n            modelo.dataEstructuraOrganizacional.date = resp.infoDate;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarRelacionesBancariasSeccionIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataRelacionesBancarias.transactId = location.data.transactionId;\r\n            modelo.dataRelacionesBancarias.observations = resp.bankingRelationSection.observations;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarAspectosAmbientalesIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            console.log(resp);\r\n            modelo.dataAspectosAmbientales.transactId = location.data.transactionId;\r\n            modelo.dataAspectosAmbientales.riskPreClassification = resp.environmentalAspectsDTO.riskPreClassification;\r\n            modelo.dataAspectosAmbientales.sustainableCreditRating = resp.environmentalAspectsDTO.sustainableCreditRating;\r\n            modelo.dataAspectosAmbientales.riskClassificationConfirmation = resp.environmentalAspectsDTO.riskClassificationConfirmation;\r\n            modelo.dataAspectosAmbientales.natureLocationProject = resp.environmentalAspectsDTO.natureLocationProject;\r\n            modelo.dataAspectosAmbientales.physicalResettlement = resp.environmentalAspectsDTO.physicalResettlement;\r\n            modelo.dataAspectosAmbientales.environmentalPermits = resp.environmentalAspectsDTO.environmentalPermits;\r\n            modelo.dataAspectosAmbientales.newProject = resp.environmentalAspectsDTO.newProject;\r\n            modelo.dataAspectosAmbientales.workersContractors = resp.environmentalAspectsDTO.workersContractors;\r\n            // modelo.dataAspectosAmbientales.workersContractors=resp.environmentalAspectsDTO.workersContractors;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n\r\n        apiBack.consultarArquitecturaEmpresarialIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataArquitecturaEmpresarial.transactId = location.data.transactionId;\r\n            modelo.dataArquitecturaEmpresarial.ticCompanyUse = resp.ticCompanyUse;\r\n            modelo.dataArquitecturaEmpresarial.auditedAreas = resp.auditedAreas;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n        apiBack.consultarRecomendacionesIGR(location.data.transactionId).then(resp => {\r\n          if (resp !== undefined) {\r\n            modelo.dataRecomendacionesOtros.transactId = location.data.transactionId;\r\n            modelo.dataRecomendacionesOtros.recommendations = resp.recommendations;\r\n            modelo.dataRecomendacionesOtros.valueChain = resp.valueChain;\r\n            modelo.dataRecomendacionesOtros.background = resp.background;\r\n            modelo.dataRecomendacionesOtros.refinancingLog = resp.refinancingLog;\r\n            setSelectedData(modelo);\r\n          }\r\n        });\r\n\r\n      }\r\n      //carga inicial de cada seccion\r\n    }\r\n    else {\r\n      history.push(url.URL_DASHBOARD);\r\n    }\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n\r\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\r\n      toggleModalEndProcess();\r\n      return;\r\n    }\r\n\r\n    switch (option) {\r\n      case OPTs.OPT_FINALIZARPROCESO: {\r\n        toggleModalEndProcess();\r\n        return;\r\n      }\r\n      case OPTs.OPT_SALVAPARCIAL: {\r\n\r\n        break;\r\n      }\r\n      case OPTs.OPT_SALVAFULL: {\r\n        if (!submitData()) {\r\n          return;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    history.push(url.URL_DASHBOARD);\r\n  }\r\n  // funcion que sirve para ir guardando cada vez que se da en siguiente\r\n  function guardarDatosTabs() {\r\n    if (activeTab == 1) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*                    VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS GENERALES                    */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!datosGeneralesRef.current.getFormValidation()) {\r\n        datosGeneralesRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(1);\r\n        return false;\r\n      }\r\n      datosGeneralesRef.current.dataReturn2.transactId = Number(locationData.transactionId);\r\n      selectedData.datosGenerales = datosGeneralesRef.current.dataReturn2;\r\n      setSelectedData(selectedData)\r\n      toggleTab(activeTab + 1);\r\n    } else if (activeTab == 2) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*                  VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA EMPRESA                  */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!generalesEmpresaRef.current.getFormValidation()) {\r\n        generalesEmpresaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(2);\r\n        return false;\r\n      }\r\n      generalesEmpresaRef.current.dataReturn.transactId = Number(locationData.transactionId);      \r\n      selectedData.datosEmpresa = generalesEmpresaRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      console.log(generalesEmpresaRef);\r\n      apiBack.guardarDatosEmpresaIGR(selectedData.datosEmpresa).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 3) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!historiaEmpresaRef.current.getFormValidation()) {\r\n        historiaEmpresaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(3);\r\n        return false;\r\n      }\r\n      historiaEmpresaRef.current.dataReturn.transactId = locationData.transactionId;\r\n      selectedData.historiaEmpresa = historiaEmpresaRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      apiBack.guardarHistorialEmpresaIGR(selectedData.historiaEmpresa).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 4) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!informacionAccionistaRef.current.getFormValidation()) {\r\n        informacionAccionistaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(4);\r\n        return false;\r\n      }\r\n      informacionAccionistaRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataAccionistas = informacionAccionistaRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n\r\n      apiBack.guardarSeccionAccionista(selectedData.dataAccionistas).then(resp => {\r\n        // toggleTab(activeTab + 1);\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 5) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!estructuraOrganizacionalEmpresaRef.current.getFormValidation()) {\r\n        estructuraOrganizacionalEmpresaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(5);\r\n        return false;\r\n      }\r\n      var today = new Date();\r\n      var dd = today.getDate();\r\n      var mm = today.getMonth() + 1; //January is 0!\r\n      var yyyy = today.getFullYear();\r\n\r\n      if (dd < 10) {\r\n        dd = '0' + dd;\r\n      }\r\n\r\n      if (mm < 10) {\r\n        mm = '0' + mm;\r\n      }\r\n\r\n      today = yyyy + '-' + mm + '-' + dd;\r\n      estructuraOrganizacionalEmpresaRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      estructuraOrganizacionalEmpresaRef.current.dataReturn.date = today;\r\n      selectedData.dataEstructuraOrganizacional = estructuraOrganizacionalEmpresaRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarEstructuraEmpresaIGR(selectedData.dataEstructuraOrganizacional).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 7) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*           VALIDAMOS TODOS LOS DATOS DEL TAB DE LOS DATOS DE LA HISTORIA DE LA EMPRESA          */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!relevoGeneracionalRef.current.getFormValidation()) {\r\n        relevoGeneracionalRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(7);\r\n        return false;\r\n      }\r\n      relevoGeneracionalRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataRelevoGenrencial = relevoGeneracionalRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      let dataSet = {\r\n        transactId: Number(locationData.transactionId),\r\n        observations: selectedData.dataRelevoGenrencial.observations,\r\n      }\r\n      apiBack.guardarSeccionRelevoGeneracional(dataSet).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 8) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!flujoOperativoRef.current.getFormValidation()) {\r\n        flujoOperativoRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(8);\r\n        return false;\r\n      }\r\n      var today = new Date();\r\n      var dd = today.getDate();\r\n      var mm = today.getMonth() + 1; //January is 0!\r\n      var yyyy = today.getFullYear();\r\n\r\n      if (dd < 10) {\r\n        dd = '0' + dd;\r\n      }\r\n\r\n      if (mm < 10) {\r\n        mm = '0' + mm;\r\n      }\r\n\r\n      today = yyyy + '-' + mm + '-' + dd;\r\n      flujoOperativoRef.current.dataReturn.transactId = locationData.transactionId;\r\n      flujoOperativoRef.current.dataReturn.infoDate = today;\r\n      selectedData.dataFlujoOperativo = flujoOperativoRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarFlujoOperativo(selectedData.dataFlujoOperativo).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 9) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!empresaRelacionadaRef.current.getFormValidation()) {\r\n        empresaRelacionadaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(9);\r\n        return false;\r\n      }\r\n      empresaRelacionadaRef.current.dataReturn2.trasactId = Number(locationData.transactionId);\r\n      selectedData.dataEmpresaRelacionada = empresaRelacionadaRef.current.dataReturn2;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionEmpresaRelacionada(selectedData.dataEmpresaRelacionada).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 10) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!informacionClientesRef.current.getFormValidation()) {\r\n        informacionClientesRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(10);\r\n        return false;\r\n      }\r\n      informacionClientesRef.current.dataReturn.transactId = locationData.transactionId;\r\n      let arr = Object.keys(informacionClientesRef.current.dataReturn);\r\n      let indice = arr.some(($$) => informacionClientesRef.current.dataReturn[$$] == null);\r\n      // if (indice) {\r\n      //   informacionClientesRef.current.validateForm();\r\n      //   //nos movemos al tab para llenar los campos\r\n      //   toggleTab(10);\r\n      //   return false;\r\n      // }\r\n      selectedData.dataInformacionClientes = informacionClientesRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionClienteIGR(selectedData.dataInformacionClientes).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 11) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!InformacionProveedoresRef.current.getFormValidation()) {\r\n        InformacionProveedoresRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(11);\r\n        return false;\r\n      }\r\n      InformacionProveedoresRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataInformacionProveedores = InformacionProveedoresRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      let datos = {\r\n        \"transactId\": Number(locationData.transactionId),\r\n        \"description\": InformacionProveedoresRef.current.dataReturn.description,\r\n        \"purchasingCycle\": InformacionProveedoresRef.current.dataReturn.purchasingCycle\r\n      }\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionProveedorIGR(datos).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 12) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!PrincipalesCompetidoresRef.current.getFormValidation()) {\r\n        PrincipalesCompetidoresRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(12);\r\n        return false;\r\n      }\r\n      PrincipalesCompetidoresRef.current.dataReturn.transactId = locationData.transactionId;\r\n      let arr = Object.keys(PrincipalesCompetidoresRef.current.dataReturn);\r\n      let indice = arr.some(($$) => PrincipalesCompetidoresRef.current.dataReturn[$$] == null);\r\n      // if (indice) {\r\n      //   PrincipalesCompetidoresRef.current.validateForm();\r\n      //   //nos movemos al tab para llenar los campos\r\n      //   toggleTab(12);\r\n      //   return false;\r\n      // }\r\n      selectedData.dataPrincipalesCompetidores = PrincipalesCompetidoresRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarFlujoOperativo(selectedData.dataPrincipalesCompetidores).then(resp => {\r\n      })\r\n      toggleTab(activeTab + 1);\r\n    } else if (activeTab == 13) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!ProyeccionesRef.current.getFormValidation()) {\r\n        ProyeccionesRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(13);\r\n        return false;\r\n      }\r\n      ProyeccionesRef.current.dataReturn.transactId = locationData.transactionId;\r\n      let arr = Object.keys(ProyeccionesRef.current.dataReturn);\r\n      selectedData.dataProyecciones = ProyeccionesRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarProyecciones(selectedData.dataProyecciones).then(resp => {\r\n        toggleTab(activeTab + 1);\r\n      })\r\n    } else if (activeTab == 14) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!RelacionesBancariasRef.current.getFormValidation()) {\r\n        RelacionesBancariasRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(14);\r\n        return false;\r\n      }\r\n\r\n      RelacionesBancariasRef.current.dataReturn.transactId = locationData.transactionId;\r\n      let arr = Object.keys(RelacionesBancariasRef.current.dataReturn);\r\n      let indice = arr.some(($$) => RelacionesBancariasRef.current.dataReturn[$$] == null);\r\n      if (indice) {\r\n        RelacionesBancariasRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(14);\r\n        return false;\r\n      }\r\n      selectedData.dataRelacionesBancarias = RelacionesBancariasRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarRelacionesBancariasSeccionIGR(selectedData.dataRelacionesBancarias).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 15) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!MoviemientosCuentasRef.current.getFormValidation()) {\r\n        MoviemientosCuentasRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(15);\r\n        return false;\r\n      }\r\n\r\n      MoviemientosCuentasRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      let arr = Object.keys(MoviemientosCuentasRef.current.dataReturn);\r\n      let indice = arr.some(($$) => MoviemientosCuentasRef.current.dataReturn[$$] == null);\r\n      // if (indice) {\r\n      //   MoviemientosCuentasRef.current.validateForm();\r\n      //   //nos movemos al tab para llenar los campos\r\n      //   toggleTab(15);\r\n      //   return false;\r\n      // }\r\n      selectedData.dataMoviemientosCuentas = MoviemientosCuentasRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      let datos={\r\n        trasactId:Number(locationData.transactionId),\r\n        observations:MoviemientosCuentasRef.current.dataReturn.observations\r\n      }\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionMovimientosCuentas(datos).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 16) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!ReciprocidadRef.current.getFormValidation()) {\r\n        ReciprocidadRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(16);\r\n        return false;\r\n      }\r\n\r\n      ReciprocidadRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      let arr = Object.keys(ReciprocidadRef.current.dataReturn);\r\n      let indice = arr.some(($$) => ReciprocidadRef.current.dataReturn[$$] == null);\r\n      // if (indice) {\r\n      //   ReciprocidadRef.current.validateForm();\r\n      //   //nos movemos al tab para llenar los campos\r\n      //   toggleTab(16);\r\n      //   return false;\r\n      // }\r\n      selectedData.dataReciprocidad = ReciprocidadRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionReciprocidad(selectedData.dataReciprocidad).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 17) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!FacilidadActivosFijosRef.current.getFormValidation()) {\r\n        FacilidadActivosFijosRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(17);\r\n        return false;\r\n      }\r\n      FacilidadActivosFijosRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataFacilidadActivosFijos = FacilidadActivosFijosRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarSeccionActivosFijosIGR(selectedData.dataFacilidadActivosFijos).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 18) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      if (!AspectosAmbientalesRef.current.getFormValidation()) {\r\n        AspectosAmbientalesRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(18);\r\n        return false;\r\n      }\r\n      AspectosAmbientalesRef.current.dataReturn.transactId = locationData.transactionId;\r\n      let arr = Object.keys(AspectosAmbientalesRef.current.dataReturn);\r\n      // let indice = arr.some(($$) => AspectosAmbientalesRef.current.dataReturn[$$] == null);\r\n      // if (indice) {\r\n      //   AspectosAmbientalesRef.current.validateForm();\r\n      //   //nos movemos al tab para llenar los campos\r\n      //   toggleTab(18);\r\n      //   return false;\r\n      // }\r\n      selectedData.dataAspectosAmbientales = AspectosAmbientalesRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarAspectosAmbientalesIGR(selectedData.dataAspectosAmbientales).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 21) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!ArquitecturaEmpresarialRef.current.getFormValidation()) {\r\n        ArquitecturaEmpresarialRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(21);\r\n        return false;\r\n      }\r\n      ArquitecturaEmpresarialRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataArquitecturaEmpresarial = ArquitecturaEmpresarialRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarArquitecturaEmpresarialIGR(selectedData.dataArquitecturaEmpresarial).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 25) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!NegociosObtenerRef.current.getFormValidation()) {\r\n        NegociosObtenerRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(25);\r\n        return false;\r\n      }\r\n      NegociosObtenerRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataNegociosObtener = NegociosObtenerRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarNegocioObtenerIGR(selectedData.dataNegociosObtener).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 26) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!MatrizCompetitivaRef.current.getFormValidation()) {\r\n        MatrizCompetitivaRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(26);\r\n        return false;\r\n      }\r\n      MatrizCompetitivaRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataMatrizCompetitiva = MatrizCompetitivaRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarMatrizSeccionIGR(selectedData.dataMatrizCompetitiva).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else if (activeTab == 27) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*               Realizamos las validaciones del formulario para proceder a guardar               */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n\r\n      if (!RecomendacionesOtrosRef.current.getFormValidation()) {\r\n        RecomendacionesOtrosRef.current.validateForm();\r\n        //nos movemos al tab para llenar los campos\r\n        toggleTab(27);\r\n        return false;\r\n      }\r\n      RecomendacionesOtrosRef.current.dataReturn.transactId = Number(locationData.transactionId);\r\n      selectedData.dataRecomendacionesOtros = RecomendacionesOtrosRef.current.dataReturn;\r\n      setSelectedData(selectedData)\r\n      const apiBack = new BackendServices();\r\n      // Pasamos a guardar o actualizar los datos del flujo de operativo\r\n      apiBack.guardarRecomendacionesIGR(selectedData.dataRecomendacionesOtros).then(resp => {\r\n        if (resp != undefined) {\r\n          toggleTab(activeTab + 1);\r\n        }\r\n      })\r\n    } else {\r\n      toggleTab(activeTab + 1);\r\n    }\r\n  }\r\n  //guardar la data\r\n  function submitData() {\r\n\r\n    //si no es valido\r\n    if (!datosGeneralesRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      datosGeneralesRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(1);\r\n      return false;\r\n    }\r\n\r\n    //si no es valido\r\n    if (!generalesEmpresaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      generalesEmpresaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(2);\r\n      return false;\r\n    }\r\n\r\n    //si no es valido\r\n    if (!historiaEmpresaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      historiaEmpresaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(3);\r\n      return false;\r\n    }\r\n\r\n    //si no es valido\r\n    if (!informacionAccionistaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      informacionAccionistaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(4);\r\n      return false;\r\n    }\r\n\r\n    //si no es valido\r\n    if (!estructuraOrganizacionalEmpresaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      estructuraOrganizacionalEmpresaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(5);\r\n      return false;\r\n    }\r\n    //si no es valido\r\n    if (!gobiernoCorporativoRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      gobiernoCorporativoRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(6);\r\n      return false;\r\n    }\r\n    if (!relevoGeneracionalRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      relevoGeneracionalRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(7);\r\n      return false;\r\n    }\r\n    if (!flujoOperativoRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      flujoOperativoRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(8);\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!InformacionProveedoresRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      InformacionProveedoresRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(11);\r\n      return false;\r\n    }\r\n    if (!PrincipalesCompetidoresRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      PrincipalesCompetidoresRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(12);\r\n      return false;\r\n    }\r\n    if (!ProyeccionesRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      ProyeccionesRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(13);\r\n      return false;\r\n    }\r\n    if (!RelacionesBancariasRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      RelacionesBancariasRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(14);\r\n      return false;\r\n    }\r\n    if (!MoviemientosCuentasRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      MoviemientosCuentasRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(15);\r\n      return false;\r\n    }\r\n    if (!ReciprocidadRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      ReciprocidadRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(16);\r\n      return false;\r\n    }\r\n    if (!FacilidadActivosFijosRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      FacilidadActivosFijosRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(17);\r\n      return false;\r\n    }\r\n    if (!AspectosAmbientalesRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      AspectosAmbientalesRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(18);\r\n      return false;\r\n    }\r\n    if (!InformacionGaranteRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      InformacionGaranteRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(19);\r\n      return false;\r\n    }\r\n    if (!SegurosActualesEmpresaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      SegurosActualesEmpresaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(20);\r\n      return false;\r\n    }\r\n    if (!ArquitecturaEmpresarialRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      ArquitecturaEmpresarialRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(21);\r\n      return false;\r\n    }\r\n    if (!CuentasCobrarRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      CuentasCobrarRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(22);\r\n      return false;\r\n    }\r\n    if (!CapexRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      CapexRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(23);\r\n      return false;\r\n    }\r\n    if (!FlujoCajaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      FlujoCajaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(24);\r\n      return false;\r\n    }\r\n    if (!NegociosObtenerRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      NegociosObtenerRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(25);\r\n      return false;\r\n    }\r\n    if (!MatrizCompetitivaRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      MatrizCompetitivaRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(26);\r\n      return false;\r\n    }\r\n    if (!RecomendacionesOtrosRef.current.getFormValidation()) {\r\n      //mandamos a validar el formulario\r\n      RecomendacionesOtrosRef.current.validateForm();\r\n      //nos movemos al tab para llenar los campos\r\n      toggleTab(27);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  //moverse entre los tabs\r\n  function toggleTab(tab) {\r\n    if (activeTab !== tab) {\r\n      if (tab >= 1 && tab <= 27) {\r\n        setactiveTab(tab)\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  }\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n    removeBodyCss()\r\n  }\r\n  function toogleModalPrevisualizar() {\r\n    settoogleModalPrevisualizar(!ModalPrevisualizardata);\r\n    removeBodyCss()\r\n  }\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function toggleModalEndProcess() {\r\n    setDisplayModalEndProcess(!displayModalEndProcess);\r\n  }\r\n  //nuevo informe abrimos modal para buscar y seleccionar cliente\r\n  function toggleShowSeleccionarCliente() {\r\n    setDisplayModalSeleccionarCliente(!displayModalSeleccionarCliente);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    history.push(url.URL_DASHBOARD);\r\n  }\r\n\r\n  // toggleTab(1);\r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"ReinforcedManagementReport\")} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <h4 className=\"card-title\">{t(\"Reinforced Management Report\")}</h4>\r\n            <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n            <div className=\"form-wizard-wrapper wizard clearfix\">\r\n\r\n              <Row>\r\n                <Col md={3}>\r\n                  <Nav pills className=\"flex-column\">\r\n\r\n                    <NavLink className={classnames({ active: activeTab === 1 })}\r\n                      onClick={() => {\r\n                        toggleTab(1)\r\n                      }}>\r\n                      {t(\"General Data\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 2 })}\r\n                      onClick={() => {\r\n                        toggleTab(2)\r\n                      }}\r\n                    >\r\n                      {t(\"General of the Company\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 3 })}\r\n                      onClick={() => {\r\n                        toggleTab(3)\r\n                      }}\r\n                    >\r\n                      {t(\"History of the Company\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 4 })}\r\n                      onClick={() => {\r\n                        toggleTab(4)\r\n                      }}\r\n                    >\r\n                      {t(\"Shareholder Information\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 5 })}\r\n                      onClick={() => {\r\n                        toggleTab(5)\r\n                      }}\r\n                    >{t(\"OrganizationalStructure\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 6 })}\r\n                      onClick={() => {\r\n                        toggleTab(6)\r\n                      }}\r\n                    > {t(\"CorporateGovernance\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 7 })}\r\n                      onClick={() => {\r\n                        toggleTab(7)\r\n                      }}\r\n                    > {t(\"ManagementRelays\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 8 })}\r\n                      onClick={() => {\r\n                        toggleTab(8)\r\n                      }}\r\n                    > {t(\"OperationalFlow\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 9 })}\r\n                      onClick={() => {\r\n                        toggleTab(9)\r\n                      }}\r\n                    > {t(\"RelatedCompanies\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 10 })}\r\n                      onClick={() => {\r\n                        setactiveTab(10)\r\n                      }}\r\n                    > {t(\"ClientsInfo\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 11 })}\r\n                      onClick={() => {\r\n                        toggleTab(11)\r\n                      }}\r\n                    > {t(\"ProvidersInfo\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 12 })}\r\n                      onClick={() => {\r\n                        toggleTab(12)\r\n                      }}\r\n                    > {t(\"MainCompetitorsintheMarket\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 13 })}\r\n                      onClick={() => {\r\n                        toggleTab(13)\r\n                      }}\r\n                    > {t(\"Projections\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 14 })}\r\n                      onClick={() => {\r\n                        toggleTab(14)\r\n                      }}\r\n                    > {t(\"CurrentBankingRelations\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 15 })}\r\n                      onClick={() => {\r\n                        toggleTab(15)\r\n                      }}\r\n                    > {t(\"AccountMovements\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 16 })}\r\n                      onClick={() => {\r\n                        toggleTab(16)\r\n                      }}\r\n                    > {t(\"Reciprocity\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 17 })}\r\n                      onClick={() => {\r\n                        toggleTab(17)\r\n                      }}\r\n                    > {t(\"FixedAssetsFacilities\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 18 })}\r\n                      onClick={() => {\r\n                        toggleTab(18)\r\n                      }}\r\n                    > {t(\"EnvironmentalAspects\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 19 })}\r\n                      onClick={() => {\r\n                        toggleTab(19)\r\n                      }}\r\n                    > {t(\"GuarantorInformation\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 20 })}\r\n                      onClick={() => {\r\n                        toggleTab(20)\r\n                      }}\r\n                    > {t(\"CurrentCompanyInsurance\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 21 })}\r\n                      onClick={() => {\r\n                        toggleTab(21)\r\n                      }}\r\n                    > {t(\"EnterpriseArchitecture\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 22 })}\r\n                      onClick={() => {\r\n                        toggleTab(22)\r\n                      }}\r\n                    > {t(\"AccountsReceivable\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 23 })}\r\n                      onClick={() => {\r\n                        toggleTab(23)\r\n                      }}\r\n                    > {t(\"Capex\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 24 })}\r\n                      onClick={() => {\r\n                        toggleTab(24)\r\n                      }}\r\n                    > {t(\"CashFlow\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 25 })}\r\n                      onClick={() => {\r\n                        toggleTab(25)\r\n                      }}\r\n                    > {t(\"BusinessObtain\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 26 })}\r\n                      onClick={() => {\r\n                        toggleTab(26)\r\n                      }}\r\n                    > {t(\"Matriz Competitiva\")}\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                      className={classnames({ active: activeTab === 27 })}\r\n                      onClick={() => {\r\n                        toggleTab(27)\r\n                      }}\r\n                    > {t(\"RecomendationsAndOthers\")}\r\n                    </NavLink>\r\n\r\n                  </Nav>\r\n                </Col>\r\n                <Col md={9}>\r\n                  <TabContent activeTab={activeTab} className=\"body\">\r\n                    <TabPane tabId={1}>\r\n                      <DatosGenerales datosGenerales={selectedData.datosGenerales} ref={datosGeneralesRef} onSubmit={submitData} onOpenClientSelection={() => { toggleShowSeleccionarCliente() }} selectedClient={selectedClient} />\r\n                    </TabPane>\r\n                    <TabPane tabId={2}>\r\n                      <GeneralesEmpresa datosEmpresa={selectedData.datosEmpresa} ref={generalesEmpresaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={3}>\r\n                      <HistoriaEmpresa locationData={locationData} historiaEmpresa={selectedData.historiaEmpresa} ref={historiaEmpresaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={4}>\r\n                      <InformacionAccionista jsonAccionistas={selectedData.dataAccionistas} ref={informacionAccionistaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={5}>\r\n                      <EstructuraOrganizacionalEmpresa locationData={locationData} dataEstructuraOrganizacional={selectedData.dataEstructuraOrganizacional} ref={estructuraOrganizacionalEmpresaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={6}>\r\n                      <GobiernoCorporativo ref={gobiernoCorporativoRef} jsonCorporativo={selectedData.dataGobiernoCorporativo} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={7}>\r\n                      <RelevoGeneracional dataRelevoGenrencial={selectedData.dataRelevoGenrencial} ref={relevoGeneracionalRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={8}>\r\n                      <FlujoOperativo locationData={locationData} dataFlujoOperativo={selectedData.dataFlujoOperativo} ref={flujoOperativoRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={9}>\r\n                      <EmpresasRelacionadas dataEmpresaRelacionada={selectedData.dataEmpresaRelacionada} ref={empresaRelacionadaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={10}>\r\n                      <InformacionClientes dataInformacionClientes={selectedData.dataInformacionClientes} ref={informacionClientesRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={11}>\r\n                      <InformacionProveedores dataInformacionProveedores={selectedData.dataInformacionProveedores} ref={InformacionProveedoresRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={12}>\r\n                      <PrincipalesCompetidores dataPrincipalesCompetidores={selectedData.dataPrincipalesCompetidores} ref={PrincipalesCompetidoresRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={13}>\r\n                      <Proyecciones locationData={locationData} dataProyecciones={selectedData.dataProyecciones} ref={ProyeccionesRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={14}>\r\n                      <RelacionesBancarias dataRelacionesBancarias={selectedData.dataRelacionesBancarias} ref={RelacionesBancariasRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={15}>\r\n                      <MoviemientosCuentas dataMoviemientosCuentas={selectedData.dataMoviemientosCuentas} ref={MoviemientosCuentasRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={16}>\r\n                      <Reciprocidad dataReciprocidad={selectedData.dataReciprocidad} ref={ReciprocidadRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={17}>\r\n                      <FacilidadActivosFijos locationData={locationData} dataFacilidadActivosFijos={selectedData.dataFacilidadActivosFijos} ref={FacilidadActivosFijosRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={18}>\r\n                      <AspectosAmbientales locationData={locationData} dataAspectosAmbientales={selectedData.dataAspectosAmbientales} ref={AspectosAmbientalesRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={19}>\r\n                      <InformacionGarante dataInformacionGarante={selectedData.dataInformacionGarante} ref={InformacionGaranteRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={20}>\r\n                      <SegurosActualesEmpresa dataSegurosActualesEmpresa={selectedData.dataSegurosActualesEmpresa} ref={SegurosActualesEmpresaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={21}>\r\n                      <ArquitecturaEmpresarial locationData={locationData}  dataArquitecturaEmpresarial={selectedData.dataArquitecturaEmpresarial} ref={ArquitecturaEmpresarialRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={22}>\r\n                      <CuentasCobrar locationData={locationData} dataCuentasCobrar={selectedData.dataCuentasCobrar} ref={CuentasCobrarRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={23}>\r\n                      <Capex locationData={locationData} dataCapex={selectedData.dataCapex} ref={CapexRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={24}>\r\n                      <FlujoCaja locationData={locationData} dataFlujoCaja={selectedData.dataFlujoCaja} ref={FlujoCajaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={25}>\r\n                      <NegociosObtener dataNegociosObtener={selectedData.dataNegociosObtener} ref={NegociosObtenerRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={26}>\r\n                      <MatrizCompetitiva dataMatrizCompetitiva={selectedData.dataMatrizCompetitiva} ref={MatrizCompetitivaRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                    <TabPane tabId={27}>\r\n                      <RecomendacionesOtros dataRecomendacionesOtros={selectedData.dataRecomendacionesOtros} ref={RecomendacionesOtrosRef} onSubmit={submitData} />\r\n                    </TabPane>\r\n                  </TabContent>\r\n\r\n                  <Row>\r\n                    <Col md={12} style={{ textAlign: \"right\", marginTop: \"10px\" }}>\r\n\r\n                      <Button color=\"info\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toogleModalPrevisualizar() }}><i className=\"mdi mdi-eye mdi-12px\"></i> Previsualizar</Button>\r\n                      <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleModalCloseOptions() }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n\r\n                      {activeTab > 1 && (\r\n                        <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleTab(activeTab - 1); }}><i className=\"mdi mdi-arrow-left-bold mid-12px\"></i> {t(\"Previous\")}</Button>\r\n                      )\r\n                      }\r\n\r\n                      {activeTab < 27 && (\r\n                        <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => {\r\n                          guardarDatosTabs(); setTimeout(() => {\r\n                            guardarDatosTabs();\r\n                          }, 1000);\r\n                        }}>{t(\"Next\")} <i className=\"mdi mdi-arrow-right-bold mid-12px\"></i></Button>\r\n                      )\r\n                      }\r\n\r\n                      <Button color=\"success\" type=\"button\" style={{ marginLeft: '5px' }} onClick={() => { guardarDatosTabs(); onSaveProcess(OPTs.OPT_SALVAFULL) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Continue\")}</Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <LogProcess />\r\n\r\n        <ModalCloseOptions onSaveProcess={onSaveProcess} isOpen={displayModalCloseOptions} toggle={() => { toggleModalCloseOptions() }} />\r\n\r\n        <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { toggleModalEndProcess() }} />\r\n        <ModalPrevicualizarIGR dataIGR={selectedData} isOpen={ModalPrevisualizardata} toggle={() => { toogleModalPrevisualizar() }} />\r\n      </div>\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default FormularioIgr;\r\n"]},"metadata":{},"sourceType":"module"}