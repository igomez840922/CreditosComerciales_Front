{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\10_Fideicomiso\\\\Relacionfiduciaria\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardHeader, CardBody, Row, Col, Button, CardFooter } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport DatosServicioFiduciario from \"./DatosServicioFiduciario\";\nimport DatosOtrosDatos from \"./DatosOtrosDatos\";\nimport ModalCloseOptions from \"./ModalCloseOptions\";\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\nimport { BpmServices } from \"../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { BackendServices, CoreServices } from \"../../../../services\";\nimport React, { useEffect, useState } from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    selectedData\n  } = location;\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [ServiciosFiduciario, setServiciosFiduciario] = useState(null);\n  const [OtherServiciosFiduciario, setOtherServiciosFiduciario] = useState(null);\n  const [BasaFid, setBasaFid] = useState(null);\n  const [DataGeneral, setDataGeneral] = useState(null);\n  const [locationData, setLocationData] = useState(null); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [mainDebtor, setmainDebtor] = useState(null); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadUserProspect(locationData.transactionId); // Read Api Service data\n\n    LoadAll();\n  }\n\n  function loadUserProspect(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    LoadAll();\n  }, []);\n\n  function LoadAll() {\n    LoadFiduciario();\n    LoadOtherFiduciario();\n    LoadNumeroFideicomiso();\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n  } //Modal Opciones al Salir\n\n\n  function toggleModalModalAdvanceOptions() {\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 3:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 4:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    } // history.push(\"/dashboard\");\n\n  }\n\n  function LoadFiduciario() {\n    apiServiceBackend.consultarSeccionServiciosFiduciario(location.data.transactionId).then(resp => {\n      let data = resp;\n      (data != null || data != undefined) && setServiciosFiduciario(data);\n    });\n  }\n\n  function LoadOtherFiduciario() {\n    apiServiceBackend.consultarSeccionOtrosServiciosFiduciario(location.data.transactionId).then(resp => {\n      let data = resp;\n      (data != null || data != undefined) && setOtherServiciosFiduciario(data);\n    });\n  }\n\n  function LoadNumeroFideicomiso() {\n    apiServiceBackend.consultarNumeroFideicomiso(location.data.transactionId).then(resp => {\n      setBasaFid(resp[0]);\n      let data = resp.data; // (data != null || data != undefined) && setRecomendation(data);\n    });\n  }\n\n  async function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setDataGeneral({\n      transactId: location.data.transactionId,\n      ...values\n    });\n    toggleModalModalAdvanceOptions();\n  }\n  /*\r\n  // Camino Feliz ... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Ajustes \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"TrustServices\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"Assignescrownumber\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: [mainDebtor != null ? mainDebtor.typePerson === \"1\" ? mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2 : mainDebtor.name : \"\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n          className: \"needs-validation\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(DatosGenerales, {\n            BasaFid: BasaFid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatosServicioFiduciario, {\n            ServiciosFiduciario: ServiciosFiduciario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatosOtrosDatos, {\n            OtherServiciosFiduciario: OtherServiciosFiduciario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"dark\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                onSaveProcess(2);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 114\n              }, this), \" \", props.t(\"Exit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"submit\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {},\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 99\n              }, this), \" \", props.t(\"Advance\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAdvanceOptions, {\n        DataGeneral: DataGeneral,\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalAdvanceOptions,\n        toggle: () => {\n          toggleModalModalAdvanceOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"fytX8hc0S2PsI5hXQ73vWMPhArU=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {\n  selectedId: PropTypes.any,\n  onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/Relacionfiduciaria/index.js"],"names":["PropTypes","useLocation","useHistory","Link","Card","CardHeader","CardBody","Row","Col","Button","CardFooter","Breadcrumbs","withTranslation","DatosGenerales","DatosServicioFiduciario","DatosOtrosDatos","ModalCloseOptions","ModalAdvanceOptions","BpmServices","SweetAlert","url","BackendServices","CoreServices","React","useEffect","useState","AvForm","AvField","AvGroup","PantallaBusqueda","props","history","location","selectedData","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalAdvanceOptions","setDisplayModalAdvanceOptions","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","ServiciosFiduciario","setServiciosFiduciario","OtherServiciosFiduciario","setOtherServiciosFiduciario","BasaFid","setBasaFid","DataGeneral","setDataGeneral","locationData","setLocationData","backendServices","setbackendServices","bpmServices","setbpmServices","coreServices","setcoreServices","mainDebtor","setmainDebtor","data","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","loadUserProspect","LoadAll","consultPrincipalDebtor","LoadFiduciario","LoadOtherFiduciario","LoadNumeroFideicomiso","toggleModalCloseOptions","toggleModalModalAdvanceOptions","onSaveProcess","option","api","instanceId","abortProcess","t","apiServiceBackend","consultarSeccionServiciosFiduciario","resp","consultarSeccionOtrosServiciosFiduciario","consultarNumeroFideicomiso","handleSubmit","event","errors","values","preventDefault","transactId","typePerson","name","name2","lastName","lastName2","textAlign","margin","propTypes","selectedId","any","onClose","func","isRequired"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport DatosServicioFiduciario from \"./DatosServicioFiduciario\"\r\nimport DatosOtrosDatos from \"./DatosOtrosDatos\"\r\nimport ModalCloseOptions from \"./ModalCloseOptions\";\r\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\r\nimport { BpmServices } from \"../../../../services\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport * as url from \"../../../../helpers/url_helper\";\r\n\r\nimport { BackendServices, CoreServices } from \"../../../../services\";\r\nimport React, { useEffect, useState } from \"react\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nconst PantallaBusqueda = props => {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const { selectedData } = location;\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n\r\n  const [ServiciosFiduciario, setServiciosFiduciario] = useState(null);\r\n  const [OtherServiciosFiduciario, setOtherServiciosFiduciario] = useState(null);\r\n  const [BasaFid, setBasaFid] = useState(null);\r\n  const [DataGeneral, setDataGeneral] = useState(null);\r\n  \r\n  const [locationData, setLocationData] = useState(null);\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n\r\n    loadUserProspect(locationData.transactionId)\r\n    // Read Api Service data\r\n    LoadAll();\r\n  }\r\n\r\n  function loadUserProspect(transactionId) {\r\n    // consultarDeudorPrincipal\r\n    backendServices.consultPrincipalDebtor(transactionId)\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          setmainDebtor(data);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    LoadAll();\r\n  }, []);\r\n\r\n\r\n  function LoadAll() {\r\n    LoadFiduciario();\r\n    LoadOtherFiduciario();\r\n    LoadNumeroFideicomiso();\r\n  }\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n  }\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalModalAdvanceOptions() {\r\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\r\n  }\r\n\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 3: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 4: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n    // history.push(\"/dashboard\");\r\n  }\r\n\r\n  function LoadFiduciario() {\r\n    apiServiceBackend.consultarSeccionServiciosFiduciario(location.data.transactionId).then(resp => {\r\n      let data = resp;\r\n      (data != null || data != undefined) && setServiciosFiduciario(data);\r\n    });\r\n  }\r\n\r\n  function LoadOtherFiduciario() {\r\n    apiServiceBackend.consultarSeccionOtrosServiciosFiduciario(location.data.transactionId).then(resp => {\r\n      let data = resp;\r\n      (data != null || data != undefined) && setOtherServiciosFiduciario(data);\r\n    });\r\n  }\r\n\r\n  function LoadNumeroFideicomiso() {\r\n    apiServiceBackend.consultarNumeroFideicomiso(location.data.transactionId).then(resp => {\r\n      setBasaFid(resp[0]);\r\n      let data = resp.data;\r\n      // (data != null || data != undefined) && setRecomendation(data);\r\n    });\r\n  }\r\n\r\n  async function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    setDataGeneral({ transactId: location.data.transactionId, ...values });\r\n\r\n    toggleModalModalAdvanceOptions()\r\n  }\r\n\r\n\r\n  /*\r\n  // Camino Feliz ... \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"no\"\r\n  };\r\n    \r\n  //Requiere Ajustes \r\n  var values = {\r\n    \"processId\": OPTs.PROCESS_SUPERVISORANALISISCREDITO.toString(),\r\n    \"activityId\": OPTs.ACT_NONE.toString(),\r\n    \"transactionId\": locationData.transactionId,\r\n    \"requestId\":locationData.requestId,\r\n    \"decision\":\"si\"\r\n  };\r\n  */\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"TrustServices\")} />\r\n\r\n        <Card>\r\n        <CardHeader>\r\n              <Row>\r\n                <Col>\r\n                  <h4 className=\"card-title\">{t(\"Assignescrownumber\")}</h4>\r\n                  <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n                </Col>\r\n              </Row> \r\n              <Row>\r\n                <Col sm={6}>\r\n                  <h5 className=\"card-title\">{mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? (mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2) : (mainDebtor.name)): \"\"} </h5>\r\n                </Col>\r\n                <Col sm={6}>\r\n                  <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                </Col>\r\n              </Row>                           \r\n            </CardHeader>\r\n        \r\n\r\n\r\n          <AvForm className=\"needs-validation\" onSubmit={handleSubmit}>\r\n\r\n            <DatosGenerales BasaFid={BasaFid} />\r\n\r\n            <DatosServicioFiduciario ServiciosFiduciario={ServiciosFiduciario} />\r\n\r\n            <DatosOtrosDatos OtherServiciosFiduciario={OtherServiciosFiduciario} />\r\n\r\n            <CardFooter style={{ textAlign: \"right\" }}>\r\n              <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(2); }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n              <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }} onClick={() => { }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {props.t(\"Advance\")}</Button>\r\n              {/*\r\n                  <Link className=\"btn btn-dark\" to={ { pathname: \"/creditocomercial/fideicomiso\", selectedData: undefined } }>{props.t(\"Close\")}</Link>\r\n\r\n              <Button color=\"negative\" type=\"button\" style={{ margin: '5px' }}>\r\n                { props.t(\"reject\") }\r\n              </Button>\r\n\r\n              <Button  color=\"success\" type=\"button\" style={{ margin: '5px' }}>\r\n                { props.t(\"Advance\") }\r\n              </Button>\r\n\r\n              <Button  color=\"success\" type=\"button\" style={{ margin: '5px' }}>\r\n                { props.t(\"GenerateDocument\") }\r\n              </Button>\r\n                        */}\r\n            </CardFooter>\r\n\r\n          </AvForm>\r\n        </Card>\r\n        <ModalAdvanceOptions DataGeneral={DataGeneral} onSaveProcess={onSaveProcess} isOpen={displayModalAdvanceOptions} toggle={() => { toggleModalModalAdvanceOptions() }} />\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  selectedId: PropTypes.any,\r\n  onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}