{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport moment from \"moment\";\nimport { Row, Col, Card, CardBody, Button, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\nimport { BackendServices, CoreServices } from '../../../../../services';\nimport SearchClientCore from \"../../../../../components/Common/SearchClientCore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatosGenerales = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmDatosGenerales');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn2\n  }));\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [datosClientes, setDatosCliente] = useState([]);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\n  const [banca, setBanca] = useState([]);\n  const [bancaSelected, setBancaSelected] = useState(undefined);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\n  const [bancaDate, setDataBanca] = useState([]);\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\n  const [dataReturn, setDataReturn] = useState({\n    codigoTipoPersona: null,\n    codigoTipoIdentificacion: null,\n    numeroCliente: null,\n    primerNombre: null,\n    segundoNombre: null,\n    primerApellido: null,\n    segundoApellido: null,\n    numeroIdentificacion: null,\n    transactId: 0,\n    economicGroup: {\n      code: \"\",\n      name: \"\"\n    },\n    economicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    subeconomicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    bank: {\n      code: \"\",\n      name: \"\"\n    }\n  });\n  const [dataReturn2, setDataReturn2] = useState();\n  const [formValid, setFormValid] = useState(false);\n  const [cambio, setCambio] = useState(2);\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\n  const [dataDeudores, setdataDeudores] = useState(null);\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\n  const [dataActividadEmpresa, setdataActividadEmpresa] = useState({\n    label: \"\",\n    value: \"\"\n  });\n\n  function handleChange(e) {\n    setFormValid(false);\n  } //On Mounting (componentDidMount)\n\n\n  React.useEffect(() => {\n    // Read Api Service data      \n    consultarDatos();\n    loadInitialData();\n    cargarListaGrupoEconomico();\n    cargarBancas();\n    cargarActividadEconomica();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n\n    try {\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n        if (defaultVal !== undefined) {\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\n\n        if (defaultVal !== undefined) {\n          setGruposEconomicosSelected(defaultVal);\n        }\n      }\n\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\n\n        if (defaultVal !== undefined) {\n          setBancaSelected(defaultVal);\n        }\n      }\n\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setActividadEmpresaSelected(defaultVal);\n        }\n      }\n\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setSubActividadEmpresaSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [cambio]);\n  React.useEffect(() => {\n    try {\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\n        loadClientSelectedData(props.selectedClient);\n      }\n    } catch (err) {}\n  }, [props.selectedClient]); ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\n  ///////////////////////////////////////////////\n\n  function cargarActividadEconomica() {\n    const api = new CoreServices();\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectcompanyactivity\"),\r\n          options: json,\r\n        },\r\n      ];*/\n\n\n      setActividadEmpresa(json);\n\n      if (dataReturn.economicActivity !== null) {\n        cargarSubActividadEconomica(dataReturn.economicActivity.code);\n      }\n\n      setCambio(null);\n      setCambio(5);\n    });\n  }\n\n  function cargarSubActividadEconomica(codActividad) {\n    const api = new CoreServices();\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectcompanyactivity\"),\r\n          options: json,\r\n        },\r\n      ];*/\n\n\n      setSubActividadEmpresa(json);\n\n      if (dataReturn.subeconomicActivity !== null) {\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\n      } else {\n        dataReturn.subeconomicActivity = {\n          code: json[0].value,\n          name: json[0].label\n        };\n        setSubActividadEmpresaSelected(json[0]);\n      }\n\n      setCambio(null);\n      setCambio(5);\n    });\n  }\n\n  function cargarListaGrupoEconomico() {\n    const api = new CoreServices();\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        if (response.Records[i][\"Code\"] == \"0003\") {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        } else {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        }\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectGroup\"),\r\n          options: json,\r\n        },\r\n      ];*/\n\n\n      setGruposEconomicos(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  }\n\n  function cargarBancas() {\n    const api = new CoreServices();\n    api.getBancaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectBanking\"),\r\n          options: json,\r\n        },\r\n      ];*/\n\n\n      setBanca(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  }\n\n  function consultarDatos() {\n    const apiBack = new BackendServices(); //{ transactId: location.data.transactionId, processId: location.data.processId, activityId: location.data.activityId }\n\n    apiBack.consultarUsuarioProspecto(locationData.transactionId).then(resp => {\n      dataReturn.codigoTipoPersona = resp.personType;\n      dataReturn.numeroCliente = resp.customerNumberT24;\n      dataReturn.primerNombre = resp.firstName;\n      dataReturn.segundoNombre = resp.secondName;\n      dataReturn.primerApellido = resp.firstLastName;\n      dataReturn.segundoApellido = resp.secondLastName;\n      dataReturn.numeroIdentificacion = resp.customerDocumentId;\n      dataReturn.nuevoDato = \"\";\n      setDataReturn(dataReturn);\n    });\n    apiBack.consultarDatosGeneralesIGR(locationData.transactionId).then(resp => {\n      dataReturn.codigoTipoIdentificacion = resp.identificationType;\n      dataReturn.transactId = locationData.transactionId;\n      dataReturn.economicGroup.code = resp.economicGroup.code;\n      dataReturn.economicGroup.name = resp.economicGroup.name;\n      dataReturn.economicActivity.code = resp.economicActivity.code;\n      dataReturn.economicActivity.name = resp.economicActivity.name;\n      dataReturn.subeconomicActivity.code = resp.subeconomicActivity.code;\n      dataReturn.subeconomicActivity.name = resp.subeconomicActivity.name;\n      dataReturn.bank.code = resp.bank.code;\n      dataReturn.bank.name = resp.bank.name;\n      setDataReturn(dataReturn);\n      setCambio(null);\n      setCambio(5);\n    }).catch(error => {});\n  }\n\n  function guardarDatosGenerales() {\n    const apiBack = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Actualizamos los datos del cliente                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    let dataGenerales = {\n      customerId: locationData.customerId,\n      transactId: Number(locationData.transactionId),\n      personType: dataReturn.codigoTipoPersona,\n      identificationType: dataReturn.codigoTipoIdentificacion,\n      customerDocumentId: dataReturn.numeroIdentificacion,\n      customerNumberT24: dataReturn.numeroCliente,\n      firstName: dataReturn.primerNombre,\n      secondName: dataReturn.segundoNombre,\n      firstLastName: dataReturn.primerApellido,\n      secondLastName: dataReturn.segundoApellido,\n      \"economicGroup\": {\n        \"code\": dataReturn.economicGroup.code,\n        \"name\": dataReturn.economicGroup.name\n      },\n      \"economicActivity\": {\n        \"code\": dataReturn.economicActivity.code,\n        \"name\": dataReturn.economicActivity.name\n      },\n      \"subeconomicActivity\": {\n        \"code\": dataReturn.subeconomicActivity.code,\n        \"name\": dataReturn.subeconomicActivity.name\n      },\n      \"bank\": {\n        \"code\": dataReturn.bank.code,\n        \"name\": dataReturn.bank.name\n      },\n      date: moment().format(\"YYYY-MM-DD\"),\n      status: true\n    }; // apiBack.guardarUsuarioProspecto(data0).then(response => {\n    // });\n\n    apiBack.guardarDatosGeneralesIGR(dataGenerales).then(resp => {\n      setFormValid(true);\n    });\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    // if (dataReturn.economicGroup.code == \"\" || dataReturn.economicGroup.code == null) {\n    //   setcampoRequeridoGrupo(true);\n    //   return;\n    // } else {\n    //   setcampoRequeridoGrupo(false);\n    // }\n    // if (dataReturn.bank.code == \"\" || dataReturn.bank.code == null) {\n    //   setcampoRequeridoBanca(true);\n    //   return;\n    // } else {\n    //   setcampoRequeridoBanca(false);\n    // }\n    // if (dataReturn.economicActivity.code == \"\" || dataReturn.economicActivity.code == null) {\n    //   setcampoRequeridoActividad(true);\n    //   return;\n    // } else {\n    //   setcampoRequeridoActividad(false);\n    // }\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setDataReturn2(dataReturn);\n    setDataReturn(dataReturn);\n    guardarDatosGenerales();\n    setFormValid(true); // props.onSubmit();\n  }\n\n  function loadInitialData() {\n    const apiServiceBackend = new ApiServiceBackend();\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        console.log(\"consultarCatalogoTipoPersona\", data);\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"ID Type\"),\r\n            options: json,\r\n          },\r\n        ];*/\n\n\n        setIdentificationTypeList(json);\n      }\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n    apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataDeudores(resp.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: async () => await apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(data.typePerson)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: Number(data.typePerson) === 2 ? data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.idType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.clientDocId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, data.personId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setdataDeudores( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: t(\"NoData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this));\n      }\n    }).catch(error => {}); // api.getIdentificationTypeList()\n    // .then((data) => {\n    //   setIdentificationTypeList(data);        \n    // })\n    // .catch((error) => {    \n    //   console.error('Error fetching documents', error);\n    // });    \n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"tipoPersona\") {\n      dataReturn.codigoTipoPersona = e.value;\n    }\n\n    if (tipo == \"Tipo\") {\n      dataReturn.codigoTipoIdentificacion = e.value;\n    }\n\n    if (tipo == \"codigoGrupo\") {\n      dataReturn.economicGroup.code = e.value;\n      dataReturn.economicGroup.name = e.label;\n      setCodigoGrupo(e.value);\n      setCNombreGrupo(e.label);\n    }\n\n    if (tipo == \"codigoBanca\") {\n      dataReturn.bank.code = e.value;\n      dataReturn.bank.name = e.label;\n      setDataBanca(e);\n    }\n\n    if (tipo == \"numeroCliente\") {\n      dataReturn.numeroCliente = e.target.value;\n      console.log(dataReturn);\n    }\n\n    if (tipo == \"primerNombre\") {\n      dataReturn.primerNombre = e.target.value;\n    }\n\n    if (tipo == \"segundoNombre\") {\n      dataReturn.segundoNombre = e.target.value;\n    }\n\n    if (tipo == \"primerApellido\") {\n      dataReturn.primerApellido = e.target.value;\n    }\n\n    if (tipo == \"segundoApellido\") {\n      dataReturn.segundoApellido = e.target.value;\n    }\n\n    if (tipo == \"numeroIdentificacion\") {\n      dataReturn.numeroIdentificacion = e.target.value;\n    }\n\n    if (tipo == \"actividadEconomica\") {\n      dataReturn.economicActivity.code = e.value;\n      dataReturn.economicActivity.name = e.label;\n      dataReturn.subeconomicActivity = null;\n      cargarSubActividadEconomica(e.value);\n    }\n\n    if (tipo == \"subactividadEconomica\") {\n      dataReturn.subeconomicActivity.code = e.value;\n      dataReturn.subeconomicActivity.name = e.label;\n    }\n\n    setDataReturn(dataReturn);\n  } /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\n\n\n  function loadClientSelectedData(selectedClient) {\n    dataReturn.numeroCliente = selectedClient.id;\n    dataReturn.primerNombre = selectedClient.firstname;\n    dataReturn.segundoNombre = selectedClient.secondname;\n    dataReturn.primerApellido = selectedClient.lastname;\n    dataReturn.segundoApellido = selectedClient.secondlastname;\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\n    setDataReturn(dataReturn);\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n    if (defaultVal !== undefined) {\n      setIdentificationTypeSelected(defaultVal);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"General Data\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmDatosGenerales\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t(\"Debtors\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"FullName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"IdentificationType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"IdentificationNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataDeudores\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Economic Group\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value));\n                changeAll(e, \"codigoGrupo\");\n              },\n              options: gruposEconomicos,\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"SelectGroup\"),\n              value: gruposEconomicosSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), campoRequeridoGrupo ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Banking\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setBancaSelected(banca.find(x => x.value === e.value));\n                changeAll(e, \"codigoBanca\");\n              },\n              options: banca,\n              value: bancaSelected //defaultValue={props.datosGenerales.bank.code}\n              ,\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"SelectBanking\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this), campoRequeridoBanca ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Economic Activity\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value));\n                changeAll(e, \"actividadEconomica\");\n              },\n              placeholder: t(\"Selectcompanyactivity\"),\n              options: actividadEmpresa,\n              classNamePrefix: \"select2-selection\",\n              value: actividadEmpresaSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 15\n            }, this), campoRequeridoActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: [\"Sub\", t(\"Economic Activity\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value));\n                changeAll(e, \"subactividadEconomica\");\n              },\n              placeholder: t(\"Selectcompanysubactivity\"),\n              options: subactividadEmpresa,\n              classNamePrefix: \"select2-selection\",\n              value: subactividadEmpresaSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this), campoRequeridoSubActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this);\n}, \"cha5BSDv2S7kLZL1Em6G9FVzvR4=\", false, function () {\n  return [React.useImperativeHandle, useTranslation, useLocation];\n}));\n_c2 = DatosGenerales;\nDatosGenerales.propTypes = {\n  onSubmit: PropTypes.func,\n  onOpenClientSelection: PropTypes.func\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default DatosGenerales;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DatosGenerales$React.forwardRef\");\n$RefreshReg$(_c2, \"DatosGenerales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/DatosGenerales.js"],"names":["React","useState","withTranslation","PropTypes","useTranslation","Select","useLocation","useHistory","moment","Row","Col","Card","CardBody","Button","Label","Table","AvForm","AvField","ApiServicesCommon","ApiServiceBackend","BackendServices","CoreServices","SearchClientCore","DatosGenerales","forwardRef","props","ref","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn2","t","i18n","location","locationData","setLocationData","data","datosClientes","setDatosCliente","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","undefined","gruposEconomicos","setGruposEconomicos","gruposEconomicosSelected","setGruposEconomicosSelected","banca","setBanca","bancaSelected","setBancaSelected","actividadEmpresa","setActividadEmpresa","actividadEmpresaSelected","setActividadEmpresaSelected","subactividadEmpresa","setSubActividadEmpresa","subactividadEmpresaSelected","setSubActividadEmpresaSelected","bancaDate","setDataBanca","codigoGrupo","setCodigoGrupo","nombreGrupo","setCNombreGrupo","dataReturn","setDataReturn","codigoTipoPersona","codigoTipoIdentificacion","numeroCliente","primerNombre","segundoNombre","primerApellido","segundoApellido","numeroIdentificacion","transactId","economicGroup","code","name","economicActivity","subeconomicActivity","bank","setDataReturn2","setFormValid","cambio","setCambio","campoRequeridoGrupo","setcampoRequeridoGrupo","campoRequeridoActividad","setcampoRequeridoActividad","campoRequeridoSubActividad","setcampoRequeridoSubActividad","campoRequeridoBanca","setcampoRequeridoBanca","dataDeudores","setdataDeudores","campoRequeridoIdentificacion","setcampoRequeridoIdentificacion","dataActividadEmpresa","setdataActividadEmpresa","label","value","handleChange","e","useEffect","consultarDatos","loadInitialData","cargarListaGrupoEconomico","cargarBancas","cargarActividadEconomica","defaultVal","length","find","x","err","selectedClient","loadClientSelectedData","api","getActividadEconomicaCatalogo","then","response","json","i","Records","push","cargarSubActividadEconomica","codActividad","getSubActividadEconomicaCatalogo","getGrupoEconomicoCatalogo","getBancaCatalogo","apiBack","consultarUsuarioProspecto","transactionId","resp","personType","customerNumberT24","firstName","secondName","firstLastName","secondLastName","customerDocumentId","nuevoDato","consultarDatosGeneralesIGR","identificationType","catch","error","guardarDatosGenerales","dataGenerales","customerId","Number","date","format","status","guardarDatosGeneralesIGR","handleSubmit","event","errors","values","preventDefault","apiServiceBackend","consultarCatalogoTipoPersona","console","log","setpersonTypeList","consultarCatalogoTipoIdentificacion","consultarDeudores","map","consultarCatalogoTipoPersonaDescripcion","typePerson","name2","lastName","lastName2","idType","clientDocId","personId","textAlign","changeAll","tipo","target","id","firstname","secondname","lastname","secondlastname","idtype","idnumber","partyType","propTypes","onSubmit","func","onOpenClientSelection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\n\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\r\nimport { BackendServices, CoreServices } from '../../../../../services';\r\nimport SearchClientCore from \"../../../../../components/Common/SearchClientCore\"\r\n\r\n\r\nconst DatosGenerales = React.forwardRef((props, ref) => {\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmDatosGenerales');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn2\r\n  }))\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const [locationData, setLocationData] = useState(location.data);\r\n\r\n  const [datosClientes, setDatosCliente] = useState([]);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\r\n  const [banca, setBanca] = useState([]);\r\n  const [bancaSelected, setBancaSelected] = useState(undefined);\r\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\r\n\r\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\r\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\r\n\r\n  const [bancaDate, setDataBanca] = useState([]);\r\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\r\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState({\r\n    codigoTipoPersona: null,\r\n    codigoTipoIdentificacion: null,\r\n    numeroCliente: null,\r\n    primerNombre: null,\r\n    segundoNombre: null,\r\n    primerApellido: null,\r\n    segundoApellido: null,\r\n    numeroIdentificacion: null,\r\n    transactId: 0,\r\n    economicGroup: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    economicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    subeconomicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    bank: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n  });\r\n  const [dataReturn2, setDataReturn2] = useState();\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [cambio, setCambio] = useState(2);\r\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\r\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\r\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\r\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\r\n  const [dataDeudores, setdataDeudores] = useState(null);\r\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\r\n  const [dataActividadEmpresa, setdataActividadEmpresa] = useState({ label: \"\", value: \"\" });\r\n  \r\n  function handleChange(e) {\r\n    setFormValid(false);\r\n  }\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    // Read Api Service data      \r\n    consultarDatos();\r\n    loadInitialData();\r\n    cargarListaGrupoEconomico();\r\n    cargarBancas();\r\n    cargarActividadEconomica()\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    try {\r\n      \r\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\r\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n        if (defaultVal !== undefined) {\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\r\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\r\n        if (defaultVal !== undefined) {\r\n          setGruposEconomicosSelected(defaultVal);\r\n        }\r\n      }\r\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\r\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\r\n        if (defaultVal !== undefined) {\r\n          setBancaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\r\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\r\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setSubActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [cambio]);\r\n  React.useEffect(() => {\r\n    try {\r\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\r\n        loadClientSelectedData(props.selectedClient);\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.selectedClient]);\r\n\r\n  ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\r\n\r\n  ///////////////////////////////////////////////\r\n\r\n  function cargarActividadEconomica() {\r\n    const api = new CoreServices();\r\n    api.getActividadEconomicaCatalogo().then(response => {\r\n\r\n      if (response === null) { return; }\r\n\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectcompanyactivity\"),\r\n          options: json,\r\n        },\r\n      ];*/\r\n      setActividadEmpresa(json);\r\n      if (dataReturn.economicActivity !== null) {\r\n        cargarSubActividadEconomica(dataReturn.economicActivity.code);\r\n      }\r\n\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  function cargarSubActividadEconomica(codActividad) {\r\n    const api = new CoreServices();\r\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\r\n\r\n      if (response === null) { return; }\r\n\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectcompanyactivity\"),\r\n          options: json,\r\n        },\r\n      ];*/\r\n      setSubActividadEmpresa(json);\r\n      if (dataReturn.subeconomicActivity !== null) {\r\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\r\n      }\r\n      else {\r\n        dataReturn.subeconomicActivity = { code: json[0].value, name: json[0].label }\r\n\r\n        setSubActividadEmpresaSelected(json[0]);\r\n      }\r\n\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  function cargarListaGrupoEconomico() {\r\n    const api = new CoreServices();\r\n    api.getGrupoEconomicoCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          if (response.Records[i][\"Code\"] == \"0003\") {\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n\r\n          } else {\r\n\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n          }\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectGroup\"),\r\n            options: json,\r\n          },\r\n        ];*/\r\n        setGruposEconomicos(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  function cargarBancas() {\r\n    const api = new CoreServices();\r\n    api.getBancaCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectBanking\"),\r\n            options: json,\r\n          },\r\n        ];*/\r\n        setBanca(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  function consultarDatos() {\r\n\r\n    const apiBack = new BackendServices();\r\n    //{ transactId: location.data.transactionId, processId: location.data.processId, activityId: location.data.activityId }\r\n    apiBack.consultarUsuarioProspecto(locationData.transactionId).then(resp => {\r\n      dataReturn.codigoTipoPersona = resp.personType\r\n      dataReturn.numeroCliente = resp.customerNumberT24\r\n      dataReturn.primerNombre = resp.firstName\r\n      dataReturn.segundoNombre = resp.secondName\r\n      dataReturn.primerApellido = resp.firstLastName\r\n      dataReturn.segundoApellido = resp.secondLastName\r\n      dataReturn.numeroIdentificacion = resp.customerDocumentId\r\n      dataReturn.nuevoDato = \"\"\r\n      setDataReturn(dataReturn);\r\n    })\r\n    apiBack.consultarDatosGeneralesIGR(locationData.transactionId).then(resp => {\r\n      dataReturn.codigoTipoIdentificacion = resp.identificationType\r\n      dataReturn.transactId = locationData.transactionId;\r\n      dataReturn.economicGroup.code = resp.economicGroup.code;\r\n      dataReturn.economicGroup.name = resp.economicGroup.name;\r\n      dataReturn.economicActivity.code = resp.economicActivity.code;\r\n      dataReturn.economicActivity.name = resp.economicActivity.name;\r\n      dataReturn.subeconomicActivity.code = resp.subeconomicActivity.code;\r\n      dataReturn.subeconomicActivity.name = resp.subeconomicActivity.name;\r\n      dataReturn.bank.code = resp.bank.code;\r\n      dataReturn.bank.name = resp.bank.name;\r\n      setDataReturn(dataReturn);\r\n      setCambio(null);\r\n      setCambio(5);\r\n    }).catch((error) => {\r\n\r\n    });\r\n  }\r\n  function guardarDatosGenerales() {\r\n    const apiBack = new BackendServices();\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Actualizamos los datos del cliente                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n\r\n    let dataGenerales =\r\n    {\r\n      customerId: locationData.customerId,\r\n      transactId: Number(locationData.transactionId),\r\n      personType: dataReturn.codigoTipoPersona,\r\n      identificationType: dataReturn.codigoTipoIdentificacion,\r\n      customerDocumentId: dataReturn.numeroIdentificacion,\r\n      customerNumberT24: dataReturn.numeroCliente,\r\n      firstName: dataReturn.primerNombre,\r\n      secondName: dataReturn.segundoNombre,\r\n      firstLastName: dataReturn.primerApellido,\r\n      secondLastName: dataReturn.segundoApellido,\r\n      \"economicGroup\": {\r\n        \"code\": dataReturn.economicGroup.code,\r\n        \"name\": dataReturn.economicGroup.name\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": dataReturn.economicActivity.code,\r\n        \"name\": dataReturn.economicActivity.name\r\n      },\r\n      \"subeconomicActivity\": {\r\n        \"code\": dataReturn.subeconomicActivity.code,\r\n        \"name\": dataReturn.subeconomicActivity.name\r\n      },\r\n      \"bank\": {\r\n        \"code\": dataReturn.bank.code,\r\n        \"name\": dataReturn.bank.name\r\n      },\r\n      date: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n    }\r\n    // apiBack.guardarUsuarioProspecto(data0).then(response => {\r\n    // });\r\n    apiBack.guardarDatosGeneralesIGR(dataGenerales).then(resp => {\r\n      setFormValid(true);\r\n    })\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    // if (dataReturn.economicGroup.code == \"\" || dataReturn.economicGroup.code == null) {\r\n    //   setcampoRequeridoGrupo(true);\r\n    //   return;\r\n    // } else {\r\n    //   setcampoRequeridoGrupo(false);\r\n    // }\r\n    // if (dataReturn.bank.code == \"\" || dataReturn.bank.code == null) {\r\n    //   setcampoRequeridoBanca(true);\r\n    //   return;\r\n    // } else {\r\n    //   setcampoRequeridoBanca(false);\r\n    // }\r\n    // if (dataReturn.economicActivity.code == \"\" || dataReturn.economicActivity.code == null) {\r\n    //   setcampoRequeridoActividad(true);\r\n    //   return;\r\n    // } else {\r\n    //   setcampoRequeridoActividad(false);\r\n    // }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setDataReturn2(dataReturn)\r\n    setDataReturn(dataReturn)\r\n    guardarDatosGenerales();\r\n    setFormValid(true);\r\n    // props.onSubmit();\r\n  }\r\n\r\n  function loadInitialData() {\r\n    \r\n    const apiServiceBackend = new ApiServiceBackend();\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                console.log(\"consultarCatalogoTipoPersona\",data)\r\n                setpersonTypeList(json);                \r\n            }          \r\n      }).catch((error) => { })\r\n\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          /*const optionGroup1 = [\r\n            {\r\n              label: t(\"ID Type\"),\r\n              options: json,\r\n            },\r\n          ];*/\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n    apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataDeudores(resp.map((data) => (\r\n          <tr key={data.personId}>\r\n            <td>{ async () => await apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(data.typePerson)}</td>\r\n            <td>{ Number(data.typePerson) ===2?data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2}</td>\r\n            <td>{data.idType}</td>\r\n            <td>{data.clientDocId}</td>\r\n          </tr>)))\r\n      } else {\r\n        setdataDeudores(\r\n          <tr key={1}>\r\n            <td colSpan=\"4\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n          </tr>);\r\n\r\n      }\r\n\r\n    }).catch((error) => {\r\n\r\n    });\r\n    // api.getIdentificationTypeList()\r\n    // .then((data) => {\r\n    //   setIdentificationTypeList(data);        \r\n    // })\r\n    // .catch((error) => {    \r\n    //   console.error('Error fetching documents', error);\r\n    // });    \r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"tipoPersona\") {\r\n      dataReturn.codigoTipoPersona = e.value\r\n    }\r\n    if (tipo == \"Tipo\") {\r\n      dataReturn.codigoTipoIdentificacion = e.value\r\n    }\r\n    if (tipo == \"codigoGrupo\") {\r\n      dataReturn.economicGroup.code = e.value;\r\n      dataReturn.economicGroup.name = e.label;\r\n      setCodigoGrupo(e.value)\r\n      setCNombreGrupo(e.label)\r\n    }\r\n    if (tipo == \"codigoBanca\") {\r\n      dataReturn.bank.code = e.value;\r\n      dataReturn.bank.name = e.label;\r\n      setDataBanca(e);\r\n    }\r\n    if (tipo == \"numeroCliente\") {\r\n      dataReturn.numeroCliente = e.target.value;\r\n      console.log(dataReturn);\r\n    }\r\n    if (tipo == \"primerNombre\") {\r\n      dataReturn.primerNombre = e.target.value;\r\n    }\r\n    if (tipo == \"segundoNombre\") {\r\n      dataReturn.segundoNombre = e.target.value;\r\n    }\r\n    if (tipo == \"primerApellido\") {\r\n      dataReturn.primerApellido = e.target.value;\r\n    }\r\n    if (tipo == \"segundoApellido\") {\r\n      dataReturn.segundoApellido = e.target.value;\r\n    }\r\n    if (tipo == \"numeroIdentificacion\") {\r\n      dataReturn.numeroIdentificacion = e.target.value;\r\n    }\r\n    if (tipo == \"actividadEconomica\") {\r\n      dataReturn.economicActivity.code = e.value;\r\n      dataReturn.economicActivity.name = e.label;\r\n\r\n      dataReturn.subeconomicActivity = null;\r\n      cargarSubActividadEconomica(e.value)\r\n    }\r\n    if (tipo == \"subactividadEconomica\") {\r\n      dataReturn.subeconomicActivity.code = e.value;\r\n      dataReturn.subeconomicActivity.name = e.label;\r\n    }\r\n    setDataReturn(dataReturn)\r\n\r\n  }\r\n\r\n  /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\r\n  function loadClientSelectedData(selectedClient) {\r\n    dataReturn.numeroCliente = selectedClient.id;\r\n    dataReturn.primerNombre = selectedClient.firstname;\r\n    dataReturn.segundoNombre = selectedClient.secondname;\r\n    dataReturn.primerApellido = selectedClient.lastname;\r\n    dataReturn.segundoApellido = selectedClient.secondlastname;\r\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\r\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\r\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\r\n\r\n    setDataReturn(dataReturn);\r\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n    if (defaultVal !== undefined) {\r\n      setIdentificationTypeSelected(defaultVal);\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n     \r\n      <h5>{t(\"General Data\")}</h5>\r\n      <p className=\"card-title-desc\">\r\n      </p>\r\n      <AvForm id=\"frmDatosGenerales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Label>{t(\"Debtors\")}</Label>\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"PersonType\")}</th>\r\n                  <th>{t(\"FullName\")}</th>\r\n                  <th>{t(\"IdentificationType\")}</th>\r\n                  <th>{t(\"IdentificationNumber\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataDeudores}\r\n              </tbody>\r\n            </Table>\r\n\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Economic Group\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value))\r\n                  changeAll(e, \"codigoGrupo\");\r\n                }}\r\n                options={gruposEconomicos}\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"SelectGroup\")}\r\n                value={gruposEconomicosSelected}\r\n              />\r\n              {campoRequeridoGrupo ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Banking\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setBancaSelected(banca.find(x => x.value === e.value))\r\n                  changeAll(e, \"codigoBanca\");\r\n                }}\r\n                options={banca}\r\n                value={bancaSelected}//defaultValue={props.datosGenerales.bank.code}\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"SelectBanking\")}\r\n              />\r\n              {campoRequeridoBanca ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Economic Activity\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value))\r\n                  changeAll(e, \"actividadEconomica\")\r\n                }}\r\n                placeholder={t(\"Selectcompanyactivity\")}\r\n                options={actividadEmpresa}\r\n                classNamePrefix=\"select2-selection\"\r\n                value={actividadEmpresaSelected}\r\n              />\r\n              {campoRequeridoActividad ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>Sub{t(\"Economic Activity\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value))\r\n                  changeAll(e, \"subactividadEconomica\")\r\n                }}\r\n                placeholder={t(\"Selectcompanysubactivity\")}\r\n                options={subactividadEmpresa}\r\n                classNamePrefix=\"select2-selection\"\r\n                value={subactividadEmpresaSelected}\r\n              />\r\n              {campoRequeridoSubActividad ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n      </AvForm>\r\n    </React.Fragment>\r\n  )\r\n})\r\n\r\n\r\nDatosGenerales.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onOpenClientSelection: PropTypes.func,\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default DatosGenerales;\r\n"]},"metadata":{},"sourceType":"module"}