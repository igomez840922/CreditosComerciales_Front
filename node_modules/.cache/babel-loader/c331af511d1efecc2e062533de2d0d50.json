{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\23_bandejaInstructivo\\\\Colateral\\\\GarantiaBienInmueble\\\\ModalDatosPoliza.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { BackendServices, CoreServices } from \"../../../../../services\";\nimport Currency from \"../../../../../helpers/currency\";\nimport moment from \"moment\";\nimport { saveLogProcess } from \"../../../../../helpers/logs_helper\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport * as OPTs from \"../../../../../helpers/options_helper\";\nimport { Select } from 'antd';\nimport { values } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalGobiernoCorporativo = props => {\n  _s();\n\n  var _props$dataSet$insure, _props$dataSet4, _props$dataSet$amount, _props$dataSet5, _props$dataSet$policy, _props$dataSet6, _props$dataSet$descri, _props$dataSet7;\n\n  const currencyData = new Currency();\n  const {\n    Option\n  } = Select;\n  const [poliza, setpoliza] = useState(null);\n  const [polizaSet, setpolizaSet] = useState(null);\n  const [aseguradora, setaseguradora] = useState(null);\n  const [aseguradoraSet, setaseguradoraSet] = useState(null);\n  const [corredora, setcorredora] = useState(null);\n  const [corredoraSet, setcorredoraSet] = useState(null);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [fechaSet, setfechaSet] = useState(null);\n  const [fechaSet2, setfechaSet2] = useState(null);\n  const backendServices = new BackendServices();\n  const coreServices = new CoreServices();\n  useEffect(() => {\n    if ((props === null || props === void 0 ? void 0 : props.tipo) == \"edit\") {\n      var _props$dataSet, _props$dataSet2, _props$dataSet3;\n\n      console.log(props === null || props === void 0 ? void 0 : (_props$dataSet = props.dataSet) === null || _props$dataSet === void 0 ? void 0 : _props$dataSet.issuedDate);\n      setfechaSet(moment(props === null || props === void 0 ? void 0 : (_props$dataSet2 = props.dataSet) === null || _props$dataSet2 === void 0 ? void 0 : _props$dataSet2.issuedDate).format(\"DD-MM-YYYY\"));\n      setfechaSet2(moment(props === null || props === void 0 ? void 0 : (_props$dataSet3 = props.dataSet) === null || _props$dataSet3 === void 0 ? void 0 : _props$dataSet3.dueDate).format(\"DD-MM-YYYY\"));\n    } else {\n      setfechaSet(moment().format(\"DD-MM-YYYY\"));\n      setfechaSet2(moment().format(\"DD-MM-YYYY\"));\n    }\n\n    loadData();\n  }, [props === null || props === void 0 ? void 0 : props.isOpen]);\n\n  function loadData(data = null) {\n    coreServices.getInsurersCatalog().then(resp => {\n      setaseguradora(resp.Records);\n    });\n    coreServices.getBrokersCatalog().then(resp => {\n      setcorredora(resp.Records);\n    });\n    coreServices.getPolicyTypeCatalog().then(resp => {\n      setpoliza(resp.Records);\n    });\n  }\n\n  function handleSubmit(event, errors, value) {\n    var _value$amount;\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    value.issuedDate = moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet : moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    value.dueDate = moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet2 : moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n    value.company = aseguradoraSet !== null && aseguradoraSet !== void 0 ? aseguradoraSet : \"\";\n    value.companyCode = corredoraSet !== null && corredoraSet !== void 0 ? corredoraSet : \"\";\n    value.policyType = polizaSet !== null && polizaSet !== void 0 ? polizaSet : \"\";\n    value.amount = currencyData.getRealValue((_value$amount = value === null || value === void 0 ? void 0 : value.amount) !== null && _value$amount !== void 0 ? _value$amount : 0);\n    props.getTemporalyData(value, \"new\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Policy Data\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"Nombreasegurado\",\n                        children: t(\"Insured Name\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"insuredName\",\n                        value: (_props$dataSet$insure = props === null || props === void 0 ? void 0 : (_props$dataSet4 = props.dataSet) === null || _props$dataSet4 === void 0 ? void 0 : _props$dataSet4.insuredName) !== null && _props$dataSet$insure !== void 0 ? _props$dataSet$insure : \"\",\n                        id: \"insuredName\",\n                        errorMessage: t(\"Required Field\"),\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"Monto\",\n                        children: t(\"Amount\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"amount\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        value: currencyData.format((_props$dataSet$amount = props === null || props === void 0 ? void 0 : (_props$dataSet5 = props.dataSet) === null || _props$dataSet5 === void 0 ? void 0 : _props$dataSet5.amount) !== null && _props$dataSet$amount !== void 0 ? _props$dataSet$amount : 0),\n                        id: \"amount\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"Monto\",\n                        children: t(\"Insurance company\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 141,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        showSearch: true,\n                        style: {\n                          width: \"100%\"\n                        },\n                        placeholder: t(\"SearchtoSelect\"),\n                        optionFilterProp: \"children\",\n                        defaultValue: props.dataSet.company,\n                        onChange: e => {\n                          setaseguradoraSet(e);\n                        },\n                        filterOption: (input, option) => {\n                          var _option$children;\n\n                          return ((_option$children = option.children) === null || _option$children === void 0 ? void 0 : _option$children.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                        },\n                        children: aseguradora != null ? aseguradora.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                          value: item.Description,\n                          children: item.Description\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 31\n                        }, this)) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"Npoliza\",\n                        children: t(\"Policy Number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        validate: {\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        },\n                        name: \"policyNumber\",\n                        value: (_props$dataSet$policy = props === null || props === void 0 ? void 0 : (_props$dataSet6 = props.dataSet) === null || _props$dataSet6 === void 0 ? void 0 : _props$dataSet6.policyNumber) !== null && _props$dataSet$policy !== void 0 ? _props$dataSet$policy : \"\",\n                        id: \"policyNumber\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"Policy Issue Date\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                        id: \"issuedDate\",\n                        name: \"issuedDate\",\n                        className: \"form-control d-block\",\n                        placeholder: OPTs.FORMAT_DATE_SHOW,\n                        options: {\n                          dateFormat: OPTs.FORMAT_DATE,\n                          //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\n                          defaultDate: fechaSet\n                        },\n                        onChange: (selectedDates, dateStr, instance) => {\n                          setfechaSet(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"Policy Expiration Date\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                        id: \"dueDate\",\n                        name: \"dueDate\",\n                        className: \"form-control d-block\",\n                        placeholder: OPTs.FORMAT_DATE_SHOW,\n                        options: {\n                          dateFormat: OPTs.FORMAT_DATE,\n                          //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\n                          defaultDate: fechaSet2\n                        },\n                        onChange: (selectedDates, dateStr, instance) => {\n                          setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"Broker Company\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        showSearch: true,\n                        style: {\n                          width: \"100%\"\n                        },\n                        placeholder: t(\"SearchtoSelect\"),\n                        optionFilterProp: \"children\",\n                        defaultValue: props.dataSet.companyCode,\n                        onChange: e => {\n                          setcorredoraSet(e);\n                        },\n                        filterOption: (input, option) => {\n                          var _option$children2;\n\n                          return ((_option$children2 = option.children) === null || _option$children2 === void 0 ? void 0 : _option$children2.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                        },\n                        children: corredora != null ? corredora.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                          value: item.Description,\n                          children: item.Description\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 31\n                        }, this)) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 221,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"Policy type\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        showSearch: true,\n                        style: {\n                          width: \"100%\"\n                        },\n                        placeholder: t(\"SearchtoSelect\"),\n                        optionFilterProp: \"children\",\n                        defaultValue: props.dataSet.policyType,\n                        onChange: e => {\n                          setpolizaSet(e);\n                        },\n                        filterOption: (input, option) => {\n                          var _option$children3;\n\n                          return ((_option$children3 = option.children) === null || _option$children3 === void 0 ? void 0 : _option$children3.toLowerCase().indexOf(input.toLowerCase())) >= 0;\n                        },\n                        children: poliza != null ? poliza.map((item, index) => /*#__PURE__*/_jsxDEV(Option, {\n                          value: item.Description,\n                          children: item.Description\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 31\n                        }, this)) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"12\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-6\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"DescripEquipo\",\n                        children: t(\"Equipment Description\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"textarea\",\n                        name: \"description\",\n                        id: \"description\",\n                        title: t(\"\"),\n                        value: (_props$dataSet$descri = props === null || props === void 0 ? void 0 : (_props$dataSet7 = props.dataSet) === null || _props$dataSet7 === void 0 ? void 0 : _props$dataSet7.description) !== null && _props$dataSet$descri !== void 0 ? _props$dataSet$descri : \"\",\n                        rows: \"4\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: \"5px\"\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  type: \"submit\",\n                  color: \"success\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this), \" \", \" \", props.tipo == \"new\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalGobiernoCorporativo, \"Cqvo0QvyXHdx4bsVA6uxSthuaWE=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalGobiernoCorporativo;\nModalGobiernoCorporativo.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalGobiernoCorporativo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalGobiernoCorporativo\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/23_bandejaInstructivo/Colateral/GarantiaBienInmueble/ModalDatosPoliza.js"],"names":["React","useEffect","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","AvForm","AvField","AvGroup","BackendServices","CoreServices","Currency","moment","saveLogProcess","Flatpickr","OPTs","Select","values","ModalGobiernoCorporativo","props","currencyData","Option","poliza","setpoliza","polizaSet","setpolizaSet","aseguradora","setaseguradora","aseguradoraSet","setaseguradoraSet","corredora","setcorredora","corredoraSet","setcorredoraSet","t","i18n","fechaSet","setfechaSet","fechaSet2","setfechaSet2","backendServices","coreServices","tipo","console","log","dataSet","issuedDate","format","dueDate","loadData","isOpen","data","getInsurersCatalog","then","resp","Records","getBrokersCatalog","getPolicyTypeCatalog","handleSubmit","event","errors","value","preventDefault","length","company","companyCode","policyType","amount","getRealValue","getTemporalyData","toggle","backgroundColor","insuredName","required","e","x","target","width","input","option","children","toLowerCase","indexOf","map","item","index","Description","number","errorMessage","policyNumber","FORMAT_DATE_SHOW","dateFormat","FORMAT_DATE","defaultDate","selectedDates","dateStr","instance","description","textAlign","margin","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation, withTranslation } from \"react-i18next\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\";\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\r\nimport { BackendServices, CoreServices } from \"../../../../../services\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\n\r\n\r\nimport moment from \"moment\";\r\nimport { saveLogProcess } from \"../../../../../helpers/logs_helper\";\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport * as OPTs from \"../../../../../helpers/options_helper\";\r\n\r\n\r\nimport { Select } from 'antd';\r\nimport { values } from \"lodash\";\r\n\r\nconst ModalGobiernoCorporativo = (props) => {\r\n  const currencyData = new Currency()\r\n  const { Option } = Select;\r\n  const [poliza, setpoliza] = useState(null);\r\n  const [polizaSet, setpolizaSet] = useState(null);\r\n  const [aseguradora, setaseguradora] = useState(null);\r\n  const [aseguradoraSet, setaseguradoraSet] = useState(null);\r\n  const [corredora, setcorredora] = useState(null);\r\n  const [corredoraSet, setcorredoraSet] = useState(null);\r\n  const { t, i18n } = useTranslation();\r\n  const [fechaSet, setfechaSet] = useState(null);\r\n  const [fechaSet2, setfechaSet2] = useState(null);\r\n  const backendServices = new BackendServices();\r\n  const coreServices = new CoreServices();\r\n  useEffect(() => {\r\n    if(props?.tipo==\"edit\"){\r\n      console.log(props?.dataSet?.issuedDate);\r\n      setfechaSet(moment(props?.dataSet?.issuedDate).format(\"DD-MM-YYYY\"))\r\n      setfechaSet2(moment(props?.dataSet?.dueDate).format(\"DD-MM-YYYY\"))\r\n    }else{\r\n      setfechaSet(moment().format(\"DD-MM-YYYY\"))\r\n      setfechaSet2(moment().format(\"DD-MM-YYYY\"))\r\n\r\n    }\r\n    loadData()\r\n  }, [props?.isOpen]);\r\n  function loadData(data = null) {\r\n    coreServices.getInsurersCatalog().then(resp => {\r\n      setaseguradora(resp.Records)\r\n    });\r\n    coreServices.getBrokersCatalog().then(resp => {\r\n      setcorredora(resp.Records)\r\n    });\r\n    coreServices.getPolicyTypeCatalog().then(resp => {\r\n      setpoliza(resp.Records)\r\n    });\r\n  }\r\n  function handleSubmit(event, errors, value) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    value.issuedDate=moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet : (moment(fechaSet, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n    value.dueDate=moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\") == \"Invalid date\" ? fechaSet2 : (moment(fechaSet2, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n    value.company = aseguradoraSet ?? \"\";\r\n    value.companyCode = corredoraSet ?? \"\";\r\n    value.policyType = polizaSet ?? \"\";\r\n    value.amount = currencyData.getRealValue(value?.amount ?? 0);\r\n    props.getTemporalyData(value, \"new\")\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}\r\n    >\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Policy Data\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"Nombreasegurado\">\r\n                          {t(\"Insured Name\")}\r\n                        </Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"insuredName\"\r\n                          value={props?.dataSet?.insuredName ?? \"\"}\r\n                          id=\"insuredName\"\r\n                          errorMessage={t(\"Required Field\")}\r\n                          validate={{ required: { value: true } }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"Monto\">{t(\"Amount\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"amount\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                          value={currencyData.format(props?.dataSet?.amount ?? 0)}\r\n                          id=\"amount\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"Monto\">\r\n                          {t(\"Insurance company\")}\r\n                        </Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder={t(\"SearchtoSelect\")}\r\n                          optionFilterProp=\"children\"\r\n                          defaultValue={props.dataSet.company}\r\n                          onChange={(e) => { setaseguradoraSet(e) }}\r\n                          filterOption={(input, option) =>\r\n                            option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {aseguradora != null ?\r\n\r\n                            aseguradora.map((item, index) => (\r\n                              <Option key={index} value={item.Description}>{item.Description}</Option>\r\n                            ))\r\n                            : null}\r\n                        </Select>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"Npoliza\">\r\n                          {t(\"Policy Number\")}\r\n                        </Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          name=\"policyNumber\"\r\n                          value={props?.dataSet?.policyNumber ?? \"\"}\r\n                          id=\"policyNumber\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"Policy Issue Date\")}</Label>\r\n                        \r\n                          <Flatpickr\r\n                            id=\"issuedDate\"\r\n                            name=\"issuedDate\"\r\n                            className=\"form-control d-block\"\r\n                            placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                            options={{\r\n                              dateFormat: OPTs.FORMAT_DATE,\r\n                              //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\r\n                              defaultDate: fechaSet\r\n                            }}\r\n                            onChange={(selectedDates, dateStr, instance) => { setfechaSet(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\")) }}\r\n                          /> \r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"Policy Expiration Date\")}</Label>\r\n                       \r\n                          <Flatpickr\r\n                            id=\"dueDate\"\r\n                            name=\"dueDate\"\r\n                            className=\"form-control d-block\"\r\n                            placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                            options={{\r\n                              dateFormat: OPTs.FORMAT_DATE,\r\n                              //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\r\n                              defaultDate: fechaSet2\r\n                            }}\r\n                            onChange={(selectedDates, dateStr, instance) => { setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\")) }}\r\n                          />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"Broker Company\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder={t(\"SearchtoSelect\")}\r\n                          optionFilterProp=\"children\"\r\n                          defaultValue={props.dataSet.companyCode}\r\n                          onChange={(e) => { setcorredoraSet(e) }}\r\n                          filterOption={(input, option) =>\r\n                            option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {corredora != null ?\r\n\r\n                            corredora.map((item, index) => (\r\n                              <Option key={index} value={item.Description}>{item.Description}</Option>\r\n                            ))\r\n                            : null}\r\n                        </Select>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"Policy type\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          showSearch\r\n                          style={{ width: \"100%\" }}\r\n                          placeholder={t(\"SearchtoSelect\")}\r\n                          optionFilterProp=\"children\"\r\n                          defaultValue={props.dataSet.policyType}\r\n                          onChange={(e) => { setpolizaSet(e) }}\r\n                          filterOption={(input, option) =>\r\n                            option.children?.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          {poliza != null ?\r\n\r\n                            poliza.map((item, index) => (\r\n                              <Option key={index} value={item.Description}>{item.Description}</Option>\r\n                            ))\r\n                            : null}\r\n                        </Select>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                      <div className=\"mb-6\">\r\n                        <Label htmlFor=\"DescripEquipo\">\r\n                          {t(\"Equipment Description\")}\r\n                        </Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"textarea\"\r\n                          name=\"description\"\r\n                          id=\"description\"\r\n                          title={t(\"\")}\r\n                          value={props?.dataSet?.description??\"\"}\r\n                          rows=\"4\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button\r\n                    id=\"btnNew\"\r\n                    color=\"danger\"\r\n                    type=\"button\"\r\n                    style={{ margin: \"5px\" }}\r\n                    onClick={props.toggle}\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}\r\n                    {t(\"Cancel\")}\r\n                  </Button>\r\n\r\n                  <Button id=\"btnSearch\" type=\"submit\" color=\"success\" style={{ margin: '5px' }}>\r\n                    <i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                    {\" \"} {props.tipo == \"new\" ? t(\"Save\") : t(\"Save\")}\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\n\r\nModalGobiernoCorporativo.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\n\r\nexport default ModalGobiernoCorporativo;\r\n"]},"metadata":{},"sourceType":"module"}