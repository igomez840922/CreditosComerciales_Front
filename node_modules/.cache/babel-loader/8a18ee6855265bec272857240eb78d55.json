{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\FacilityHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Row, Col, Card, CardBody, Button, Label, Table, Pagination, PaginationItem, PaginationLink, CardFooter, Alert } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { CoreServices, BackendServices } from '../../services';\nimport HeaderSections from './HeaderSections';\nimport Currency from \"../../helpers/currency\";\nimport { translationHelpers } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FacilityHistory = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tr] = translationHelpers('translation');\n  const [locationData, setLocationData] = useState(null);\n  const location = useLocation();\n  const [dataRows, setDataRows] = useState([]);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [historyDetails, setHistoryDetails] = useState(false);\n  const currencyData = new Currency();\n  useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {//location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    loadFacilityHistory(dataSession);\n  }, []); //On Mounting (componentDidMount)\n  //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    setHistoryDetails(props.historyDetails);\n  }, [props.historyDetails]);\n\n  function fetchData() {\n    loadFacilityHistory();\n  }\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  } //cargar lista de facilidades\n\n\n  async function loadFacilityHistory(dataSession) {\n    var _dataSession$transact;\n\n    setIsActiveLoading(true);\n    await apiServiceBackend.consultGeneralDataPropCred((_dataSession$transact = dataSession === null || dataSession === void 0 ? void 0 : dataSession.transactionId) !== null && _dataSession$transact !== void 0 ? _dataSession$transact : 0).then(async propuesta => {\n      await apiServiceBackend.consultarFacilidadesT24(propuesta[0].requestId).then(async resp => {\n        if (resp.length > 0 && resp != undefined) {\n          //Cargamos las facilidades\n          setIsActiveLoading(false); // props.setLevelAutonomy(resp.reduce((acc, crr) => acc + crr.amount, 0))\n\n          setDataRows(resp.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"FacilityType\"),\n              children: data === null || data === void 0 ? void 0 : data.facilityTypeId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"DebtorName\"),\n              children: data === null || data === void 0 ? void 0 : data.debtor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"ApprovedAmount\"),\n              children: currencyData.formatTable(data.amount)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"ActualBalance\"),\n              children: currencyData.formatTable(data.balance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                textAlign: \"right\"\n              },\n              children: (props === null || props === void 0 ? void 0 : props.validacion) ? null : /*#__PURE__*/_jsxDEV(Link, {\n                to: \"#\",\n                title: t(\"View\"),\n                onClick: resp => props === null || props === void 0 ? void 0 : props.editFacilitiesT24(data),\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-border-color mdi-24px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)));\n        } else {\n          setIsActiveLoading(false); //guardamos\n\n          if (props === null || props === void 0 ? void 0 : props.validacion) {\n            return;\n          }\n\n          setIsActiveLoading(false);\n          /*\r\n          else {\r\n            await apiCoreServices.getFacilitiesByTransaction(dataSession?.transactionId ?? 0)\r\n              .then(async (data2) => {\r\n                console.log(data2);\r\n                if (data2 !== null && data2 !== undefined && data2.length > 0) {\r\n                  for (let i = 0; i < data2.length; i++) {\r\n                    let jsonSet = {\r\n                      \"facilityNumber\": \"0\",\r\n                      \"cr\": data2[i]?.AcctId,\r\n                      \"amount\": data2[i]?.approvedAmount,\r\n                      \"debtor\": props.mainDebtor.name,\r\n                      \"clientTypeId\": props?.mainDebtor?.personId,\r\n                      \"customer\": {\r\n                        \"id\": \"469303-1-434018\"\r\n                      },\r\n                      \"balance\": data2[i]?.actualBalance,\r\n                      \"purpose\": \"\",\r\n                      \"sublimits\": \"\",\r\n                      \"proposalRate\": 0,\r\n                      \"noSubsidyRate\": 0,\r\n                      \"effectiveRate\": 0,\r\n                      \"feci\": false,\r\n                      \"termDays\": 0,\r\n                      \"termDescription\": \"\",\r\n                      \"ltv\": 0,\r\n                      \"finantialConditions\": \" \",\r\n                      \"environmentRiskCategory\": 0,\r\n                      \"covenant\": \" \",\r\n                      \"environmentRiskOpinion\": \" \",\r\n                      \"finantialCovenant\": \" \",\r\n                      \"legalDocumentation\": \"  \",\r\n                      \"otherConditions\": \" \",\r\n                      \"creditRiskOpinion\": \" \",\r\n                      \"provision\": \" \",\r\n                      \"proposalTypeId\": \"\",\r\n                      \"proposalTypeName\": \"\",\r\n                      \"facilityTypeId\": data2[i]?.facilityType ?? \"\",\r\n                      \"termType\": \"\",\r\n                      \"origin\": \"CORE\",\r\n                      \"applyEscrow\": false,\r\n                      \"facilityId\": 0,\r\n                      \"requestId\": propuesta[0].requestId ?? \"\",\r\n                      \"startingAmount\": 0,\r\n                      \"term\": \"\"\r\n                    }\r\n                      await apiServiceBackend.newFacilityPropCred(jsonSet).then(saveExpo => {\r\n                      })\r\n                    }\r\n                  setIsActiveLoading(false)\r\n                  loadFacilityHistory(locationData)\r\n                } else {\r\n                  setIsActiveLoading(false)\r\n                  return\r\n                }\r\n                setIsActiveLoading(false)\r\n              }).catch((error) => {\r\n                setIsActiveLoading(false)\r\n              });\r\n          }\r\n          */\n          // var rows = data.map((data, index) => (\n          //   <tr key={index}>\n          //     <td data-label={t(\"FacilityType\")}>{data?.facilityType ?? data?.facilityTypeId}</td>\n          //     <td data-label={t(\"DebtorName\")}>{props.mainDebtor.name}</td>\n          //     <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.approvedAmount)}</td>\n          //     <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td>\n          //     <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.actualBalance)}</td>\n          //     <td style={{ textAlign: \"right\" }}>\n          //       <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\n          //     </td>\n          //   </tr>)\n          // );\n          // setDataRows(rows);\n        }\n\n        setIsActiveLoading(false);\n      }).catch(error => {\n        setIsActiveLoading(false);\n      });\n    }).catch(error => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n    active: isActiveLoading,\n    spinner: true,\n    text: t(\"WaitingPlease\"),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-sub-title\",\n            children: t(\"FacilityHistory\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [historyDetails && /*#__PURE__*/_jsxDEV(Alert, {\n          show: \"true\",\n          dismissible: \"true\",\n          color: \"danger\",\n          onClose: () => {\n            setHistoryDetails(!historyDetails);\n          },\n          children: tr(\"The facility was not found\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            className: \"table-responsive styled-table-div\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table table-striped table-hover styled-table table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"FacilityType\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"DebtorName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ApprovedAmount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ActualBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dataRows.length > 0 ? dataRows : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FacilityHistory, \"beyZ5yOAS5hJUrl583l9j7EBX2I=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = FacilityHistory;\nFacilityHistory.propTypes = {\n  partyId: PropTypes.string,\n  mainDebtor: PropTypes.any,\n  transactId: PropTypes.any\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default FacilityHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityHistory\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/FacilityHistory.js"],"names":["React","useEffect","useState","PropTypes","useTranslation","Select","useLocation","useHistory","LoadingOverlay","Row","Col","Card","CardBody","Button","Label","Table","Pagination","PaginationItem","PaginationLink","CardFooter","Alert","AvForm","AvField","Link","moment","CoreServices","BackendServices","HeaderSections","Currency","translationHelpers","FacilityHistory","props","t","i18n","tr","locationData","setLocationData","location","dataRows","setDataRows","isActiveLoading","setIsActiveLoading","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","historyDetails","setHistoryDetails","currencyData","dataSession","data","undefined","transactionId","length","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadFacilityHistory","fetchData","formatDate","date","format","consultGeneralDataPropCred","then","propuesta","consultarFacilidadesT24","requestId","resp","map","index","facilityTypeId","debtor","formatTable","amount","balance","textAlign","validacion","editFacilitiesT24","catch","error","propTypes","partyId","string","mainDebtor","any","transactId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Alert,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport { CoreServices, BackendServices } from '../../services';\r\nimport HeaderSections from './HeaderSections';\r\n\r\nimport Currency from \"../../helpers/currency\"\r\nimport { translationHelpers } from '../../helpers';\r\n\r\nconst FacilityHistory = (props) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [tr] = translationHelpers('translation');\r\n  const [locationData, setLocationData] = useState(null);\r\n  const location = useLocation();\r\n\r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n  const [historyDetails, setHistoryDetails] = useState(false);\r\n\r\n  const currencyData = new Currency();\r\n  useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    loadFacilityHistory(dataSession);\r\n  }, []);\r\n  //On Mounting (componentDidMount)\r\n\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    setHistoryDetails(props.historyDetails)\r\n  }, [props.historyDetails]);\r\n\r\n  function fetchData() {\r\n    loadFacilityHistory();\r\n  }\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  //cargar lista de facilidades\r\n  async function loadFacilityHistory(dataSession) {\r\n\r\n    setIsActiveLoading(true)\r\n    await apiServiceBackend.consultGeneralDataPropCred(dataSession?.transactionId ?? 0).then(async propuesta => {\r\n      await apiServiceBackend.consultarFacilidadesT24(propuesta[0].requestId).then(async resp => {\r\n        if (resp.length > 0 && resp != undefined) {\r\n          //Cargamos las facilidades\r\n          setIsActiveLoading(false)\r\n          // props.setLevelAutonomy(resp.reduce((acc, crr) => acc + crr.amount, 0))\r\n          setDataRows(resp.map((data, index) => (\r\n            <tr key={index}>\r\n              <td data-label={t(\"FacilityType\")}>{data?.facilityTypeId}</td>\r\n              <td data-label={t(\"DebtorName\")}>{data?.debtor}</td>\r\n              <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.amount)}</td>\r\n              {/* <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td> */}\r\n              <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.balance)}</td>\r\n              <td style={{ textAlign: \"right\" }}>\r\n                {props?.validacion ? null :\r\n                  <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>}\r\n              </td>\r\n            </tr>)))\r\n        } else {\r\n          setIsActiveLoading(false)\r\n            \r\n          //guardamos\r\n          if (props?.validacion) {\r\n            return\r\n          } \r\n          setIsActiveLoading(false)\r\n          /*\r\n          else {\r\n            await apiCoreServices.getFacilitiesByTransaction(dataSession?.transactionId ?? 0)\r\n              .then(async (data2) => {\r\n                console.log(data2);\r\n                if (data2 !== null && data2 !== undefined && data2.length > 0) {\r\n                  for (let i = 0; i < data2.length; i++) {\r\n                    let jsonSet = {\r\n                      \"facilityNumber\": \"0\",\r\n                      \"cr\": data2[i]?.AcctId,\r\n                      \"amount\": data2[i]?.approvedAmount,\r\n                      \"debtor\": props.mainDebtor.name,\r\n                      \"clientTypeId\": props?.mainDebtor?.personId,\r\n                      \"customer\": {\r\n                        \"id\": \"469303-1-434018\"\r\n                      },\r\n                      \"balance\": data2[i]?.actualBalance,\r\n                      \"purpose\": \"\",\r\n                      \"sublimits\": \"\",\r\n                      \"proposalRate\": 0,\r\n                      \"noSubsidyRate\": 0,\r\n                      \"effectiveRate\": 0,\r\n                      \"feci\": false,\r\n                      \"termDays\": 0,\r\n                      \"termDescription\": \"\",\r\n                      \"ltv\": 0,\r\n                      \"finantialConditions\": \" \",\r\n                      \"environmentRiskCategory\": 0,\r\n                      \"covenant\": \" \",\r\n                      \"environmentRiskOpinion\": \" \",\r\n                      \"finantialCovenant\": \" \",\r\n                      \"legalDocumentation\": \"  \",\r\n                      \"otherConditions\": \" \",\r\n                      \"creditRiskOpinion\": \" \",\r\n                      \"provision\": \" \",\r\n                      \"proposalTypeId\": \"\",\r\n                      \"proposalTypeName\": \"\",\r\n                      \"facilityTypeId\": data2[i]?.facilityType ?? \"\",\r\n                      \"termType\": \"\",\r\n                      \"origin\": \"CORE\",\r\n                      \"applyEscrow\": false,\r\n                      \"facilityId\": 0,\r\n                      \"requestId\": propuesta[0].requestId ?? \"\",\r\n                      \"startingAmount\": 0,\r\n                      \"term\": \"\"\r\n                    }\r\n\r\n                    await apiServiceBackend.newFacilityPropCred(jsonSet).then(saveExpo => {\r\n\r\n                    })\r\n\r\n                  }\r\n                  setIsActiveLoading(false)\r\n                  loadFacilityHistory(locationData)\r\n                } else {\r\n                  setIsActiveLoading(false)\r\n                  return\r\n                }\r\n                setIsActiveLoading(false)\r\n              }).catch((error) => {\r\n                setIsActiveLoading(false)\r\n              });\r\n          }\r\n          */\r\n          // var rows = data.map((data, index) => (\r\n          //   <tr key={index}>\r\n          //     <td data-label={t(\"FacilityType\")}>{data?.facilityType ?? data?.facilityTypeId}</td>\r\n          //     <td data-label={t(\"DebtorName\")}>{props.mainDebtor.name}</td>\r\n          //     <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.approvedAmount)}</td>\r\n          //     <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td>\r\n          //     <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.actualBalance)}</td>\r\n          //     <td style={{ textAlign: \"right\" }}>\r\n          //       <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n          //     </td>\r\n          //   </tr>)\r\n          // );\r\n          // setDataRows(rows);\r\n        }\r\n        setIsActiveLoading(false)\r\n      }).catch(error => {\r\n        setIsActiveLoading(false)\r\n      });\r\n\r\n    }).catch(error => {\r\n      setIsActiveLoading(false)\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n\r\n      <Card>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <h5 className=\"card-sub-title\">{t(\"FacilityHistory\")}</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <CardBody>\r\n\r\n          {historyDetails && (<Alert show=\"true\" dismissible=\"true\" color=\"danger\" onClose={() => { setHistoryDetails(!historyDetails) }}>\r\n            {tr(\"The facility was not found\")}\r\n          </Alert>)}\r\n\r\n          <Row>\r\n            <Col md=\"12\" className=\"table-responsive styled-table-div\">\r\n              <Table className=\"table table-striped table-hover styled-table table\" >\r\n                <thead>\r\n                  <tr>\r\n                    <th>{t(\"FacilityType\")}</th>\r\n                    <th>{t(\"DebtorName\")}</th>\r\n                    <th>{t(\"ApprovedAmount\")}</th>\r\n                    {/* <th>{t(\"ApprovedDate\")}</th> */}\r\n                    <th>{t(\"ActualBalance\")}</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataRows.length > 0 ? dataRows : null}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n\r\n    </LoadingOverlay>\r\n\r\n  )\r\n}\r\n\r\nFacilityHistory.propTypes = {\r\n  partyId: PropTypes.string,\r\n  mainDebtor: PropTypes.any,\r\n  transactId: PropTypes.any,\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default FacilityHistory;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}