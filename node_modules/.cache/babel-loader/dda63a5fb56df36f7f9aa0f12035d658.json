{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalInfoAccionistas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalInfoAccionistas = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [paises, setPaises] = useState([]);\n  const [codigoPais, setCodigoPais] = useState(null);\n  const [identificationType, setidentificationType] = useState(\"1\"); //1-Juridico, 2-Persona\n\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\n  const [tipo, setTipo] = useState(null);\n  const [nacionalidadSelect, setnacionalidadSelect] = useState(undefined);\n  const [tipoPersona, settipoPersona] = useState(undefined);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [cambio, setcambio] = useState(1);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\n  const [tipoIdentificacion, settipoIdentificacion] = useState(null);\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false); // Submitimos formulario para busqueda de clientes\n\n  const personTypeData = [{\n    label: t(\"Legal\"),\n    value: \"1\"\n  }, {\n    label: t(\"Natural\"),\n    value: \"2\"\n  }];\n\n  function handleSubmit(event, errors, values) {\n    if (tipo == null) {\n      setcampoRequeridoTipo(true);\n      return;\n    } else {\n      setcampoRequeridoTipo(false);\n    }\n\n    if (codigoPais == null) {\n      setcampoRequeridoNacionalidad(true);\n      return;\n    } else {\n      setcampoRequeridoNacionalidad(false);\n    }\n\n    if (tipoIdentificacion == null) {\n      setcampoRequeridoIdentificacion(true);\n      return;\n    } else {\n      setcampoRequeridoIdentificacion(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.codigoPais = codigoPais;\n    values.identificationType = tipoIdentificacion;\n    values.personType = tipo.value;\n\n    if (props.tipo == \"guardar\") {\n      props.agregarAccionista(values, props.tipo);\n    } else {\n      values.shareholderId = props.dataAcciones.shareholderId;\n      props.agregarAccionista(values, props.tipo);\n    }\n  }\n\n  React.useEffect(() => {\n    // Read Api Service data\n    cargarPaises();\n\n    if (props.tipo != \"guardar\") {\n      setidentificationType(props.dataAcciones.personType);\n    }\n  }, [props]); // React.useEffect(() => {\n  //   // Read Api Service data\n  //   var defaultVal = null;\n  //   try {\n  //     if (identificationTypeList.length > 0 && props.dataAcciones.identificationType !== null && identificationTypeSelected === undefined) {\n  //       defaultVal = identificationTypeList.find(x => x.value === props.dataAcciones.identificationType);\n  //       if (defaultVal !== undefined) {\n  //         setIdentificationTypeSelected(defaultVal);\n  //       }\n  //     }\n  //   }\n  //   catch (err) { }\n  // }, [props]);\n\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setnacionalidadSelect(undefined);\n\n    try {\n      if (paises.length > 0 && props.dataAcciones.nationalityId !== null && nacionalidadSelect === undefined) {\n        defaultVal = paises.find(x => x.value === props.dataAcciones.nationalityId);\n\n        if (defaultVal !== undefined) {\n          setCodigoPais(defaultVal);\n          setnacionalidadSelect(defaultVal);\n        }\n      }\n\n      if (personTypeData.length > 0 && props.dataAcciones.personType !== null && personTypeSelect === undefined) {\n        defaultVal = personTypeData.find(x => x.value === props.dataAcciones.personType);\n\n        if (defaultVal !== undefined) {\n          setTipo(defaultVal.value);\n          setpersonTypeSelect(defaultVal);\n        }\n      }\n\n      if (identificationTypeList.length > 0 && props.dataAcciones.identificationType !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.value === props.dataAcciones.identificationType);\n\n        if (defaultVal !== undefined) {\n          setidentificationType(defaultVal.value);\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n\n  function changePais(event) {\n    setCodigoPais(event);\n  }\n\n  function changeTipo(event) {\n    setTipo(event);\n    setidentificationType(event.value);\n  }\n\n  function cargarPaises() {\n    const api = new CoreServices();\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"Selectacountry\"),\n        options: json\n      }];\n      setPaises(json);\n      setcambio(null);\n      setcambio(2);\n    });\n    const apiServiceBackend = new ApiServiceBackend();\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"ID Type\"),\r\n            options: json,\r\n          },\r\n        ];*/\n\n\n        setIdentificationTypeList(json);\n      }\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  } //On change Inputs\n\n\n  function handleChangeInputfrmSearch(e) {\n    //selectedData[e.target.name] = e.target.value;\n    //props.updateDataModel(selectedData);    \n    switch (e.target.name) {\n      case \"identificationType\":\n        {\n          setidentificationType(e.target.value);\n          break;\n        }\n    }\n  }\n\n  function getSearchForm() {\n    //segun tipo de identiicaci√≥n\n    switch (identificationType) {\n      case \"1\":\n        {\n          //Juridico\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstName\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"firstName2\",\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                value: props.dataAcciones.shareholderFirstName,\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this);\n        }\n\n      default:\n        {\n          //Cedula o Pasaporte \n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"firstName\",\n                  children: t(\"First Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"firstName\",\n                  value: props.dataAcciones.shareholderFirstName,\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"secondName\",\n                  value: props.dataAcciones.shareholderMiddleName,\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"firstLastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"firstLastName\",\n                  value: props.dataAcciones.shareholderFirstSurname,\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  className: \"form-control\",\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondLastName\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"secondLastName\",\n                  value: props.dataAcciones.shareholderSecondSurname,\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  },\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"startDate\",\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"startDate\",\n                  type: \"date\",\n                  value: props.dataAcciones.birthDate,\n                  id: \"startDate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 11\n          }, this);\n        }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Shareholder Information\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        style: {\n          backgroundColor: \"#f3f5f7\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"ID Type\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setIdentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                          settipoIdentificacion(e.value);\n                        },\n                        options: identificationTypeList,\n                        placeholder: t(\"SelectType\"),\n                        value: identificationTypeSelected\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 25\n                      }, this), campoRequeridoIdentificacion ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idnumber\",\n                        children: t(\"ID Number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"identificationNumber\",\n                        type: \"text\",\n                        id: \"identificationNumber\",\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          }\n                        },\n                        value: props.dataAcciones.identificationNumber\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"identificationType\",\n                        children: t(\"PersonType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setpersonTypeSelect(personTypeData.find(x => x.value === e.value));\n                          changeTipo(e);\n                        },\n                        options: personTypeData,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: personTypeSelect // value={props.dataAcciones.shareholderName}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 336,\n                        columnNumber: 25\n                      }, this), campoRequeridoTipo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this), getSearchForm()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"nationality\",\n                        children: t(\"Nationality\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 356,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setnacionalidadSelect(paises.find(x => x.value === e.value));\n                          changePais(e);\n                        },\n                        options: paises,\n                        id: \"paises\",\n                        name: \"paises\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: nacionalidadSelect // value={props.dataAcciones.nationalityId}\n                        // defaultValue={props.datosEmpresa.countryIdentification}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 357,\n                        columnNumber: 25\n                      }, this), campoRequeridoNacionalidad ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"name\",\n                        children: t(\"Participation\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"participation\",\n                        id: \"participation\",\n                        value: props.dataAcciones.participation,\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          },\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"name\",\n                        children: t(\"YearsExprience\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"yearsExprience\",\n                        value: props.dataAcciones.yearsExperience,\n                        id: \"yearsExprience\",\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          },\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 395,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"dark\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}, \"gytFE1aU06Bj25aadNPGPkltgXg=\", false, function () {\n  return [useTranslation];\n}));\n_c2 = ModalInfoAccionistas;\nModalInfoAccionistas.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onSelectClient: PropTypes.func.isRequired\n};\nexport default withTranslation()(ModalInfoAccionistas);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalInfoAccionistas$React.forwardRef\");\n$RefreshReg$(_c2, \"ModalInfoAccionistas\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalInfoAccionistas.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","AvForm","AvField","AvGroup","CoreServices","ApiServiceBackend","Select","ModalInfoAccionistas","forwardRef","props","ref","t","i18n","paises","setPaises","codigoPais","setCodigoPais","identificationType","setidentificationType","campoRequeridoTipo","setcampoRequeridoTipo","campoRequeridoNacionalidad","setcampoRequeridoNacionalidad","tipo","setTipo","nacionalidadSelect","setnacionalidadSelect","undefined","tipoPersona","settipoPersona","dataReturn","setDataReturn","jsonAccionistas","cambio","setcambio","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","personTypeSelect","setpersonTypeSelect","tipoIdentificacion","settipoIdentificacion","campoRequeridoIdentificacion","setcampoRequeridoIdentificacion","personTypeData","label","value","handleSubmit","event","errors","values","preventDefault","length","personType","agregarAccionista","shareholderId","dataAcciones","useEffect","cargarPaises","defaultVal","nationalityId","find","x","err","changePais","changeTipo","api","getPaisesCatalogo","then","response","json","i","Records","push","optionGroup1","options","apiServiceBackend","consultarCatalogoTipoIdentificacion","data","catch","error","console","handleChangeInputfrmSearch","e","target","name","getSearchForm","shareholderFirstName","required","shareholderMiddleName","shareholderFirstSurname","shareholderSecondSurname","birthDate","isOpen","toggle","backgroundColor","errorMessage","identificationNumber","participation","number","yearsExperience","textAlign","margin","botones","propTypes","bool","func","onSelectClient","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\r\nimport Select from \"react-select\";\r\n\r\nconst ModalInfoAccionistas = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [paises, setPaises] = useState([]);\r\n  const [codigoPais, setCodigoPais] = useState(null);\r\n  const [identificationType, setidentificationType] = useState(\"1\");//1-Juridico, 2-Persona\r\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\r\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\r\n  const [tipo, setTipo] = useState(null);\r\n  const [nacionalidadSelect, setnacionalidadSelect] = useState(undefined);\r\n  const [tipoPersona, settipoPersona] = useState(undefined);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [cambio, setcambio] = useState(1);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\r\n  const [tipoIdentificacion, settipoIdentificacion] = useState(null);\r\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\r\n  // Submitimos formulario para busqueda de clientes\r\n  const personTypeData= [{ label: t(\"Legal\"), value: \"1\" }, { label: t(\"Natural\"), value: \"2\" }]\r\n  function handleSubmit(event, errors, values) {\r\n    if (tipo == null) {\r\n      setcampoRequeridoTipo(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoTipo(false);\r\n    }\r\n    if (codigoPais == null) {\r\n      setcampoRequeridoNacionalidad(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoNacionalidad(false);\r\n    }\r\n    if (tipoIdentificacion == null) {\r\n      setcampoRequeridoIdentificacion(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoIdentificacion(false);\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.codigoPais = codigoPais;\r\n    values.identificationType = tipoIdentificacion;\r\n    values.personType = tipo.value;\r\n    if (props.tipo == \"guardar\") {\r\n      props.agregarAccionista(values, props.tipo);\r\n    } else {\r\n      values.shareholderId = props.dataAcciones.shareholderId;\r\n      props.agregarAccionista(values, props.tipo);\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    cargarPaises()\r\n    if(props.tipo!= \"guardar\"){\r\n      setidentificationType(props.dataAcciones.personType)\r\n    }\r\n  }, [props]);\r\n  // React.useEffect(() => {\r\n  //   // Read Api Service data\r\n  //   var defaultVal = null;\r\n  //   try {\r\n  //     if (identificationTypeList.length > 0 && props.dataAcciones.identificationType !== null && identificationTypeSelected === undefined) {\r\n  //       defaultVal = identificationTypeList.find(x => x.value === props.dataAcciones.identificationType);\r\n  //       if (defaultVal !== undefined) {\r\n  //         setIdentificationTypeSelected(defaultVal);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   catch (err) { }\r\n  // }, [props]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setnacionalidadSelect(undefined)\r\n    try {\r\n      if (paises.length > 0 && props.dataAcciones.nationalityId !== null && nacionalidadSelect === undefined) {\r\n        defaultVal = paises.find(x => x.value === props.dataAcciones.nationalityId);\r\n        if (defaultVal !== undefined) {\r\n          setCodigoPais(defaultVal)\r\n          setnacionalidadSelect(defaultVal);\r\n        }\r\n      }\r\n      if (personTypeData.length > 0 && props.dataAcciones.personType !== null && personTypeSelect === undefined) {\r\n        defaultVal = personTypeData.find(x => x.value === props.dataAcciones.personType);\r\n        if (defaultVal !== undefined) {\r\n          \r\n          setTipo(defaultVal.value)\r\n          setpersonTypeSelect(defaultVal);\r\n        }\r\n      }\r\n      if (identificationTypeList.length > 0 && props.dataAcciones.identificationType !== null && identificationTypeSelected === undefined) {\r\n        defaultVal = identificationTypeList.find(x => x.value === props.dataAcciones.identificationType);\r\n        if (defaultVal !== undefined) {\r\n          setidentificationType(defaultVal.value)\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n\r\n  }, [props]);\r\n  function changePais(event) {\r\n    setCodigoPais(event);\r\n  }\r\n  function changeTipo(event) {\r\n    setTipo(event);\r\n    setidentificationType(event.value);\r\n  }\r\n  function cargarPaises() {\r\n    const api = new CoreServices();\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"Selectacountry\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        setPaises(json);\r\n        setcambio(null)\r\n        setcambio(2)\r\n      });\r\n    const apiServiceBackend = new ApiServiceBackend();\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          /*const optionGroup1 = [\r\n            {\r\n              label: t(\"ID Type\"),\r\n              options: json,\r\n            },\r\n          ];*/\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n  }\r\n  //On change Inputs\r\n  function handleChangeInputfrmSearch(e) {\r\n    //selectedData[e.target.name] = e.target.value;\r\n    //props.updateDataModel(selectedData);    \r\n\r\n    switch (e.target.name) {\r\n      case \"identificationType\": {\r\n        setidentificationType(e.target.value);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function getSearchForm() {\r\n    //segun tipo de identiicaci√≥n\r\n    switch (identificationType) {\r\n      case \"1\": { //Juridico\r\n        return (\r\n          <Col md=\"8\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstName\">{t(\"SocialReason\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName2\"\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                value={props.dataAcciones.shareholderFirstName}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n        )\r\n      }\r\n      default: { //Cedula o Pasaporte \r\n        return (\r\n          <React.Fragment>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstName\">{t(\"First Name\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  value={props.dataAcciones.shareholderFirstName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n                <AvField\r\n                  name=\"secondName\"\r\n                  value={props.dataAcciones.shareholderMiddleName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstLastName\">{t(\"FirstLastName\")}</Label>\r\n                <AvField\r\n                  name=\"firstLastName\"\r\n                  value={props.dataAcciones.shareholderFirstSurname}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\"\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondLastName\">{t(\"SecondLastName\")}</Label>\r\n                <AvField\r\n                  name=\"secondLastName\"\r\n                  value={props.dataAcciones.shareholderSecondSurname}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <AvGroup className=\"mb-3\">\r\n                <Label htmlFor=\"startDate\">{t(\"DBO\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"startDate\"\r\n                  type=\"date\"\r\n                  value={props.dataAcciones.birthDate}\r\n                  id=\"startDate\" />\r\n              </AvGroup>\r\n            </Col>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Shareholder Information\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n          <Row>\r\n            <Col xl=\"12\">\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"ID Type\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => {\r\n                            setIdentificationTypeSelected(identificationTypeList.find(x => x.value === e.value))\r\n                            settipoIdentificacion(e.value);\r\n                          }}\r\n                          options={identificationTypeList}\r\n                          placeholder={t(\"SelectType\")}\r\n                          value={identificationTypeSelected}\r\n                        />\r\n                        {campoRequeridoIdentificacion ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idnumber\">{t(\"ID Number\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"identificationNumber\"\r\n                          type=\"text\"\r\n                          id=\"identificationNumber\"\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") }\r\n                          }}\r\n                          value={props.dataAcciones.identificationNumber}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"identificationType\">{t(\"PersonType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => {setpersonTypeSelect(personTypeData.find(x => x.value === e.value)); changeTipo(e) }}\r\n                          options={personTypeData}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={personTypeSelect}\r\n                        // value={props.dataAcciones.shareholderName}\r\n                        />\r\n                        {campoRequeridoTipo ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n\r\n                      </div>\r\n                    </Col>\r\n                    {getSearchForm()}\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"nationality\">{t(\"Nationality\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => {\r\n                            setnacionalidadSelect(paises.find(x => x.value === e.value))\r\n                            changePais(e);\r\n                          }}\r\n                          options={paises}\r\n                          id=\"paises\"\r\n                          name=\"paises\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={nacionalidadSelect}\r\n                        // value={props.dataAcciones.nationalityId}\r\n                        // defaultValue={props.datosEmpresa.countryIdentification}\r\n                        />\r\n                        {campoRequeridoNacionalidad ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"name\">{t(\"Participation\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"participation\"\r\n                          id=\"participation\"\r\n                          value={props.dataAcciones.participation}\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"name\">{t(\"YearsExprience\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"yearsExprience\"\r\n                          value={props.dataAcciones.yearsExperience}\r\n                          id=\"yearsExprience\"\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Edit\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </AvForm>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nModalInfoAccionistas.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  onSelectClient: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withTranslation()(ModalInfoAccionistas));\r\n"]},"metadata":{},"sourceType":"module"}