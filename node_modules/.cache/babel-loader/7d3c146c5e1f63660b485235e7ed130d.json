{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalReciprocidad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport * as opt from \"../../../../../helpers/options_helper\";\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\nimport SessionHelper from \"../../../../../helpers/SessionHelper\";\nimport moment from \"moment\";\nimport { GetMontNumberByName, GetMontNameByNumber, Capitalize } from '../../../../../helpers/commons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalReciprocidad = props => {\n  _s();\n\n  var _props$dataRecipro$ye, _props$dataRecipro, _props$dataRecipro$de, _props$dataRecipro2, _props$dataRecipro$av, _props$dataRecipro3, _props$dataRecipro$re, _props$dataRecipro4, _props$dataRecipro$so, _props$dataRecipro5, _props$dataRecipro$sa, _props$dataRecipro6;\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\n  const [year, setyear] = useState((_props$dataRecipro$ye = (_props$dataRecipro = props.dataRecipro) === null || _props$dataRecipro === void 0 ? void 0 : _props$dataRecipro.year) !== null && _props$dataRecipro$ye !== void 0 ? _props$dataRecipro$ye : 2021);\n  const [month, setmonth] = useState(null);\n  const [mesSelect, setmesSelect] = useState(undefined);\n  const meses = [{\n    label: t(\"January\"),\n    value: t(\"January\")\n  }, {\n    label: t(\"February\"),\n    value: t(\"February\")\n  }, {\n    label: t(\"March\"),\n    value: t(\"March\")\n  }, {\n    label: t(\"April\"),\n    value: t(\"April\")\n  }, {\n    label: t(\"May\"),\n    value: t(\"May\")\n  }, {\n    label: t(\"June\"),\n    value: t(\"June\")\n  }, {\n    label: t(\"July\"),\n    value: t(\"July\")\n  }, {\n    label: t(\"August\"),\n    value: t(\"August\")\n  }, {\n    label: t(\"September\"),\n    value: t(\"September\")\n  }, {\n    label: t(\"October\"),\n    value: t(\"October\")\n  }, {\n    label: t(\"November\"),\n    value: t(\"November\")\n  }, {\n    label: t(\"December\"),\n    value: t(\"December\")\n  }];\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\n  const [deposits, setdeposits] = useState(currencyData.format((_props$dataRecipro$de = props === null || props === void 0 ? void 0 : (_props$dataRecipro2 = props.dataRecipro) === null || _props$dataRecipro2 === void 0 ? void 0 : _props$dataRecipro2.deposits) !== null && _props$dataRecipro$de !== void 0 ? _props$dataRecipro$de : 0));\n  const [averageBalance, setaverageBalance] = useState(currencyData.format((_props$dataRecipro$av = props === null || props === void 0 ? void 0 : (_props$dataRecipro3 = props.dataRecipro) === null || _props$dataRecipro3 === void 0 ? void 0 : _props$dataRecipro3.averageBalance) !== null && _props$dataRecipro$av !== void 0 ? _props$dataRecipro$av : 0));\n  const [debts, setdebts] = useState(null);\n  const [reciprocity, setreciprocity] = useState(currencyData.format((_props$dataRecipro$re = props === null || props === void 0 ? void 0 : (_props$dataRecipro4 = props.dataRecipro) === null || _props$dataRecipro4 === void 0 ? void 0 : _props$dataRecipro4.reciprocity) !== null && _props$dataRecipro$re !== void 0 ? _props$dataRecipro$re : 0));\n  const [sow, setsow] = useState(currencyData.format((_props$dataRecipro$so = props === null || props === void 0 ? void 0 : (_props$dataRecipro5 = props.dataRecipro) === null || _props$dataRecipro5 === void 0 ? void 0 : _props$dataRecipro5.sow) !== null && _props$dataRecipro$so !== void 0 ? _props$dataRecipro$so : 0));\n  const [sales, setsales] = useState(currencyData.format((_props$dataRecipro$sa = props === null || props === void 0 ? void 0 : (_props$dataRecipro6 = props.dataRecipro) === null || _props$dataRecipro6 === void 0 ? void 0 : _props$dataRecipro6.sales) !== null && _props$dataRecipro$sa !== void 0 ? _props$dataRecipro$sa : 0));\n  React.useEffect(() => {\n    var result = sessionHelper.get(opt.VARNAME_LOCATIONDATA);\n\n    if (result !== undefined && result !== null) {\n      loadMainDebtor(result.transactionId);\n    } // Read Api Service data\n\n\n    var defaultVal = null;\n    setmesSelect(undefined);\n\n    try {\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\n\n        if (defaultVal !== undefined) {\n          setmesSelect(defaultVal);\n          setmonth(defaultVal.value.toUpperCase());\n        }\n      } else {\n        defaultVal = meses[0];\n        setmesSelect(defaultVal);\n        setmonth(defaultVal.value.toUpperCase());\n      }\n    } catch (err) {}\n  }, [props.isOpen]);\n  React.useEffect(() => {\n    getReciprocityT24();\n    getDebts();\n  }, [year, month, mainDebtor]);\n  React.useEffect(() => {\n    calculateData();\n  }, [sales, deposits, averageBalance, reciprocity, sow, debts]); //cargar deudor principal\n\n  async function loadMainDebtor(transactionId) {\n    var result = await backendServices.consultPrincipalDebtor(transactionId);\n\n    if (result !== undefined && result !== null) {\n      setmainDebtor(result);\n    }\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit(event, errors, values) {\n    var _mesSelect$value;\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.sales = sales !== null ? sales : props.dataRecipro.sales;\n    values.averageBalance = averageBalance !== null ? averageBalance : props.dataRecipro.averageBalance;\n    values.deposits = deposits !== null ? deposits : props.dataRecipro.deposits;\n    values.reciprocity = reciprocity !== null ? reciprocity : props.dataRecipro.reciprocity;\n    values.sow = sow !== null ? sow : props.dataRecipro.sow;\n    values.year = year !== null ? year : props.dataRecipro.year;\n    values.month = (_mesSelect$value = mesSelect === null || mesSelect === void 0 ? void 0 : mesSelect.value) !== null && _mesSelect$value !== void 0 ? _mesSelect$value : \"Enero\";\n\n    if (props.tipo == \"guardar\") {\n      props.dataManagament(values, props.tipo);\n    } else {\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\n      props.dataManagament(values, props.tipo);\n    } // props.onSubmit(values);\n\n  }\n\n  async function getReciprocityT24() {\n    if (mainDebtor !== null && year !== null && year > 1995 && year <= Number(moment().format(\"YYYY\")) && month !== null) {\n      var data = await coreServices.getReciprocity(mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.customerNumberT24, year, month.toUpperCase());\n      console.log(\"getReciprocity\", year, month, data);\n\n      if (data !== undefined) {\n        setdeposits(currencyData.format(data.deposits));\n        setaverageBalance(currencyData.format(data.averageAmt));\n      }\n    }\n  } //carga las deudas \n\n\n  async function getDebts() {\n    if (mainDebtor !== null && year !== null && year > 1995 && year <= Number(moment().format(\"YYYY\")) && month !== null) {\n      var monthNum = GetMontNumberByName(month);\n      var date = year + \"-\" + monthNum;\n      var result = sessionHelper.get(opt.VARNAME_LOCATIONDATA);\n\n      if (result !== undefined && result !== null) {\n        var shortDebts = await backendServices.consultBankingRelationsDebtsCP(result.transactionId);\n\n        if (shortDebts !== undefined && shortDebts.getBankingRelationCPDTOList.length > 0) {\n          shortDebts = shortDebts.getBankingRelationCPDTOList.filter(element => {\n            return element.status === true && element.date.indexOf(date) >= 0;\n          });\n        }\n\n        var longDebts = await backendServices.consultBankRelationsDebtsLP(result.transactionId);\n\n        if (longDebts !== undefined && longDebts.bankingRelationLPDTOList.length > 0) {\n          longDebts = longDebts.bankingRelationLPDTOList.filter(element => {\n            return element.status === true && element.date.indexOf(date) >= 0;\n          });\n        }\n\n        var sowData = {\n          otherBank: 0,\n          banesco: 0,\n          total: 0,\n          sow: 0\n        };\n        sowData.otherBank = 0;\n        sowData.banesco = 0;\n\n        if (dataReturn.dataTablDeudaCorto !== null) {\n          for (var short of dataReturn.dataTablDeudaCorto) {\n            if (short.bank.toLowerCase().indexOf('banesco') >= 0) {\n              sowApproved.banesco += Number(short.amount);\n              sowProposal.banesco += Number(short.debitBalance1) + Number(short.debitBalance2) + Number(short.debitBalance3);\n            } else {\n              sowApproved.otherBank += Number(short.amount);\n              sowProposal.otherBank += Number(short.debitBalance1) + Number(short.debitBalance2) + Number(short.debitBalance3);\n            }\n          }\n        }\n\n        if (dataReturn.dataTablDeudaLargo !== null) {\n          for (var long of dataReturn.dataTablDeudaLargo) {\n            if (long.bank.toLowerCase().indexOf('banesco') >= 0) {\n              sowApproved.banesco += Number(long.amount);\n              sowProposal.banesco += Number(long.debitBalance1) + Number(long.debitBalance2) + Number(long.debitBalance3);\n            } else {\n              sowApproved.otherBank += Number(long.amount);\n              sowProposal.otherBank += Number(long.debitBalance1) + Number(long.debitBalance2) + Number(long.debitBalance3);\n            }\n          }\n        }\n        /*\r\n        if(debtsT24!==null){\r\n            //sowShort,sowLong\r\n          for (var short of debtsT24.shortTermresult) {               \r\n            if(short.bank.toLowerCase().indexOf('banesco') >= 0){\r\n              sowApproved.banesco += Number(short.approvalRisk)\r\n              sowProposal.banesco += Number(short.proposalRisk)\r\n            }\r\n            else{\r\n              sowApproved.otherBank += Number(short.approvalRisk)\r\n              sowProposal.otherBank += Number(short.proposalRisk)\r\n            }\r\n          }\r\n        \r\n          for (var long of debtsT24.longTermresult) {       \r\n            if(long.bank.toLowerCase().indexOf('banesco') >= 0){\r\n              sowApproved.banesco += Number(long.approvalRisk)\r\n              sowProposal.banesco += Number(long.proposalRisk)\r\n            }\r\n            else{\r\n              sowApproved.otherBank += Number(long.approvalRisk)\r\n              sowProposal.otherBank += Number(long.proposalRisk)\r\n            }\r\n          }\r\n        }\r\n        */\n\n        /*\r\n        sowApproved.otherBank += Number((dataReturn?.sumatoriaDeudaCorto?.monto ?? 0) + (dataReturn?.sumatoriaDeudaLargo?.monto ?? 0))\r\n        sowProposal.otherBank += Number((dataReturn?.sumatoriaDeudaCorto?.saldo1 ?? 0) + (dataReturn?.sumatoriaDeudaLargo?.saldo1 ?? 0))\r\n        */\n\n\n        sowApproved.total = sowApproved.banesco + sowApproved.otherBank;\n        sowProposal.total = sowProposal.banesco + sowProposal.otherBank;\n        sowApproved.sow = sowApproved.total > 0 ? Number(sowApproved.banesco / sowApproved.total * 100) : 0;\n        sowProposal.sow = sowProposal.total > 0 ? Number(sowProposal.banesco / sowProposal.total * 100) : 0;\n      }\n      /*\r\n      coreServices.getShortLongTermDebts2(mainDebtor.clientDocId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {  \r\n          setdebts(data);\r\n        }\r\n      }).catch((error) => { });\r\n      */\n\n    }\n  }\n\n  function calculateData() {\n    if (sales > 0) {\n      var recipro = Number(deposits) / Number(sales);\n      setreciprocity(currencyData.format(Number(recipro).toFixed(2)));\n    } //Calcular SOW\n\n\n    if (debts !== null) {\n      //sowShort,sowLong\n      for (var dbts of debts.shortTermresult) {\n        if (dbts.bank.toLowerCase().indexOf('banesco') >= 0) {//sowApproved.banesco += Number(short.approvalRisk)\n          //sowProposal.banesco += Number(short.proposalRisk)\n        } else {//sowApproved.otherBank += Number(short.approvalRisk)\n            //sowProposal.otherBank += Number(short.proposalRisk)\n          }\n      }\n    }\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla == 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Reciprocity\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idYear\",\n                        children: t(\"Date\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 301,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"requestDate\",\n                        type: \"month\",\n                        id: \"requestDate\",\n                        onChange: e => {\n                          setyear(e.target.value.split(\"-\")[0]);\n                          var monthselect = e.target.value.split(\"-\")[1];\n                          monthselect = GetMontNameByNumber(Number(monthselect));\n                          setmonth(monthselect);\n                          monthselect = Capitalize(monthselect);\n                          console.log(monthselect);\n                          setmesSelect(meses.find(x => x.value === monthselect));\n                        },\n                        value: moment(year + \"-\" + (mesSelect !== undefined ? GetMontNumberByName(mesSelect.value.toUpperCase()) : \"01\")).format(\"YYYY-MM\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sales\",\n                        children: t(\"Sales\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 351,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"sales\",\n                        id: \"sales\",\n                        onChange: e => {\n                          setsales(e.target.value);\n                        },\n                        value: sales,\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 352,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"deposits\",\n                        children: t(\"Deposits\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"deposits\",\n                        onChange: e => {\n                          setdeposits(e.target.value);\n                        },\n                        value: deposits,\n                        id: \"deposits\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"averagebalance\",\n                        children: t(\"AverageBalance\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 381,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"averageBalance\",\n                        onChange: e => {\n                          setaverageBalance(e.target.value);\n                        },\n                        value: averageBalance,\n                        id: \"averageBalance\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 382,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"reciprocity\",\n                        children: t(\"Reciprocity\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"reciprocity\",\n                        onChange: e => {\n                          setreciprocity(e.target.value);\n                        },\n                        value: reciprocity,\n                        id: \"reciprocity\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 397,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sow\",\n                        children: t(\"Sow\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\" // type=\"text\"\n                        ,\n                        type: \"number\",\n                        min: 0,\n                        name: \"sow\",\n                        value: sow,\n                        onChange: e => {\n                          setsow(e.target.value);\n                        },\n                        onKeyPress: e => {\n                          return check(e);\n                        },\n                        id: \"sow\" // pattern=\"^[0-9,.]*$\"\n                        // onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 412,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalReciprocidad, \"XuIWu8Aoyu8oaCxZ/yRW7gZrVmA=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalReciprocidad;\nModalReciprocidad.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  partyId: PropTypes.string\n};\nexport default ModalReciprocidad;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalReciprocidad\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalReciprocidad.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","opt","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","AvForm","AvField","AvGroup","Select","Currency","BackendServices","CoreServices","BpmServices","SessionHelper","moment","GetMontNumberByName","GetMontNameByNumber","Capitalize","ModalReciprocidad","props","currencyData","t","i18n","campoRequeridoAno","setcampoRequeridoAno","campoRequeridoMes","setcampoRequeridoMes","year","setyear","dataRecipro","month","setmonth","mesSelect","setmesSelect","undefined","meses","label","value","mainDebtor","setmainDebtor","coreServices","setcoreServices","backendServices","setbackendServices","sessionHelper","setsessionHelper","deposits","setdeposits","format","averageBalance","setaverageBalance","debts","setdebts","reciprocity","setreciprocity","sow","setsow","sales","setsales","useEffect","result","get","VARNAME_LOCATIONDATA","loadMainDebtor","transactionId","defaultVal","length","find","x","toUpperCase","err","isOpen","getReciprocityT24","getDebts","calculateData","consultPrincipalDebtor","handleSubmit","event","errors","values","preventDefault","tipo","dataManagament","reciprocity_id","Number","data","getReciprocity","customerNumberT24","console","log","averageAmt","monthNum","date","shortDebts","consultBankingRelationsDebtsCP","getBankingRelationCPDTOList","filter","element","status","indexOf","longDebts","consultBankRelationsDebtsLP","bankingRelationLPDTOList","sowData","otherBank","banesco","total","dataReturn","dataTablDeudaCorto","short","bank","toLowerCase","sowApproved","amount","sowProposal","debitBalance1","debitBalance2","debitBalance3","dataTablDeudaLargo","long","recipro","toFixed","dbts","shortTermresult","check","e","tecla","document","all","keyCode","which","toggle","backgroundColor","target","split","monthselect","getRealValue","textAlign","margin","botones","propTypes","bool","func","partyId","string"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport * as opt from \"../../../../../helpers/options_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../../services\";\r\nimport SessionHelper from \"../../../../../helpers/SessionHelper\";\r\nimport moment from \"moment\";\r\n\r\nimport { GetMontNumberByName, GetMontNameByNumber, Capitalize } from '../../../../../helpers/commons'\r\n\r\nconst ModalReciprocidad = (props) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\r\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\r\n  const [year, setyear] = useState(props.dataRecipro?.year ?? 2021);\r\n  const [month, setmonth] = useState(null);\r\n  const [mesSelect, setmesSelect] = useState(undefined);\r\n  const meses = [{ label: t(\"January\"), value: t(\"January\") }\r\n    , { label: t(\"February\"), value: t(\"February\") },\r\n  { label: t(\"March\"), value: t(\"March\") },\r\n  { label: t(\"April\"), value: t(\"April\") },\r\n  { label: t(\"May\"), value: t(\"May\") },\r\n  { label: t(\"June\"), value: t(\"June\") },\r\n  { label: t(\"July\"), value: t(\"July\") },\r\n  { label: t(\"August\"), value: t(\"August\") },\r\n  { label: t(\"September\"), value: t(\"September\") },\r\n  { label: t(\"October\"), value: t(\"October\") },\r\n  { label: t(\"November\"), value: t(\"November\") },\r\n  { label: t(\"December\"), value: t(\"December\") }];\r\n\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\r\n\r\n  const [deposits, setdeposits] = useState(currencyData.format(props?.dataRecipro?.deposits ?? 0))\r\n  const [averageBalance, setaverageBalance] = useState(currencyData.format(props?.dataRecipro?.averageBalance ?? 0))  \r\n  const [debts, setdebts] = useState(null)\r\n\r\n  const [reciprocity, setreciprocity] = useState(currencyData.format(props?.dataRecipro?.reciprocity ?? 0))\r\n  const [sow, setsow] = useState(currencyData.format(props?.dataRecipro?.sow ?? 0))\r\n  const [sales, setsales] = useState(currencyData.format(props?.dataRecipro?.sales ?? 0))\r\n\r\n  React.useEffect(() => {\r\n    var result = sessionHelper.get(opt.VARNAME_LOCATIONDATA);\r\n    if (result !== undefined && result !== null) {\r\n      loadMainDebtor(result.transactionId)\r\n    }\r\n\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setmesSelect(undefined)\r\n    try {\r\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\r\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\r\n        if (defaultVal !== undefined) {\r\n          setmesSelect(defaultVal);\r\n          setmonth(defaultVal.value.toUpperCase())\r\n        }\r\n      }\r\n      else {\r\n        defaultVal = meses[0];\r\n        setmesSelect(defaultVal);\r\n        setmonth(defaultVal.value.toUpperCase());\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.isOpen]);\r\n\r\n  React.useEffect(() => {\r\n    getReciprocityT24();\r\n    getDebts();\r\n  }, [year, month, mainDebtor]);\r\n\r\n  React.useEffect(() => {\r\n    calculateData()\r\n  }, [sales, deposits, averageBalance, reciprocity, sow, debts]);\r\n\r\n  //cargar deudor principal\r\n  async function loadMainDebtor(transactionId) {\r\n    var result = await backendServices.consultPrincipalDebtor(transactionId)\r\n    if (result !== undefined && result !== null) {\r\n      setmainDebtor(result);\r\n    }\r\n  }\r\n\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    values.sales = sales !== null ? sales : props.dataRecipro.sales;\r\n    values.averageBalance = averageBalance !== null ? averageBalance : props.dataRecipro.averageBalance;\r\n    values.deposits = deposits !== null ? deposits : props.dataRecipro.deposits;\r\n    values.reciprocity = reciprocity !== null ? reciprocity : props.dataRecipro.reciprocity;\r\n    values.sow = sow !== null ? sow : props.dataRecipro.sow;\r\n    values.year = year !== null ? year : props.dataRecipro.year;\r\n    values.month = mesSelect?.value ?? \"Enero\";\r\n    if (props.tipo == \"guardar\") {\r\n      props.dataManagament(values, props.tipo);\r\n    } else {\r\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\r\n      props.dataManagament(values, props.tipo);\r\n    }\r\n    // props.onSubmit(values);\r\n  }\r\n\r\n  async function getReciprocityT24() {\r\n    if (mainDebtor !== null && year !== null && year > 1995 && year <= Number(moment().format(\"YYYY\")) && month !== null) {\r\n      var data = await coreServices.getReciprocity(mainDebtor?.customerNumberT24, year, month.toUpperCase());\r\n      console.log(\"getReciprocity\", year, month,data);\r\n      if (data !== undefined) {\r\n        setdeposits(currencyData.format(data.deposits))\r\n        setaverageBalance(currencyData.format(data.averageAmt))\r\n      }\r\n    }\r\n  }\r\n\r\n  //carga las deudas \r\n  async function getDebts() {\r\n    if (mainDebtor !== null && year !== null && year > 1995 && year <= Number(moment().format(\"YYYY\")) && month !== null) {\r\n\r\n      var monthNum = GetMontNumberByName(month);\r\n      var date = year+\"-\"+monthNum;                \r\n    \r\n      var result = sessionHelper.get(opt.VARNAME_LOCATIONDATA);\r\n      if (result !== undefined && result !== null) {\r\n        var shortDebts = await backendServices.consultBankingRelationsDebtsCP(result.transactionId)\r\n        if(shortDebts!==undefined && shortDebts.getBankingRelationCPDTOList.length>0){\r\n          shortDebts = shortDebts.getBankingRelationCPDTOList.filter((element) => {\r\n            return (element.status === true && element.date.indexOf(date) >= 0);\r\n          })\r\n        }\r\n        \r\n        var longDebts = await backendServices.consultBankRelationsDebtsLP(result.transactionId)\r\n        if(longDebts!==undefined && longDebts.bankingRelationLPDTOList.length>0){\r\n            longDebts = longDebts.bankingRelationLPDTOList.filter((element) => {\r\n              return (element.status === true && element.date.indexOf(date) >= 0);\r\n          })\r\n        }\r\n\r\n        var sowData = {otherBank:0,banesco:0,total:0,sow:0}\r\n        sowData.otherBank=0;\r\n        sowData.banesco=0;\r\n\r\n      if(dataReturn.dataTablDeudaCorto!==null){\r\n        for (var short of dataReturn.dataTablDeudaCorto) {               \r\n          if(short.bank.toLowerCase().indexOf('banesco') >= 0){\r\n            sowApproved.banesco += Number(short.amount)\r\n            sowProposal.banesco += Number(short.debitBalance1) + Number(short.debitBalance2)+Number(short.debitBalance3)\r\n          }\r\n          else{\r\n            sowApproved.otherBank += Number(short.amount)\r\n            sowProposal.otherBank += Number(short.debitBalance1) + Number(short.debitBalance2)+Number(short.debitBalance3)\r\n          }\r\n        }\r\n      }\r\n      if(dataReturn.dataTablDeudaLargo!==null){\r\n        for (var long of dataReturn.dataTablDeudaLargo) {               \r\n          if(long.bank.toLowerCase().indexOf('banesco') >= 0){\r\n            sowApproved.banesco += Number(long.amount)\r\n            sowProposal.banesco += Number(long.debitBalance1) + Number(long.debitBalance2)+Number(long.debitBalance3)\r\n        }\r\n        else{\r\n          sowApproved.otherBank += Number(long.amount)\r\n          sowProposal.otherBank += Number(long.debitBalance1) + Number(long.debitBalance2)+Number(long.debitBalance3)\r\n        }\r\n      }\r\n    }\r\n    /*\r\n    if(debtsT24!==null){\r\n\r\n      //sowShort,sowLong\r\n      for (var short of debtsT24.shortTermresult) {               \r\n        if(short.bank.toLowerCase().indexOf('banesco') >= 0){\r\n          sowApproved.banesco += Number(short.approvalRisk)\r\n          sowProposal.banesco += Number(short.proposalRisk)\r\n        }\r\n        else{\r\n          sowApproved.otherBank += Number(short.approvalRisk)\r\n          sowProposal.otherBank += Number(short.proposalRisk)\r\n        }\r\n      }\r\n    \r\n      for (var long of debtsT24.longTermresult) {       \r\n        if(long.bank.toLowerCase().indexOf('banesco') >= 0){\r\n          sowApproved.banesco += Number(long.approvalRisk)\r\n          sowProposal.banesco += Number(long.proposalRisk)\r\n        }\r\n        else{\r\n          sowApproved.otherBank += Number(long.approvalRisk)\r\n          sowProposal.otherBank += Number(long.proposalRisk)\r\n        }\r\n      }\r\n    }\r\n    */\r\n    /*\r\n    sowApproved.otherBank += Number((dataReturn?.sumatoriaDeudaCorto?.monto ?? 0) + (dataReturn?.sumatoriaDeudaLargo?.monto ?? 0))\r\n    sowProposal.otherBank += Number((dataReturn?.sumatoriaDeudaCorto?.saldo1 ?? 0) + (dataReturn?.sumatoriaDeudaLargo?.saldo1 ?? 0))\r\n    */\r\n    sowApproved.total = sowApproved.banesco + sowApproved.otherBank;\r\n    sowProposal.total = sowProposal.banesco + sowProposal.otherBank;\r\n    \r\n    sowApproved.sow = sowApproved.total>0?Number(sowApproved.banesco/sowApproved.total * 100):0;     \r\n    sowProposal.sow = sowProposal.total>0?Number(sowProposal.banesco/sowProposal.total * 100):0;\r\n    \r\n\r\n      }\r\n      \r\n      /*\r\n      coreServices.getShortLongTermDebts2(mainDebtor.clientDocId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {  \r\n          setdebts(data);\r\n        }\r\n      }).catch((error) => { });\r\n      */\r\n    }\r\n  }\r\n\r\n  function calculateData() {\r\n    if (sales > 0) {\r\n      var recipro = Number(deposits) / Number(sales);\r\n      setreciprocity(currencyData.format(Number(recipro).toFixed(2)))\r\n    }\r\n\r\n    //Calcular SOW\r\n    if(debts!==null){\r\n      //sowShort,sowLong\r\n      for (var dbts of debts.shortTermresult) {               \r\n        if(dbts.bank.toLowerCase().indexOf('banesco') >= 0){\r\n          //sowApproved.banesco += Number(short.approvalRisk)\r\n          //sowProposal.banesco += Number(short.proposalRisk)\r\n        }\r\n        else{\r\n          //sowApproved.otherBank += Number(short.approvalRisk)\r\n          //sowProposal.otherBank += Number(short.proposalRisk)\r\n        }\r\n      }    \r\n    }\r\n  }\r\n\r\n  function check(e) {\r\n    let tecla = (document.all) ? e.keyCode : e.which;\r\n    //Tecla de retroceso para borrar, siempre la permite\r\n    if (tecla == 45) {\r\n      e.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Reciprocity\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idYear\">{t(\"Date\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"requestDate\"\r\n                          type=\"month\"\r\n                          id=\"requestDate\"\r\n                          onChange={(e) => { setyear(e.target.value.split(\"-\")[0]); var monthselect = e.target.value.split(\"-\")[1]; monthselect = GetMontNameByNumber(Number(monthselect)); setmonth(monthselect); monthselect = Capitalize(monthselect); console.log(monthselect); setmesSelect(meses.find(x => x.value === monthselect)); }}\r\n                          value={moment(year + \"-\" + (mesSelect !== undefined ? GetMontNumberByName(mesSelect.value.toUpperCase()) : \"01\")).format(\"YYYY-MM\")}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    {/*\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idYear\">{t(\"Year\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"year\"\r\n                          id=\"year\"\r\n                          onChange={(e) => { setyear(e.target.value);}}\r\n                          value={props.dataRecipro.year}\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idMonth\">{t(\"Month\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"} \r\n                          onChange={(e) => { setmesSelect(meses.find(x => x.value === e.value)); setmonth(e.value);}}\r\n                          options={meses}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={mesSelect}\r\n                        // value={props.dataRecipro.mes}\r\n                        />\r\n                        {campoRequeridoMes ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                        */}\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sales\">{t(\"Sales\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sales\"\r\n                          id=\"sales\"\r\n                          onChange={(e) => { setsales(e.target.value); }}\r\n                          value={sales}\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"deposits\">{t(\"Deposits\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"deposits\"\r\n                          onChange={(e) => { setdeposits(e.target.value); }}\r\n                          value={deposits}\r\n                          id=\"deposits\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"averagebalance\">{t(\"AverageBalance\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"averageBalance\"\r\n                          onChange={(e) => { setaverageBalance(e.target.value); }}\r\n                          value={averageBalance}\r\n                          id=\"averageBalance\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"reciprocity\">{t(\"Reciprocity\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"reciprocity\"\r\n                          onChange={(e) => { setreciprocity(e.target.value); }}\r\n                          value={reciprocity}\r\n                          id=\"reciprocity\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sow\">{t(\"Sow\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          // type=\"text\"\r\n                          type=\"number\"\r\n                          min={0}\r\n                          name=\"sow\"\r\n                          value={sow}\r\n                          onChange={(e) => { setsow(e.target.value); }}\r\n                          onKeyPress={(e) => { return check(e) }}\r\n                          id=\"sow\"\r\n                        // pattern=\"^[0-9,.]*$\"\r\n                        // onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalReciprocidad.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  partyId: PropTypes.string\r\n};\r\n\r\nexport default ModalReciprocidad;\r\n"]},"metadata":{},"sourceType":"module"}