{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\GobiernoCorporativo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalGobiernoCorporativo from \"./ModalGobiernoCorporativo\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GobiernoCorporativo = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const history = useHistory();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [botonValidation, setbotonValidation] = useState(true);\n  const location = useLocation();\n  const [dataLocation, setData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [dataAccionistasDataRows, setdataAccionistasDataRows] = useState(null);\n  const [dataReturn, setDataReturn] = useState(props.jsonCorporativo);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [jsonCorporativo, setjsonCorporativo] = useState(props.jsonCorporativo);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [tipo, settipo] = useState(\"\");\n  const [formValid, setFormValid] = useState(false);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmGobiernoCorporativo');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  React.useEffect(() => {\n    // Read Api Service data\n    initializeData();\n  }, []);\n\n  function addGobierno(values, tipo2) {\n    dataReturn.name = values.name;\n    dataReturn.position = values.position;\n    dataReturn.birthDate = values.birthDate;\n    dataReturn.transactId = dataLocation.transactionId;\n    setDataReturn(dataReturn);\n    let datos = {\n      transactId: Number(dataLocation.transactionId),\n      name: values.name,\n      position: values.position,\n      birthDate: values.birthDate\n    };\n    const apiBack = new BackendServices();\n\n    if (tipo2 == \"guardar\") {\n      // nuevoGobiernoCorporativo\n      apiBack.newCorporateGovernance(datos).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      let jsonSet = {\n        \"transactId\": Number(datos.transactId),\n        \"personId\": Number(jsonCorporativo.personId),\n        \"position\": datos.position\n      }; // actualizarGobiernoCorporativo\n\n      apiBack.updateCorporateGovernance(jsonSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  }\n\n  function calculate(fecha) {\n    var today = new Date();\n    var yyyy = today.getFullYear();\n    var today2 = new Date(fecha);\n    var yyyy2 = today2.getFullYear();\n    return parseInt(yyyy) - parseInt(yyyy2);\n  }\n\n  function initializeData() {\n    const api = new BackendServices(); // consultarGobiernoCorpBD\n\n    api.consultarGobiernoCorpBD(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataAccionistasDataRows(resp.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.birthDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: calculate(data.birthDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 117\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, data.personId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setdataAccionistasDataRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  function updateData(data) {\n    settipo(\"editar\");\n    setjsonCorporativo(data);\n    setbotonValidation(true);\n    toggleShowModelAttachment();\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"CorporateGovernance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmGobiernoCorporativo\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Charge\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Age\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataAccionistasDataRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarGobiernoCoporativo\n\n        apiBack.deleteCorporateGovernment({\n          transactId: dataDelete.transactId,\n          corporateIdentification: dataDelete.corporateIdentification\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalGobiernoCorporativo, {\n      tipo: tipo,\n      jsonCorporativo: jsonCorporativo,\n      botones: botonValidation,\n      addGobierno: addGobierno,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        toggleShowModelAttachment();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}, \"tX5oQL3mJ1u+0bRdvzXqXLYdQ1g=\", false, function () {\n  return [useHistory, useTranslation, useLocation, React.useImperativeHandle];\n}));\n/*\r\nGobiernoCorporativo.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\n\n_c2 = GobiernoCorporativo;\nexport default GobiernoCorporativo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GobiernoCorporativo$React.forwardRef\");\n$RefreshReg$(_c2, \"GobiernoCorporativo\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/GobiernoCorporativo.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","url","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalGobiernoCorporativo","BackendServices","SweetAlert","GobiernoCorporativo","forwardRef","props","ref","history","t","i18n","botonValidation","setbotonValidation","location","dataLocation","setData","data","showModelAttachment","setShowModelAttachment","dataAccionistasDataRows","setdataAccionistasDataRows","dataReturn","setDataReturn","jsonCorporativo","dataDelete","setDataDelete","setjsonCorporativo","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","tipo","settipo","formValid","setFormValid","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","initializeData","addGobierno","values","tipo2","name","position","birthDate","transactId","transactionId","datos","Number","apiBack","newCorporateGovernance","then","resp","undefined","toggleShowModelAttachment","catch","err","jsonSet","personId","updateCorporateGovernance","calculate","fecha","today","Date","yyyy","getFullYear","today2","yyyy2","parseInt","api","consultarGobiernoCorpBD","length","map","secondName","lastName","secondSurname","textAlign","updateData","removeBodyCss","body","classList","add","handleSubmit","event","errors","preventDefault","deleteCorporateGovernment","corporateIdentification","statusCode","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalGobiernoCorporativo from \"./ModalGobiernoCorporativo\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nconst GobiernoCorporativo = React.forwardRef((props, ref) => {\r\n  const history = useHistory();\r\n  const { t, i18n } = useTranslation();\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const location = useLocation()\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [dataAccionistasDataRows, setdataAccionistasDataRows] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonCorporativo);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [jsonCorporativo, setjsonCorporativo] = useState(props.jsonCorporativo);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [formValid, setFormValid] = useState(false);\r\n  React.useImperativeHandle(ref, () => (\r\n    {\r\n      validateForm: () => {\r\n        const form = document.getElementById('frmGobiernoCorporativo');\r\n        form.requestSubmit();\r\n      },\r\n      getFormValidation: () => {\r\n        return formValid;\r\n      },\r\n    }));\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    initializeData();\r\n  }, []);\r\n  function addGobierno(values, tipo2) {\r\n    dataReturn.name = values.name;\r\n    dataReturn.position = values.position;\r\n    dataReturn.birthDate = values.birthDate;\r\n    dataReturn.transactId = dataLocation.transactionId;\r\n    setDataReturn(dataReturn);\r\n    let datos = {\r\n      transactId: Number(dataLocation.transactionId),\r\n      name: values.name,\r\n      position: values.position,\r\n      birthDate: values.birthDate\r\n    }\r\n    const apiBack = new BackendServices();\r\n    if (tipo2 == \"guardar\") {\r\n      // nuevoGobiernoCorporativo\r\n      apiBack.newCorporateGovernance(datos).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      let jsonSet = {\r\n        \"transactId\": Number(datos.transactId),\r\n        \"personId\": Number(jsonCorporativo.personId),\r\n        \"position\":datos.position,\r\n      }\r\n      // actualizarGobiernoCorporativo\r\n      apiBack.updateCorporateGovernance(jsonSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  function calculate(fecha) {\r\n    var today = new Date();\r\n    var yyyy = today.getFullYear();\r\n    var today2 = new Date(fecha);\r\n    var yyyy2 = today2.getFullYear();\r\n    return (parseInt(yyyy) - parseInt(yyyy2));\r\n  }\r\n  function initializeData() {\r\n    const api = new BackendServices()\r\n    // consultarGobiernoCorpBD\r\n    api.consultarGobiernoCorpBD(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataAccionistasDataRows(resp.map((data) => (\r\n          <tr key={data.personId}>\r\n            <td>{data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname}</td>\r\n            <td>{data.position}</td>\r\n            <td>{data.birthDate}</td>\r\n            <td>{calculate(data.birthDate)}</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { updateData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n            </td>\r\n          </tr>)\r\n        ));\r\n      } else {\r\n        setdataAccionistasDataRows(\r\n          <tr key={1}>\r\n            <td colSpan=\"5\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    })\r\n  }\r\n  function updateData(data) {\r\n    settipo(\"editar\")\r\n    setjsonCorporativo(data)\r\n    setbotonValidation(true);\r\n    toggleShowModelAttachment()\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"CorporateGovernance\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmGobiernoCorporativo\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Charge\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Age\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataAccionistasDataRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarGobiernoCoporativo\r\n            apiBack.deleteCorporateGovernment({ transactId: dataDelete.transactId, corporateIdentification: dataDelete.corporateIdentification }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n      <ModalGobiernoCorporativo tipo={tipo} jsonCorporativo={jsonCorporativo} botones={botonValidation} addGobierno={addGobierno} isOpen={showModelAttachment} toggle={() => { toggleShowModelAttachment() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\n\r\n/*\r\nGobiernoCorporativo.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\r\n\r\nexport default GobiernoCorporativo;\r\n"]},"metadata":{},"sourceType":"module"}