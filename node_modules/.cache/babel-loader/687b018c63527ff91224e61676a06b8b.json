{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\ErrorHandler.js\";\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ErrorHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state to render the fallback UI\n    return {\n      error: true,\n      errorMessage: error.toString()\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log error to an error reporting service like Sentry\n    console.log(\"error\", {\n      error,\n      errorInfo\n    });\n  }\n\n  render() {\n    const {\n      error,\n      errorMessage\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    return error ? /*#__PURE__*/_jsxDEV(Alert, {\n      show: this.state.error,\n      variant: \"danger\",\n      dismissible: true,\n      onClose: () => {\n        this.setState({\n          error: false,\n          errorMessage: \"\"\n        });\n      },\n      children: this.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this) : children;\n  }\n\n}\n/*\r\n<React.ErrorFallbackUI {...{ error, errorMessage }} /> \r\n      \r\nexport default class ErrorHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false,error:\"\",errorInfo: \"\" };\r\n    }\r\n\r\n    componentDidCatch(error, info) {        \r\n        console.log(\"componentDidCatch error\",error);\r\n        console.log(\"componentDidCatch errorInfo\",info);\r\n        \r\n        this.setState({\r\n        \thasError: true,\r\n            error:error.toString(),\r\n            errorInfo: info.componentStack\r\n        })\r\n    }\r\n\r\n    \r\n    static getDerivedStateFromError(error) {\r\n        return { error: error.toString() };\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n            // Render error message or component\r\n            //variant={msgData.isError ? \"danger\" : \"success\"}\r\n            return \r\n            <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n                hasError: false,\r\n                error:\"\",\r\n                errorInfo: \"\"\r\n            }) }}>\r\n                {this.error}\r\n            </Alert>            \r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n*/","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/ErrorHandler.js"],"names":["React","Alert","ErrorHandler","Component","state","error","errorMessage","getDerivedStateFromError","toString","componentDidCatch","errorInfo","console","log","render","children","props","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,YAAY,EAAE;AAA9B,KAD8C;AAAA;;AAGvB,SAAxBC,wBAAwB,CAACF,KAAD,EAAQ;AACrC;AACA,WAAO;AAAEA,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,YAAY,EAAED,KAAK,CAACG,QAAN;AAA7B,KAAP;AACD;;AAEDC,EAAAA,iBAAiB,CAACJ,KAAD,EAAQK,SAAR,EAAmB;AAClC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB;AAAEP,MAAAA,KAAF;AAASK,MAAAA;AAAT,KAApB;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA0B,KAAKF,KAArC;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,WAAOV,KAAK,gBACZ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,KAAxB;AAA+B,MAAA,OAAO,EAAE,QAAxC;AAAmD,MAAA,WAAW,MAA9D;AAA+D,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKW,QAAL,CAAc;AAC5FX,UAAAA,KAAK,EAAE,KADqF;AAE5FC,UAAAA,YAAY,EAAC;AAF+E,SAAd;AAG9E,OAHF;AAAA,gBAIG,KAAKD;AAJR;AAAA;AAAA;AAAA;AAAA,YADY,GAOVS,QAPF;AAQD;;AAzBqD;AA4B1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nexport default class ErrorHandler extends React.Component {\r\n    state = { error: false, errorMessage: '' };\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state to render the fallback UI\r\n      return { error: true, errorMessage: error.toString() };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // Log error to an error reporting service like Sentry\r\n      console.log(\"error\",{ error, errorInfo });\r\n    }\r\n  \r\n    render() {\r\n      const { error, errorMessage } = this.state;\r\n      const { children } = this.props;\r\n  \r\n      return error ? \r\n      <Alert show={this.state.error} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n        error: false,\r\n        errorMessage:\"\",\r\n    }) }}>\r\n        {this.error}\r\n    </Alert> \r\n      : children;\r\n    }\r\n  }\r\n\r\n/*\r\n<React.ErrorFallbackUI {...{ error, errorMessage }} /> \r\n      \r\nexport default class ErrorHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false,error:\"\",errorInfo: \"\" };\r\n    }\r\n\r\n    componentDidCatch(error, info) {        \r\n        console.log(\"componentDidCatch error\",error);\r\n        console.log(\"componentDidCatch errorInfo\",info);\r\n        \r\n        this.setState({\r\n        \thasError: true,\r\n            error:error.toString(),\r\n            errorInfo: info.componentStack\r\n        })\r\n    }\r\n\r\n    \r\n    static getDerivedStateFromError(error) {\r\n        return { error: error.toString() };\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n            // Render error message or component\r\n            //variant={msgData.isError ? \"danger\" : \"success\"}\r\n            return \r\n            <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n                hasError: false,\r\n                error:\"\",\r\n                errorInfo: \"\"\r\n            }) }}>\r\n                {this.error}\r\n            </Alert>            \r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}