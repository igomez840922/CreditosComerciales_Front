{"ast":null,"code":"import { WatchListModel, DocumentModel, ClientInfoModel, PartiesStaffModel } from \"../../models/Core\";\nimport ApiServiceCore from \"../ApiServiceCore\";\nimport * as url from \"../../helpers/url_helper\";\nimport qs from \"qs\";\nimport { ACT_FACILIDADACTIVOSFIJOS } from \"../../helpers/options_helper\";\nimport * as OPTs from \"../../helpers/options_helper\";\nimport { ResponseModel } from '../../models/Common/ResponseModel';\nimport moment from \"moment\";\nexport default class Services extends ApiServiceCore {\n  //analysis/customers -> retorna la info de lista de vigilancia\n  //ConsultarListaCriterioCORE    \n  async postWhatchList(params) {\n    try {\n      /*\r\n      {\r\n      \"pCustomerId\": \"06--00711-002304\",\r\n      \"pTypeId\": \"CEDULA_IDENTIDAD\",\r\n      \"pModelId\": \"LISTA_VIGILANCIA\",\r\n      \"pCustomerListParams\": {\r\n      \"KeyValueParam\": [\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"NOMBRE\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Librada\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_NOMBRE\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Emilio\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"PRIMER_APELLIDO\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Rivera\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_APELLIDO\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Gaviria\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"TIPO_ID\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"CEDULA_IDENTIDAD\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"CEDULA\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"06--00711-002304\"\r\n        }\r\n      ]\r\n      },\r\n      \"pUser\": \"wallytech_ws_user\",\r\n      \"pWaitingInterval\": 180000000,\r\n      \"pPriority\": 1\r\n      }\r\n      */\n      var result = await this.post(url.URL_CORE_WATCHLIST, params);\n      return {\n        status: 200,\n        result: WatchListModel.fromJson(result).results\n      };\n    } catch (err) {\n      return {\n        status: err.response.status,\n        error: err.response.data\n      }; //errorMessage, //errorCode\n    }\n  } //documents -> salva documento en gestor documental ONBASE\n  //GuardarDocumentoECM\n\n\n  async postDocument(data) {\n    var config = {\n      headers: {\n        //\"Accept\":\"*/*\",\n        //\"Accept-Encoding\":\"gzip, deflate, sdch, br\",\n        //\"Accept-Language\":\"fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4\",\n        //\"Access-Control-Request-Headers\":\"accept, content-type\",\n        //\"Content-Type\":\"text/plain\",\n        //\"Content-Length\":JSON.stringify(data).length.toString(),\n        //\"Host\":\"https://qa.api.ob.banesco.com.pa/\",\n        //Connection: \"keep-alive\",\n        //\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\",\n        \"userId\": \"mq3898\",\n        //Usuario\n        \"clientDt\": \"clientDt\",\n        //\"Fecha de ejecuciÃ³n del cliente.\"\n        \"appName\": \"ReactJs\",\n        //\"Aplicacion que consume el servicio\"\n        \"requestId\": \"202112202\",\n        //\"Identificador de la solicitud.\"\n        \"channelId\": \"channelID\" //\"Canal consumidor\",                \n\n      }\n    };\n    var result = await this.post(url.URL_CORE_DOCUMENTS, data, config);\n    console.log(\"Result Document: \", result);\n    /*\r\n    var result = {\r\n        \"Status\": {\r\n            \"StatusCode\": \"M0000\",\r\n            \"StatusDesc\": \"OK\"\r\n        },\r\n        \"Token\": \"e793-ddb2-ab0e-6626-5d3e-5f19-b79b-1f5d\",\r\n        \"Result\": {\r\n            \"DocName\": \"TDC - Contrato de TDC  (98765432)\",\r\n            \"DocumentID\": \"34589873\",\r\n            \"FormType\": \"HTML\"\r\n        }\r\n    }\r\n    */\n    //console.log(result);\n\n    if (result.Status.StatusCode === \"M0000\") {\n      var dataresult = {\n        docName: result.Result['DocName'],\n        documentId: result.Result['DocumentID'],\n        formType: result.Result['FormType']\n      };\n      return dataresult;\n    }\n\n    return undefined;\n  } //documents -> Ver documento en gestor documental ONBASE\n  //VerDocumentoECM\n\n\n  async postViewDocument(docId) {\n    try {\n      console.log(docId);\n      var data = {\n        DocumentHandle: docId,\n        ReturnBase64: false\n      };\n      var result = await this.post(url.URL_CORE_DOCUMENTSVIEW, data);\n      console.log(\"Result Document: \", result);\n      return result.Documents[0].DocPop;\n    } catch (e) {}\n\n    return null;\n  } //v1/parties/information -> retorna la info del cliente\n  //BuscarClienteCORE\n\n\n  async getPartiesInformation(params) {\n    /*var item =[ {id:800120843,clientnumber:800120843,clientname:\"Israel Michel Gomez Alfonso\",firstname:\"Israel\",secondname:\"Michel\",\r\n    lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"CED\",idnumber:\"456123\"},\r\n    {id:800120845,clientnumber:800120845,clientname:\"Pancho Pedro Gomez Alfonso\",firstname:\"Pancho\",secondname:\"Pedro\",\r\n    lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"RUC\",idnumber:\"456456\"}];\r\n    return item;*/\n    //params = {PartyType:Juridico,PartyId:600088018}\n    var data = qs.stringify(params);\n    console.log(data); //url.URL_CORSBYPASS +\n\n    var result = await this.get(url.URL_CORE_PARTIEINFO + \"?\" + data);\n    console.log(result);\n\n    if (result.Status.StatusCode === \"M0000\") {\n      return ClientInfoModel.fromJson(result);\n    } else {\n      result[\"error\"] = \"Error de Servicio del Core\"; //result.Status.StatusDesc;\n\n      result[\"errorCode\"] = result.Status.StatusCode;\n      return result;\n    }\n  }\n\n  async getPartiesInformationExtra(typePerson, customerNumberT24) {\n    try {\n      var params = {\n        PartyType: Number(typePerson) === 1 ? \"Natural\" : \"Juridico\",\n        PartyId: customerNumberT24\n      };\n      var result = await this.getPartiesInformation(params);\n\n      if (result !== undefined && result.length > 0) {\n        var _data$address$Country, _data$address, _data$address$Country2, _data$address$Provinc, _data$address2, _data$address2$Provin, _data$address$CountyD, _data$address3, _data$address3$County, _data$address$Jurisdi, _data$address4, _data$address4$Jurisd, _data$address$City$De, _data$address5, _data$address5$City, _data$address$AddrDes, _data$address6, _data$address$Buildin, _data$address7, _data$address7$Buildi, _data$address$HouseNu, _data$address8, _data$address$Street, _data$address9;\n\n        var data = result[0];\n        console.log(\"resultados\", data);\n        var extraInfo = {\n          activity: {\n            \"EconomicActivity\": data[\"economicActivity\"]\n          },\n          address: {\n            \"Country\": (_data$address$Country = (_data$address = data[\"address\"]) === null || _data$address === void 0 ? void 0 : (_data$address$Country2 = _data$address.Country) === null || _data$address$Country2 === void 0 ? void 0 : _data$address$Country2.CountryCode) !== null && _data$address$Country !== void 0 ? _data$address$Country : \"\",\n            \"Province\": (_data$address$Provinc = (_data$address2 = data[\"address\"]) === null || _data$address2 === void 0 ? void 0 : (_data$address2$Provin = _data$address2.Province) === null || _data$address2$Provin === void 0 ? void 0 : _data$address2$Provin.Cod) !== null && _data$address$Provinc !== void 0 ? _data$address$Provinc : \"\",\n            \"CountyDistrict\": (_data$address$CountyD = (_data$address3 = data[\"address\"]) === null || _data$address3 === void 0 ? void 0 : (_data$address3$County = _data$address3.CountyDistrict) === null || _data$address3$County === void 0 ? void 0 : _data$address3$County.Cod) !== null && _data$address$CountyD !== void 0 ? _data$address$CountyD : \"\",\n            \"Jurisdiction\": (_data$address$Jurisdi = (_data$address4 = data[\"address\"]) === null || _data$address4 === void 0 ? void 0 : (_data$address4$Jurisd = _data$address4.Jurisdiction) === null || _data$address4$Jurisd === void 0 ? void 0 : _data$address4$Jurisd.Cod) !== null && _data$address$Jurisdi !== void 0 ? _data$address$Jurisdi : \"\",\n            \"City\": (_data$address$City$De = (_data$address5 = data[\"address\"]) === null || _data$address5 === void 0 ? void 0 : (_data$address5$City = _data$address5.City) === null || _data$address5$City === void 0 ? void 0 : _data$address5$City.Desc) !== null && _data$address$City$De !== void 0 ? _data$address$City$De : \"\",\n            \"AddrDesc\": (_data$address$AddrDes = (_data$address6 = data[\"address\"]) === null || _data$address6 === void 0 ? void 0 : _data$address6.AddrDesc) !== null && _data$address$AddrDes !== void 0 ? _data$address$AddrDes : \"\",\n            \"Building\": (_data$address$Buildin = (_data$address7 = data[\"address\"]) === null || _data$address7 === void 0 ? void 0 : (_data$address7$Buildi = _data$address7.Building) === null || _data$address7$Buildi === void 0 ? void 0 : _data$address7$Buildi.Desc) !== null && _data$address$Buildin !== void 0 ? _data$address$Buildin : \"\",\n            \"HouseNumber\": (_data$address$HouseNu = (_data$address8 = data[\"address\"]) === null || _data$address8 === void 0 ? void 0 : _data$address8.HouseNumber) !== null && _data$address$HouseNu !== void 0 ? _data$address$HouseNu : \"\",\n            \"Street\": (_data$address$Street = (_data$address9 = data[\"address\"]) === null || _data$address9 === void 0 ? void 0 : _data$address9.Street) !== null && _data$address$Street !== void 0 ? _data$address$Street : \"\"\n          }\n        };\n        return extraInfo;\n      }\n    } catch (err) {}\n\n    return undefined;\n  } //Accionistas\n\n\n  async getPartiesStaff(PartyId) {\n    var params = {\n      PartyId: PartyId\n    }; //{PartyId:600235373}\n\n    params = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PARTIESTAFF + \"?\" + params);\n    return PartiesStaffModel.fromJson(result);\n  } ///v1/parties/staff\n\n\n  async putPartiesStaff(data) {\n    data = {\n      \"Party\": {\n        \"PartyKey\": {\n          \"PartyId\": \"600235373\"\n        },\n        \"OrgPartyInfo\": {\n          \"OrgData\": {\n            \"Staff\": [{\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"City\": {\n                        \"Cod\": \"PANAMA\"\n                      },\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Jurisdiction\": {\n                        \"Cod\": \"8606\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Street\": \"PRINCIPAL\",\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }],\n                    \"Phone\": [{\n                      \"PhoneNum\": \"66669999\",\n                      \"PhoneType\": \"Home\"\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"Shareholding\": \"100\",\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"08\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": {\n                \"OtherNationality\": false,\n                \"US183Permanence\": false,\n                \"USRelated\": false,\n                \"USResid\": false,\n                \"USSignor\": false\n              },\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"PA\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"Profession\": {\n                \"Value\": \"1007\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"09\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"City\": {\n                        \"Cod\": \"PANAMA\"\n                      },\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Jurisdiction\": {\n                        \"Cod\": \"8606\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Street\": \"PRINCIPAL\",\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }],\n                    \"Phone\": [{\n                      \"PhoneNum\": \"65263673\",\n                      \"PhoneType\": \"Home\"\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1982-02-15\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"PA\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"02--00710-002013\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PersonName\": {\n                \"FirstName\": \"JONATHAN\",\n                \"LastName\": \"DELGADO\",\n                \"SecondLastName\": \"MARIN\",\n                \"SecondName\": \"IVES\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1958-09-29\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"ANT119629\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PersonName\": {\n                \"FirstName\": \"RAMON\",\n                \"LastName\": \"MAÃAS\",\n                \"SecondLastName\": \"SEGURA\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }]\n          }\n        }\n      }\n    };\n    var result = await this.put(url.URL_CORE_PARTIESTAFF, data);\n    return PartiesStaffModel.fromJson(result);\n  } //ConsultarListaEmpresasRelacionadas\n\n\n  async getCompaniesRelations(params) {\n    //params = {PartyId:600012387}\n    var data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\n    return PartiesStaffModel.fromJson(result);\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos los paises desde el catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPaisesCatalogo() {\n    try {\n      var result = sessionStorage.getItem('catPaises');\n\n      if (result !== undefined && result !== null) {\n        return JSON.parse(result);\n      } //sessionStorage.setItem('catPaises', JSON.stringify(result.roles));\n\n\n      let params = {\n        catalog_name: 'PAIS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      sessionStorage.setItem('catPaises', JSON.stringify(result.catalog));\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*       Api para obtener las provincias de un pais, pasandole como parametro el id del pais      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getProvinciasCatalogo(pais) {\n    try {\n      let params = {\n        catalog_name: 'PROVINCIA',\n        parent_catalog_name: pais,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*    API para obtener los distrito de cada provincia pasandole como parametro el id provincia    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getDistritoCatalogo(provincia) {\n    try {\n      let params = {\n        catalog_name: 'DISTRITO',\n        parent_catalog_name: provincia,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                      Api para obtener los corregimientos de cada distrito                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCorregimientoCatalogo(distrito) {\n    try {\n      let params = {\n        catalog_name: 'CORREGIMIENTO',\n        parent_catalog_name: distrito,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                         Api para obtener las ciudades de cada provincia                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCiudadCatalogo(provincia) {\n    try {\n      let params = {\n        catalog_name: 'CIUDAD',\n        parent_catalog_name: provincia,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                      Api para obtener el grupo economico de los catalogos                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getGrupoEconomicoCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'GRUPO ECONOMICO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      result.catalog.Records.unshift({\n        Description: \"N/A\",\n        Code: \"N/A\"\n      });\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                   Api para obtener las bancas esta api proviene de catalogos                   */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getBancaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'BANCA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                   Api muestra todos los cargos que retorna desde el catalogo                   */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCargosCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'CARGO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Api retorna todos los bancos exitentes para el catalogo                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getBancosCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'BANCOS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getActividadEconomicaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'ACTIVIDAD ECONOMICA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSubActividadEconomicaCatalogo(codeActividad) {\n    try {\n      let params = {\n        catalog_name: 'SUB ACTIVIDAD ECONOMICA',\n        parent_catalog_name: codeActividad,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE SECTOR ECONOMICO                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSectorEconomicoCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'SECTOR ECONOMICO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO RELACION                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getRelacionCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'RELACION',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO TIPO DE GARANTIA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getTipoGarantiaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'TIPO DE GARANTIA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /*\r\n  \"catalog\": {\r\n      \"type\": \"TIPO DE GARANTIA\",\r\n      \"records\": [\r\n          {\r\n              \"CODIGO\": \"100\",\r\n              \"DESCRIPCION\": \"Garantia Hipotecaria Mueble\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"200\",\r\n              \"DESCRIPCION\": \"Garantia Hipotecaria Inmueble\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"300\",\r\n              \"DESCRIPCION\": \"Depositos Pignorados en el Banco\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"400\",\r\n              \"DESCRIPCION\": \"Depositos Pignorados en Otros Banco\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"500\",\r\n              \"DESCRIPCION\": \"Garantia Prendaria\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"600\",\r\n              \"DESCRIPCION\": \"Otras Garantias\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"700\",\r\n              \"DESCRIPCION\": \"SIN GARANTIAS\"\r\n          }\r\n      ]\r\n  }\r\n  */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO MONEDAS                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getMonedaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'MONEDA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO SUCURSAL  o Agencias                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSucursalCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'SUCURSAL',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos los subproductos catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSubProductosCatalogo() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUBPRODUCTO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos las sucursales o agencias catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSucursalesCatalogo() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUCURSAL',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Tipo de Limites de Credito\n\n\n  async getTypeOfCreditLimitsCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'LIMIT REFERENCE',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Aseguradoras\n\n\n  async getInsurersCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'ASEGURADORAS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Marcas de Auto\n\n\n  async getCarBrandCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'MARCA DE AUTOS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Modelos de Auto\n\n\n  async getCarModelCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'MODELO DE AUTO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Corredoras\n\n\n  async getBrokersCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'BROKER',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Fiduciaria\n\n\n  async getTrusteeCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'FIDUCIARIAS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - SubProducto\n\n\n  async getSubProductCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUBPRODUCTO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Categorias\n\n\n  async getCategoriesCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'CATEGORIA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Tipo de poliza\n\n\n  async getPolicyTypeCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'TIPO POLIZA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Sub tipo de Garantia\n\n\n  async getSubTypeWarrantyCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUB TIPO GARANTIA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Clases de Auto\n\n\n  async getAutoClassCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'CLASE AUTO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  } //CATALOGO - Avaluadora\n\n\n  async getAppraiserCatalog() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'AVALUADORA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /*------------------------------------------------------------------------------------*/\n  ///v1/loans/details/informations\n  //Retorna las facilidades de un cliente ... partyId -> numero del cliente en T24\n  //getFacilidades\n\n\n  async getFacilities(partyId) {\n    try {\n      let params = {\n        PartyId: partyId\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data); //return result.AcctLoans.AcctLoan;\n\n      var dataResult = [];\n\n      try {\n        //Armamos la data a mostrar en pantalla\n        result.AcctLoans.AcctLoan.map(function (item, i) {\n          try {\n            dataResult.push({\n              \"facilityType\": item.ProductDesc,\n              \"approvedAmount\": item.AcctOpeningInfo.InitialAmt.Amt,\n              \"approvedDate\": item.AcctOpeningInfo.OpenDt,\n              \"actualBalance\": item.AcctBal[0].CurAmt.Amt,\n              \"debtorName\": item.AcctMember[0].PartyName.ShortName\n            });\n          } catch (err) {}\n        });\n      } catch (err) {\n        console.error(err);\n      }\n\n      console.log(\"getFacilities\", dataResult);\n      return dataResult; //Tipo de facilidad ProductDesc\n      //Monto Aprobadp AcctOpeningInfo.InitialAmt.Amt\n      //fecha AcctOpeningInfo.OpenDt\n      //Balance Actual AcctBal[0].CurAmt.Amt\n      //Deudor AcctMember[0].PartyName.ShortName\n    } catch (err) {\n      console.error(err);\n    }\n\n    return undefined;\n  } //retorna los Clientes Relacionados se le pasa el Numero de Cliente de T24\n\n\n  async getRelatedClients(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n\n    try {\n      //servicio retorna clientes relacionados\n      var resultData = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data); //Armamos la data a mostrar en pantalla\n\n      for (var client in resultData) {\n        var partyNumber = client.PartyPartyRelInfo.PartyRef[0].RelPartyRef[0].PartyKey[0].PartyId;\n\n        if (partyNumber !== undefined && partyNumber !== null && partyNumber.length > 0) {\n          var resultData = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\n          dataResult.push(partyNumber);\n        }\n      }\n    } catch (err) {\n      console.error(\"URL_CORE_FACILIDADES\", err);\n    }\n\n    return dataResult;\n  } //ExposicionCorporativa se le pasa el Numero de Cliente de T24\n\n\n  async getCorporateExhibition(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n    var longTerm = {\n      name: \"Facilidades Largo Plazo\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var shortTerm = {\n      name: \"Facilidades Corto Plazo\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var totalTerm = {\n      name: \"Total de Facilidades\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var pledged = {\n      name: \"Monto Pignorado\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var netExposition = {\n      name: \"Exposicion Neta\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n\n    try {\n      //servicio retorna CP y LP (Corto y Largo Plazo)\n      var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\n      console.log(\"getCorporateExhibition result\", result); //Armamos la data a mostrar en pantalla\n\n      result.AcctLoans.AcctLoan.map(function (item, i) {\n        var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\n        var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\n\n        if (dueYear - openYear > 1) {\n          //Largo Plazo\n          longTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          longTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\n        } else {\n          //Corto Pazo                    \n          shortTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          shortTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\n        }\n      });\n      console.log(\"getCorporateExhibition item\", longTerm);\n      longTerm.variationRisk = longTerm.approvalRisk - longTerm.proposalRisk;\n      shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\n      dataResult.push(longTerm);\n      dataResult.push(shortTerm);\n      totalTerm.approvalRisk = shortTerm.approvalRisk + longTerm.approvalRisk;\n      totalTerm.proposalRisk = shortTerm.proposalRisk + longTerm.proposalRisk;\n      totalTerm.variationRisk = totalTerm.approvalRisk - totalTerm.proposalRisk;\n      dataResult.push(totalTerm);\n    } catch (err) {\n      console.error(\"URL_CORE_FACILIDADES\", err);\n    }\n\n    try {\n      //servicio retorna Pignorados\n      var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data); //Armamos la data a mostrar en pantalla\n\n      result.Collaterals.CollateralInfo.map(function (item, i) {\n        if (item.AcctKey.AcctReference !== null) {\n          pledged.approvalRisk += Number(item.Collateral.CollateralAmt.Amt);\n          pledged.proposalRisk += Number(item.Collateral.CollateralAmt.Amt);\n          pledged.variationRisk += Number(item.Collateral.CollateralAmt.Amt);\n        }\n      });\n      dataResult.push(pledged);\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n    }\n\n    if (dataResult.length > 0) {\n      netExposition.approvalRisk = totalTerm.approvalRisk - pledged.approvalRisk;\n      netExposition.proposalRisk = totalTerm.proposalRisk - pledged.proposalRisk;\n      netExposition.variationRisk = totalTerm.approvalRisk - pledged.proposalRisk;\n      dataResult.push(netExposition);\n    }\n\n    return dataResult;\n  } //ExposicionCorporativa se le pasa el Numero de Cliente de T24\n\n\n  async getCorporateExhibitionByClients(partyId) {\n    let clients = await this.getRelatedClients(partyId);\n    var dataResult = [];\n\n    for (var i = 0; i < clients.length; i++) {\n      let result = await this.getCorporateExhibition(clients[i]);\n      console.log(\"getCorporateExhibition\", result);\n\n      if (result !== null && result.length > 0) {\n        dataResult.push({\n          clientId: \"Cliente \" + i,\n          data: result\n        });\n      }\n    }\n\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  } //Deudas a Corto Plazo... se le pasa el Numero de Cliente de T24\n\n  /*async getShortTermDebts(partyId) {\r\n        let params = {\r\n          PartyId: partyId\r\n      }\r\n        let data = qs.stringify(params);\r\n        var dataResult = [];\r\n      //var shortTerm ={name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n      var totalTerm = { name: \"Total\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0, date: moment().format(\"YYYY-MM-DD\") };\r\n        try {\r\n            //servicio retorna CP y LP (Corto y Largo Plazo)\r\n          var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n            console.log(\"getCorporateExhibition result\", result);\r\n            //Armamos la data a mostrar en pantalla\r\n          result.AcctLoans.AcctLoan.map(function (item, i) {\r\n              var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\r\n              var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\r\n              if (dueYear - openYear > 1) { //Largo Plazo\r\n              }\r\n              else{//Corto Plazo\r\n                  var shortTerm = { name: item.ProductDesc, approvalRisk: 0, proposalRisk: 0, variationRisk: 0 }\r\n                  shortTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                  shortTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\r\n                  shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\r\n                  shortTerm.name = item.ProductDesc\r\n                  shortTerm.date = item.AcctOpeningInfo.OpenDt\r\n                    totalTerm.approvalRisk += shortTerm.approvalRisk;\r\n                  totalTerm.proposalRisk += shortTerm.proposalRisk;\r\n                    dataResult.push(shortTerm);\r\n              }\r\n          })\r\n            totalTerm.variationRisk = totalTerm.approvalRisk - totalTerm.proposalRisk;\r\n          dataResult.push(totalTerm);\r\n      }\r\n      catch (err) {\r\n          console.error(\"URL_CORE_FACILIDADES\", err);\r\n      }\r\n          return dataResult;\r\n  }*/\n  //Deudas a Corto y Largo Plazo... se le pasa el Numero de Cliente de T24\n\n\n  async getShortLongTermDebts(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var longTermresult = []; //{name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\n\n    var longTermTotal = {\n      name: \"Total\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0,\n      date: moment().format(\"YYYY-MM-DD\")\n    };\n    var shortTermresult = []; //{name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\n\n    var shortTermTotal = {\n      name: \"Total\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0,\n      date: moment().format(\"YYYY-MM-DD\")\n    };\n\n    try {\n      //servicio retorna CP y LP (Corto y Largo Plazo)\n      var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\n      console.log(\"getCorporateExhibition result\", result); //Armamos la data a mostrar en pantalla\n\n      result.AcctLoans.AcctLoan.map(function (item, i) {\n        var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\n        var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\n\n        if (dueYear - openYear > 1) {\n          //Largo Plazo\n          var longTerm = {\n            name: \"Facilidades Largo Plazo\",\n            approvalRisk: 0,\n            proposalRisk: 0,\n            variationRisk: 0\n          };\n          longTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          longTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\n          longTerm.variationRisk = longTerm.approvalRisk - longTerm.proposalRisk;\n          longTerm.name = item.ProductDesc;\n          longTerm.date = item.AcctOpeningInfo.OpenDt;\n          longTermTotal.approvalRisk += longTerm.approvalRisk;\n          longTermTotal.proposalRisk += longTerm.proposalRisk;\n          longTermresult.push(longTerm);\n        } else {\n          //Corto Pazo  \n          var shortTerm = {\n            name: item.ProductDesc,\n            approvalRisk: 0,\n            proposalRisk: 0,\n            variationRisk: 0\n          };\n          shortTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          shortTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\n          shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\n          shortTerm.name = item.ProductDesc;\n          shortTerm.date = item.AcctOpeningInfo.OpenDt;\n          shortTermTotal.approvalRisk += shortTerm.approvalRisk;\n          shortTermTotal.proposalRisk += shortTerm.proposalRisk;\n          shortTermresult.push(shortTerm);\n        }\n      });\n      longTermTotal.variationRisk = longTermTotal.approvalRisk - longTermTotal.proposalRisk;\n      longTermresult.push(longTermTotal);\n      shortTermTotal.variationRisk = shortTermTotal.approvalRisk - shortTermTotal.proposalRisk;\n      shortTermresult.push(shortTermTotal);\n    } catch (err) {\n      console.error(\"URL_CORE_FACILIDADES\", err);\n    }\n\n    return {\n      longTermresult,\n      shortTermresult\n    };\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                 Retorna los balances por meses                                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getAverages(AcctReference) {\n    let params = {\n      AcctReference: AcctReference\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Obtenemos una lista de las importaciones que se generen                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getListaImportaciones(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_IMPORTACIONES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                 Obtenemos una lista de las exportaciones que se hayan generado                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getListaExportaciones(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_EXPORTACIONES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                          Obtenemos los prestamos entrantes existentes                          */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosEntrantes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_INGOING + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                    Obtenemos una lista de todos los presstamos que ya salen                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosSalientes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_OUTOGOING + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos la lista de creditos que existen en la actualidad activos              */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCreditosExistentes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_CREDITOS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                        Creditos en linea                                       */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCreditosLine(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_CREDITOS_LINE + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*     Nos devuelve todas las transacciones que ha realizado el usuario por un rango de fechas    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getTransactions(AcctId, EndDt, StartDt) {\n    // ejemplo del dataField\n    // AcctId=1001553287&EndDt=2021-10-16T09:32:51&StartDt=2021-09-16T00:00:00\n    let params = {\n      AcctId: AcctId,\n      EndDt: EndDt,\n      StartDt: StartDt\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_TRANSACCTIONS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                  Obtenemos todos los prestamos                                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamos(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PRESTAMOS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos toda la informacion del prestamos dentro de una actividad              */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosInfo(AcctId) {\n    let params = {\n      AcctId: AcctId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PRESTAMOS_INFORMATION + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos toda la informacion del Reporting Services                            */\n\n  /* ---------------------------------------------------------------------------------------------- */\n  //https://qa.api.ob.banesco.com.pa/APIUtil/v1/reports/atoms?FECHA=20210930&CLIENTE=600167424\n\n\n  async getReportingServices(partyId) {\n    //partyId -> numero del cliente en T24\n    let params = {\n      FECHA: moment().format(\"YYYYMMDD\"),\n      //preguntar pq la fecha no se puede cambiar\n      CLIENTE: partyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_REPORTINGSERVICES + \"?\" + data);\n    return result;\n    /*{\r\n    \"records\": [\r\n    {\r\n        \"FECHA\": \"20210930\",\r\n        \"T_CREDITO\": \"002\",\r\n        \"T_FACILIDAD\": \"05\",\r\n        \"CLASIFICACION\": \"02\",\r\n        \"LOC_EXT\": \"L\",\r\n        \"REGION\": \"014\",\r\n        \"CLIENTE_RUC\": \"8-805-442\",\r\n        \"TNO_EMPRESA\": \"06\",\r\n        \"NOMBRE_CLIENTE\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n        \"GRUPO_ECON\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n        \"GRUPO_RUC\": \"8-805-442\",\r\n        \"T_RELACION\": \"P999\",\r\n        \"ACT_ECON\": \"2103\",\r\n        \"TASA_INT\": \"10.5\",\r\n        \"MONTO_IN\": 5400,\r\n        \"INT_PC\": 0,\r\n        \"FECHA_INI\": \"20150616\",\r\n        \"FECHA_FIN\": \"20230116\",\r\n        \"FECHA_REFIN\": \"NA\",\r\n        \"FECHA_RENEG\": \"20200817\",\r\n        \"G1\": \"0701\",\r\n        \"MONTO_G1\": 0,\r\n        \"G2\": \"NA\",\r\n        \"MONTO_G2\": 0,\r\n        \"G3\": \"NA\",\r\n        \"MONTO_G3\": 0,\r\n        \"G4\": \"NA\",\r\n        \"MONTO_G4\": 0,\r\n        \"G5\": \"NA\",\r\n        \"MONTO_G5\": 0,\r\n        \"PROV_REG\": 0,\r\n        \"PROV_NIIF\": 119.05,\r\n        \"PROV_PAIS\": 0,\r\n        \"SALDO\": 6401.61,\r\n        \"N_CUOTAS_VENCER\": \"7\",\r\n        \"X_VENCER30\": \"100.86\",\r\n        \"X_VENCER60\": \"100.86\",\r\n        \"X_VENCER90\": \"100.86\",\r\n        \"X_VENCER120\": \"100.86\",\r\n        \"X_VENCER180\": \"100.86\",\r\n        \"X_VENCER1A\": \"100.86\",\r\n        \"X_VENCER5A\": \"5796.45\",\r\n        \"X_VENCER10A\": \"0.00\",\r\n        \"X_VENCERM10A\": \"0.00\",\r\n        \"N_CUOTA_VENCIDAS\": \"0\",\r\n        \"VENCIDOS30\": \"0.00\",\r\n        \"VENCIDOS60\": \"0.00\",\r\n        \"VENCIDOS90\": \"0.00\",\r\n        \"VENCIDOS120\": \"0.00\",\r\n        \"VENCIDOS180\": \"0.00\",\r\n        \"VENCIDOS1A\": \"0.00\",\r\n        \"VENCIDOSM1A\": \"0.00\",\r\n        \"RANGO_MORA\": \"1. Al dÃ­a\",\r\n        \"DIAS_MORA\": 0,\r\n        \"PROX_CAP\": \"20211016\",\r\n        \"PER_CAP\": \"01\",\r\n        \"PROX_INT\": \"20211016\",\r\n        \"PER_INT\": \"01\",\r\n        \"CUOTA_XPAGAR\": \"100.86\",\r\n        \"SUCURSAL\": \"201\",\r\n        \"MONEDA\": \"USD\",\r\n        \"CUENTA_CONTABLE\": \"\",\r\n        \"PRODUCTO\": \"TDC\",\r\n        \"BANCA\": \"\",\r\n        \"SECTOR1\": \"PRESTACARD\",\r\n        \"SECTOR2\": \"\",\r\n        \"SECTOR3\": \"\",\r\n        \"SECTOR4\": \"PRESTACARD\",\r\n        \"PRODUCTO1\": \"TARJETA DE CREDITO CONSUMO\",\r\n        \"PRODUCTO2\": \"TDC\",\r\n        \"PRODUCTO3\": \"Prestacard Visa\",\r\n        \"NUM_OPS\": \"4466840182907004\",\r\n        \"NUM_CLIENTE\": \"600167424\",\r\n        \"CENTRO_COSTO\": \"\",\r\n        \"NUM_LINEA\": \"\",\r\n        \"COD_OFIC\": \"\",\r\n        \"COD_OFIC2\": \"\"\r\n    }\r\n    ],\r\n    \"Status\": {\r\n    \"StatusCode\": \"M0000\",\r\n    \"StatusDesc\": \"SUCCESS\"\r\n    }\r\n    } */\n  } //Retorna todos los colateralsId por numero de cliente\n\n\n  async getColaterals(partyId) {\n    //Numero del cliente en T24\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n\n    try {\n      console.log(\"plage\"); //servicio retorna Pignorados\n\n      var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data); //Armamos la data a mostrar en pantalla\n\n      result.Collaterals.CollateralInfo.map(function (item, i) {\n        if (item.Collateral.CollateralKey.CollateralId !== null) {\n          dataResult.push({\n            collateralId: item.Collateral.CollateralKey.CollateralId,\n            facilityAmt: item.Collateral.CollateralAmt.Amt\n          });\n        }\n      });\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n    }\n\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  } // retorna Detalle de Garantias\n\n\n  async getWarrantyDetails(collateralId, warrantyType) {\n    //Numero del id colateral ... warrytype = Muebles, Inmuebles, Otros, Depositos\n    let params = {\n      CollateralId: collateralId,\n      InqType: warrantyType\n    };\n    let data = qs.stringify(params);\n\n    try {\n      //servicio retorna Pignorados\n      const result = await this.get(url.URL_CORE_COLLATERALS + \"?\" + data);\n      return result; //Armamos la data a mostrar en pantalla\n\n      /*result.Collaterals.CollateralInfo.map(function(item, i){\r\n          if(item.Collateral.CollateralKey.CollateralId!==null){\r\n              dataResult.push({collateralId: item.Collateral.CollateralKey.CollateralId,facilityAmt: item.Collateral.CollateralAmt.Amt});\r\n          }                                \r\n      })*/\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n      return undefined;\n    }\n  } //retorna movimientos de cuentas\n\n\n  async getAccountMovements(partyId) {\n    //Numero de Cliente de T24\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params); //servicio retorna las cuentas del cliente\n\n    var result = await this.get(url.URL_CORE_ACCOUNTSPARTIES + \"?\" + data);\n\n    if (result.Status.StatusCode !== OPTs.ResponseT24_STATUSOK) {\n      throw new Error(result.Status.StatusCode + \" - \" + result.Status.StatusDesc);\n      return;\n    }\n\n    var dataResult = [];\n\n    for (var i = 0; i < result.Accounts.Acct.length; i++) {\n      var item = result.Accounts.Acct[i];\n      params = {\n        AcctReference: item.AcctKey.AcctReference\n      };\n      data = qs.stringify(params);\n\n      try {\n        //Para sacar los\n        //servicio retorna los movimientos de cuentas del cliente\n        var dtResult = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\n        dtResult.Acct.AcctBal.map(function (accItem, i) {\n          dataResult.push({\n            \"account\": item.AcctKey.AcctId,\n            \"year\": accItem.AverageBalanceDt.split(' ')[1],\n            \"month\": accItem.AverageBalanceDt.split(' ')[0],\n            \"amount\": accItem.CurAmt.Amt\n          });\n        });\n      } catch (err) {}\n    }\n\n    return dataResult;\n    /*{\r\n    \"Accounts\": {\r\n    \"Acct\": [\r\n        {\r\n            \"AcctApplIdent\": \"0\",\r\n            \"AcctPartyType\": \"1\",\r\n            \"AcctSubtype\": {\r\n                \"Cod\": \"CAHO Local\"\r\n            },\r\n            \"AcctType\": {\r\n                \"Cod\": \"1\"\r\n            },\r\n            \"ClubBanesco\": false,\r\n            \"CurCode\": \"USD\",\r\n            \"MovType\": \"Unipersonal\",\r\n            \"ProductType\": \"1201\",\r\n            \"OpenDt\": \"2019-08-02\",\r\n            \"AcctKey\": {\r\n                \"AcctId\": \"201001879012\",\r\n                \"AcctReference\": \"1001062243\"\r\n            },\r\n            \"AcctStatus\": {\r\n                \"AcctStatusCode\": \"VIG\"\r\n            },\r\n            \"AcctBal\": [\r\n                {\r\n                    \"BalType\": \"WorkingBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"27.56\"\r\n                    }\r\n                },\r\n                {\r\n                    \"BalType\": \"AvailBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"27.56\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n    },\r\n    \"PartyKey\": {\r\n    \"PartyType\": \"1\"\r\n    },\r\n    \"Status\": {\r\n    \"StatusCode\": \"M0000\",\r\n    \"StatusDesc\": \"OK\"\r\n    }\r\n    } */\n\n    /*{\r\n        \"Acct\": {\r\n            \"AcctBal\": [\r\n                {\r\n                    \"AverageBalanceDt\": \"ENERO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"714.20\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"FEBRERO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"959.29\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"MARZO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"548.68\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"ABRIL 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"260.73\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"MAYO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"383.75\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"JUNIO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"331.64\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"JULIO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"195.59\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"AGOSTO 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"323.00\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"SEPTIEMBRE 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"399.36\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"OCTUBRE 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"315.92\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"NOVIEMBRE 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"151.21\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"DICIEMBRE 2021\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"235.04\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"ENERO 2022\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"84.73\"\r\n                    }\r\n                },\r\n                {\r\n                    \"AverageBalanceDt\": \"FEBRERO 2022\",\r\n                    \"BalType\": \"MonthAverageBalance\",\r\n                    \"CurAmt\": {\r\n                        \"Amt\": \"55.14\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"Status\": {\r\n            \"StatusCode\": \"M0000\",\r\n            \"StatusDesc\": \"OK\"\r\n        }\r\n    } */\n  } //retorna movimientos de cuentas\n\n\n  async getApcInfo(identification) {\n    //Numero de identificacion del cliente\n    var params = {\n      \"ConsultarAPC\": {\n        \"Model\": {\n          \"EsPrueba\": 0,\n          \"ForzarBusqueda\": 0,\n          \"IdentificacionConsulta\": identification,\n          //\"8-773-1899\",\n          \"PasswordAPC\": \"Banesco19.\",\n          \"UltimusProcess\": 7,\n          \"UsuarioAPC\": \"WTIBANESCO001\"\n        }\n      }\n    }; //servicio retorna la info de APC del cliente\n\n    const result = await this.post(url.URL_CORE_APCINFO, params);\n    console.log(\"getApcInfo\", result);\n    var dataResult = [];\n\n    try {\n      //Armamos la data a mostrar en pantalla\n      result.ConsultarAPCResponse.ConsultarAPCResult.DetCompromisoAPC.DetCompromisoAPC.map(function (item, i) {\n        try {\n          dataResult.push({\n            \"year\": moment(item.dc_fec_inicio_rel).format(\"YYYY\"),\n            \"month\": moment(item.dc_fec_inicio_rel).format(\"MMMM\"),\n            \"initialAmount\": item.dc_monto_original,\n            \"actualAmount\": item.dc_saldo_actual,\n            \"asociation\": item.dc_nom_asoc,\n            \"source\": item.dc_descr_corta_rela\n          });\n        } catch (err) {}\n      });\n    } catch (err) {\n      console.error(err);\n    }\n\n    return dataResult;\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/CoreServices/Services.js"],"names":["WatchListModel","DocumentModel","ClientInfoModel","PartiesStaffModel","ApiServiceCore","url","qs","ACT_FACILIDADACTIVOSFIJOS","OPTs","ResponseModel","moment","Services","postWhatchList","params","result","post","URL_CORE_WATCHLIST","status","fromJson","results","err","response","error","data","postDocument","config","headers","URL_CORE_DOCUMENTS","console","log","Status","StatusCode","dataresult","docName","Result","documentId","formType","undefined","postViewDocument","docId","DocumentHandle","ReturnBase64","URL_CORE_DOCUMENTSVIEW","Documents","DocPop","e","getPartiesInformation","stringify","get","URL_CORE_PARTIEINFO","getPartiesInformationExtra","typePerson","customerNumberT24","PartyType","Number","PartyId","length","extraInfo","activity","address","Country","CountryCode","Province","Cod","CountyDistrict","Jurisdiction","City","Desc","AddrDesc","Building","HouseNumber","Street","getPartiesStaff","URL_CORE_PARTIESTAFF","putPartiesStaff","put","getCompaniesRelations","URL_CORE_COMPANIESRELATIONS","getPaisesCatalogo","sessionStorage","getItem","JSON","parse","catalog_name","parent_catalog_name","keyword","URL_CORE_CATALOGO","setItem","catalog","ex","getProvinciasCatalogo","pais","getDistritoCatalogo","provincia","getCorregimientoCatalogo","distrito","getCiudadCatalogo","getGrupoEconomicoCatalogo","Records","unshift","Description","Code","getBancaCatalogo","getCargosCatalogo","getBancosCatalogo","getActividadEconomicaCatalogo","getSubActividadEconomicaCatalogo","codeActividad","getSectorEconomicoCatalogo","getRelacionCatalogo","getTipoGarantiaCatalogo","getMonedaCatalogo","getSucursalCatalogo","getSubProductosCatalogo","getSucursalesCatalogo","getTypeOfCreditLimitsCatalog","getInsurersCatalog","getCarBrandCatalog","getCarModelCatalog","getBrokersCatalog","getTrusteeCatalog","getSubProductCatalog","getCategoriesCatalog","getPolicyTypeCatalog","getSubTypeWarrantyCatalog","getAutoClassCatalog","getAppraiserCatalog","getFacilities","partyId","URL_CORE_FACILIDADES","dataResult","AcctLoans","AcctLoan","map","item","i","push","ProductDesc","AcctOpeningInfo","InitialAmt","Amt","OpenDt","AcctBal","CurAmt","AcctMember","PartyName","ShortName","getRelatedClients","resultData","client","partyNumber","PartyPartyRelInfo","PartyRef","RelPartyRef","PartyKey","getCorporateExhibition","longTerm","name","approvalRisk","proposalRisk","variationRisk","shortTerm","totalTerm","pledged","netExposition","openYear","parseInt","String","split","dueYear","CreditAcctData","DueDt","URL_CORE_PIGNORADO","Collaterals","CollateralInfo","AcctKey","AcctReference","Collateral","CollateralAmt","getCorporateExhibitionByClients","clients","clientId","getShortLongTermDebts","longTermresult","longTermTotal","date","format","shortTermresult","shortTermTotal","getAverages","URL_CORE_AVERAGES","getListaImportaciones","URL_CORE_IMPORTACIONES","getListaExportaciones","URL_CORE_EXPORTACIONES","getPrestamosEntrantes","URL_CORE_INGOING","getPrestamosSalientes","URL_CORE_OUTOGOING","getCreditosExistentes","URL_CORE_CREDITOS","getCreditosLine","URL_CORE_CREDITOS_LINE","getTransactions","AcctId","EndDt","StartDt","URL_CORE_TRANSACCTIONS","getPrestamos","URL_CORE_PRESTAMOS","getPrestamosInfo","URL_CORE_PRESTAMOS_INFORMATION","getReportingServices","FECHA","CLIENTE","URL_CORE_REPORTINGSERVICES","getColaterals","CollateralKey","CollateralId","collateralId","facilityAmt","getWarrantyDetails","warrantyType","InqType","URL_CORE_COLLATERALS","getAccountMovements","URL_CORE_ACCOUNTSPARTIES","ResponseT24_STATUSOK","Error","StatusDesc","Accounts","Acct","dtResult","accItem","AverageBalanceDt","getApcInfo","identification","URL_CORE_APCINFO","ConsultarAPCResponse","ConsultarAPCResult","DetCompromisoAPC","dc_fec_inicio_rel","dc_monto_original","dc_saldo_actual","dc_nom_asoc","dc_descr_corta_rela"],"mappings":"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","sourcesContent":["\r\nimport { WatchListModel, DocumentModel, ClientInfoModel, PartiesStaffModel } from \"../../models/Core\";\r\nimport ApiServiceCore from \"../ApiServiceCore\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport qs from \"qs\";\r\nimport { ACT_FACILIDADACTIVOSFIJOS } from \"../../helpers/options_helper\";\r\nimport * as OPTs from \"../../helpers/options_helper\"\r\nimport { ResponseModel } from '../../models/Common/ResponseModel';\r\nimport moment from \"moment\";\r\n\r\nexport default class Services extends ApiServiceCore {\r\n\r\n    //analysis/customers -> retorna la info de lista de vigilancia\r\n    //ConsultarListaCriterioCORE    \r\n    async postWhatchList(params) {\r\n        try {\r\n            /*\r\n        {\r\n      \"pCustomerId\": \"06--00711-002304\",\r\n      \"pTypeId\": \"CEDULA_IDENTIDAD\",\r\n      \"pModelId\": \"LISTA_VIGILANCIA\",\r\n      \"pCustomerListParams\": {\r\n          \"KeyValueParam\": [\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"NOMBRE\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Librada\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_NOMBRE\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Emilio\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"PRIMER_APELLIDO\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Rivera\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_APELLIDO\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Gaviria\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"TIPO_ID\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"CEDULA_IDENTIDAD\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"CEDULA\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"06--00711-002304\"\r\n              }\r\n          ]\r\n      },\r\n      \"pUser\": \"wallytech_ws_user\",\r\n      \"pWaitingInterval\": 180000000,\r\n      \"pPriority\": 1\r\n  }\r\n        */\r\n            var result = await this.post(url.URL_CORE_WATCHLIST, params);\r\n\r\n            return { status: 200, result: WatchListModel.fromJson(result).results };\r\n\r\n        }\r\n        catch (err) {\r\n            return { status: err.response.status, error: err.response.data }; //errorMessage, //errorCode\r\n        }\r\n    }\r\n\r\n    //documents -> salva documento en gestor documental ONBASE\r\n    //GuardarDocumentoECM\r\n    async postDocument(data) {\r\n\r\n        var config = {\r\n            headers: {\r\n                //\"Accept\":\"*/*\",\r\n                //\"Accept-Encoding\":\"gzip, deflate, sdch, br\",\r\n                //\"Accept-Language\":\"fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4\",\r\n                //\"Access-Control-Request-Headers\":\"accept, content-type\",\r\n                //\"Content-Type\":\"text/plain\",\r\n                //\"Content-Length\":JSON.stringify(data).length.toString(),\r\n                //\"Host\":\"https://qa.api.ob.banesco.com.pa/\",\r\n                //Connection: \"keep-alive\",\r\n                //\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\",\r\n                \"userId\": \"mq3898\", //Usuario\r\n                \"clientDt\": \"clientDt\", //\"Fecha de ejecuciÃ³n del cliente.\"\r\n                \"appName\": \"ReactJs\",//\"Aplicacion que consume el servicio\"\r\n                \"requestId\": \"202112202\",//\"Identificador de la solicitud.\"\r\n                \"channelId\": \"channelID\", //\"Canal consumidor\",                \r\n            }\r\n        }\r\n\r\n        var result = await this.post(url.URL_CORE_DOCUMENTS, data, config);\r\n\r\n        console.log(\"Result Document: \", result);\r\n\r\n        /*\r\n        var result = {\r\n            \"Status\": {\r\n                \"StatusCode\": \"M0000\",\r\n                \"StatusDesc\": \"OK\"\r\n            },\r\n            \"Token\": \"e793-ddb2-ab0e-6626-5d3e-5f19-b79b-1f5d\",\r\n            \"Result\": {\r\n                \"DocName\": \"TDC - Contrato de TDC  (98765432)\",\r\n                \"DocumentID\": \"34589873\",\r\n                \"FormType\": \"HTML\"\r\n            }\r\n        }\r\n        */\r\n        //console.log(result);\r\n        if (result.Status.StatusCode === \"M0000\") {\r\n            var dataresult = { docName: result.Result['DocName'], documentId: result.Result['DocumentID'], formType: result.Result['FormType'] }\r\n            return dataresult;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    //documents -> Ver documento en gestor documental ONBASE\r\n    //VerDocumentoECM\r\n    async postViewDocument(docId) {\r\n\r\n        try {\r\n            console.log(docId);\r\n            var data = {\r\n                DocumentHandle: docId,\r\n                ReturnBase64: false\r\n            }\r\n\r\n            var result = await this.post(url.URL_CORE_DOCUMENTSVIEW, data);\r\n\r\n            console.log(\"Result Document: \", result);\r\n\r\n            return result.Documents[0].DocPop;\r\n        }\r\n        catch (e) { }\r\n        return null;\r\n\r\n\r\n\r\n    }\r\n\r\n    //v1/parties/information -> retorna la info del cliente\r\n    //BuscarClienteCORE\r\n    async getPartiesInformation(params) {\r\n\r\n        /*var item =[ {id:800120843,clientnumber:800120843,clientname:\"Israel Michel Gomez Alfonso\",firstname:\"Israel\",secondname:\"Michel\",\r\n        lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"CED\",idnumber:\"456123\"},\r\n        {id:800120845,clientnumber:800120845,clientname:\"Pancho Pedro Gomez Alfonso\",firstname:\"Pancho\",secondname:\"Pedro\",\r\n        lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"RUC\",idnumber:\"456456\"}];\r\n        return item;*/\r\n        //params = {PartyType:Juridico,PartyId:600088018}\r\n        var data = qs.stringify(params);\r\n        console.log(data);\r\n        //url.URL_CORSBYPASS +\r\n        var result = await this.get(url.URL_CORE_PARTIEINFO + \"?\" + data);\r\n        console.log(result);\r\n        if (result.Status.StatusCode === \"M0000\") {\r\n            return ClientInfoModel.fromJson(result);\r\n        }\r\n        else {\r\n            result[\"error\"] = \"Error de Servicio del Core\";//result.Status.StatusDesc;\r\n            result[\"errorCode\"] = result.Status.StatusCode;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    async getPartiesInformationExtra(typePerson,customerNumberT24){\r\n        try {\r\n            var params = { PartyType: (Number(typePerson) === 1 ? \"Natural\" : \"Juridico\"), PartyId: customerNumberT24 }\r\n            var result = await this.getPartiesInformation(params);\r\n            if (result !== undefined && result.length > 0) {\r\n                var data = result[0];\r\n                console.log(\"resultados\", data);\r\n                var extraInfo ={\r\n                    activity:{\r\n                        \"EconomicActivity\":data[\"economicActivity\"]\r\n                    },\r\n                    address: {\r\n                        \"Country\":data[\"address\"]?.Country?.CountryCode??\"\",\r\n                        \"Province\":data[\"address\"]?.Province?.Cod??\"\",\r\n                        \"CountyDistrict\":data[\"address\"]?.CountyDistrict?.Cod??\"\",\r\n                        \"Jurisdiction\":data[\"address\"]?.Jurisdiction?.Cod??\"\",\r\n                        \"City\":data[\"address\"]?.City?.Desc??\"\",\r\n                        \"AddrDesc\":data[\"address\"]?.AddrDesc??\"\",\r\n                        \"Building\":data[\"address\"]?.Building?.Desc??\"\",\r\n                        \"HouseNumber\":data[\"address\"]?.HouseNumber??\"\",\r\n                        \"Street\":data[\"address\"]?.Street??\"\",\r\n                    }\r\n                }\r\n                \r\n                return extraInfo;\r\n            }\r\n        }\r\n        catch (err) { }\r\n        return undefined\r\n    }\r\n\r\n    \r\n    //Accionistas\r\n    async getPartiesStaff(PartyId) {\r\n\r\n        var params = { PartyId: PartyId }//{PartyId:600235373}\r\n        params = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_PARTIESTAFF + \"?\" + params);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    ///v1/parties/staff\r\n    async putPartiesStaff(data) {\r\n\r\n        data = {\r\n            \"Party\": {\r\n                \"PartyKey\": {\r\n                    \"PartyId\": \"600235373\"\r\n                },\r\n                \"OrgPartyInfo\": {\r\n                    \"OrgData\": {\r\n                        \"Staff\": [\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"City\": {\r\n                                                        \"Cod\": \"PANAMA\"\r\n                                                    },\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Jurisdiction\": {\r\n                                                        \"Cod\": \"8606\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Street\": \"PRINCIPAL\",\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"Phone\": [\r\n                                                {\r\n                                                    \"PhoneNum\": \"66669999\",\r\n                                                    \"PhoneType\": \"Home\"\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"Shareholding\": \"100\",\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"08\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": {\r\n                                    \"OtherNationality\": false,\r\n                                    \"US183Permanence\": false,\r\n                                    \"USRelated\": false,\r\n                                    \"USResid\": false,\r\n                                    \"USSignor\": false\r\n                                },\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"PA\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"Profession\": {\r\n                                    \"Value\": \"1007\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"09\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"City\": {\r\n                                                        \"Cod\": \"PANAMA\"\r\n                                                    },\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Jurisdiction\": {\r\n                                                        \"Cod\": \"8606\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Street\": \"PRINCIPAL\",\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"Phone\": [\r\n                                                {\r\n                                                    \"PhoneNum\": \"65263673\",\r\n                                                    \"PhoneType\": \"Home\"\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1982-02-15\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"PA\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"02--00710-002013\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"JONATHAN\",\r\n                                    \"LastName\": \"DELGADO\",\r\n                                    \"SecondLastName\": \"MARIN\",\r\n                                    \"SecondName\": \"IVES\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1958-09-29\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"ANT119629\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"RAMON\",\r\n                                    \"LastName\": \"MAÃAS\",\r\n                                    \"SecondLastName\": \"SEGURA\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var result = await this.put(url.URL_CORE_PARTIESTAFF, data);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    //ConsultarListaEmpresasRelacionadas\r\n    async getCompaniesRelations(params) {\r\n\r\n        //params = {PartyId:600012387}\r\n        var data = qs.stringify(params);\r\n\r\n        var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos los paises desde el catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPaisesCatalogo() {\r\n        try {\r\n            var result = sessionStorage.getItem('catPaises');\r\n            if (result !== undefined && result !== null) {\r\n                return JSON.parse(result);\r\n            }\r\n            //sessionStorage.setItem('catPaises', JSON.stringify(result.roles));\r\n\r\n            let params = {\r\n                catalog_name: 'PAIS',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n\r\n            sessionStorage.setItem('catPaises', JSON.stringify(result.catalog));\r\n\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*       Api para obtener las provincias de un pais, pasandole como parametro el id del pais      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getProvinciasCatalogo(pais) {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'PROVINCIA',\r\n                parent_catalog_name: pais,\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*    API para obtener los distrito de cada provincia pasandole como parametro el id provincia    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getDistritoCatalogo(provincia) {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'DISTRITO',\r\n                parent_catalog_name: provincia,\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                      Api para obtener los corregimientos de cada distrito                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCorregimientoCatalogo(distrito) {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'CORREGIMIENTO',\r\n                parent_catalog_name: distrito,\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                         Api para obtener las ciudades de cada provincia                        */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCiudadCatalogo(provincia) {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'CIUDAD',\r\n                parent_catalog_name: provincia,\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                      Api para obtener el grupo economico de los catalogos                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getGrupoEconomicoCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'GRUPO ECONOMICO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            result.catalog.Records.unshift({ Description: \"N/A\", Code: \"N/A\" })\r\n            return result.catalog;\r\n        }\r\n        catch (err) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                   Api para obtener las bancas esta api proviene de catalogos                   */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getBancaCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'BANCA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (err) { }\r\n        return null;\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                   Api muestra todos los cargos que retorna desde el catalogo                   */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCargosCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'CARGO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     Api retorna todos los bancos exitentes para el catalogo                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getBancosCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'BANCOS',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getActividadEconomicaCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'ACTIVIDAD ECONOMICA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (err) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSubActividadEconomicaCatalogo(codeActividad) {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'SUB ACTIVIDAD ECONOMICA',\r\n                parent_catalog_name: codeActividad,\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (err) { }\r\n        return null;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE SECTOR ECONOMICO                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSectorEconomicoCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'SECTOR ECONOMICO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO RELACION                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getRelacionCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'RELACION',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO TIPO DE GARANTIA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getTipoGarantiaCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'TIPO DE GARANTIA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n\r\n    }\r\n    /*\r\n    \"catalog\": {\r\n        \"type\": \"TIPO DE GARANTIA\",\r\n        \"records\": [\r\n            {\r\n                \"CODIGO\": \"100\",\r\n                \"DESCRIPCION\": \"Garantia Hipotecaria Mueble\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"200\",\r\n                \"DESCRIPCION\": \"Garantia Hipotecaria Inmueble\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"300\",\r\n                \"DESCRIPCION\": \"Depositos Pignorados en el Banco\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"400\",\r\n                \"DESCRIPCION\": \"Depositos Pignorados en Otros Banco\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"500\",\r\n                \"DESCRIPCION\": \"Garantia Prendaria\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"600\",\r\n                \"DESCRIPCION\": \"Otras Garantias\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"700\",\r\n                \"DESCRIPCION\": \"SIN GARANTIAS\"\r\n            }\r\n        ]\r\n    }\r\n    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO MONEDAS                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getMonedaCatalogo() {\r\n\r\n        try {\r\n            let params = {\r\n                catalog_name: 'MONEDA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO SUCURSAL  o Agencias                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSucursalCatalogo() {\r\n        try {\r\n            let params = {\r\n                catalog_name: 'SUCURSAL',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n\r\n\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos los subproductos catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSubProductosCatalogo() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUBPRODUCTO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos las sucursales o agencias catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSucursalesCatalogo() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUCURSAL',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Tipo de Limites de Credito\r\n    async getTypeOfCreditLimitsCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'LIMIT REFERENCE',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Aseguradoras\r\n    async getInsurersCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'ASEGURADORAS',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Marcas de Auto\r\n    async getCarBrandCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'MARCA DE AUTOS',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Modelos de Auto\r\n    async getCarModelCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'MODELO DE AUTO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Corredoras\r\n    async getBrokersCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'BROKER',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Fiduciaria\r\n    async getTrusteeCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'FIDUCIARIAS',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - SubProducto\r\n    async getSubProductCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUBPRODUCTO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Categorias\r\n    async getCategoriesCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'CATEGORIA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Tipo de poliza\r\n    async getPolicyTypeCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'TIPO POLIZA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Sub tipo de Garantia\r\n    async getSubTypeWarrantyCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUB TIPO GARANTIA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Clases de Auto\r\n    async getAutoClassCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'CLASE AUTO',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    //CATALOGO - Avaluadora\r\n    async getAppraiserCatalog() {\r\n        try {\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'AVALUADORA',\r\n                parent_catalog_name: \"\",\r\n                keyword: \"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch (ex) { }\r\n        return null;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------*/\r\n    ///v1/loans/details/informations\r\n    //Retorna las facilidades de un cliente ... partyId -> numero del cliente en T24\r\n    //getFacilidades\r\n    async getFacilities(partyId) {\r\n        try {\r\n            let params = {\r\n                PartyId: partyId\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n\r\n            //return result.AcctLoans.AcctLoan;\r\n\r\n            var dataResult = [];\r\n            try {\r\n                //Armamos la data a mostrar en pantalla\r\n                result.AcctLoans.AcctLoan.map(function (item, i) {\r\n                    try {\r\n                        dataResult.push({\r\n                            \"facilityType\": item.ProductDesc, \"approvedAmount\": item.AcctOpeningInfo.InitialAmt.Amt,\r\n                            \"approvedDate\": item.AcctOpeningInfo.OpenDt, \"actualBalance\": item.AcctBal[0].CurAmt.Amt,\r\n                            \"debtorName\": item.AcctMember[0].PartyName.ShortName\r\n                        });\r\n                    }\r\n                    catch (err) { }\r\n                })\r\n            }\r\n            catch (err) { console.error(err); }\r\n\r\n            console.log(\"getFacilities\", dataResult)\r\n            return dataResult;\r\n            //Tipo de facilidad ProductDesc\r\n            //Monto Aprobadp AcctOpeningInfo.InitialAmt.Amt\r\n            //fecha AcctOpeningInfo.OpenDt\r\n            //Balance Actual AcctBal[0].CurAmt.Amt\r\n            //Deudor AcctMember[0].PartyName.ShortName\r\n        }\r\n        catch (err) { console.error(err) }\r\n        return undefined;\r\n    }\r\n\r\n    //retorna los Clientes Relacionados se le pasa el Numero de Cliente de T24\r\n    async getRelatedClients(partyId) {\r\n\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = [];\r\n\r\n        try {\r\n\r\n            //servicio retorna clientes relacionados\r\n            var resultData = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            for (var client in resultData) {\r\n                var partyNumber = client.PartyPartyRelInfo.PartyRef[0].RelPartyRef[0].PartyKey[0].PartyId;\r\n                if (partyNumber !== undefined && partyNumber !== null && partyNumber.length > 0) {\r\n\r\n                    var resultData = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\r\n                    dataResult.push(partyNumber);\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_FACILIDADES\", err);\r\n        }\r\n\r\n        return dataResult;\r\n    }\r\n\r\n    //ExposicionCorporativa se le pasa el Numero de Cliente de T24\r\n    async getCorporateExhibition(partyId) {\r\n\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = [];\r\n        var longTerm = { name: \"Facilidades Largo Plazo\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 };\r\n        var shortTerm = { name: \"Facilidades Corto Plazo\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 };\r\n        var totalTerm = { name: \"Total de Facilidades\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 };\r\n        var pledged = { name: \"Monto Pignorado\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 };\r\n        var netExposition = { name: \"Exposicion Neta\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 };\r\n\r\n        try {\r\n\r\n            //servicio retorna CP y LP (Corto y Largo Plazo)\r\n            var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n\r\n            console.log(\"getCorporateExhibition result\", result);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.AcctLoans.AcctLoan.map(function (item, i) {\r\n                var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\r\n                var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\r\n                if (dueYear - openYear > 1) { //Largo Plazo\r\n                    longTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                    longTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\r\n                }\r\n                else { //Corto Pazo                    \r\n                    shortTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                    shortTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\r\n                }\r\n            })\r\n\r\n            console.log(\"getCorporateExhibition item\", longTerm);\r\n\r\n            longTerm.variationRisk = longTerm.approvalRisk - longTerm.proposalRisk;\r\n            shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\r\n\r\n            dataResult.push(longTerm);\r\n            dataResult.push(shortTerm);\r\n\r\n            totalTerm.approvalRisk = shortTerm.approvalRisk + longTerm.approvalRisk;\r\n            totalTerm.proposalRisk = shortTerm.proposalRisk + longTerm.proposalRisk;\r\n            totalTerm.variationRisk = totalTerm.approvalRisk - totalTerm.proposalRisk;\r\n\r\n            dataResult.push(totalTerm);\r\n\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_FACILIDADES\", err);\r\n        }\r\n\r\n        try {\r\n\r\n\r\n            //servicio retorna Pignorados\r\n            var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.Collaterals.CollateralInfo.map(function (item, i) {\r\n\r\n                if (item.AcctKey.AcctReference !== null) {\r\n                    pledged.approvalRisk += Number(item.Collateral.CollateralAmt.Amt);\r\n                    pledged.proposalRisk += Number(item.Collateral.CollateralAmt.Amt);\r\n                    pledged.variationRisk += Number(item.Collateral.CollateralAmt.Amt);\r\n                }\r\n\r\n            })\r\n\r\n            dataResult.push(pledged);\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_PIGNORADO\", err);\r\n        }\r\n\r\n        if (dataResult.length > 0) {\r\n            netExposition.approvalRisk = totalTerm.approvalRisk - pledged.approvalRisk;\r\n            netExposition.proposalRisk = totalTerm.proposalRisk - pledged.proposalRisk;\r\n            netExposition.variationRisk = totalTerm.approvalRisk - pledged.proposalRisk;\r\n\r\n            dataResult.push(netExposition);\r\n        }\r\n\r\n        return dataResult;\r\n    }\r\n\r\n    //ExposicionCorporativa se le pasa el Numero de Cliente de T24\r\n    async getCorporateExhibitionByClients(partyId) {\r\n\r\n        let clients = await this.getRelatedClients(partyId);\r\n        var dataResult = [];\r\n        for (var i = 0; i < clients.length; i++) {\r\n            let result = await this.getCorporateExhibition(clients[i]);\r\n            console.log(\"getCorporateExhibition\", result)\r\n            if (result !== null && result.length > 0) {\r\n                dataResult.push({ clientId: \"Cliente \" + i, data: result });\r\n            }\r\n        }\r\n        console.log(\"dataResult\", dataResult);\r\n        return dataResult;\r\n    }\r\n\r\n    //Deudas a Corto Plazo... se le pasa el Numero de Cliente de T24\r\n    /*async getShortTermDebts(partyId) {\r\n\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = [];\r\n        //var shortTerm ={name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var totalTerm = { name: \"Total\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0, date: moment().format(\"YYYY-MM-DD\") };\r\n\r\n        try {\r\n\r\n            //servicio retorna CP y LP (Corto y Largo Plazo)\r\n            var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n\r\n            console.log(\"getCorporateExhibition result\", result);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.AcctLoans.AcctLoan.map(function (item, i) {\r\n                var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\r\n                var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\r\n                if (dueYear - openYear > 1) { //Largo Plazo\r\n                }\r\n                else{//Corto Plazo\r\n                    var shortTerm = { name: item.ProductDesc, approvalRisk: 0, proposalRisk: 0, variationRisk: 0 }\r\n                    shortTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                    shortTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\r\n                    shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\r\n                    shortTerm.name = item.ProductDesc\r\n                    shortTerm.date = item.AcctOpeningInfo.OpenDt\r\n\r\n                    totalTerm.approvalRisk += shortTerm.approvalRisk;\r\n                    totalTerm.proposalRisk += shortTerm.proposalRisk;\r\n\r\n                    dataResult.push(shortTerm);\r\n                }\r\n            })\r\n\r\n            totalTerm.variationRisk = totalTerm.approvalRisk - totalTerm.proposalRisk;\r\n            dataResult.push(totalTerm);\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_FACILIDADES\", err);\r\n        }\r\n\r\n\r\n        return dataResult;\r\n    }*/\r\n\r\n    //Deudas a Corto y Largo Plazo... se le pasa el Numero de Cliente de T24\r\n    async getShortLongTermDebts(partyId) {\r\n\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var longTermresult = [] //{name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var longTermTotal = { name: \"Total\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0, date: moment().format(\"YYYY-MM-DD\") };\r\n\r\n        var shortTermresult = [] //{name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var shortTermTotal = { name: \"Total\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0, date: moment().format(\"YYYY-MM-DD\") };\r\n\r\n        try {\r\n\r\n            //servicio retorna CP y LP (Corto y Largo Plazo)\r\n            var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n\r\n            console.log(\"getCorporateExhibition result\", result);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.AcctLoans.AcctLoan.map(function (item, i) {\r\n                var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\r\n                var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\r\n                if (dueYear - openYear > 1) { //Largo Plazo\r\n                    var longTerm = { name: \"Facilidades Largo Plazo\", approvalRisk: 0, proposalRisk: 0, variationRisk: 0 }\r\n                    longTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                    longTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\r\n                    longTerm.variationRisk = longTerm.approvalRisk - longTerm.proposalRisk;\r\n                    longTerm.name = item.ProductDesc\r\n                    longTerm.date = item.AcctOpeningInfo.OpenDt\r\n\r\n                    longTermTotal.approvalRisk += longTerm.approvalRisk;\r\n                    longTermTotal.proposalRisk += longTerm.proposalRisk;\r\n\r\n                    longTermresult.push(longTerm);\r\n                }\r\n                else { //Corto Pazo  \r\n                    var shortTerm = { name: item.ProductDesc, approvalRisk: 0, proposalRisk: 0, variationRisk: 0 }\r\n                    shortTerm.approvalRisk = Number(item.AcctOpeningInfo.InitialAmt.Amt);\r\n                    shortTerm.proposalRisk = Number(item.AcctBal[0].CurAmt.Amt);\r\n                    shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\r\n                    shortTerm.name = item.ProductDesc\r\n                    shortTerm.date = item.AcctOpeningInfo.OpenDt\r\n\r\n                    shortTermTotal.approvalRisk += shortTerm.approvalRisk;\r\n                    shortTermTotal.proposalRisk += shortTerm.proposalRisk;\r\n\r\n                    shortTermresult.push(shortTerm);\r\n                }\r\n            })\r\n            longTermTotal.variationRisk = longTermTotal.approvalRisk - longTermTotal.proposalRisk;\r\n            longTermresult.push(longTermTotal);\r\n\r\n            shortTermTotal.variationRisk = shortTermTotal.approvalRisk - shortTermTotal.proposalRisk;\r\n            shortTermresult.push(shortTermTotal);\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_FACILIDADES\", err);\r\n        }\r\n\r\n        return { longTermresult, shortTermresult };\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                 Retorna los balances por meses                                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getAverages(AcctReference) {\r\n        let params = {\r\n            AcctReference: AcctReference\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     Obtenemos una lista de las importaciones que se generen                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getListaImportaciones(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_IMPORTACIONES + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                 Obtenemos una lista de las exportaciones que se hayan generado                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getListaExportaciones(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_EXPORTACIONES + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                          Obtenemos los prestamos entrantes existentes                          */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosEntrantes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_INGOING + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                    Obtenemos una lista de todos los presstamos que ya salen                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosSalientes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_OUTOGOING + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos la lista de creditos que existen en la actualidad activos              */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCreditosExistentes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CREDITOS + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                        Creditos en linea                                       */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCreditosLine(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CREDITOS_LINE + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Nos devuelve todas las transacciones que ha realizado el usuario por un rango de fechas    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getTransactions(AcctId, EndDt, StartDt) {\r\n        // ejemplo del dataField\r\n        // AcctId=1001553287&EndDt=2021-10-16T09:32:51&StartDt=2021-09-16T00:00:00\r\n        let params = {\r\n            AcctId: AcctId,\r\n            EndDt: EndDt,\r\n            StartDt: StartDt,\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_TRANSACCTIONS + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                  Obtenemos todos los prestamos                                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamos(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_PRESTAMOS + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos toda la informacion del prestamos dentro de una actividad              */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosInfo(AcctId) {\r\n        let params = {\r\n            AcctId: AcctId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_PRESTAMOS_INFORMATION + \"?\" + data);\r\n\r\n        return result;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos toda la informacion del Reporting Services                            */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n\r\n    //https://qa.api.ob.banesco.com.pa/APIUtil/v1/reports/atoms?FECHA=20210930&CLIENTE=600167424\r\n\r\n    async getReportingServices(partyId) { //partyId -> numero del cliente en T24\r\n        let params = {\r\n            FECHA: moment().format(\"YYYYMMDD\"), //preguntar pq la fecha no se puede cambiar\r\n            CLIENTE: partyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_REPORTINGSERVICES + \"?\" + data);\r\n\r\n        return result;\r\n\r\n        /*{\r\n    \"records\": [\r\n        {\r\n            \"FECHA\": \"20210930\",\r\n            \"T_CREDITO\": \"002\",\r\n            \"T_FACILIDAD\": \"05\",\r\n            \"CLASIFICACION\": \"02\",\r\n            \"LOC_EXT\": \"L\",\r\n            \"REGION\": \"014\",\r\n            \"CLIENTE_RUC\": \"8-805-442\",\r\n            \"TNO_EMPRESA\": \"06\",\r\n            \"NOMBRE_CLIENTE\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n            \"GRUPO_ECON\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n            \"GRUPO_RUC\": \"8-805-442\",\r\n            \"T_RELACION\": \"P999\",\r\n            \"ACT_ECON\": \"2103\",\r\n            \"TASA_INT\": \"10.5\",\r\n            \"MONTO_IN\": 5400,\r\n            \"INT_PC\": 0,\r\n            \"FECHA_INI\": \"20150616\",\r\n            \"FECHA_FIN\": \"20230116\",\r\n            \"FECHA_REFIN\": \"NA\",\r\n            \"FECHA_RENEG\": \"20200817\",\r\n            \"G1\": \"0701\",\r\n            \"MONTO_G1\": 0,\r\n            \"G2\": \"NA\",\r\n            \"MONTO_G2\": 0,\r\n            \"G3\": \"NA\",\r\n            \"MONTO_G3\": 0,\r\n            \"G4\": \"NA\",\r\n            \"MONTO_G4\": 0,\r\n            \"G5\": \"NA\",\r\n            \"MONTO_G5\": 0,\r\n            \"PROV_REG\": 0,\r\n            \"PROV_NIIF\": 119.05,\r\n            \"PROV_PAIS\": 0,\r\n            \"SALDO\": 6401.61,\r\n            \"N_CUOTAS_VENCER\": \"7\",\r\n            \"X_VENCER30\": \"100.86\",\r\n            \"X_VENCER60\": \"100.86\",\r\n            \"X_VENCER90\": \"100.86\",\r\n            \"X_VENCER120\": \"100.86\",\r\n            \"X_VENCER180\": \"100.86\",\r\n            \"X_VENCER1A\": \"100.86\",\r\n            \"X_VENCER5A\": \"5796.45\",\r\n            \"X_VENCER10A\": \"0.00\",\r\n            \"X_VENCERM10A\": \"0.00\",\r\n            \"N_CUOTA_VENCIDAS\": \"0\",\r\n            \"VENCIDOS30\": \"0.00\",\r\n            \"VENCIDOS60\": \"0.00\",\r\n            \"VENCIDOS90\": \"0.00\",\r\n            \"VENCIDOS120\": \"0.00\",\r\n            \"VENCIDOS180\": \"0.00\",\r\n            \"VENCIDOS1A\": \"0.00\",\r\n            \"VENCIDOSM1A\": \"0.00\",\r\n            \"RANGO_MORA\": \"1. Al dÃ­a\",\r\n            \"DIAS_MORA\": 0,\r\n            \"PROX_CAP\": \"20211016\",\r\n            \"PER_CAP\": \"01\",\r\n            \"PROX_INT\": \"20211016\",\r\n            \"PER_INT\": \"01\",\r\n            \"CUOTA_XPAGAR\": \"100.86\",\r\n            \"SUCURSAL\": \"201\",\r\n            \"MONEDA\": \"USD\",\r\n            \"CUENTA_CONTABLE\": \"\",\r\n            \"PRODUCTO\": \"TDC\",\r\n            \"BANCA\": \"\",\r\n            \"SECTOR1\": \"PRESTACARD\",\r\n            \"SECTOR2\": \"\",\r\n            \"SECTOR3\": \"\",\r\n            \"SECTOR4\": \"PRESTACARD\",\r\n            \"PRODUCTO1\": \"TARJETA DE CREDITO CONSUMO\",\r\n            \"PRODUCTO2\": \"TDC\",\r\n            \"PRODUCTO3\": \"Prestacard Visa\",\r\n            \"NUM_OPS\": \"4466840182907004\",\r\n            \"NUM_CLIENTE\": \"600167424\",\r\n            \"CENTRO_COSTO\": \"\",\r\n            \"NUM_LINEA\": \"\",\r\n            \"COD_OFIC\": \"\",\r\n            \"COD_OFIC2\": \"\"\r\n        }\r\n    ],\r\n    \"Status\": {\r\n        \"StatusCode\": \"M0000\",\r\n        \"StatusDesc\": \"SUCCESS\"\r\n    }\r\n} */\r\n    }\r\n\r\n\r\n    //Retorna todos los colateralsId por numero de cliente\r\n    async getColaterals(partyId) { //Numero del cliente en T24\r\n\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = [];\r\n        try {\r\n\r\n            console.log(\"plage\");\r\n\r\n            //servicio retorna Pignorados\r\n            var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.Collaterals.CollateralInfo.map(function (item, i) {\r\n                if (item.Collateral.CollateralKey.CollateralId !== null) {\r\n                    dataResult.push({ collateralId: item.Collateral.CollateralKey.CollateralId, facilityAmt: item.Collateral.CollateralAmt.Amt });\r\n                }\r\n\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_PIGNORADO\", err);\r\n        }\r\n\r\n        console.log(\"dataResult\", dataResult);\r\n        return dataResult;\r\n    }\r\n\r\n    // retorna Detalle de Garantias\r\n    async getWarrantyDetails(collateralId, warrantyType) { //Numero del id colateral ... warrytype = Muebles, Inmuebles, Otros, Depositos\r\n\r\n        let params = {\r\n            CollateralId: collateralId,\r\n            InqType: warrantyType\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        try {\r\n            //servicio retorna Pignorados\r\n            const result = await this.get(url.URL_CORE_COLLATERALS + \"?\" + data);\r\n            return result\r\n            //Armamos la data a mostrar en pantalla\r\n            /*result.Collaterals.CollateralInfo.map(function(item, i){\r\n                if(item.Collateral.CollateralKey.CollateralId!==null){\r\n                    dataResult.push({collateralId: item.Collateral.CollateralKey.CollateralId,facilityAmt: item.Collateral.CollateralAmt.Amt});\r\n                }                                \r\n            })*/\r\n        }\r\n        catch (err) {\r\n            console.error(\"URL_CORE_PIGNORADO\", err);\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    //retorna movimientos de cuentas\r\n    async getAccountMovements(partyId) { //Numero de Cliente de T24\r\n        let params = { PartyId: partyId }\r\n        let data = qs.stringify(params);\r\n\r\n        //servicio retorna las cuentas del cliente\r\n        var result = await this.get(url.URL_CORE_ACCOUNTSPARTIES + \"?\" + data);\r\n\r\n        if (result.Status.StatusCode !== OPTs.ResponseT24_STATUSOK) {\r\n            throw new Error(result.Status.StatusCode + \" - \" + result.Status.StatusDesc);\r\n            return;\r\n        }\r\n\r\n        var dataResult = [];\r\n        for (var i = 0; i < result.Accounts.Acct.length; i++) {\r\n            var item = result.Accounts.Acct[i];\r\n            params = { AcctReference: item.AcctKey.AcctReference }\r\n            data = qs.stringify(params);\r\n            try {\r\n                //Para sacar los\r\n                //servicio retorna los movimientos de cuentas del cliente\r\n                var dtResult = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\r\n                dtResult.Acct.AcctBal.map(function (accItem, i) {\r\n                    dataResult.push({\r\n                        \"account\":item.AcctKey.AcctId,\r\n                        \"year\": accItem.AverageBalanceDt.split(' ')[1], \r\n                        \"month\": accItem.AverageBalanceDt.split(' ')[0],\r\n                        \"amount\": accItem.CurAmt.Amt\r\n                    });\r\n                })\r\n            }\r\n            catch (err) { }\r\n        }\r\n\r\n        return dataResult;\r\n\r\n\r\n        /*{\r\n    \"Accounts\": {\r\n        \"Acct\": [\r\n            {\r\n                \"AcctApplIdent\": \"0\",\r\n                \"AcctPartyType\": \"1\",\r\n                \"AcctSubtype\": {\r\n                    \"Cod\": \"CAHO Local\"\r\n                },\r\n                \"AcctType\": {\r\n                    \"Cod\": \"1\"\r\n                },\r\n                \"ClubBanesco\": false,\r\n                \"CurCode\": \"USD\",\r\n                \"MovType\": \"Unipersonal\",\r\n                \"ProductType\": \"1201\",\r\n                \"OpenDt\": \"2019-08-02\",\r\n                \"AcctKey\": {\r\n                    \"AcctId\": \"201001879012\",\r\n                    \"AcctReference\": \"1001062243\"\r\n                },\r\n                \"AcctStatus\": {\r\n                    \"AcctStatusCode\": \"VIG\"\r\n                },\r\n                \"AcctBal\": [\r\n                    {\r\n                        \"BalType\": \"WorkingBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"27.56\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"BalType\": \"AvailBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"27.56\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"PartyKey\": {\r\n        \"PartyType\": \"1\"\r\n    },\r\n    \"Status\": {\r\n        \"StatusCode\": \"M0000\",\r\n        \"StatusDesc\": \"OK\"\r\n    }\r\n} */\r\n\r\n        /*{\r\n            \"Acct\": {\r\n                \"AcctBal\": [\r\n                    {\r\n                        \"AverageBalanceDt\": \"ENERO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"714.20\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"FEBRERO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"959.29\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"MARZO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"548.68\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"ABRIL 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"260.73\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"MAYO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"383.75\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"JUNIO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"331.64\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"JULIO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"195.59\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"AGOSTO 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"323.00\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"SEPTIEMBRE 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"399.36\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"OCTUBRE 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"315.92\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"NOVIEMBRE 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"151.21\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"DICIEMBRE 2021\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"235.04\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"ENERO 2022\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"84.73\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"AverageBalanceDt\": \"FEBRERO 2022\",\r\n                        \"BalType\": \"MonthAverageBalance\",\r\n                        \"CurAmt\": {\r\n                            \"Amt\": \"55.14\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"Status\": {\r\n                \"StatusCode\": \"M0000\",\r\n                \"StatusDesc\": \"OK\"\r\n            }\r\n        } */\r\n    }\r\n\r\n    //retorna movimientos de cuentas\r\n    async getApcInfo(identification) { //Numero de identificacion del cliente\r\n        var params = {\r\n            \"ConsultarAPC\": {\r\n                \"Model\": {\r\n                    \"EsPrueba\": 0,\r\n                    \"ForzarBusqueda\": 0,\r\n                    \"IdentificacionConsulta\": identification,//\"8-773-1899\",\r\n                    \"PasswordAPC\": \"Banesco19.\",\r\n                    \"UltimusProcess\": 7,\r\n                    \"UsuarioAPC\": \"WTIBANESCO001\"\r\n                }\r\n            }\r\n        }\r\n\r\n        //servicio retorna la info de APC del cliente\r\n        const result = await this.post(url.URL_CORE_APCINFO, params);\r\n        console.log(\"getApcInfo\", result);\r\n\r\n        var dataResult = [];\r\n        try {\r\n            //Armamos la data a mostrar en pantalla\r\n            result.ConsultarAPCResponse.ConsultarAPCResult.DetCompromisoAPC.DetCompromisoAPC.map(function (item, i) {\r\n                try {\r\n                    dataResult.push({\r\n                        \"year\": moment(item.dc_fec_inicio_rel).format(\"YYYY\"), \"month\": moment(item.dc_fec_inicio_rel).format(\"MMMM\"),\r\n                        \"initialAmount\": item.dc_monto_original, \"actualAmount\": item.dc_saldo_actual, \"asociation\": item.dc_nom_asoc, \"source\": item.dc_descr_corta_rela\r\n                    });\r\n                }\r\n                catch (err) { }\r\n            })\r\n        }\r\n        catch (err) { console.error(err); }\r\n\r\n        return dataResult;\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}