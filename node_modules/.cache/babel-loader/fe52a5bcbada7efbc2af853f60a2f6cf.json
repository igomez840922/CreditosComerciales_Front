{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\ModalBitacora.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport Services from \"../../services/BackendServices/Services\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport toastr from \"toastr\";\nimport \"toastr/build/toastr.min.css\";\nimport Alert from 'react-bootstrap/Alert';\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport { BackendServices } from \"../../services/index\";\n/* ---------------------------------------------------------------------------------------------- */\n\n/*                  Funcion para mostrar el modal para guardar la bitacora manual                 */\n\n/* ---------------------------------------------------------------------------------------------- */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalBitacora = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\n  const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  useEffect(() => {\n    if (logProcessModel !== undefined && logProcessModel !== null) {\n      loadMainDebtor(logProcessModel.transactId);\n    }\n  }, []);\n\n  function loadMainDebtor(transactionId) {\n    // consultarDeudorPrincipal\n    backendServices.consultPrincipalDebtor(transactionId).then(data => {\n      if (data !== undefined) {\n        setmainDebtor(data);\n      }\n    });\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    onSaveLogProcess(values.txtComment);\n  }\n\n  function onSaveLogProcess(observations) {\n    var _credentials$usr, _mainDebtor$personId;\n\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n    logProcessModel.responsible = (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"admin\";\n    logProcessModel.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : logProcessModel.clientId;\n    logProcessModel.observations = observations;\n    backendServices.saveHistorical(logProcessModel).then(resp => {\n      console.log(\"saveHistorical\", resp);\n\n      if (resp !== undefined) {\n        props.successSaved();\n        props.toggle();\n      } else {\n        //Mensaje ERROR\n        showMessage(t(\"ErrorSaveMessage\"), true);\n      }\n\n      props.successSaved();\n      props.toggle();\n    }).catch(err => {\n      showMessage(err.message, true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: props.t(\"NewLog\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmNewLog\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"txtComment\",\n                children: t(\"Comment\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"txtComment\",\n                type: \"textarea\",\n                rows: 7,\n                validate: {\n                  required: {\n                    value: true,\n                    errorMessage: t(\"Required Field\")\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: msgData.show,\n              variant: msgData.isError ? \"danger\" : \"success\",\n              dismissible: true,\n              onClose: () => {\n                setmsgData({\n                  show: false,\n                  msg: \"\",\n                  isError: false\n                });\n              },\n              children: msgData.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          type: \"button\",\n          style: {\n            margin: '5px'\n          },\n          onClick: () => {\n            props.toggle();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-cancel mid-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), \" \", props.t(\"Cancel\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          type: \"submit\",\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-content-save  mid-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), \" \", props.t(\"Save\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalBitacora, \"XMOqZ9xoJUv+yZtTS8afeexnkew=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalBitacora;\nModalBitacora.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  successSaved: PropTypes.func,\n  logProcessModel: PropTypes.any //LogProcessModel\n\n};\nexport default withTranslation()(ModalBitacora);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalBitacora\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/ModalBitacora.js"],"names":["React","useEffect","useState","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","AvForm","AvField","Services","useLocation","useHistory","useTranslation","toastr","Alert","LocalStorageHelper","opt","BackendServices","ModalBitacora","props","t","i18n","logProcessModel","setlogProcessModel","localStorageHelper","setlocalStorageHelper","backendServices","setbackendServices","mainDebtor","setmainDebtor","msgData","setmsgData","show","msg","isError","undefined","loadMainDebtor","transactId","transactionId","consultPrincipalDebtor","then","data","showMessage","message","handleSubmit","event","errors","values","preventDefault","length","onSaveLogProcess","txtComment","observations","credentials","get","VARNAME_USRCREDENTIAL","responsible","usr","clientId","personId","saveHistorical","resp","console","log","successSaved","toggle","catch","err","isOpen","required","value","errorMessage","margin","propTypes","bool","func","any"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {Row,Col,Button,Label,Input,Modal,Card,CardBody,CardFooter} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport Services from \"../../services/BackendServices/Services\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\";\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\nimport * as opt from \"../../helpers/options_helper\";\r\nimport { BackendServices } from \"../../services/index\";\r\n\r\n/* ---------------------------------------------------------------------------------------------- */\r\n/*                  Funcion para mostrar el modal para guardar la bitacora manual                 */\r\n/* ---------------------------------------------------------------------------------------------- */\r\nconst ModalBitacora = (props) => {\r\n\r\n    \r\n    const { t, i18n } = useTranslation();\r\n    const [logProcessModel, setlogProcessModel] = useState(props.logProcessModel);\r\n    const [localStorageHelper, setlocalStorageHelper] = useState(new LocalStorageHelper());\r\n    const [backendServices, setbackendServices] = useState(new BackendServices());\r\n\r\n    const [mainDebtor, setmainDebtor] = useState(null);\r\n    const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  \r\n    useEffect(() => {\r\n        if (logProcessModel !== undefined && logProcessModel !== null) {\r\n          loadMainDebtor(logProcessModel.transactId);\r\n        } \r\n      }, []);\r\n    \r\n      function loadMainDebtor(transactionId) {\r\n        // consultarDeudorPrincipal\r\n        backendServices.consultPrincipalDebtor(transactionId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              setmainDebtor(data);\r\n            }\r\n          });\r\n      }\r\n     \r\n      //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  \r\n  \r\n    function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    onSaveLogProcess(values.txtComment);\r\n  }\r\n\r\n  function onSaveLogProcess(observations) {\r\n    \r\n    var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\r\n    \r\n    logProcessModel.responsible = credentials?.usr??\"admin\"\r\n    logProcessModel.clientId = mainDebtor?.personId??logProcessModel.clientId;\r\n    logProcessModel.observations= observations;    \r\n    backendServices.saveHistorical(logProcessModel)\r\n        .then(resp => {\r\n            console.log(\"saveHistorical\",resp);\r\n          if (resp !== undefined) {\r\n            props.successSaved()\r\n            props.toggle()\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            showMessage(t(\"ErrorSaveMessage\"), true);\r\n          }\r\n\r\n          props.successSaved()\r\n            props.toggle()\r\n            \r\n        }).catch(err => {\r\n            showMessage(err.message, true);\r\n        });\r\n  }\r\n\r\n\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{props.t(\"NewLog\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <AvForm id=\"frmNewLog\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <div className=\"modal-body\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"txtComment\">{t(\"Comment\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"txtComment\"\r\n                  type=\"textarea\"\r\n                  rows={7}\r\n                  validate={{\r\n                    required: { value: true, errorMessage: t(\"Required Field\") }\r\n                  }}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { props.toggle() }}>\r\n            <i className=\"mdi mdi-cancel mid-12px\"></i> {props.t(\"Cancel\")}\r\n          </Button>\r\n          <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }} >\r\n            <i className=\"mdi mdi-content-save  mid-12px\"></i> {props.t(\"Save\")}\r\n          </Button>\r\n        </div>\r\n      </AvForm>\r\n\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalBitacora.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,  \r\n  successSaved: PropTypes.func,\r\n  logProcessModel: PropTypes.any, //LogProcessModel\r\n};\r\n\r\nexport default (withTranslation()(ModalBitacora));\r\n"]},"metadata":{},"sourceType":"module"}