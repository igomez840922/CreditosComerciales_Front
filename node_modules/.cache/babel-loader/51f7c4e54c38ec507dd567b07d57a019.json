{"ast":null,"code":"import axios from \"axios\";\nimport * as url from \"../helpers/url_helper\";\nimport * as opt from \"../helpers/options_helper\";\nimport qs from 'qs';\nimport LocalStorageHelper from \"../helpers/LocalStorageHelper\"; //const usr = \"admin\"\n//const psw = \"BanescoBPM2021.\"\n\nconst localStorageHelper = new LocalStorageHelper(); //apply base url for axios\n\nconst API_URL = \"\";\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosApi.interceptors.request.use(config => {\n  var _ref, _credentials$usr;\n\n  var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n  console.log(\"mycredentials\", credentials);\n  config.headers[\"Authorization\"] = \"Basic \" + btoa((_ref = (_credentials$usr = credentials === null || credentials === void 0 ? void 0 : credentials.usr) !== null && _credentials$usr !== void 0 ? _credentials$usr : \"\" + \":\" + (credentials === null || credentials === void 0 ? void 0 : credentials.psw)) !== null && _ref !== void 0 ? _ref : \"\");\n  return config;\n}, error => {\n  console.log(\"request error: \", error);\n  return Promise.reject(error);\n});\nexport default class ApiServiceCore {\n  async get(url, config = {}) {\n    return await axiosApi.get(url, { ...config\n    }).then(response => response.data);\n  }\n\n  async post(url, data, config = {}) {\n    return axiosApi.post(url, { ...data\n    }, { ...config\n    }).then(response => response.data);\n  }\n\n  async put(url, data, config = {}) {\n    return axiosApi.put(url, { ...data\n    }, { ...config\n    }).then(response => response.data);\n  }\n\n  async del(url, data, config = {}) {\n    return await axiosApi.delete(url, {\n      data: data\n    }, { ...config\n    }).then(response => response.data);\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/ApiServiceBpm.js"],"names":["axios","url","opt","qs","LocalStorageHelper","localStorageHelper","API_URL","axiosApi","create","baseURL","headers","interceptors","request","use","config","credentials","get","VARNAME_USRCREDENTIAL","console","log","btoa","usr","psw","error","Promise","reject","ApiServiceCore","then","response","data","post","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,2BAArB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,kBAAP,MAA+B,+BAA/B,C,CAEA;AACA;;AAEI,MAAMC,kBAAkB,GAAG,IAAID,kBAAJ,EAA3B,C,CACA;;AACA,MAAME,OAAO,GAAG,EAAhB;AAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH,OADmB;AAE5BI,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFmB,CAAb,CAAjB;AAOAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACGC,MAAD,IAAY;AAAA;;AACV,MAAIC,WAAW,GAAGV,kBAAkB,CAACW,GAAnB,CAAuBd,GAAG,CAACe,qBAA3B,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BJ,WAA5B;AACAD,EAAAA,MAAM,CAACJ,OAAP,CAAe,eAAf,IAAkC,WAAWU,IAAI,6BAACL,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEM,GAAd,+DAAmB,KAAK,GAAL,IAAWN,WAAX,aAAWA,WAAX,uBAAWA,WAAW,CAAEO,GAAxB,CAAnB,uCAAgD,EAAhD,CAAjD;AACA,SAAOR,MAAP;AACD,CANH,EAOGS,KAAD,IAAW;AACTL,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BI,KAA/B;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH;AAaJ,eAAe,MAAMG,cAAN,CAAqB;AAEvB,QAAHV,GAAG,CAACf,GAAD,EAAMa,MAAM,GAAG,EAAf,EAAmB;AAC1B,WAAO,MAAMP,QAAQ,CACpBS,GADY,CACRf,GADQ,EACH,EAAE,GAAGa;AAAL,KADG,EAEZa,IAFY,CAEPC,QAAQ,IAAIA,QAAQ,CAACC,IAFd,CAAb;AAGD;;AAES,QAAJC,IAAI,CAAC7B,GAAD,EAAM4B,IAAN,EAAWf,MAAM,GAAG,EAApB,EAAwB;AAChC,WAAOP,QAAQ,CACZuB,IADI,CACC7B,GADD,EACM,EAAE,GAAG4B;AAAL,KADN,EACkB,EAAE,GAAGf;AAAL,KADlB,EAEJa,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAFtB,CAAP;AAGD;;AAEQ,QAAHE,GAAG,CAAC9B,GAAD,EAAM4B,IAAN,EAAYf,MAAM,GAAG,EAArB,EAAyB;AAChC,WAAOP,QAAQ,CACZwB,GADI,CACA9B,GADA,EACK,EAAE,GAAG4B;AAAL,KADL,EACkB,EAAE,GAAGf;AAAL,KADlB,EAEJa,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAFtB,CAAP;AAGD;;AAEQ,QAAHG,GAAG,CAAC/B,GAAD,EAAK4B,IAAL,EAAWf,MAAM,GAAG,EAApB,EAAwB;AAC/B,WAAO,MAAMP,QAAQ,CAClB0B,MADU,CACHhC,GADG,EACC;AAAE4B,MAAAA,IAAI,EAAEA;AAAR,KADD,EACgB,EAAE,GAAGf;AAAL,KADhB,EAEVa,IAFU,CAELC,QAAQ,IAAIA,QAAQ,CAACC,IAFhB,CAAb;AAGD;;AAxB+B","sourcesContent":["import axios from \"axios\"\r\nimport * as url from \"../helpers/url_helper\"\r\nimport * as opt from \"../helpers/options_helper\"\r\nimport qs from 'qs';\r\n\r\nimport LocalStorageHelper from \"../helpers/LocalStorageHelper\";\r\n\r\n//const usr = \"admin\"\r\n//const psw = \"BanescoBPM2021.\"\r\n    \r\n    const localStorageHelper = new LocalStorageHelper();\r\n    //apply base url for axios\r\n    const API_URL = \"\"\r\n    \r\n    const axiosApi = axios.create({\r\n      baseURL: API_URL,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    \r\n    axiosApi.interceptors.request.use(\r\n      (config) => {  \r\n        var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);  \r\n        console.log(\"mycredentials\",credentials);\r\n        config.headers[\"Authorization\"] = \"Basic \" + btoa(credentials?.usr??\"\" + \":\" + credentials?.psw??\"\");\r\n        return config;\r\n      },\r\n      (error) => {\r\n        console.log(\"request error: \", error)\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\nexport default class ApiServiceCore {\r\n\r\n    async get(url, config = {}) {\r\n      return await axiosApi\r\n      .get(url, { ...config })\r\n      .then(response => response.data)\r\n    }\r\n\r\n    async post(url, data,config = {}) {\r\n      return axiosApi\r\n        .post(url, { ...data },{ ...config })\r\n        .then(response => response.data)\r\n    }\r\n\r\n    async put(url, data, config = {}) {\r\n      return axiosApi\r\n        .put(url, { ...data }, { ...config })\r\n        .then(response => response.data)\r\n    }\r\n\r\n    async del(url,data, config = {}) {\r\n      return await axiosApi\r\n        .delete(url,{ data: data}, { ...config })\r\n        .then(response => response.data)\r\n    }\r\n}\r\n  \r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module"}