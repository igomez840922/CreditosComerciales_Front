{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\SegurosActualesEmpresa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalSegurosActualesEmpresa from \"./ModalSegurosActualesEmpresa\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport moment from \"moment\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataReciprocity = [{\n  id: 1,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 2,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 3,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 4,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}];\nconst SegurosActualesEmpresa = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                        Variables de estados para los mensajes de alerta                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataLocation, setData] = useState(location.data);\n  const [botonValidation, setbotonValidation] = useState(true);\n  const [dataSeguros, setdataSeguros] = useState({\n    \"transactId\": 0,\n    \"company\": \"\",\n    \"insuranceType\": {\n      \"code\": \"\",\n      \"name\": \"\"\n    },\n    \"amount\": 0,\n    \"dueDate\": \"\"\n  });\n  const [tipo, settipo] = useState(\"\");\n  const [formValid, setFormValid] = useState(false);\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\n  const [locationData, setLocationData] = useState(null);\n  const history = useHistory();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmProveedores');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  const [showModalModalSegurosActualesEmpresa, setShowModalModalSegurosActualesEmpresa] = useState(false);\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    if (props.activeTab == 20) {\n      initializeData(dataSession);\n    }\n  }, [props.activeTab == 20]);\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  function initializeData(dataLocation) {\n    const api = new BackendServices(); // consultarSegurosEmpresaIGR\n\n    api.consultInsuranceCompanyIGR(dataLocation.transactionId).then(resp => {\n      if (resp != undefined) {\n        setdataReciprocityRows(resp.map((data, index) => data.status ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.insuranceType.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: currencyData.format(data.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(data.dueDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateDataSegure(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 125\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteData(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 119\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : null));\n      } else {\n        setdataReciprocityRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, 4387, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  function updateDataSegure(data) {\n    settipo(\"editar\");\n    setdataSeguros(data);\n    setbotonValidation(true);\n    abrirModal();\n  }\n\n  function dataManagament(data, tipo) {\n    var _data$amount;\n\n    console.log(data);\n    const api = new BackendServices();\n    data.transactId = locationData.transactionId;\n    data.amount = Number(currencyData.getRealValue((_data$amount = data === null || data === void 0 ? void 0 : data.amount) !== null && _data$amount !== void 0 ? _data$amount : 0));\n\n    if (tipo == \"guardar\") {\n      // nuevoSegurosEmpresaIGR\n      api.newInsuranceCompanyIGR(data).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      // actualizarSegurosEmpresaIGR\n      api.updateInsuranceCompanyIGR(data).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          initializeData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  }\n\n  function deleteData(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModalSegurosActualesEmpresa() {\n    setShowModalModalSegurosActualesEmpresa(!showModalModalSegurosActualesEmpresa);\n    removeBodyCss();\n  }\n\n  function cerrarModal() {\n    setShowModalModalSegurosActualesEmpresa(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModalModalSegurosActualesEmpresa(true);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"CurrentCompanyInsurance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: \"float-end\",\n            onClick: () => {\n              settipo(\"guardar\");\n              setbotonValidation(true);\n              setdataSeguros({\n                \"transactId\": 0,\n                \"company\": \"\",\n                \"insuranceType\": {\n                  \"code\": \"\",\n                  \"name\": \"\"\n                },\n                \"amount\": 0,\n                \"dueDate\": \"\"\n              });\n              abrirModal();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          style: {\n            \"overflowX\": \"scroll\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mt-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"InsuranceCompany\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"InsuranceType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Amount\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Expiration\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataReciprocityRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalSegurosActualesEmpresa, {\n      dataSeguros: dataSeguros,\n      dataManagament: dataManagament,\n      tipo: tipo,\n      botones: botonValidation,\n      isOpen: showModalModalSegurosActualesEmpresa,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      confirmButtonText: t(\"Confirm\"),\n      cancelButtonText: t(\"Cancel\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData(locationData);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarSegurosEmpresaIGR\n\n        apiBack.deleteInsuranceCompanyIGR({\n          transactId: locationData.transactionId,\n          InsuranceId: dataDelete.insuranceId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            initializeData(locationData);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}, \"QXrh3BdwyVUl5vDVmABp+TCzg2U=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = SegurosActualesEmpresa;\nexport default SegurosActualesEmpresa;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SegurosActualesEmpresa$React.forwardRef\");\n$RefreshReg$(_c2, \"SegurosActualesEmpresa\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/SegurosActualesEmpresa.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalSegurosActualesEmpresa","BackendServices","SweetAlert","moment","url","Currency","dataReciprocity","id","insuranceCompany","insuranceType","amount","expiration","SegurosActualesEmpresa","forwardRef","props","ref","currencyData","t","i18n","location","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","confirm_alert","setconfirm_alert","dataDelete","setDataDelete","dataLocation","setData","data","botonValidation","setbotonValidation","dataSeguros","setdataSeguros","tipo","settipo","formValid","setFormValid","dataReciprocityRows","setdataReciprocityRows","locationData","setLocationData","history","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","showModalModalSegurosActualesEmpresa","setShowModalModalSegurosActualesEmpresa","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","activeTab","initializeData","formatDate","date","format","api","consultInsuranceCompanyIGR","then","resp","map","index","status","company","code","dueDate","textAlign","updateDataSegure","deleteData","abrirModal","dataManagament","console","log","transactId","Number","getRealValue","newInsuranceCompanyIGR","cerrarModal","catch","err","updateInsuranceCompanyIGR","toggleShowModalSegurosActualesEmpresa","removeBodyCss","body","classList","add","handleSubmit","event","errors","values","preventDefault","apiBack","deleteInsuranceCompanyIGR","InsuranceId","insuranceId","statusCode","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ModalSegurosActualesEmpresa from \"./ModalSegurosActualesEmpresa\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport moment from \"moment\";\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport Currency from \"../../../../../helpers/currency\";\r\n\r\nconst dataReciprocity = [\r\n  { id: 1, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 2, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 3, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 4, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n];\r\nconst SegurosActualesEmpresa = React.forwardRef((props, ref) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                        Variables de estados para los mensajes de alerta                        */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const [dataSeguros, setdataSeguros] = useState({\r\n    \"transactId\": 0,\r\n    \"company\": \"\",\r\n    \"insuranceType\": {\r\n      \"code\": \"\",\r\n      \"name\": \"\"\r\n    },\r\n    \"amount\": 0,\r\n    \"dueDate\": \"\"\r\n  });\r\n  const [tipo, settipo] = useState(\"\");\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  const history = useHistory();\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmProveedores');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n  const [showModalModalSegurosActualesEmpresa, setShowModalModalSegurosActualesEmpresa] = useState(false);\r\n  React.useEffect(() => {\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    if (props.activeTab == 20) {\r\n      initializeData(dataSession);\r\n    }\r\n  }, [props.activeTab == 20]);\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  function initializeData(dataLocation) {\r\n    const api = new BackendServices();\r\n    // consultarSegurosEmpresaIGR\r\n\r\n    api.consultInsuranceCompanyIGR(dataLocation.transactionId).then(resp => {\r\n      if (resp != undefined) {\r\n        setdataReciprocityRows(resp.map((data, index) => (\r\n          data.status ?\r\n            <tr key={index}>\r\n              <td>{data.company}</td>\r\n              <td>{data.insuranceType.code}</td>\r\n              <td>{currencyData.format(data.amount)}</td>\r\n              <td>{formatDate(data.dueDate)}</td>\r\n              <td style={{ textAlign: \"right\" }}>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { updateDataSegure(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { deleteData(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n              </td>\r\n            </tr> : null)\r\n        ));\r\n      } else {\r\n        setdataReciprocityRows(\r\n          <tr key={4387}>\r\n            <td colSpan=\"7\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    });\r\n  }\r\n  function updateDataSegure(data) {\r\n    settipo(\"editar\")\r\n    setdataSeguros(data)\r\n    setbotonValidation(true);\r\n    abrirModal()\r\n  }\r\n  function dataManagament(data, tipo) {\r\n    console.log(data);\r\n    const api = new BackendServices()\r\n    data.transactId = locationData.transactionId;\r\n    data.amount = Number(currencyData.getRealValue(data?.amount ?? 0))\r\n    if (tipo == \"guardar\") {\r\n      // nuevoSegurosEmpresaIGR\r\n      api.newInsuranceCompanyIGR(data).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      // actualizarSegurosEmpresaIGR\r\n      api.updateInsuranceCompanyIGR(data).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          initializeData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  function deleteData(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModalSegurosActualesEmpresa() {\r\n    setShowModalModalSegurosActualesEmpresa(!showModalModalSegurosActualesEmpresa);\r\n    removeBodyCss()\r\n  }\r\n  function cerrarModal() {\r\n    setShowModalModalSegurosActualesEmpresa(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModalModalSegurosActualesEmpresa(true);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"CurrentCompanyInsurance\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Link className=\"float-end\" onClick={() => {\r\n              settipo(\"guardar\");\r\n              setbotonValidation(true); setdataSeguros({\r\n                \"transactId\": 0,\r\n                \"company\": \"\",\r\n                \"insuranceType\": {\r\n                  \"code\": \"\",\r\n                  \"name\": \"\"\r\n                },\r\n                \"amount\": 0,\r\n                \"dueDate\": \"\"\r\n              }); abrirModal();\r\n            }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n          </Col>\r\n          <Col md=\"12\" style={{ \"overflowX\": \"scroll\" }}>\r\n            <Table className=\"table mt-1\" >\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"InsuranceCompany\")}</th>\r\n                  <th>{t(\"InsuranceType\")}</th>\r\n                  <th>{t(\"Amount\")}</th>\r\n                  <th>{t(\"Expiration\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataReciprocityRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      <ModalSegurosActualesEmpresa dataSeguros={dataSeguros} dataManagament={dataManagament} tipo={tipo} botones={botonValidation} isOpen={showModalModalSegurosActualesEmpresa} toggle={() => { cerrarModal() }} />\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          confirmButtonText= {t(\"Confirm\")}\r\n          cancelButtonText= {t(\"Cancel\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData(locationData);\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarSegurosEmpresaIGR\r\n            apiBack.deleteInsuranceCompanyIGR({ transactId: locationData.transactionId, InsuranceId: dataDelete.insuranceId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                initializeData(locationData);\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n});\r\nexport default SegurosActualesEmpresa;\r\n"]},"metadata":{},"sourceType":"module"}