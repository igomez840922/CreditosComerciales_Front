{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\MoviemientosCuentas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { Row, Col, Button, Label, Table, Card, CardBody } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport ModalMovimientoCuenta from \"./ModalMovimientoCuentas\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport AccountMovementsHistory from \"../../../../../components/Common/AccountMovementsHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviemientosCuentas = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [formValid, setFormValid] = useState(false);\n  const [dataReturn, setDataReturn] = useState(props.dataMoviemientosCuentas);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [tipo, settipo] = useState(\"\");\n  const [botonValidation, setbotonValidation] = useState(false);\n  const [dataLocation, setData] = useState(location.data);\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [dataMovimientos, setdataMovimientos] = useState(null);\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataAcciones, setdataAcciones] = useState({\n    trasactId: null,\n    year: null,\n    month: null,\n    deposits: null,\n    averageBalance: null,\n    observations: null\n  });\n  const [locationData, setLocationData] = useState(null);\n  const history = useHistory();\n  const [datosUsuario, setdatosUsuario] = useState(null);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmMovimientoCuentas');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    } // Read Api Service data  \n\n\n    loadInitialData(dataSession);\n  }, [props.activeTab == 15]);\n  const api = new BackendServices();\n\n  function loadInitialData(dataLocation) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*            Cargamos la lista de accionistas pasandole como parametro el transactionId           */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    // consultarMovimientosCuentasIGR\n    api.consultMovementsAccountsIGR(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataMovimientos(resp.map((data, index) => data.status ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.deposits\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.averageBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.observations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                updateDataAccount(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                deleteDataAccount(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : null));\n      } else {\n        setdataMovimientos( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"6\",\n            style: {\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, 4578, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this));\n      }\n    });\n    api.consultPrincipalDebtor(dataLocation.transactionId).then(resp => {\n      setdatosUsuario(resp);\n    });\n  }\n\n  React.useEffect(() => {\n    setDataReturn(props.dataMoviemientosCuentas);\n    dataReturn.dataTableMovimientoCuentas = [];\n    setDataReturn(dataReturn);\n  }, [props.activeTab == 15]); // Form Submission\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setFormValid(true);\n  }\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function updateDataAccount(data) {\n    setdataAcciones(data);\n    settipo(\"editar\");\n    setbotonValidation(true);\n    abrirModal();\n  }\n\n  function deleteDataAccount(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function cerrarModal() {\n    setShowModelAttachment(false);\n    removeBodyCss();\n  }\n\n  function abrirModal() {\n    setShowModelAttachment(true);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function dataManagament(values, tipo) {\n    values.trasactId = Number(locationData.transactionId);\n\n    if (tipo == \"guardar\") {\n      // nuevoMovimientosCuentasIGR\n      api.newMovementsAccountsIGR(values).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          loadInitialData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      // actualizarMovimientosCuentasIGR\n      api.updateMovementsAccountsIGR(values).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          loadInitialData(locationData);\n          cerrarModal();\n        } else {\n          cerrarModal();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [datosUsuario ? /*#__PURE__*/_jsxDEV(AccountMovementsHistory, {\n      partyId: datosUsuario.customerNumberT24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }, this) : null, /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-sub-title\",\n        children: t(\"ActualFacilityList\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalMovimientoCuenta, {\n      tipo: tipo,\n      dataManagament: dataManagament,\n      botones: botonValidation,\n      dataAcciones: dataAcciones,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        cerrarModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        loadInitialData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        loadInitialData(locationData);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices(); // eliminarMovimientosCuentasIGR\n\n        apiBack.deleteMovementsAccountsIGR({\n          transactId: dataDelete.trasactId,\n          movementId: dataDelete.movementId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            loadInitialData(locationData);\n          }\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n}, \"UNhOLMZQYWbLtjOhat+fEBWILUk=\", false, function () {\n  return [useTranslation, useLocation, useHistory, React.useImperativeHandle];\n}));\n_c2 = MoviemientosCuentas;\nMoviemientosCuentas.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default MoviemientosCuentas;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MoviemientosCuentas$React.forwardRef\");\n$RefreshReg$(_c2, \"MoviemientosCuentas\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/MoviemientosCuentas.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","useHistory","Row","Col","Button","Label","Table","Card","CardBody","AvForm","AvField","ModalMovimientoCuenta","BackendServices","SweetAlert","url","AccountMovementsHistory","MoviemientosCuentas","forwardRef","props","ref","t","i18n","location","formValid","setFormValid","dataReturn","setDataReturn","dataMoviemientosCuentas","showModelAttachment","setShowModelAttachment","tipo","settipo","botonValidation","setbotonValidation","dataLocation","setData","data","accionistasJSON","setAccionistasJson","jsonAccionistas","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","dataMovimientos","setdataMovimientos","info_dlg","setinfo_dlg","info_msg","setinfo_msg","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataAcciones","setdataAcciones","trasactId","year","month","deposits","averageBalance","observations","locationData","setLocationData","history","datosUsuario","setdatosUsuario","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","dataSession","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadInitialData","activeTab","api","consultMovementsAccountsIGR","then","resp","map","index","status","updateDataAccount","deleteDataAccount","textAlign","consultPrincipalDebtor","dataTableMovimientoCuentas","handleSubmit","event","errors","values","preventDefault","toggleShowModelAttachment","removeBodyCss","abrirModal","cerrarModal","body","classList","add","dataManagament","Number","newMovementsAccountsIGR","catch","err","updateMovementsAccountsIGR","customerNumberT24","apiBack","deleteMovementsAccountsIGR","transactId","movementId","statusCode","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Card,CardBody\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport ModalMovimientoCuenta from \"./ModalMovimientoCuentas\";\r\nimport { BackendServices } from \"../../../../../services\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\n\r\nimport AccountMovementsHistory from \"../../../../../components/Common/AccountMovementsHistory\";\r\n\r\nconst MoviemientosCuentas = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataReturn, setDataReturn] = useState(props.dataMoviemientosCuentas);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [botonValidation, setbotonValidation] = useState(false);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [dataMovimientos, setdataMovimientos] = useState(null);\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataAcciones, setdataAcciones] = useState({\r\n    trasactId: null,\r\n    year: null,\r\n    month: null,\r\n    deposits: null,\r\n    averageBalance: null,\r\n    observations: null\r\n  });\r\n\r\n  const [locationData, setLocationData] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [datosUsuario, setdatosUsuario] = useState(null);\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmMovimientoCuentas');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n\r\n    // Read Api Service data  \r\n    loadInitialData(dataSession);\r\n  }, [props.activeTab == 15]);\r\n  \r\n  const api = new BackendServices()\r\n  \r\n  function loadInitialData(dataLocation) {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*            Cargamos la lista de accionistas pasandole como parametro el transactionId           */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    // consultarMovimientosCuentasIGR\r\n    api.consultMovementsAccountsIGR(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataMovimientos(resp.map((data, index) => (\r\n          data.status ?\r\n            <tr key={index}>\r\n              <td>{data.year}</td>\r\n              <td>{data.month}</td>\r\n              <td>{data.deposits}</td>\r\n              <td>{data.averageBalance}</td>\r\n              <td>{data.observations}</td>\r\n              <td>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { updateDataAccount(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n                <Button type=\"button\" color=\"link\" onClick={(resp) => { deleteDataAccount(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n              </td>\r\n            </tr> : null)\r\n        ));\r\n      } else {\r\n        setdataMovimientos(\r\n          <tr key={4578}>\r\n            <td colSpan=\"6\" style={{ textAlign: 'center' }}></td>\r\n          </tr>);\r\n      }\r\n    });\r\n\r\n    api.consultPrincipalDebtor(dataLocation.transactionId).then(resp => {\r\n      setdatosUsuario(resp)\r\n    })\r\n    \r\n\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    setDataReturn(props.dataMoviemientosCuentas)\r\n    dataReturn.dataTableMovimientoCuentas = []\r\n    setDataReturn(dataReturn);\r\n  }, [props.activeTab == 15]);\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setFormValid(true)\r\n  }\r\n  function toggleShowModelAttachment() {\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function updateDataAccount(data) {\r\n    setdataAcciones(data)\r\n    settipo(\"editar\");\r\n    setbotonValidation(true);\r\n    abrirModal()\r\n  }\r\n  function deleteDataAccount(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true)\r\n\r\n  }\r\n  function cerrarModal() {\r\n    setShowModelAttachment(false);\r\n    removeBodyCss()\r\n  }\r\n  function abrirModal() {\r\n    setShowModelAttachment(true);\r\n    removeBodyCss()\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  function dataManagament(values, tipo) {\r\n    values.trasactId = Number(locationData.transactionId);\r\n    if (tipo == \"guardar\") {\r\n      // nuevoMovimientosCuentasIGR\r\n      api.newMovementsAccountsIGR(values).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      });\r\n    } else {\r\n      // actualizarMovimientosCuentasIGR\r\n      api.updateMovementsAccountsIGR(values).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          loadInitialData(locationData);\r\n          cerrarModal();\r\n        } else {\r\n          cerrarModal();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n\r\n              {datosUsuario ?\r\n              <AccountMovementsHistory  partyId={datosUsuario.customerNumberT24}/>\r\n              : null}              \r\n\r\n      <Card>\r\n              <h5 className=\"card-sub-title\">{t(\"ActualFacilityList\")}</h5>\r\n              <CardBody>\r\n\r\n              </CardBody>\r\n      </Card>\r\n      <ModalMovimientoCuenta tipo={tipo} dataManagament={dataManagament} botones={botonValidation} dataAcciones={dataAcciones} isOpen={showModelAttachment} toggle={() => { cerrarModal() }} />\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            loadInitialData(locationData);\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            loadInitialData(locationData);\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            // eliminarMovimientosCuentasIGR\r\n            apiBack.deleteMovementsAccountsIGR({ transactId: dataDelete.trasactId, movementId: dataDelete.movementId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                loadInitialData(locationData);\r\n              }\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n});\r\nMoviemientosCuentas.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default MoviemientosCuentas;\r\n"]},"metadata":{},"sourceType":"module"}