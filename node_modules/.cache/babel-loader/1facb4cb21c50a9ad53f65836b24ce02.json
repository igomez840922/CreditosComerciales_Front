{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalEmpresasRelacionadas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { OnlyNumber } from \"../../../../../helpers/commons\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalEmpresasRelacionadas = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoRelacion, setcampoRequeridoRelacion] = useState(false);\n  const [relacion, setrelacion] = useState(null);\n  const [relacionSelect, setrelacionSelect] = useState(undefined);\n  const relacionData = [{\n    label: \"N/A\",\n    value: \"N/A\"\n  }, {\n    label: \"Cliente\",\n    value: \"Cliente\"\n  }, {\n    label: \"Proveedor\",\n    value: \"Proveedor\"\n  }, {\n    label: \"Cliente-Proveedor\",\n    value: \"Cliente-Proveedor\"\n  }];\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setrelacionSelect(undefined);\n\n    try {\n      if (relacionData.length > 0 && props.jsonEmpresaRelacionada.relationship !== null) {\n        defaultVal = relacionData.find(x => x.value.toUpperCase() === props.jsonEmpresaRelacionada.relationship.toUpperCase());\n\n        if (defaultVal !== undefined) {\n          setrelacionSelect(defaultVal);\n        } else {\n          defaultVal = relacionData.find(x => x.value.toUpperCase() === props.jsonEmpresaRelacionada.relationship.toUpperCase());\n\n          if (defaultVal !== undefined) {\n            setrelacionSelect(defaultVal);\n          }\n        }\n      } else {\n        setrelacionSelect(relacionData[0]);\n      }\n    } catch (err) {}\n  }, [props.isOpen]); // Submitimos formulario para busqueda de clientes\n\n  function handleSubmit(event, errors, values) {\n    // if (relacion == null) {\n    //   setcampoRequeridoRelacion(true);\n    //   return;\n    // } else {\n    //   setcampoRequeridoRelacion(false);\n    // }\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.relationship = relacionSelect.label;\n\n    if (props.tipo == \"guardar\") {\n      props.addRelationBusinnes(values, props.tipo);\n    } else {\n      values.companyId = Number(props.jsonEmpresaRelacionada.companyId);\n      props.addRelationBusinnes(values, props.tipo);\n    }\n  }\n\n  function change(e) {\n    setrelacion(e.value);\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla == 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"md\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title mt-0\",\n          children: t(\"RelatedCompanies\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.toggle,\n          \"data-dismiss\": \"modal\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-hidden\": \"true\",\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"FullName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"name\",\n                id: \"name\",\n                value: props.jsonEmpresaRelacionada.name,\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"activity\",\n                children: t(\"Activity\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"activity\",\n                id: \"activity\",\n                value: props.jsonEmpresaRelacionada.activity // errorMessage={t(\"Required Field\")}\n                // validate={{ required: { value: true } }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"sectorExperience\",\n                children: t(\"YearsInTheSector\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                type: \"number\",\n                name: \"sectorExperience\",\n                min: \"1\",\n                onKeyPress: e => {\n                  OnlyNumber(e);\n                },\n                id: \"sectorExperience\",\n                value: props.jsonEmpresaRelacionada.sectorExperience // errorMessage={t(\"Required Field\")}\n                // validate={{ required: { value: true } }}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"relationship\",\n                children: t(\"Relation\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setrelacionSelect(relacionData.find(x => x.value === e.value));\n                  change(e);\n                },\n                options: relacionData,\n                id: \"relationship\",\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"toselect\"),\n                value: relacionSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"danger\",\n          style: {\n            margin: '5px 0px'\n          },\n          type: \"button\",\n          onClick: props.toggle,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi mdi-cancel mid-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), \" \", t(\"Cancel\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n          id: \"btnSearch\",\n          color: \"success\",\n          type: \"submit\",\n          style: {\n            margin: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"mdi mdi-content-save mdi-12px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalEmpresasRelacionadas, \"HtQTuImVHzhl6F59zJxqfmGAJl4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalEmpresasRelacionadas;\nModalEmpresasRelacionadas.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalEmpresasRelacionadas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEmpresasRelacionadas\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalEmpresasRelacionadas.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Modal","Card","CardBody","CardFooter","Select","OnlyNumber","AvForm","AvField","AvGroup","ModalEmpresasRelacionadas","props","t","i18n","campoRequeridoRelacion","setcampoRequeridoRelacion","relacion","setrelacion","relacionSelect","setrelacionSelect","undefined","relacionData","label","value","useEffect","defaultVal","length","jsonEmpresaRelacionada","relationship","find","x","toUpperCase","err","isOpen","handleSubmit","event","errors","values","preventDefault","tipo","addRelationBusinnes","companyId","Number","change","e","check","tecla","document","all","keyCode","which","toggle","name","required","activity","sectorExperience","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\nimport Select from \"react-select\";\r\nimport { OnlyNumber } from \"../../../../../helpers/commons\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nconst ModalEmpresasRelacionadas = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoRelacion, setcampoRequeridoRelacion] = useState(false);\r\n  const [relacion, setrelacion] = useState(null);\r\n  const [relacionSelect, setrelacionSelect] = useState(undefined);\r\n  const relacionData = [{ label: \"N/A\", value: \"N/A\" }, { label: \"Cliente\", value: \"Cliente\" }, { label: \"Proveedor\", value: \"Proveedor\" }, { label: \"Cliente-Proveedor\", value: \"Cliente-Proveedor\" }]\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setrelacionSelect(undefined)\r\n    try {\r\n      if (relacionData.length > 0 && props.jsonEmpresaRelacionada.relationship !== null) {\r\n        defaultVal = relacionData.find(x => (x.value).toUpperCase() === (props.jsonEmpresaRelacionada.relationship).toUpperCase());\r\n        if (defaultVal !== undefined) {\r\n          setrelacionSelect(defaultVal);\r\n        } else {\r\n          defaultVal = relacionData.find(x => (x.value).toUpperCase() === (props.jsonEmpresaRelacionada.relationship).toUpperCase());\r\n          if (defaultVal !== undefined) {\r\n            setrelacionSelect(defaultVal);\r\n          }\r\n        }\r\n      } else {\r\n        setrelacionSelect(relacionData[0])\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.isOpen]);\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n    // if (relacion == null) {\r\n    //   setcampoRequeridoRelacion(true);\r\n    //   return;\r\n    // } else {\r\n    //   setcampoRequeridoRelacion(false);\r\n    // }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.relationship = relacionSelect.label;\r\n    if (props.tipo == \"guardar\") {\r\n      props.addRelationBusinnes(values, props.tipo);\r\n    } else {\r\n      values.companyId = Number(props.jsonEmpresaRelacionada.companyId);\r\n      props.addRelationBusinnes(values, props.tipo);\r\n    }\r\n  }\r\n  function change(e) {\r\n    setrelacion(e.value)\r\n  }\r\n\r\n  function check(e) {\r\n    let tecla = (document.all) ? e.keyCode : e.which;\r\n    //Tecla de retroceso para borrar, siempre la permite\r\n    if (tecla == 45) {\r\n      e.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      size=\"md\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title mt-0\">{t(\"RelatedCompanies\")}</h5>\r\n          <button\r\n            type=\"button\"\r\n            onClick={props.toggle}\r\n            data-dismiss=\"modal\"\r\n            className=\"close\"\r\n            aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n\r\n\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"name\">{t(\"FullName\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  value={props.jsonEmpresaRelacionada.name}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"activity\">{t(\"Activity\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"activity\"\r\n                  id=\"activity\"\r\n                  value={props.jsonEmpresaRelacionada.activity}\r\n                // errorMessage={t(\"Required Field\")}\r\n                // validate={{ required: { value: true } }}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"sectorExperience\">{t(\"YearsInTheSector\")}</Label>\r\n                <AvField\r\n\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"sectorExperience\"\r\n                  min=\"1\"\r\n                  onKeyPress={(e) => { OnlyNumber(e) }}\r\n                  id=\"sectorExperience\"\r\n                  value={props.jsonEmpresaRelacionada.sectorExperience}\r\n                // errorMessage={t(\"Required Field\")}\r\n                // validate={{ required: { value: true } }}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"relationship\">{t(\"Relation\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => { setrelacionSelect(relacionData.find(x => x.value === e.value)); change(e); }}\r\n                  options={relacionData}\r\n                  id=\"relationship\"\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"toselect\")}\r\n                  value={relacionSelect}\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={props.toggle}>\r\n            <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n          </Button>\r\n          {props.botones ?\r\n            <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}>\r\n              <i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n              {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n            </Button>\r\n            : null}\r\n        </div>\r\n      </AvForm>\r\n    </Modal>\r\n  );\r\n};\r\nModalEmpresasRelacionadas.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\n\r\nexport default ModalEmpresasRelacionadas;\r\n"]},"metadata":{},"sourceType":"module"}