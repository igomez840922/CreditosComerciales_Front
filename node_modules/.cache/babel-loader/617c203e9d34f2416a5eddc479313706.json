{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\FormCreditProposal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { PropTypes } from 'prop-types';\nimport { translationHelpers } from '../../helpers';\nimport Select from \"react-select\";\nimport './FormCreditProposal.scss';\nimport { Row, Col, Label } from \"reactstrap\";\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { BackendServices, CoreServices } from \"../../services\";\nimport ServicioPropuestaCredito from \"../../services/PropuestaCredito/PropuestaCredito\";\nimport CreditProposalContext from \"./CreditProposalContext\";\nimport Switch from \"react-switch\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst FormCreditProposal = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [formValid, setFormValid] = useState(false);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\n  const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\n  const [paises, setPais] = useState([]);\n  const [paisesRiesgo, setPaisRiesgo] = useState([]);\n  const [listaRevisionSet, setlistaRevisionSet] = useState(null);\n  const [listaRevision, setlistaRevision] = useState(null);\n  const [datosIGR, setdatosIGR] = useState(null);\n  const [datosAmbientales, setdatosAmbientales] = useState(null);\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\n  const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\n  const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\n  const [relatedPartSwitch, setrelatedPartSwitch] = useState(false); // form control state\n\n  const [transactId, setTransactId] = useState('');\n  const [customerNumber, setCustomerNumber] = useState('');\n  const [revisionType, setRevisionType] = useState('');\n  const [preapproval, setPreapproval] = useState(false);\n  const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\n  const [economicGroup, setEconomicGroup] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [countrySelect, setCountrySelect] = useState(undefined);\n  const [activityCompany, setActivityCompany] = useState('');\n  const [riskClassification, setRiskClassification] = useState('');\n  const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\n  const [relatedPart, setRelatedPart] = useState(false);\n  const [accountExecutive, setAccountExecutive] = useState('');\n  const [approvalLevel, setApprovalLevel] = useState('');\n  const [responsibleUnit, setResponsibleUnit] = useState('');\n  const [countryRisk, setCountryRisk] = useState(null);\n  const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\n  const [requestDate, setRequestDate] = useState('');\n  const [lastRequestDate, setLastRequestDate] = useState('');\n  const [proposedExpirationDate, setProposedExpirationDate] = useState('');\n  const [nextRevisionDate, setNextRevisionDate] = useState('');\n  const [flow, setFlow] = useState('');\n  const [t, c] = translationHelpers('commercial_credit', 'common'); // services\n\n  const context = useContext(CreditProposalContext);\n  const propCredService = new ServicioPropuestaCredito();\n  React.useImperativeHandle(ref, () => ({\n    submit: (validate = true) => {\n      const form = document.getElementById('formCreditProposal');\n\n      if (validate) {\n        if (formValid) {\n          form.requestSubmit();\n          return true;\n        }\n\n        return false;\n      } else {\n        form.requestSubmit();\n        return true;\n      }\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  useEffect(() => {\n    updateDefaults();\n    cargarListaPaises();\n    cargarListaGrupoEconomico();\n    cargarActividadEconomica();\n    cargarListaRevision();\n  }, []); // useEffect(() => {\n  // }, [gruposEconomicos]);\n\n  useEffect(() => {\n    updateDefaults();\n  }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\n\n  function updateDefaults() {\n    // set default values\n    setTransactId(props.values.transactId || context.transactionId);\n    setCustomerNumber(props.values.customerNumber || context.customerId);\n    setRevisionType(props.values.revisionType || 'Bimensual');\n    setPreapproval(props.values.preapproval || false); // setRiskClassification(props.values.riskClassification || '');\n\n    setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\n    setRelatedPart(props.values.relatedPart || false);\n    setAccountExecutive(props.values.accountExecutive || '');\n    setApprovalLevel(props.values.approvalLevel || '');\n    setResponsibleUnit(props.values.responsibleUnit || '');\n    setRequestDate(props.values.requestDate || '');\n    setLastRequestDate(props.values.lastRequestDate || '');\n    setNextRevisionDate(props.values.nextRevisionDate || '');\n    setProposedExpirationDate(props.values.proposedExpirationDate || '');\n    setFlow(props.values.flow || '');\n    cargarDatosGeneralesIGR();\n    setrelatedPartSwitch(props.values.relatedPart);\n    setpreapprovalSwitch(props.values.preapproval);\n\n    try {\n      var defaultVal = null;\n\n      if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\n        defaultVal = listaRevision.find(x => x.value === props.values.revision);\n\n        if (defaultVal !== undefined) {\n          setlistaRevisionSelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\n        defaultVal = paises.find(x => x.value === props.values.country);\n\n        if (defaultVal !== undefined) {\n          setCountrySelect(defaultVal);\n        }\n      }\n\n      if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\n        defaultVal = paises.find(x => x.value === props.values.countryRisk);\n\n        if (defaultVal !== undefined) {\n          setCountryRiskSelect(defaultVal);\n        }\n      }\n    } catch (err) {} // dropdown economic group\n    // if (props.values.economicGroupNumber && gruposEconomicos && gruposEconomicos.length > 0) {\n    //   const selected = gruposEconomicos[0].options.find(p => p.value === props.values.economicGroupNumber);\n    //   if (selected) {\n    //     setEconomicGroup(selected);\n    //   }\n    // }\n    // else {\n    //   setEconomicGroup({ label: t('SelectGroup'), value: '' });\n    // }\n    // drodown country\n    // dropdown countryRisk\n    // if (props.values.countryRisk && paises.length > 0) {\n    //   const selected = paises[0].options.find(p => p.value === props.values.countryRisk);\n    //   if (selected) {\n    //     setCountryRisk(selected);\n    //   }\n    // }\n    // else {\n    //   setCountryRisk({ label: t('Selectacountry'), value: '' });\n    // }\n    // dropdown activityCompany\n\n  }\n\n  function cargarListaPaises() {\n    const api = new CoreServices();\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      } // sort by name\n\n\n      const json = response.Records ? response.Records.map(item => ({\n        label: item[\"Description\"],\n        value: item[\"Code\"]\n      })) : [];\n      const optionGroup1 = [{\n        label: t(\"Selectacountry\"),\n        options: json\n      }];\n      setPais(json);\n      setPaisRiesgo(json);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function cargarActividadEconomica() {\n    const api = new CoreServices();\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"Selectcompanyactivity\"),\n        options: json\n      }];\n      setActividadEmpresa(json);\n    });\n  }\n\n  function cargarListaGrupoEconomico() {\n    const api = new CoreServices();\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"SelectGroup\"),\n        options: json\n      }]; // console.log(optionGroup1);\n\n      setGruposEconomicos(json);\n    });\n  }\n\n  function cargarListaRevision() {\n    const api = new BackendServices();\n    api.retrieveRevisionType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      setlistaRevision(json);\n    });\n  }\n\n  function cargarDatosGeneralesIGR() {\n    const {\n      transactionId\n    } = context;\n    const apiBack = new BackendServices();\n    apiBack.consultGeneralDataIGR(transactionId).then(resp => {\n      setdatosIGR(resp);\n\n      try {\n        var defaultVal = null;\n        seteconomicGroupSelect(undefined);\n\n        if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\n          defaultVal = gruposEconomicos.find(x => x.value === resp.economicGroup.code);\n          console.log(defaultVal);\n\n          if (defaultVal !== undefined) {\n            seteconomicGroupSelect(defaultVal);\n          }\n        } else {\n          seteconomicGroupSelect(gruposEconomicos[0]);\n        }\n\n        setActividadEmpresaSet(resp.economicActivity);\n\n        if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\n          defaultVal = actividadEmpresa.find(x => x.value === resp.economicActivity.code);\n\n          if (defaultVal !== undefined) {\n            setActividadEmpresaSelect(defaultVal);\n          }\n        } else {\n          setActividadEmpresaSelect(actividadEmpresa[0]);\n        }\n      } catch (err) {}\n    }).catch(error => {});\n    apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\n      setdatosAmbientales(resp.environmentalAspectsDTO);\n    }).catch(error => {});\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault(); // if (errors.length > 0) {\n    //   console.log('form is invalid');\n    //   return;\n    // }\n\n    if (event.target.id !== 'formCreditProposal') {\n      return;\n    }\n\n    setFormValid(true); // setLoading(true);\n    // const date = dateFormat(new Date(), \"yyyy-mm-dd\");\n\n    values.minimumProvisionSIB = Number(values.minimumProvisionSIB);\n    const data = Object.assign({\n      country: countrySelect != undefined ? countrySelect.value : '',\n      countryRisk: countryRiskSelect != undefined ? countryRiskSelect.value : '',\n      economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\n      // economicGroupNumber: economicGroup ? economicGroup.value : '',\n      activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.value : '',\n      revision: listaRevisionSet ? listaRevisionSet.value : '',\n      preapproval: preapprovalSwitch,\n      relatedPart: relatedPartSwitch\n    }, values);\n    propCredService.guardarDatosGenerales(context.instanceId, context.requestId, data).then(response => {\n      console.log('datos generales save success', response);\n    }).catch(error => {\n      console.log('error saving datos generales', error);\n    });\n  }\n\n  function handleDropdownChange(name, event) {\n    switch (name) {\n      case 'country':\n        setCountry(event);\n        break;\n\n      case 'countryRisk':\n        setCountryRisk(event);\n        break;\n\n      case 'economicGroupName':\n        setEconomicGroup(event);\n        break;\n\n      case 'activityCompany':\n        setActivityCompany(event);\n        break;\n\n      default: // do nothing\n\n    }\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla === 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(AvForm, {\n    id: \"formCreditProposal\",\n    className: \"needs-validation\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"transactId\",\n            children: t(\"Procedure Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"transactId\",\n            type: \"number\",\n            onKeyPress: e => {\n              return check(e);\n            },\n            min: 0,\n            id: \"transactId\",\n            value: transactId,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"customerNumber\",\n            children: t(\"Customer ID\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"customerNumber\",\n            type: \"number\",\n            onKeyPress: e => {\n              return check(e);\n            },\n            min: 0,\n            readOnly: true,\n            id: \"customerNumber\",\n            value: datosIGR != null ? datosIGR.customerNumberT24 : \"\",\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"revisionType\",\n          children: t(\"Revision Type\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          onChange: e => {\n            setlistaRevisionSelect(listaRevision.find(x => x.value === e.value));\n            setlistaRevisionSet(e);\n          },\n          options: listaRevision,\n          id: \"revision\",\n          classNamePrefix: \"select2-selection\",\n          placeholder: t(\"Select\"),\n          value: listaRevisionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"preapproval\",\n          children: t(\"Pre Approved\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"preapproval\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 30\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 28\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setpreapprovalSwitch(!preapprovalSwitch);\n            },\n            checked: preapprovalSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"economicGroupName\",\n          children: t(\"Economic Group Name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          id: \"economicGroupName\",\n          name: \"economicGroupName\",\n          onChange: e => {\n            seteconomicGroupSelect(gruposEconomicos.find(x => x.value === e.value));\n            handleDropdownChange('economicGroupName', e);\n          },\n          options: gruposEconomicos,\n          classNamePrefix: \"select2-selection\",\n          value: economicGroupSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"economicGroupNumber\",\n            children: t(\"Economic Group Number\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"economicGroupNumber\",\n            type: \"text\",\n            id: \"economicGroupNumber\",\n            value: economicGroupSelect != undefined ? economicGroupSelect.value : '',\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"country\",\n          children: t(\"Country Class\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          id: \"country\",\n          name: \"country\",\n          onChange: e => {\n            setCountrySelect(paises.find(x => x.value === e.value));\n            handleDropdownChange('country', e);\n          },\n          placeholder: t(\"Select\"),\n          options: paises,\n          classNamePrefix: \"select2-selection\",\n          value: countrySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"riskClassification\",\n            children: t(\"Risk Assesment\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"riskClassification\",\n            type: \"text\",\n            readOnly: true,\n            id: \"riskClassification\",\n            value: datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\" // value=\"1\"\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"activityCompany\",\n          children: t(\"Company Activity\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          name: \"activityCompany\",\n          onChange: e => {\n            setActividadEmpresaSelect(actividadEmpresa.find(x => x.value === e.value));\n            setActividadEmpresaSet(e);\n          },\n          placeholder: t(\"Selectcompanyactivity\"),\n          options: actividadEmpresa,\n          classNamePrefix: \"select2-selection\",\n          value: actividadEmpresaSelect,\n          isDisabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"minimumProvisionSIB\",\n            children: t(\"SIB Minimum Provision\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"minimumProvisionSIB\",\n            type: \"text\",\n            id: \"minimumProvisionSIB\",\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              },\n              number: {\n                value: true,\n                errorMessage: c(\"Validation.Numeric\")\n              }\n            },\n            value: minimumProvisionSIB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"relatedPart\",\n          children: t(\"Related Part\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          check: true,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            name: \"relatedPart\",\n            uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 30\n            }, this),\n            checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 28\n            }, this),\n            onColor: \"#007943\",\n            className: \"form-label\",\n            onChange: () => {\n              setrelatedPartSwitch(!relatedPartSwitch);\n            },\n            checked: relatedPartSwitch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"approvalLevel\",\n            children: t(\"Approval Level\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"approvalLevel\",\n            type: \"select\",\n            id: \"approvalLevel\",\n            value: approvalLevel,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Nivel 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Nivel 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Nivel 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"9\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"accountExecutive\",\n            children: t(\"Account Executive\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"accountExecutive\",\n            type: \"text\",\n            id: \"accountExecutive\",\n            value: accountExecutive,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"responsibleUnit\",\n            children: t(\"Responsible Unit\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"responsibleUnit\",\n            type: \"text\",\n            id: \"responsibleUnit\",\n            value: responsibleUnit,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: \"countryRisk\",\n          children: t(\"Country Risk\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          noOptionsMessage: () => \"\",\n          required: true,\n          onChange: e => {\n            setCountryRiskSelect(paises.find(x => x.value === e.value));\n            handleDropdownChange('countryRisk', e);\n          },\n          defaultValue: paisesRiesgo.value,\n          placeholder: t(\"Selectacountry\"),\n          options: paisesRiesgo,\n          classNamePrefix: \"select2-selection\",\n          value: countryRiskSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"requestDate\",\n            children: t(\"Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n            name: \"requestDate\",\n            className: \"form-control d-block\",\n            placeholder: OPTs.FORMAT_DATE_SHOW,\n            options: {\n              dateFormat: OPTs.FORMAT_DATE,\n              //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\n              defaultDate: requestDate !== undefined ? new Date(moment(requestDate, 'YYYY-MM-DD').format()) : new Date()\n            } //onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr,\"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), \"[\", /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"requestDate\",\n            type: \"date\",\n            id: \"requestDate\",\n            value: requestDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"lastRequestDate\",\n            children: t(\"Last Application Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"lastRequestDate\",\n            type: \"date\",\n            id: \"lastRequestDate\",\n            value: lastRequestDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"nextRevisionDate\",\n            children: t(\"Next Revision Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"nextRevisionDate\",\n            type: \"date\",\n            id: \"nextRevisionDate\",\n            value: nextRevisionDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"proposedExpirationDate\",\n            children: t(\"Expiration Date\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"proposedExpirationDate\",\n            type: \"date\",\n            id: \"proposedExpirationDate\",\n            value: proposedExpirationDate,\n            validate: {\n              required: {\n                value: true,\n                errorMessage: c(\"Validation.Required\")\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        children: /*#__PURE__*/_jsxDEV(AvGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"flow\",\n            children: t(\"Flow Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"flow\",\n            type: \"select\",\n            id: \"flow\",\n            value: flow,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"Normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Urgente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 398,\n    columnNumber: 5\n  }, this);\n}, \"cT/WPnW3F/ZgqfVKM9lXZsohAz0=\", false, function () {\n  return [useLocation, React.useImperativeHandle];\n}));\n_c4 = FormCreditProposal;\nFormCreditProposal.propTypes = {\n  values: PropTypes.object\n};\nFormCreditProposal.defaultProps = {\n  values: {}\n};\nexport default FormCreditProposal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"FormCreditProposal$React.forwardRef\");\n$RefreshReg$(_c4, \"FormCreditProposal\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/FormCreditProposal.js"],"names":["React","useState","useEffect","useContext","PropTypes","translationHelpers","Select","Row","Col","Label","AvForm","AvGroup","AvField","AvFeedback","BackendServices","CoreServices","ServicioPropuestaCredito","CreditProposalContext","Switch","useLocation","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","FormCreditProposal","forwardRef","props","ref","location","locationData","setLocationData","data","formValid","setFormValid","gruposEconomicos","setGruposEconomicos","actividadEmpresa","setActividadEmpresa","actividadEmpresaSet","setActividadEmpresaSet","actividadEmpresaSelect","setActividadEmpresaSelect","undefined","paises","setPais","paisesRiesgo","setPaisRiesgo","listaRevisionSet","setlistaRevisionSet","listaRevision","setlistaRevision","datosIGR","setdatosIGR","datosAmbientales","setdatosAmbientales","listaRevisionSelect","setlistaRevisionSelect","listaRevisionRequerido","setlistaRevisionRequerido","preapprovalSwitch","setpreapprovalSwitch","relatedPartSwitch","setrelatedPartSwitch","transactId","setTransactId","customerNumber","setCustomerNumber","revisionType","setRevisionType","preapproval","setPreapproval","economicGroupSelect","seteconomicGroupSelect","economicGroup","setEconomicGroup","country","setCountry","countrySelect","setCountrySelect","activityCompany","setActivityCompany","riskClassification","setRiskClassification","minimumProvisionSIB","setMinimunProvisionSIB","relatedPart","setRelatedPart","accountExecutive","setAccountExecutive","approvalLevel","setApprovalLevel","responsibleUnit","setResponsibleUnit","countryRisk","setCountryRisk","countryRiskSelect","setCountryRiskSelect","requestDate","setRequestDate","lastRequestDate","setLastRequestDate","proposedExpirationDate","setProposedExpirationDate","nextRevisionDate","setNextRevisionDate","flow","setFlow","t","c","context","propCredService","useImperativeHandle","submit","validate","form","document","getElementById","requestSubmit","getFormValidation","updateDefaults","cargarListaPaises","cargarListaGrupoEconomico","cargarActividadEconomica","cargarListaRevision","values","transactionId","customerId","cargarDatosGeneralesIGR","defaultVal","length","revision","find","x","value","err","api","getPaisesCatalogo","then","response","json","Records","map","item","label","optionGroup1","options","catch","console","log","getActividadEconomicaCatalogo","i","push","getGrupoEconomicoCatalogo","retrieveRevisionType","apiBack","consultGeneralDataIGR","resp","code","economicActivity","error","consultEnvironmentalAspectsIGR","environmentalAspectsDTO","handleSubmit","event","errors","preventDefault","target","id","Number","Object","assign","economicGroupName","guardarDatosGenerales","instanceId","requestId","handleDropdownChange","name","check","e","tecla","all","keyCode","which","title","customerNumberT24","required","errorMessage","riskPreClassification","number","OPTs","FORMAT_DATE_SHOW","dateFormat","FORMAT_DATE","defaultDate","Date","moment","format","propTypes","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { PropTypes } from 'prop-types';\r\nimport { translationHelpers } from '../../helpers';\r\nimport Select from \"react-select\";\r\nimport './FormCreditProposal.scss';\r\n\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Label,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport { BackendServices, CoreServices } from \"../../services\";\r\nimport ServicioPropuestaCredito from \"../../services/PropuestaCredito/PropuestaCredito\";\r\nimport CreditProposalContext from \"./CreditProposalContext\";\r\nimport Switch from \"react-switch\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\n\r\nconst FormCreditProposal = React.forwardRef((props, ref) => {\r\n\r\n  const location = useLocation();\r\n  const [locationData, setLocationData] = useState(location.data);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n  const [actividadEmpresaSet, setActividadEmpresaSet] = useState(null);\r\n  const [actividadEmpresaSelect, setActividadEmpresaSelect] = useState(undefined);\r\n  const [paises, setPais] = useState([]);\r\n  const [paisesRiesgo, setPaisRiesgo] = useState([]);\r\n  const [listaRevisionSet, setlistaRevisionSet] = useState(null);\r\n  const [listaRevision, setlistaRevision] = useState(null);\r\n  const [datosIGR, setdatosIGR] = useState(null);\r\n  const [datosAmbientales, setdatosAmbientales] = useState(null);\r\n  const [listaRevisionSelect, setlistaRevisionSelect] = useState(undefined);\r\n  const [listaRevisionRequerido, setlistaRevisionRequerido] = useState(null);\r\n  const [preapprovalSwitch, setpreapprovalSwitch] = useState(false);\r\n  const [relatedPartSwitch, setrelatedPartSwitch] = useState(false);\r\n  // form control state\r\n  const [transactId, setTransactId] = useState('');\r\n  const [customerNumber, setCustomerNumber] = useState('');\r\n  const [revisionType, setRevisionType] = useState('');\r\n  const [preapproval, setPreapproval] = useState(false);\r\n  const [economicGroupSelect, seteconomicGroupSelect] = useState(null);\r\n  const [economicGroup, setEconomicGroup] = useState(null);\r\n  const [country, setCountry] = useState(null);\r\n  const [countrySelect, setCountrySelect] = useState(undefined);\r\n  const [activityCompany, setActivityCompany] = useState('');\r\n  const [riskClassification, setRiskClassification] = useState('');\r\n  const [minimumProvisionSIB, setMinimunProvisionSIB] = useState('');\r\n  const [relatedPart, setRelatedPart] = useState(false);\r\n  const [accountExecutive, setAccountExecutive] = useState('');\r\n  const [approvalLevel, setApprovalLevel] = useState('');\r\n  const [responsibleUnit, setResponsibleUnit] = useState('');\r\n  const [countryRisk, setCountryRisk] = useState(null);\r\n  const [countryRiskSelect, setCountryRiskSelect] = useState(undefined);\r\n  const [requestDate, setRequestDate] = useState('');\r\n  const [lastRequestDate, setLastRequestDate] = useState('');\r\n  const [proposedExpirationDate, setProposedExpirationDate] = useState('');\r\n  const [nextRevisionDate, setNextRevisionDate] = useState('');\r\n  const [flow, setFlow] = useState('');\r\n\r\n\r\n  const [t, c] = translationHelpers('commercial_credit', 'common');\r\n\r\n  // services\r\n  const context = useContext(CreditProposalContext);\r\n  const propCredService = new ServicioPropuestaCredito();\r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    submit: (validate = true) => {\r\n      const form = document.getElementById('formCreditProposal');\r\n      if (validate) {\r\n        if (formValid) {\r\n          form.requestSubmit();\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      else {\r\n        form.requestSubmit();\r\n        return true;\r\n      }\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    updateDefaults();\r\n    cargarListaPaises();\r\n    cargarListaGrupoEconomico();\r\n    cargarActividadEconomica();\r\n    cargarListaRevision();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  // }, [gruposEconomicos]);\r\n\r\n  useEffect(() => {\r\n    updateDefaults();\r\n  }, [props.values, paises, gruposEconomicos, actividadEmpresa]);\r\n\r\n  function updateDefaults() {\r\n    // set default values\r\n    setTransactId(props.values.transactId || context.transactionId);\r\n    setCustomerNumber(props.values.customerNumber || context.customerId);\r\n    setRevisionType(props.values.revisionType || 'Bimensual');\r\n    setPreapproval(props.values.preapproval || false);\r\n    // setRiskClassification(props.values.riskClassification || '');\r\n    setMinimunProvisionSIB(props.values.minimumProvisionSIB || '');\r\n    setRelatedPart(props.values.relatedPart || false);\r\n    setAccountExecutive(props.values.accountExecutive || '');\r\n    setApprovalLevel(props.values.approvalLevel || '');\r\n    setResponsibleUnit(props.values.responsibleUnit || '');\r\n    setRequestDate(props.values.requestDate || '');\r\n    setLastRequestDate(props.values.lastRequestDate || '');\r\n    setNextRevisionDate(props.values.nextRevisionDate || '');\r\n    setProposedExpirationDate(props.values.proposedExpirationDate || '');\r\n    setFlow(props.values.flow || '');\r\n    cargarDatosGeneralesIGR();\r\n    setrelatedPartSwitch(props.values.relatedPart)\r\n    setpreapprovalSwitch(props.values.preapproval)\r\n    try {\r\n      var defaultVal = null;\r\n      if (listaRevision.length > 0 && props.values.revision !== null && listaRevisionSelect === undefined) {\r\n        defaultVal = listaRevision.find(x => x.value === props.values.revision);\r\n        if (defaultVal !== undefined) {\r\n          setlistaRevisionSelect(defaultVal);\r\n        }\r\n      }\r\n      if (paises.length > 0 && props.values.country !== null && countrySelect === undefined) {\r\n        defaultVal = paises.find(x => x.value === props.values.country);\r\n        if (defaultVal !== undefined) {\r\n          setCountrySelect(defaultVal);\r\n        }\r\n      }\r\n      if (paises.length > 0 && props.values.countryRisk !== null && countryRiskSelect === undefined) {\r\n        defaultVal = paises.find(x => x.value === props.values.countryRisk);\r\n        if (defaultVal !== undefined) {\r\n          setCountryRiskSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n    // dropdown economic group\r\n    // if (props.values.economicGroupNumber && gruposEconomicos && gruposEconomicos.length > 0) {\r\n    //   const selected = gruposEconomicos[0].options.find(p => p.value === props.values.economicGroupNumber);\r\n    //   if (selected) {\r\n    //     setEconomicGroup(selected);\r\n    //   }\r\n    // }\r\n    // else {\r\n    //   setEconomicGroup({ label: t('SelectGroup'), value: '' });\r\n    // }\r\n\r\n    // drodown country\r\n\r\n    // dropdown countryRisk\r\n    // if (props.values.countryRisk && paises.length > 0) {\r\n    //   const selected = paises[0].options.find(p => p.value === props.values.countryRisk);\r\n    //   if (selected) {\r\n    //     setCountryRisk(selected);\r\n    //   }\r\n    // }\r\n    // else {\r\n    //   setCountryRisk({ label: t('Selectacountry'), value: '' });\r\n    // }\r\n\r\n    // dropdown activityCompany\r\n\r\n  }\r\n\r\n  function cargarListaPaises() {\r\n    const api = new CoreServices();\r\n    api.getPaisesCatalogo().then(response => {\r\n      if (response === null) { return; }\r\n\r\n      // sort by name\r\n      const json = response.Records ? response.Records.map(item => ({\r\n        label: item[\"Description\"],\r\n        value: item[\"Code\"]\r\n      })) : [];\r\n\r\n      const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectacountry\"),\r\n          options: json,\r\n        }\r\n      ];\r\n      setPais(json);\r\n      setPaisRiesgo(json);\r\n\r\n    }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  function cargarActividadEconomica() {\r\n    const api = new CoreServices();\r\n    api.getActividadEconomicaCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"Selectcompanyactivity\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        setActividadEmpresa(json);\r\n      });\r\n  }\r\n\r\n  function cargarListaGrupoEconomico() {\r\n    const api = new CoreServices();\r\n    api.getGrupoEconomicoCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectGroup\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        // console.log(optionGroup1);\r\n        setGruposEconomicos(json);\r\n      });\r\n  }\r\n\r\n  function cargarListaRevision() {\r\n    const api = new BackendServices();\r\n    api.retrieveRevisionType()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n          json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n        }\r\n        setlistaRevision(json);\r\n      });\r\n  }\r\n\r\n  function cargarDatosGeneralesIGR() {\r\n    const { transactionId } = context;\r\n    const apiBack = new BackendServices();\r\n    apiBack.consultGeneralDataIGR(transactionId).then(resp => {\r\n      setdatosIGR(resp)\r\n      try {\r\n        var defaultVal = null;\r\n        seteconomicGroupSelect(undefined);\r\n        if (gruposEconomicos.length > 0 && resp.economicGroup !== null && economicGroupSelect === undefined) {\r\n          defaultVal = gruposEconomicos.find(x => x.value === resp.economicGroup.code);\r\n          console.log(defaultVal);\r\n          if (defaultVal !== undefined) {\r\n            seteconomicGroupSelect(defaultVal);\r\n          }\r\n        } else {\r\n          seteconomicGroupSelect(gruposEconomicos[0])\r\n        }\r\n        setActividadEmpresaSet(resp.economicActivity);\r\n        if (actividadEmpresa.length > 0 && resp.economicActivity !== null && actividadEmpresaSelect === undefined) {\r\n          defaultVal = actividadEmpresa.find(x => x.value === resp.economicActivity.code);\r\n          if (defaultVal !== undefined) {\r\n            setActividadEmpresaSelect(defaultVal);\r\n          }\r\n        }\r\n        else {\r\n          setActividadEmpresaSelect(actividadEmpresa[0]);\r\n        }\r\n      }\r\n      catch (err) { }\r\n    }).catch((error) => {\r\n\r\n    });\r\n    apiBack.consultEnvironmentalAspectsIGR(locationData.transactionId).then(resp => {\r\n      setdatosAmbientales(resp.environmentalAspectsDTO)\r\n    }).catch((error) => {\r\n\r\n    });\r\n  }\r\n\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    // if (errors.length > 0) {\r\n    //   console.log('form is invalid');\r\n    //   return;\r\n    // }\r\n    if (event.target.id !== 'formCreditProposal') {\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n    // setLoading(true);\r\n    // const date = dateFormat(new Date(), \"yyyy-mm-dd\");\r\n    values.minimumProvisionSIB = Number(values.minimumProvisionSIB)\r\n    const data = Object.assign({\r\n      country: countrySelect != undefined ? countrySelect.value : '',\r\n      countryRisk: countryRiskSelect != undefined ? countryRiskSelect.value : '',\r\n      economicGroupName: economicGroupSelect != undefined ? economicGroupSelect.label : '',\r\n      // economicGroupNumber: economicGroup ? economicGroup.value : '',\r\n      activityCompany: actividadEmpresaSelect != undefined ? actividadEmpresaSelect.value : '',\r\n      revision: listaRevisionSet ? listaRevisionSet.value : '',\r\n      preapproval: preapprovalSwitch,\r\n      relatedPart: relatedPartSwitch,\r\n    }, values);\r\n\r\n    propCredService.guardarDatosGenerales(context.instanceId, context.requestId, data)\r\n      .then((response) => {\r\n        console.log('datos generales save success', response);\r\n      })\r\n      .catch((error) => {\r\n        console.log('error saving datos generales', error);\r\n      });\r\n  }\r\n\r\n  function handleDropdownChange(name, event) {\r\n    switch (name) {\r\n      case 'country':\r\n        setCountry(event);\r\n        break;\r\n      case 'countryRisk':\r\n        setCountryRisk(event);\r\n        break;\r\n      case 'economicGroupName':\r\n        setEconomicGroup(event);\r\n        break;\r\n      case 'activityCompany':\r\n        setActivityCompany(event);\r\n        break;\r\n      default:\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  function check(e) {\r\n    let tecla = (document.all) ? e.keyCode : e.which;\r\n    //Tecla de retroceso para borrar, siempre la permite\r\n    if (tecla === 45) {\r\n      e.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <AvForm id=\"formCreditProposal\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n\r\n      <h5>{props.title}</h5>\r\n      <p className=\"card-title-desc\"></p>\r\n\r\n      <Row>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"transactId\">{t(\"Procedure Number\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"transactId\"\r\n              type=\"number\"\r\n              onKeyPress={(e) => { return check(e) }}\r\n              min={0}\r\n              id=\"transactId\"\r\n              value={transactId}\r\n              readOnly />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"customerNumber\">{t(\"Customer ID\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"customerNumber\"\r\n              type=\"number\"\r\n              onKeyPress={(e) => { return check(e) }}\r\n              min={0}\r\n              readOnly\r\n              id=\"customerNumber\"\r\n              value={datosIGR != null ? datosIGR.customerNumberT24 : \"\"}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <Label htmlFor=\"revisionType\">{t(\"Revision Type\")}</Label>\r\n          <Select noOptionsMessage={() => \"\"}\r\n            onChange={(e) => { setlistaRevisionSelect(listaRevision.find(x => x.value === e.value)); setlistaRevisionSet(e); }}\r\n            options={listaRevision}\r\n            id=\"revision\"\r\n            classNamePrefix=\"select2-selection\"\r\n            placeholder={t(\"Select\")}\r\n            value={listaRevisionSelect}\r\n          />\r\n\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <Label htmlFor=\"preapproval\">{t(\"Pre Approved\")}</Label>\r\n          {/* <AvGroup>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"preapproval\"\r\n              type=\"select\"\r\n              id=\"preapproval\"\r\n              value={preapproval}>\r\n              <option value={true}>{c(\"Yes\")}</option>\r\n              <option value={false}>{c(\"No\")}</option>\r\n            </AvField>\r\n          </AvGroup> */}\r\n          <AvGroup check className=\"mb-3\">\r\n            <Switch name=\"preapproval\"\r\n              uncheckedIcon={<Offsymbol />}\r\n              checkedIcon={<OnSymbol />}\r\n              onColor=\"#007943\"\r\n              className=\"form-label\"\r\n              onChange={() => {\r\n                setpreapprovalSwitch(!preapprovalSwitch)\r\n              }}\r\n              checked={preapprovalSwitch}\r\n            />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <Label htmlFor=\"economicGroupName\">{t(\"Economic Group Name\")}</Label>\r\n          <Select noOptionsMessage={() => \"\"}\r\n            id=\"economicGroupName\"\r\n            name=\"economicGroupName\"\r\n            onChange={(e) => { seteconomicGroupSelect(gruposEconomicos.find(x => x.value === e.value)); handleDropdownChange('economicGroupName', e); }}\r\n            options={gruposEconomicos}\r\n            classNamePrefix=\"select2-selection\"\r\n            value={economicGroupSelect} />\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"economicGroupNumber\">{t(\"Economic Group Number\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"economicGroupNumber\"\r\n              type=\"text\"\r\n              id=\"economicGroupNumber\"\r\n              value={economicGroupSelect != undefined ? economicGroupSelect.value : ''}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }}\r\n            />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <Label htmlFor=\"country\">{t(\"Country Class\")}</Label>\r\n          <Select noOptionsMessage={() => \"\"}\r\n            id=\"country\"\r\n            name=\"country\"\r\n            onChange={(e) => { setCountrySelect(paises.find(x => x.value === e.value)); handleDropdownChange('country', e) }}\r\n            placeholder={t(\"Select\")}\r\n            options={paises}\r\n            classNamePrefix=\"select2-selection\"\r\n            value={countrySelect}\r\n          />\r\n          {/* <AvFeedback>{c(\"Validation.Required\")}</AvFeedback> */}\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"riskClassification\">{t(\"Risk Assesment\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"riskClassification\"\r\n              type=\"text\"\r\n              readOnly\r\n              id=\"riskClassification\"\r\n              value={datosAmbientales != null ? datosAmbientales.riskPreClassification : \"1\"}\r\n            // value=\"1\"\r\n            />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <Label htmlFor=\"activityCompany\">{t(\"Company Activity\")}</Label>\r\n          <Select noOptionsMessage={() => \"\"}\r\n            name=\"activityCompany\"\r\n            onChange={(e) => { setActividadEmpresaSelect(actividadEmpresa.find(x => x.value === e.value)); setActividadEmpresaSet(e); }}\r\n            placeholder={t(\"Selectcompanyactivity\")}\r\n            options={actividadEmpresa}\r\n            classNamePrefix=\"select2-selection\"\r\n            value={actividadEmpresaSelect}\r\n            isDisabled={true} />\r\n        </Col>\r\n\r\n\r\n\r\n        <Col md=\"6\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"minimumProvisionSIB\">{t(\"SIB Minimum Provision\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"minimumProvisionSIB\"\r\n              type=\"text\"\r\n              id=\"minimumProvisionSIB\"\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") },\r\n                number: { value: true, errorMessage: c(\"Validation.Numeric\") },\r\n              }}\r\n              value={minimumProvisionSIB} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <Label htmlFor=\"relatedPart\">{t(\"Related Part\")}</Label>\r\n          {/* <AvGroup>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"relatedPart\"\r\n              type=\"select\"\r\n              id=\"relatedPart\"\r\n              value={relatedPart}>\r\n              <option value={true}>{c(\"Yes\")}</option>\r\n              <option value={false}>{c(\"No\")}</option>\r\n            </AvField>\r\n          </AvGroup> */}\r\n          <AvGroup check className=\"mb-3\">\r\n            <Switch name=\"relatedPart\"\r\n              uncheckedIcon={<Offsymbol />}\r\n              checkedIcon={<OnSymbol />}\r\n              onColor=\"#007943\"\r\n              className=\"form-label\"\r\n              onChange={() => {\r\n                setrelatedPartSwitch(!relatedPartSwitch)\r\n              }}\r\n              checked={relatedPartSwitch}\r\n            />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"approvalLevel\">{t(\"Approval Level\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"approvalLevel\"\r\n              type=\"select\"\r\n              id=\"approvalLevel\"\r\n              value={approvalLevel}>\r\n              <option value=\"1\">Nivel 1</option>\r\n              <option value=\"2\">Nivel 2</option>\r\n              <option value=\"3\">Nivel 3</option>\r\n            </AvField>\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"9\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"accountExecutive\">{t(\"Account Executive\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"accountExecutive\"\r\n              type=\"text\"\r\n              id=\"accountExecutive\"\r\n              value={accountExecutive}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"responsibleUnit\">{t(\"Responsible Unit\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"responsibleUnit\"\r\n              type=\"text\"\r\n              id=\"responsibleUnit\"\r\n              value={responsibleUnit}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"6\">\r\n          <Label htmlFor=\"countryRisk\">{t(\"Country Risk\")}</Label>\r\n          <Select noOptionsMessage={() => \"\"} required\r\n            onChange={(e) => { setCountryRiskSelect(paises.find(x => x.value === e.value)); handleDropdownChange('countryRisk', e) }}\r\n            defaultValue={paisesRiesgo.value}\r\n            placeholder={t(\"Selectacountry\")}\r\n            options={paisesRiesgo}\r\n            classNamePrefix=\"select2-selection\"\r\n            value={countryRiskSelect} />\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n      <Row>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"requestDate\">{t(\"Application Date\")}</Label>\r\n\r\n            <Flatpickr\r\n                name=\"requestDate\"\r\n                className=\"form-control d-block\"\r\n                placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                options={{\r\n                  dateFormat: OPTs.FORMAT_DATE,\r\n                  //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\r\n                  defaultDate: requestDate !== undefined ? new Date(moment(requestDate, 'YYYY-MM-DD').format()) : new Date()\r\n                }}\r\n                //onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr,\"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n                />\r\n\r\n            [<AvField\r\n              className=\"form-control\"\r\n              name=\"requestDate\"\r\n              type=\"date\"\r\n              id=\"requestDate\"\r\n              value={requestDate}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"lastRequestDate\">{t(\"Last Application Date\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"lastRequestDate\"\r\n              type=\"date\"\r\n              id=\"lastRequestDate\"\r\n              value={lastRequestDate}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"nextRevisionDate\">{t(\"Next Revision Date\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"nextRevisionDate\"\r\n              type=\"date\"\r\n              id=\"nextRevisionDate\"\r\n              value={nextRevisionDate}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"proposedExpirationDate\">{t(\"Expiration Date\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"proposedExpirationDate\"\r\n              type=\"date\"\r\n              id=\"proposedExpirationDate\"\r\n              value={proposedExpirationDate}\r\n              validate={{\r\n                required: { value: true, errorMessage: c(\"Validation.Required\") }\r\n              }} />\r\n          </AvGroup>\r\n        </Col>\r\n\r\n        <Col md=\"3\">\r\n          <AvGroup>\r\n            <Label htmlFor=\"flow\">{t(\"Flow Type\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"flow\"\r\n              type=\"select\"\r\n              id=\"flow\"\r\n              value={flow}>\r\n              <option value=\"1\">Normal</option>\r\n              <option value=\"2\">Urgente</option>\r\n            </AvField>\r\n          </AvGroup>\r\n        </Col>\r\n\r\n      </Row>\r\n\r\n    </AvForm>\r\n  );\r\n\r\n});\r\n\r\nFormCreditProposal.propTypes = {\r\n  values: PropTypes.object\r\n};\r\n\r\nFormCreditProposal.defaultProps = {\r\n  values: {}\r\n};\r\n\r\n\r\nexport default FormCreditProposal;\r\n"]},"metadata":{},"sourceType":"module"}