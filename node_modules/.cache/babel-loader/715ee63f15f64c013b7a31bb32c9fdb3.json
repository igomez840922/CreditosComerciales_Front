{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\InformacionAccionosta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacionAccionista = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmInformacionAccionista');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [formValid, setFormValid] = useState(false);\n\n  function handleChange(e) {\n    setFormValid(false);\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setFormValid(true); // props.onSubmit();\n  }\n\n  const [botonValidation, setbotonValidation] = useState(false);\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\n  const [dataLocation, setData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [shareholderRows, setShareholderRows] = useState([]);\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [tipo, settipo] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataAcciones, setdataAcciones] = useState({\n    \"transactId\": 0,\n    \"personId\": 0,\n    \"personType\": \"\",\n    \"idType\": \"\",\n    \"clientDocumentId\": \"\",\n    \"customerNumberT24\": \"\",\n    \"name\": \"\",\n    \"secondName\": \"\",\n    \"lastName\": \"\",\n    \"secondSurname\": \"\",\n    \"nationality\": \"\",\n    \"birthDate\": \"1998-08-17\",\n    \"yearsExperience\": 0,\n    \"participation\": 0\n  }); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    // Read Api Service data  \n    loadInitialData();\n    setDataReturn(props.jsonAccionistas);\n  }, [props.jsonAccionistas]);\n\n  function loadInitialData() {\n    const api = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataGeneralIA(resp);\n        dataReturn.datosTablaAccionistas = resp;\n        setDataReturn(dataReturn);\n        setShareholderRows(resp.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.clientDocumentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.nationality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.birthDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.participation, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.yearsExperience, \" \", t(\"Year\"), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                editarDatosAccionista(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 128\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, data.clientDocumentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setShareholderRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: t(\"NoData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this));\n      }\n    }).catch(error => {}); // api.getShareholderList()\n    //   .then((response) => {\n    //     setDataList(response);\n    //     setShareholderList(shareholderList);\n    //     ));\n    //   })\n    //   .catch((error) => {\n    //     console.error('Error fetching documents', error);\n    // });\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  function agregarAccionista(values, tipo) {\n    const dataSet = dataAcciones;\n    dataSet.participation = Number(values.participation);\n    dataSet.yearsExperience = Number(values.yearsExprience);\n    dataSet.transactId = Number(dataLocation.transactionId);\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Procedemos a guardar el accionista                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    const apiBack = new BackendServices();\n\n    if (tipo == \"guardar\") {\n      apiBack.nuevoAccionista(dataSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    } else {\n      dataSet.personId = values.personId;\n      apiBack.actualizarAccionistaBD(dataSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function verDatosAccionista(data) {\n    setdataAcciones(data);\n    setbotonValidation(false);\n    toggleShowModelAttachment();\n  }\n\n  function editarDatosAccionista(data) {\n    setdataAcciones(data);\n    settipo(\"editar\");\n    setbotonValidation(true);\n    toggleShowModelAttachment();\n  }\n\n  function procesarDatosTabla(option, value) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                       Aqui procedemos a agregar un accionista a la lista                       */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          // console.log(value);\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                         Procedemos a eliminar el accionista de la lista                        */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n    }\n  }\n\n  function eliminarAccionista(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Shareholder Information\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmInformacionAccionista\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ID Number\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Participation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"YearsExprience\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: shareholderRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDetails\",\n              children: t(\"Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              className: \"form-control\",\n              name: \"informacionAccionistaDetails\",\n              id: \"informacionAccionistaDetails\",\n              type: \"textarea\",\n              rows: \"7\",\n              value: props.jsonAccionistas.observations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        loadInitialData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        loadInitialData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.eliminarAccionista({\n          transactId: dataDelete.transactId,\n          shareholderId: dataDelete.shareholderId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalInfoAccionistas, {\n      dataGeneralIA: dataGeneralIA,\n      tipo: tipo,\n      agregarAccionista: agregarAccionista,\n      botones: botonValidation,\n      dataAcciones: dataAcciones,\n      procesarDatosTabla: procesarDatosTabla,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        toggleShowModelAttachment();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}, \"SQnQRKtOY3WXddeFI9lfMI1dJq4=\", false, function () {\n  return [useTranslation, useLocation, React.useImperativeHandle];\n}));\n_c2 = InformacionAccionista;\nInformacionAccionista.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default InformacionAccionista;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InformacionAccionista$React.forwardRef\");\n$RefreshReg$(_c2, \"InformacionAccionista\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/InformacionAccionosta.js"],"names":["React","useState","useTranslation","PropTypes","Link","useLocation","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalInfoAccionistas","ApiServicesCommon","BackendServices","SweetAlert","InformacionAccionista","forwardRef","props","ref","t","i18n","location","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn","setFormValid","handleChange","e","handleSubmit","event","errors","values","preventDefault","length","botonValidation","setbotonValidation","dataGeneralIA","setdataGeneralIA","dataLocation","setData","data","showModelAttachment","setShowModelAttachment","shareholderRows","setShareholderRows","accionistasJSON","setAccionistasJson","jsonAccionistas","setDataReturn","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","tipo","settipo","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataAcciones","setdataAcciones","useEffect","loadInitialData","api","consultarAccionistaBD","transactionId","then","resp","datosTablaAccionistas","map","clientDocumentId","name","secondName","lastName","secondSurname","nationality","birthDate","participation","yearsExperience","textAlign","editarDatosAccionista","catch","error","agregarAccionista","dataSet","Number","yearsExprience","transactId","apiBack","nuevoAccionista","undefined","toggleShowModelAttachment","personId","actualizarAccionistaBD","removeBodyCss","verDatosAccionista","procesarDatosTabla","option","value","eliminarAccionista","body","classList","add","observations","target","shareholderId","statusCode","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\"\r\n\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nconst InformacionAccionista = React.forwardRef((props, ref) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmInformacionAccionista');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }))\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    setFormValid(false);\r\n  }\r\n\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n    // props.onSubmit();\r\n  }\r\n\r\n  const [botonValidation, setbotonValidation] = useState(false);\r\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [shareholderRows, setShareholderRows] = useState([]);\r\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataAcciones, setdataAcciones] = useState({\r\n    \"transactId\": 0,\r\n    \"personId\": 0,\r\n    \"personType\": \"\",\r\n    \"idType\": \"\",\r\n    \"clientDocumentId\": \"\",\r\n    \"customerNumberT24\": \"\",\r\n    \"name\": \"\",\r\n    \"secondName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"secondSurname\": \"\",\r\n    \"nationality\": \"\",\r\n    \"birthDate\": \"1998-08-17\",\r\n    \"yearsExperience\": 0,\r\n    \"participation\": 0\r\n  });\r\n\r\n  //On Mounting (componentDidMount)\r\n\r\n  React.useEffect(() => {\r\n    // Read Api Service data  \r\n    loadInitialData();\r\n    setDataReturn(props.jsonAccionistas)\r\n  }, [props.jsonAccionistas]);\r\n\r\n\r\n  function loadInitialData() {\r\n\r\n    const api = new BackendServices()\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    api.consultarAccionistaBD(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataGeneralIA(resp);\r\n        dataReturn.datosTablaAccionistas = resp;\r\n        setDataReturn(dataReturn)\r\n        setShareholderRows(resp.map((data) => (\r\n          <tr key={data.clientDocumentId}>\r\n            <td>{data.clientDocumentId}</td>\r\n            <td>{data.name + \" \" + data.secondName + \" \" + data.lastName + \" \" + data.secondSurname}</td>\r\n            <td>{data.nationality}</td>\r\n            <td>{data.birthDate}</td>\r\n            <td>{data.participation}%</td>\r\n            <td>{data.yearsExperience} {t(\"Year\")}s</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <td></td>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { editarDatosAccionista(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              {/* <Button type=\"button\" color=\"link\" onClick={(resp) => { eliminarAccionista(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button> */}\r\n            </td>\r\n          </tr>)))\r\n      } else {\r\n        setShareholderRows(\r\n          <tr key={1}>\r\n            <td colSpan=\"5\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n          </tr>);\r\n\r\n      }\r\n\r\n    }).catch((error) => {\r\n\r\n    });\r\n\r\n    // api.getShareholderList()\r\n    //   .then((response) => {\r\n    //     setDataList(response);\r\n    //     setShareholderList(shareholderList);\r\n\r\n    //     ));\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error fetching documents', error);\r\n    // });\r\n\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  function agregarAccionista(values, tipo) {\r\n    const dataSet=dataAcciones;\r\n      dataSet.participation= Number(values.participation);\r\n      dataSet.yearsExperience= Number(values.yearsExprience);\r\n      dataSet.transactId= Number(dataLocation.transactionId);\r\n    \r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Procedemos a guardar el accionista                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const apiBack = new BackendServices();\r\n    if (tipo == \"guardar\") {\r\n\r\n      apiBack.nuevoAccionista(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      dataSet.personId = values.personId;\r\n      apiBack.actualizarAccionistaBD(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function verDatosAccionista(data) {\r\n    setdataAcciones(data)\r\n    setbotonValidation(false);\r\n    toggleShowModelAttachment()\r\n  }\r\n  function editarDatosAccionista(data) {\r\n    setdataAcciones(data)\r\n    settipo(\"editar\");\r\n    setbotonValidation(true);\r\n    toggleShowModelAttachment()\r\n  }\r\n  function procesarDatosTabla(option, value) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                       Aqui procedemos a agregar un accionista a la lista                       */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        // console.log(value);\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                         Procedemos a eliminar el accionista de la lista                        */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function eliminarAccionista(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true)\r\n\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Shareholder Information\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmInformacionAccionista\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"ID Number\")}</th>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Nationality\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Participation\")}</th>\r\n                  <th>{t(\"YearsExprience\")}</th>\r\n                  <th></th>\r\n                  {/* <th><Link className=\"float-end\" onClick={() => {\r\n                    setbotonValidation(true); setdataAcciones({\r\n                      transactId: 0,\r\n                      personType: \"\",\r\n                      identificationType: \"\",\r\n                      identificationNumber: \"\",\r\n                      shareholderFirstName: \"\",\r\n                      shareholderMiddleName: \"\",\r\n                      shareholderFirstSurname: \"\",\r\n                      shareholderSecondSurname: \"\",\r\n                      nationality: {\r\n                        code: \"\",\r\n                        name: \"\"\r\n                      },\r\n                      birthDate: 0,\r\n                      participation: 0,\r\n                      yearsExperience: 0\r\n                    }); settipo(\"guardar\"); toggleShowModelAttachment()\r\n                  }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link></th> */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {shareholderRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDetails\">{t(\"Details\")}</Label>\r\n              <AvField onChange={(e) => { dataReturn.observations = e.target.value; setDataReturn(dataReturn); }}\r\n                className=\"form-control\"\r\n                name=\"informacionAccionistaDetails\"\r\n                id=\"informacionAccionistaDetails\"\r\n                type=\"textarea\"\r\n                rows=\"7\"\r\n                value={props.jsonAccionistas.observations}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n      </AvForm>\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.eliminarAccionista({ transactId: dataDelete.transactId, shareholderId: dataDelete.shareholderId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n      <ModalInfoAccionistas dataGeneralIA={dataGeneralIA} tipo={tipo} agregarAccionista={agregarAccionista} botones={botonValidation} dataAcciones={dataAcciones} procesarDatosTabla={procesarDatosTabla} isOpen={showModelAttachment} toggle={() => { toggleShowModelAttachment() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n})\r\n\r\nInformacionAccionista.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default InformacionAccionista;\r\n"]},"metadata":{},"sourceType":"module"}