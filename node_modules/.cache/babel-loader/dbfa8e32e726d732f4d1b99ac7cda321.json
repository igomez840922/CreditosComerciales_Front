{"ast":null,"code":"import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{withRouter}from\"react-router-dom\";import{isEmpty,map}from\"lodash\";//Import Breadcrumb\nimport Breadcrumbs from\"../../components/Common/Breadcrumb\";//Import Task Cards\nimport UncontrolledBoard from\"./UncontrolledBoard\";import\"../../assets/scss/tasks.scss\";import{getTasks}from\"../../store/tasks/actions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TasksKanban=function TasksKanban(props){var tasks=props.tasks,onGetTasks=props.onGetTasks;useEffect(function(){onGetTasks();},[onGetTasks]);var data=map(tasks,function(task){return _objectSpread(_objectSpread({},task),{},{cards:task.tasks});});data.length=Math.min(data.length,3);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",children:[/*#__PURE__*/_jsx(Breadcrumbs,{title:\"Tasks\",breadcrumbItem:\"Kanban Board\"}),!isEmpty(data)&&/*#__PURE__*/_jsx(UncontrolledBoard,{board:{columns:data},content:tasks})]})});};var mapStateToProps=function mapStateToProps(_ref){var tasks=_ref.tasks;return{tasks:tasks.tasks};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onGetTasks:function onGetTasks(){return dispatch(getTasks());}};};export default connect(mapStateToProps,mapDispatchToProps)(withRouter(TasksKanban));","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Tasks/tasks-kanban.js"],"names":["React","useEffect","connect","withRouter","isEmpty","map","Breadcrumbs","UncontrolledBoard","getTasks","TasksKanban","props","tasks","onGetTasks","data","task","cards","length","Math","min","columns","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,CAAkBC,GAAlB,KAA6B,QAA7B,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,CAEA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,MAAO,8BAAP,CACA,OAASC,QAAT,KAAyB,2BAAzB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3B,GAAQC,CAAAA,KAAR,CAA8BD,KAA9B,CAAQC,KAAR,CAAeC,UAAf,CAA8BF,KAA9B,CAAeE,UAAf,CAEAX,SAAS,CAAC,UAAM,CACdW,UAAU,GACX,CAFQ,CAEN,CAACA,UAAD,CAFM,CAAT,CAIA,GAAMC,CAAAA,IAAI,CAAGR,GAAG,CAACM,KAAD,CAAQ,SAAAG,IAAI,wCAAUA,IAAV,MAAgBC,KAAK,CAAED,IAAI,CAACH,KAA5B,IAAZ,CAAhB,CACAE,IAAI,CAACG,MAAL,CAAcC,IAAI,CAACC,GAAL,CAASL,IAAI,CAACG,MAAd,CAAsB,CAAtB,CAAd,CAEA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,cAAf,wBAEI,KAAC,WAAD,EAAa,KAAK,CAAC,OAAnB,CAA2B,cAAc,CAAC,cAA1C,EAFJ,CAGK,CAACZ,OAAO,CAACS,IAAD,CAAR,eACC,KAAC,iBAAD,EAAmB,KAAK,CAAE,CAAEM,OAAO,CAAEN,IAAX,CAA1B,CAA6C,OAAO,CAAEF,KAAtD,EAJN,GADF,EADF,CAWD,CArBD,CA4BA,GAAMS,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UAAGT,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CACtCA,KAAK,CAAEA,KAAK,CAACA,KADyB,CAAhB,EAAxB,CAIA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCV,UAAU,CAAE,4BAAMU,CAAAA,QAAQ,CAACd,QAAQ,EAAT,CAAd,EAD0B,CAAL,EAAnC,CAIA,cAAeN,CAAAA,OAAO,CACpBkB,eADoB,CAEpBC,kBAFoB,CAAP,CAGblB,UAAU,CAACM,WAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { connect } from \"react-redux\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { isEmpty, map } from \"lodash\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\r\n\r\n//Import Task Cards\r\nimport UncontrolledBoard from \"./UncontrolledBoard\"\r\n\r\nimport \"../../assets/scss/tasks.scss\"\r\nimport { getTasks } from \"../../store/tasks/actions\"\r\n\r\nconst TasksKanban = props => {\r\n  const { tasks, onGetTasks } = props\r\n\r\n  useEffect(() => {\r\n    onGetTasks()\r\n  }, [onGetTasks])\r\n\r\n  const data = map(tasks, task => ({ ...task, cards: task.tasks }))\r\n  data.length = Math.min(data.length, 3)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n          {/* Render Breadcrumbs */}\r\n          <Breadcrumbs title=\"Tasks\" breadcrumbItem=\"Kanban Board\" />\r\n          {!isEmpty(data) && (\r\n            <UncontrolledBoard board={{ columns: data }} content={tasks} />\r\n          )}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTasksKanban.propTypes = {\r\n  tasks: PropTypes.array,\r\n  onGetTasks: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = ({ tasks }) => ({\r\n  tasks: tasks.tasks,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetTasks: () => dispatch(getTasks()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(TasksKanban))\r\n"]},"metadata":{},"sourceType":"module"}