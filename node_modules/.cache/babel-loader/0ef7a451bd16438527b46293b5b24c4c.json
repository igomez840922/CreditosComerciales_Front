{"ast":null,"code":"import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\nimport ApiService from \"../ApiServiceBackend\";\nimport * as url from \"../../helpers/url_helper\";\nimport * as opt from \"../../helpers/options_helper\";\nimport qs from 'qs';\nimport moment from \"moment\";\nexport default class Services extends ApiService {\n  async guardarDocumentoAnexo(data) {\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async eliminarDocumentoAnexo(data) {\n    data = qs.stringify(data);\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\n\n    console.log(\"eliminarDocumentoAnexo\", result);\n\n    if (result.statusCode === \"200\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  async consultarDocumentosAnexos(params) {\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\n    var data = qs.stringify(params);\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n    }\r\n    */\n\n    if (result.status.statusCode === \"200\") {\n      return result.attachments;\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarHistorico(data) {\n    try {\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api error guardarHistorico\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async searchLogs(params) {\n    try {\n      var data = qs.stringify(params);\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        //return result.logs;\n        return {\n          status: 200,\n          result: result.logs\n        };\n      }\n    } catch (err) {\n      console.error(\"api error consultarHistorico\", err);\n      return {\n        status: err.response.status,\n        error: err.response.data\n      }; //errorMessage, //errorCode\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS GENERALES///////\n\n\n  async guardarDatosGeneralesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 2,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n      }\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\n      /*{\r\n      \"transactId\": 101,\r\n      \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n      },\r\n      \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n      },\r\n      \"status\": true,\r\n      \"identificationType\": \"RUC\",\r\n      \"customerDocumentId\": \"00000081\",\r\n      \"customerNumberT24\": \"\",\r\n      \"firstName\": \"Rey\",\r\n      \"secondName\": \"\",\r\n      \"firstLastName\": \"\",\r\n      \"secondLastName\": \"\",\r\n      \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      } */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR DATOS EMPRESA///////\n\n\n  async guardarDatosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n      },\r\n      \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n      },\r\n      \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n      },\r\n      \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n      },\r\n      \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n      },\r\n      \"referencePoint\": \"12\",\r\n      \"residency\": \"13\",\r\n      \"houseNumber\": \"14\",\r\n      \"phoneNumber\": 15,\r\n      \"mobileNumber\": 16,\r\n      \"workNumber\": 17,\r\n      \"email\": \"18\",\r\n      \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n      },\r\n      \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n      },\r\n      \"exclusion\": true,\r\n      \"sustainable\": true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR HISTORIAL EMPRESA///////\n\n\n  async guardarHistorialEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"description\":\"description2\",\r\n      \"employeesNumber\":\"346\",\r\n      \"details\":\"detalles2\",\r\n      \"status\":true\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarHistorialEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFO ACCIONISTAS///////\n\n\n  async consultarDatosAccionistas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n      ],\r\n      \"observations\": \"dd5\",\r\n      \"infoDate\": \"2022-01-10\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.shareholders;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1643411338,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"shareholderId\": 1,\r\n      \"personType\":\"N\",\r\n      \"identificationType\":\"CIP\",\r\n      \"identificationNumber\":\"8-000-888\",\r\n      \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n      \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n      \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n      \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n      \"nationality\": {\r\n      \"code\": \"vidnacionalidad character varying\",\r\n      \"name\": \"vnacionalidad character varying\"\r\n      },\r\n      \"birthDate\":1643411338,\r\n      \"participation\":25,\r\n      \"yearsExperience\":30,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarAccionista(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"shareholderId\":1\r\n      }\r\n       */\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api eliminarAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionAccionista(data) {\n    try {\n      /*{\r\n      \"transactId\": 107,\r\n      \"description\": \"dd5\",\r\n      \"infoDate\":1643723937\r\n      }\r\n      */\n      data = {\n        transactId: data.transactId,\n        description: data.observations,\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\n      }; // data[\"date\"] = \"1980-11-11\";\n      // data[\"jsonData\"] = \"[{}]\";\n\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionAccionista(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\n      /*\r\n       {\r\n      \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n      ],\r\n      \"observations\": \"dd5\",\r\n      \"infoDate\": \"2022-01-10\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.observations;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\n\n\n  async guardarEstructuraEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"46\",\r\n      \"description\":\"estructura1\",\r\n      \"date\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarEstructuraEmpresaIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_HISTORIAEMPRESA\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\n      /*{\r\n      \"transactId\": 44,\r\n      \"observations\": \"estructura2\",\r\n      \"infoDate\": \"2022-01-19\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GOBIERNO CORPORATIVO///////\n\n\n  async consultarDatosGobiernoCorporativo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\n      /*\r\n      {\r\n      \"corporateGobernance\": [],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGobiernoCorporativo(data) {\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n    }\r\n     */\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  }\n\n  async actualizarGobiernoCorporativo(data) {\n    try {\n      /*{\r\n      \"transactId\":\"101\",\r\n      \"corporateIdentification\":30,\r\n      \"name\":\"updated-name\",\r\n      \"position\":\"jjjj\",\r\n      \"birthDate\":\"1985-11-27\",\r\n      \"age\":32\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n\n      if (result.statusCode === \"200\") {\n        return result; //WatchlistModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGobiernoCoporativo(data) {\n    /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":17\r\n    } */\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\n    return result; //WatchlistModel.fromJson(result);\n  } ////IGR - RELEVO GENERACIONAL ///////\n\n\n  async consultarDatosRelevoGeneracional(transactId) {\n    try {\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n      },\r\n      \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      } */\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"name\":\"pepe\",\r\n      \"position\":\"bd\",\r\n      \"birthDate\":\"1980-11-11\",\r\n      \"relationship\":\"lola\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelevoGeneracional(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":13\r\n      \"name\":\"pepe\",\r\n      \"position\":\"bd\",\r\n      \"birthDate\":\"1980-11-11\",\r\n      \"relationship\":\"lola\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelevoGeneracional(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"managementRIdentification\":10\r\n      }*/\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionRelevoGeneracional(data) {\n    try {\n      /*{\r\n      \"transactId\":101,\r\n      \"observations\":\"comentario sdads\"\r\n      } */\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionRelevoGeneracional(transactId) {\n    try {\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n      },\r\n      \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      } */\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\n\n      if (result.statusCode === \"200\") {\n        return result.getManagementRelaysInfoResponseDTO.observations;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR Flujo Operativo///////\n\n\n  async guardarFlujoOperativo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"observations\":\"ee445\",\r\n      \"infoDate\":\"2021-12-10\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFlujoOperativo(transactId) {\n    try {\n      //vidtramite=44&vidproceso=5&vidactividad=1\n      var params = {\n        vidtramite: transactId,\n        vidproceso: opt.PROCESS_INFORMEGESTION,\n        vidactividad: opt.ACT_FLUJOOPERATIVO\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 199,\r\n      \"observations\": \"prueba\",\r\n      \"infoDate\": \"2021-12-29\",\r\n      \"status\": true,\r\n      \"attachments\": []}\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - EMPRESAS RELACIONADAS///////\n\n\n  async consultarDatosEmpresaRelacionada(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"observations\": \"tets\",\r\n      \"date\": \"2022-01-24\",\r\n      \"estado\": true,\r\n      \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"companyId\": 11\r\n      } */\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEmpresaRelacionada(data) {\n    try {\n      /*{\r\n      \"trasactId\":1,\r\n      \"companyId\":15,\r\n      \"name\":\"maicol up\",\r\n      \"activity\":\"actividad up\",\r\n      \"sectorExperience\":10,\r\n      \"relationship\":\"relaciona up\",\r\n      \"status\":true\r\n      }*/\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEmpresaRelacionada(data) {\n    try {\n      /*trasactId:101,companyId:11 */\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionEmpresaRelacionada(data) {\n    try {\n      data = {\n        \"trasactId\": data.trasactId,\n        \"description\": data.description\n      };\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN CLIENTE ///////\n\n\n  async consultarListaClientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":104,    \r\n      \"name\":\"enrique5\",\r\n      \"country\":\"pana\",\r\n      \"salePercentage\":75.55,\r\n      \"customerType\":\"cred\",\r\n      \"salesType\":\"cred\", \r\n      \"delayReason\":\"cred\",\t\r\n      \"termDays\":90\r\n      }\r\n         */\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarClienteIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 104,\r\n      \"customerInfoId\": 14,\r\n      \"name\": \"enrique5\",\r\n      \"country\": \"pana\",\r\n      \"salePercentage\": 75.55,\r\n      \"customerType\": \"cred\",\r\n      \"salesType\": \"cred\",\r\n      \"delayReason\": \"cred\",\r\n      \"termDays\": 90,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTEINFO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarClienteIGR(data) {\n    try {\n      /*transactId:101,customerIdentification:2 */\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionClienteIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"seasonalSales\": false,\r\n      \"percSeasonalPeriodSales\": 0.5,\r\n      \"dateInformation\": \"2022-01-14\"\r\n      }*/\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionClienteIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n      }\r\n      }\r\n      */\n\n      return result.clientSectionCompaniesDTO;\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN PROVEEOR ///////\n\n\n  async consultarListaProveedoresIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\n      /**/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"name\": \"Provedor de prueba\",\r\n      \"oldRelationship\": 2,\r\n      \"percentPurchases\": 2.35788,\r\n      \"creditDays\": 30,\r\n      \"negotiationConditions\": \"prueba de negociacion\",\r\n      \"country\": \"panama\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProveedorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 11,\r\n      \"providerId\": 1,\r\n      \"name\": \"provedor actualizado\",\r\n      \"oldRelationship\": 52,\r\n      \"percentPurchases\": 30.255,\r\n      \"creditDays\": 20,\r\n      \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n      \"country\": \"colombia\",\r\n      \"status\": false\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProveedorIGR(data) {\n    try {\n      /*transactId:101,vidproveedor:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionProveedorIGR(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"description\": \"descripcion text\",\r\n      \"purchasingCycle\": \"ciclocompras character varying\"\r\n      }*/\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionProveedorIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.suppliersList;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN RECIPROCIDAD ///////\n\n\n  async consultarListaReciprocidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\n      /*{\r\n      \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 108,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarReciprocidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"reciprocity_id\":1,\r\n      \"year\":2021,\r\n      \"month\":\"December\",\r\n      \"sales\":200,\r\n      \"deposits\":4000,\r\n      \"averageBalance\":2400,\r\n      \"reciprocity\":200,\r\n      \"sow\":\"20\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarReciprocidadIGR(data) {\n    try {\n      /*transactId:101,reciprocityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionReciprocidad(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"observations\":\"Cambios\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoAccionista\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionReciprocidad(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\n      /*\r\n      {\r\n      \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\n        return result.observations;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\n\n\n  async consultarActivosFijosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_FACILIDADACTIVOSFIJOS\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\n      /*\r\n      {\r\n      \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"attachments\": [],\r\n      \"variationsAssets\": null,\r\n      \"variationsAssetsObs\": null,\r\n      \"manufacturingAgroCompanies\": null,\r\n      \"productionLine\": null,\r\n      \"capacity\": null,\r\n      \"usedCapacity\": null,\r\n      \"tradingCompany\": null,\r\n      \"warehouseCapacity\": null,\r\n      \"transportDistributionFleet\": null,\r\n      \"units\": null,\r\n      \"renovation\": null,\r\n      \"status\": null,\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\":0.00,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"facilityAssetId\":2,\r\n      \"address\": \"vdireccion\",\r\n      \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n      },\r\n      \"observations\": \"vdescripcion\",\r\n      \"ownerCompany\": \"vsociedadpropietaria\",\r\n      \"leaseFee\": 5.66,\r\n      \"rentAmount\": 10.55,\r\n      \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n      \"contractDuration\": 3,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarActivosFijosIGR(data) {\n    try {\n      /*transactId:101,fixedAssetId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionActivosFijosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"variationsAssets\": true,\r\n      \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n      \"manufacturingAgroCompanies\": true,\r\n      \"productionLine\": \"vlineaproduccion\",\r\n      \"capacity\": \"vcapacidad\",\r\n      \"usedCapacity\": \"vcapacidadutilizada\",\r\n      \"tradingCompany\": true,\r\n      \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n      \"transportDistributionFleet\": true,\r\n      \"units\": \"vunidades\",\r\n      \"renovation\": \"vrenovacion\",\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACIóN SEGUROS ///////\n\n\n  async consultarSegurosEmpresaIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result.companyInsurance;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaProveedoresIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"company\":\"Comision\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-30\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSegurosEmpresaIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"insuranceId\":1,\r\n      \"company\":\"Company\",\r\n      \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n      },\r\n      \"amount\":5.000,\r\n      \"dueDate\":\"2021-12-27\",\r\n      \"status\":\"true\"\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSegurosEmpresaIGR(data) {\n    try {\n      /*transactId:101,InsuranceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarReciprocidadIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\n\n\n  async guardarArquitecturaEmpresarialIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\":\"Ganaderia\",\r\n      \"auditedAreas\":\"Santander\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode !== \"200\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarArquitecturaEmpresarialIGR(transactId) {\n    try {\n      var params = {\n        vidtramite: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_ARQUITECTURAEMPRESARIAL\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"ticCompanyUse\": \"Ganaderia\",\r\n      \"auditedAreas\": \"Santander\",\r\n      \"status\": true,\r\n      \"attachments\": []\r\n      }\r\n      */\n\n      if (result.transactId !== null) {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - COMPERTIDORES DEL MERCADO ///////\n\n\n  async consultarCompetidores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\n      /*{\r\n      \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n      \"competitorId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\",\r\n      \"status\":true\r\n      }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n      }\r\n      } */\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"name\":\"COMPETICION\",\r\n      \"description\":\"LISTA COMPETICION\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCompetidorIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"competitorId\":8,\r\n      \"name\":\"CARRERA\",\r\n      \"description\":\"LISTA CARRERA\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoProveedorIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCompetidorIGR(data) {\n    try {\n      /*transactId:101,competitorId:2 */\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - PROYECCIONES ///////\n\n\n  async consultarProyecciones(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\n      /*\r\n      {\r\n      \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n      },\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCompetidores: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarProyecciones(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"descripcion\":\"gggsgsgsgsgs\",\r\n      \"assetsOperatingAmount\":3,\r\n      \"assetsOperatingReason\":\"jhfjshdhshd\",\r\n      \"fixedAssetsAmount\":3,\r\n      \"fixedAssetsReason\":\"jhfjshdhshd\",\r\n      \"othersAssetsAmount\":3,\r\n      \"othersAssetsReason\":\"jhfjshdhshd\",\r\n      \"bankAmount\":3,\r\n      \"bankReason\":\"jhfjshdhshd\",\r\n      \"providersAmount\":3,\r\n      \"providersReason\":\"jhfjshdhshd\",\r\n      \"capitalAmount\":3,\r\n      \"capitalReason\":\"jhfjshdhshd\",\r\n      \"maximodeuda\":3,\r\n      \"estimatedDate\":\"2022-01-15\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - INFORMACION GARANTES///////\n\n\n  async consultarGarantes(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n        */\n\n      return result.guarantors;\n    } catch (err) {\n      console.error(\"api ConsultarGarantes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 1,\r\n      \"documentType\": \"CED\",\r\n      \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre character varying\",\r\n      \"secondName\": \"vsegnombre character varying\",\r\n      \"lastName\": \"vapellido character varying\",\r\n      \"secondLastName\": \"vsegapellido character varying\",\r\n      \"guarantorRelationship\": \"vrelaciongarante text\",\r\n      \"origin\": \"vprocedenciabien text\",\r\n      \"guarantorCommitment\": \"vcompromisogarante text\",\r\n      \"warrantyReason\": \"vrazongarantia text\"\r\n      }\r\n      */\n      return await this.post(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarante(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 44,\r\n      \"guarantorId\": 1,\r\n      \"documentType\": \"vtipodocumento up\",\r\n      \"guarantorDocument\": \"vdocumentogarante up\",\r\n      \"isGuarantor\": true,\r\n      \"name\": \"vnombre up\",\r\n      \"secondName\": \"vsegnombre up\",\r\n      \"lastName\": \"vapellido up\",\r\n      \"secondLastName\": \"vsegapellido up\",\r\n      \"guarantorRelationship\": \"vrelaciongarante up\",\r\n      \"origin\": \"vprocedenciabien up\",\r\n      \"guarantorCommitment\": \"vcompromisogarante up\",\r\n      \"warrantyReason\": \"vrazongarantia up\",\r\n      \"date\": \"2022-01-18\",\r\n      \"status\": true}\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      return await this.put(url.URL_BACKEND_GARANTES, data);\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarante(data) {\n    try {\n      /*transactId:101,guarantorId:2 */\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW ACTUAL ///////\n\n\n  async consultarSowActualIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowActualIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowActualIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - SOW PROPUESTO ///////\n\n\n  async consultarSowPropuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoSowPropuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarSowPropuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarSowPropuestoIGR(data) {\n    try {\n      /*transactId:101,currentSowId:2 */\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - ASPECTOS AMBIENTALES///////\n\n\n  async consultarAspectosAmbientalesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarAspectosAmbientales: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarAspectosAmbientalesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarGarante: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\n\n\n  async consultarRelacionesBancariasDeudasCP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasCP(data) {\n    try {\n      /*transactId:101,debtId:1 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\n\n\n  async consultarRelacionesBancariasDeudasLP(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarRelacionesBancariasDeudasLP(data) {\n    try {\n      /*transactId:101,debtId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RELACIONES BANCARIAS SECCION///////\n\n\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n      } */\n\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRelacionesBancariasSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_GARANTES, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - DOLLAR ///////\n\n\n  async consultarFlujoCajaDollar(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaDollar(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaDollar(data) {\n    try {\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaDollar(data) {\n    try {\n      /*transactId:101,cashFlowDolarId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\n\n\n  async consultarFlujoCajaServicioDeudas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n      }\r\n        */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaServicioDeudas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n      }\r\n        */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaServicioDeudas(data) {\n    try {\n      /*transactId:101,cashFlowDebtServiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - EGRESOS ///////\n\n\n  async consultarFlujoCajaEgresos(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\n      /*{\r\n        {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaEgresos(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaEgresos(data) {\n    try {\n      /*transactId:101,cashFlowOutcomeId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data); //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\n\n\n  async consultarFlujoCajaCargaTrabajo(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCargaTrabajo(data) {\n    try {\n      /*transactId:101,cashFlowWorkloadId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - INGRESOS ///////\n\n\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaIngresoFacturacion(data) {\n    try {\n      /*transactId:101,cashFlowInvoiceId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - FLUJO DE CAJA - COBRANZAS ///////\n\n\n  async consultarFlujoCajaCobranzas(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFlujoCajaCobranzas(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFlujoCajaCobranzas(data) {\n    try {\n      /*transactId:101,cashFlowCollectiond:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MOVIMIENTOS DE CUENTAS ///////\n\n\n  async consultarMovimientosCuentasIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.movements;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":1,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMovimientosCuentasIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"trasactId\":109,\r\n      \"movementId\":12,\r\n      \"year\":2021,\r\n      \"month\":\"2021-12-30\",\r\n      \"deposits\":3,\r\n      \"averageBalance\":3,\r\n      \"observations\":\"test\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMovimientosCuentasIGR(data) {\n    try {\n      /*transactId:101,movementId:12 */\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarSeccionMovimientosCuentas(data) {\n    try {\n      /*{\r\n      \"trasactId\":101,\r\n      \"observations\":\"test\"\r\n      } */\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\n      }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarSeccionMovimientosCuentas(transactId) {\n    try {\n      /*{\r\n      \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\n      return result.movements[0];\n    } catch (err) {\n      console.error(\"api consultarDatosRelevoGeneracional: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CUENTAS POR COBRAR ///////\n\n\n  async consultarCuentasCobrarIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_INFORMEGESTION,\n        activityId: opt.ACT_CUENTASPORCOBRAR\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result.accountsReceivable;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCuentasCobrarIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCuentasCobrarIGR(data) {\n    try {\n      /*data={transactId:101,accountReceivableId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX ///////\n\n\n  async consultarCapexIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexIGR(data) {\n    try {\n      /*data={transactId:101,capexsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX PRESUPUESTO ///////\n\n\n  async consultarCapexPresupuestoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexPresupuestoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexPresupuestoIGR(data) {\n    try {\n      /*data={transactId:101,capexId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - CAPEX DETALLES PROYECTO ///////\n\n\n  async consultarCapexDetalleProyectoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarCapexDetalleProyectoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarCapexDetalleProyectoIGR(data) {\n    try {\n      /*data={transactId:101,capexDetailsId:1 }*/\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - RECOMENDACIONES ///////\n\n\n  async consultarRecomendacionesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\n\n      if (result.statusService.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarRecomendacionesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data); //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\n      }\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  } ////IGR - MATRIZ OTROS BANCOS ///////\n\n\n  async consultarMatrizOtrosBancosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\n      /*{\r\n      \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizOtrosBancosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"otherBankId\":1,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\":3.5,\r\n      \"participation\":5.2,\r\n      \"longTerm\":1.200,\r\n      \"shortTerm\":600,\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizOtrosBancosIGR(data) {\n    try {\n      /*transactId:101,otherBankId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizExpedientesIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\n      /*{\r\n      \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizExpedientesIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"filesId\":5,\r\n      \"fileType\":{\r\n      \"code\":\"Expediente Contable\",\r\n      \"name\":\"\"\r\n      },\r\n      \"fileStatus\":\"En Revision\",\r\n      \"observations\":\"Expediente Contabilizado\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizExpedientesIGR(data) {\n    try {\n      /*transactId:101,filesId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizNuevosNegociosIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\n      /*{\r\n      \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"businessType\": {\r\n      \"code\":\"Papeleria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Bueno\",\r\n      \"observations\":\"Ventas productos oficina\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":2,\r\n      \"newBusinessId\":2,\r\n      \"businessType\": {\r\n      \"code\":\"Cigarreria\",\r\n      \"name\":\"\"\r\n      },\r\n      \"businessStatus\":\"Excelente\",\r\n      \"observations\":\"Ventas productos canasta familiar\",\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizNuevosNegociosIGR(data) {\n    try {\n      /*transactId:101,newBusinessId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizRentabilidadIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\n      /*{\r\n      \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      }*/\n\n      if (result.serviceStatus.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Otros Bancos\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 50.000\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizRentabilidadIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":4,\r\n      \"profitabilityId\":4,\r\n      \"matrixType\":{\r\n      \"code\":\"Nuevo negocio\",\r\n      \"name\":\"\"\r\n      },\r\n      \"quantity\": 500.000,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizRentabilidadIGR(data) {\n    try {\n      /*transactId:101,profitabilityId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarMatrizSeccionIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"Observacion\"}\r\n      */\n      //Guardamos Busqueda y Descarte\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data); //OK\n\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //Si es 500, la entidad existe... si existe lo actualizamos\n\n      if (result.statusCode === \"500\") {\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizSeccionIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\n      /*\r\n            {\r\n      \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.competitiveMatrix[0];\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizPosicionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.positions;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"positionId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizPosicionBanescoIGR(data) {\n    try {\n      /*transactId:101,positionId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n      ]\r\n      }*/\n\n      return result.transactionals;\n    } catch (err) {\n      console.error(\"api consultarListaClientes: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"product\":\"product\",\r\n      \"closeVol\":5.66,\r\n      \"participation\":999\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"transactionalId\": 1,\r\n      \"product\": \"product\",\r\n      \"closeVol\": 5.66,\r\n      \"participation\": 999,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api nuevoCliente: \", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarMatrizTransaccionBanescoIGR(data) {\n    try {\n      /*transactId:101,transactionalId:2 */\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////IGR - GUARDAR NEGOCIOS A OBTENER///////\n\n\n  async guardarNegocioObtenerIGR(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n      }\r\n      */\n      //Guardamos\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n      //si es 500 existe, solo debemos actualizar\n\n      if (result.statusCode === \"500\") {\n        data[\"status\"] = true;\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\n      }\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } // data = {\n      //   \"customerIdentification\":\"5\",\n      //   \"firstName\":\"diana\",\n      //   \"secondName\":\"\",\n      //   \"firstLastName\":\"perez\",\n      //   \"secondLastName\": \"jj\",\n      //   \"identificationTypeId\":1,\n      //   \"identificationType\":\"45\",\n      //   \"numberIdentification\" :45,\n      //   \"currentProcessIdentification\":1,\n      //   \"responsible\":\"dinaUser\",\n      //   \"sla\":58\n      // }\n\n    } catch (err) {\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarNegocioObtenerIGR(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err);\n    }\n\n    return undefined;\n  } ////BUSQUEDA y DESCARTE///////\n\n\n  async guardarBusquedaDescarte(data) {\n    try {\n      var model = BusquedaDescarteModel.getSaveModel(data); //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      } //Si es 500, la entidad existe... si existe lo actualizamos\n\n\n      if (result.statusCode === \"500\") {\n        //rutima para actualizar aun no existe\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarBusquedaDescarte\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarBusquedaDescarte(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId,\n        processId: opt.PROCESS_BUSQUEDADESCARTE,\n        activityId: opt.ACT_NONE\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\n\n      if (result.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ///////// USUARIO PROSPECTO ////////////\n\n\n  async guardarUsuarioProspecto(data) {\n    let result = undefined;\n\n    try {\n      //Actualizar\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\n        var userModel = UsuarioProspectoModel.getUpdateModel(data); //Actualizamos Usuario Prospecto\n\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.statusCode === \"200\") {\n          result.customerId = data.customerId;\n          result.transactId = data.transactId;\n          return result;\n        }\n      } else {\n        //Nuevo\n        userModel = UsuarioProspectoModel.getSaveModel(data);\n        console.log(\"guardarUsuarioProspecto\", userModel); //Guardamos Nuevo Usuario Prospecto\n\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\n\n        if (result.status.statusCode === \"200\") {\n          return result;\n        }\n      }\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n          data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n          //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n            result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n            return result;\r\n        }\r\n      }\r\n      */\n\n    } catch (err) {\n      console.error(\"api guardarUsuarioProspecto: \", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarUsuarioProspecto(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\n      /*\r\n            {\r\n      \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }\r\n            */\n\n      return result.costumer[0];\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async guardarCumplimiento(data) {\n    try {\n      var model = {\n        transactId: data.transactId,\n        compliance: true,\n        observations: data.observationsSearchDiscard,\n        approved: true,\n        observationsComp: data.observationsComp\n      }; //Guardamos Busqueda y Descarte\n\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model); //OK\n\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\n\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarCumplimiento\", err);\n    }\n\n    return undefined;\n  } ///////////////////////////////////////\n\n\n  async consultarTramiteInbox(username) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        responsible: username\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return BusquedaDescarteModel.fromJson(result);\n      }\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarTramiteInbox(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":\"8\",\r\n      \"instanceId\":1,\r\n      \"customerId\":3,\r\n      \"currentProcess\":5,\r\n      \"nextprocess\":6,\r\n      \"responsible\":\"userTest\",\r\n      \"date\":\"2021-12-10\",\r\n      \"status\":true,\r\n      \"requestId\":3\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api actualizarCuentasCobrarIGR: \", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusion() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async guardarListaExclusion(transaccionId, exclusionId) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    try {\n      let data = {\n        \"transactId\": transaccionId,\n        \"exclusionCatListId\": exclusionId\n      };\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.err(\"api guardarListaExclusion\", err);\n    }\n\n    return undefined;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async consultarListaExclusionMarcada(params) {\n    var data = qs.stringify(params);\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\n  }\n\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\n    try {\n      var data = {\n        transactId: transactId,\n        exclusionId: exclusionId\n      };\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarListaExclusionMarcada: \", err);\n    }\n\n    return undefined;\n  } ////////////////////////////////////////////////////////////////\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\n\n\n  async nuevoDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"customerNumber\":\"123\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\":\"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1.55,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2021-12-20\",\r\n      \"lastRequestDate\":\"2021-10-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"requestId\": \"XYZ682022\",\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      */\n      // if (result.statusCode === \"200\") {\n      //   //Nota: Actualizar Variable en BPM de requestId\n      //   return result;\n      // }\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDatosGeneralesPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"transactId\":107,\r\n      \"requestId\":\"XYZ682022\",\r\n      \"customerNumber\":\"1\",\r\n      \"revision\":\"1\",\r\n      \"preapproval\":true,\r\n      \"economicGroupNumber\":\"1\",\r\n      \"economicGroupName\": \"1\",\r\n      \"country\": \"cub\",\r\n      \"activityCompany\":\"banca-cambio\",\r\n      \"riskClassification\":\"1\",\r\n      \"minimumProvisionSIB\":1,\r\n      \"relatedPart\": true,\r\n      \"approvalLevel\":\"1\",\r\n      \"accountExecutive\":\"1\",\r\n      \"responsibleUnit\":\"1\",\r\n      \"countryRisk\":\"1\",\r\n      \"requestDate\": \"2022-01-20\",\r\n      \"lastRequestDate\":\"2022-01-20\",\r\n      \"nextRevisionDate\":\"2022-01-20\",\r\n      \"proposedExpirationDate\":\"2022-01-20\",\r\n      \"flow\":\"1\",\r\n      \"status\":true,\r\n      \"date\":\"2022-01-20\"\r\n      }\r\n      */\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\"); //\"2021-11-10\";\n\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarDatosGeneralesPropCred(transactId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\n      /*\r\n            {\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n      ]\r\n      }\r\n            */\n\n      if (result.status.statusCode === \"200\") {\n        return result.data;\n      }\n    } catch (err) {\n      console.error(\"api consultarDatosGeneralesPropCred: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FACILIDAD ///////\n\n\n  async nuevoFacilidadPropCred(data) {\n    try {\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"cr\": \"\",\r\n      \"amount\": 22.5,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      /*\r\n      {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilityId\": 5\r\n      } */\n\n      return result.facilityId;\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFacilidadPropCred(data) {\n    try {\n      data.facilityId = 12;\n      data.requestId = \"XYZ892022\";\n      /*\r\n      {\r\n      \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n      \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n      \"cr\": \"\",\r\n      \"amount\": 22.4,\r\n      \"debtor\": \"\",\r\n      \"clientTypeId\": 1,\r\n      \"balance\": 22.5,\r\n      \"proposalTypeId\": \"\",\r\n      \"proposalTypeName\": \"\",\r\n      \"facilityTypeId\": \"\",\r\n      \"purpose\": \"\",\r\n      \"sublimits\": \"\",\r\n      \"proposalRate\": 22.5,\r\n      \"noSubsidyRate\": 22.5,\r\n      \"effectiveRate\": 22.5,\r\n      \"feci\": true,\r\n      \"termDays\": 22.5,\r\n      \"termDescription\": \"\",\r\n      \"ltv\": 22.5,\r\n      \"finantialConditions\": \"\",\r\n      \"environmentRiskCategory\": 22.5,\r\n      \"covenant\": \"\",\r\n      \"environmentRiskOpinion\": \"\",\r\n      \"finantialCovenant\": \"\",\r\n      \"legalDocumentation\": \"\",\r\n      \"creditRiskOpinion\": \"\",\r\n      \"provision\": \"\"\r\n      }\r\n      */\n\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data); //saveProposalData\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async consultarFacilidadPropCred(facilityId, requestId) {\n    //retorna la Data de Busqueda y Descarte para un proceso\n    try {\n      var params = {\n        facilityId: facilityId,\n        requestId: requestId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\n      /*\r\n            const json ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n      }\r\n      }\r\n            */\n\n      return result.facilitiesDetailDTO;\n    } catch (err) {\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - DESEMBOLSO///////\n\n\n  async consultarListaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\n\n      return result.disbursements;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":\"2\",\r\n      \"disbursementTypeId\":\"disbursementTypeId2\",\r\n      \"observations\":\"observations2\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"disbursementTypeId\":\"update2\",\r\n      \"observations\":\"updated obs\",\r\n      \"status\":true,\r\n      \"disbursementId\":2\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementId: disbursementId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\n\n\n  async consultarListaProgramaPagoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n      ]\r\n      }*/\n\n      return result.paymentProgramDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\"    \r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*{\r\n      \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"paymentProgramId\": \"5\"\r\n      }*/\n\n      if (result.serviceResponseTO.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarProgramaPagoPropCred(data) {\n    try {\n      /*{\t\r\n      \"facilityId\": 2,\r\n      \"paymentProgram\": \"tt1\",\r\n      \"observations\": \"desc1\",\r\n      \"paymentProgramId\":5, \r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        paymentProgramId: paymentProgramId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - COMISION///////\n\n\n  async consultarComisionPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\n      /*{\r\n      \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      }\r\n      }*/\n\n      return result.commission;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":2,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarComisionPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\":1,\r\n      \"commissionType\":\"Comision\",\r\n      \"amount\":500000,\r\n      \"observation\":\"Prestamos\",\r\n      \"status\":true,\r\n      \"commissionId\":14\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarComisionPropCred(facilityId, commissionId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        commissionId: commissionId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\n\n\n  async consultarFormaDesembolsoPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\n      /*{\r\n      \"facilityId\": 2,\r\n      \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }\r\n      } */\n\n      return result.disbursementForm;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\": \"2\",\r\n      \"typedistrenchment\":\"tipodesembolso \",\r\n      \"description\":\"description ingreso\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"disbursementId\": 2,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFormaDesembolsoPropCred(data) {\n    try {\n      /*{\r\n      \"facilityid\":2,\r\n      \"typedistrenchment\":\"tipodesembolso\",\r\n      \"description\":\"description actualizada\",\r\n      \"status\":true,\r\n      \"disbursementid\":1\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        disbursementFormId: disbursementFormId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - GARANTIA///////\n\n\n  async consultarGarantiaPropCred(facilityId) {\n    try {\n      var params = {\n        requestId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\n      /*{\r\n      \"requestId\": \"2\",\r\n      \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result.guarantees;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"guaranteeId\": 1,\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.status.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarGarantiaPropCred(data) {\n    try {\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeId\": 1,\r\n      \"guaranteeTypeName\": \"2\",\r\n      \"commercialValue\": 655,\r\n      \"fastValue\": 800,\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": 700,\r\n      \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n      \"signature\": \"firma prueba actualizada\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n      \"status\": false\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\n    try {\n      var data = {\n        requestId: facilityId,\n        guaranteeId: guaranteeId\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarEmpresaRelacionada: \", err);\n    }\n\n    return undefined;\n  } ////PROPUSTA DE CREDITO - FIANZAS///////\n\n\n  async consultarFianzaPropCred(facilityId) {\n    try {\n      var params = {\n        facilityId: facilityId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\n      /*{\r\n      \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.bails;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarFianzaPropCred(data) {\n    try {\n      /*{\r\n      \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n      }\r\n      */\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      if (result.statusCode === \"200\") {\n        return result;\n      }\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarFianzaPropCred(facilityId, idBail) {\n    try {\n      var data = {\n        facilityId: facilityId,\n        idBail: idBail\n      };\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } /////ANALISIS DE CREDITO //////\n  ///////////////////////////////\n  //Balance Pasivo\n\n\n  async consultarBalancePasivoAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\n      /*\r\n      {\r\n      \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n      ],\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }\r\n      */\n\n      return result.passiveCapitalBalance;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":4,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2018,\r\n      \"year2\": 2019,\r\n      \"year3\": 2020,\r\n      \"year4\": 2021,\r\n      \"presentYear\":2022\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarBalancePasivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":2,\r\n      \"itemPassiveId\":2,\r\n      \"itemPassive\":\"ITEM PASIVO\", \r\n      \"year1\": 2017,\r\n      \"year2\": 2018,\r\n      \"year3\": 2019,\r\n      \"year4\": 2020,\r\n      \"presentYear\":2021,\r\n      \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemPassiveId: itemPassiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async consultarEstadoOrigenAplicacionesAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\n\n      return result.sourceApplicationsStates;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarEstadoOrigenAplicacionesAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"sourceApplicationItemId\": 4,\r\n      \"sourceApplicationItem\": \"origen 2up\",\r\n      \"year1\": 55,\r\n      \"year2\": 66,\r\n      \"year3\": 77,\r\n      \"year4\": 88,\r\n      \"presentYear\": 99,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        sourceApplicationItemId: sourceApplicationItemId\n      };\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async consultarBalanceActivoAC(transactId) {\n    try {\n      var params = {\n        requestId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n      },\r\n      \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n      ]\r\n      } */\n\n      return result.activeBalances;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoBalanceActivoAC(data) {\n    try {\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarBalanceActivoAC(data) {\n    try {\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\n    try {\n      var data = {\n        requestId: transactId,\n        itemActiveId: itemActiveId\n      };\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //Balance Activo\n\n\n  async consultarIndicadorAC(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"indicatorDTOList\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 1,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.55,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.55,\r\n              \"status\": true\r\n          },\r\n          {\r\n              \"transactId\": 1,\r\n              \"itemIndicatorsId\": 2,\r\n              \"itemIndicators\": \"fghf\",\r\n              \"year1\": 0.56,\r\n              \"year2\": 0.55,\r\n              \"year3\": 0.55,\r\n              \"year4\": 0.55,\r\n              \"presentYear\": 0.56,\r\n              \"status\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.indicatorDTOList;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoIndicadorAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicators\": \"fghf\",\r\n      \"year1\": 0.55,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.55\r\n      }\r\n        */\n      var result = await this.post(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarIndicadorAC(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"itemIndicatorsId\": 1,\r\n      \"itemIndicators\": \"1111\",\r\n      \"year1\": 0.56,\r\n      \"year2\": 0.55,\r\n      \"year3\": 0.55,\r\n      \"year4\": 0.55,\r\n      \"presentYear\": 0.56,\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_INDICADORAC, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarIndicadorAC(transactId, itemIndicatorsId) {\n    try {\n      var data = {\n        transactId: transactId,\n        itemIndicatorsId: itemIndicatorsId\n      };\n      var result = await this.del(url.URL_BACKEND_INDICADORAC + \"?\" + qs.stringify(data)); //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\n\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //POLITICAS DE CREDITOS - INFORME FINANCIERO\n\n\n  async consultarPoliticaCredito(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\n      /*{\r\n      \"creditPolicy\": [\r\n          {\r\n              \"transactId\": 1,\r\n              \"debtorId\": 7,\r\n              \"itemId\": 1,\r\n              \"parameter\": \"Reglas\",\r\n              \"condition\": \"Restriccion\",\r\n              \"comply\": false,\r\n              \"observations\": \"Politicas de Credito\",\r\n              \"status\": true\r\n          }\r\n      ],\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción exitosa\"\r\n      }\r\n      }*/\n\n      return result.creditPolicy;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async nuevoPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        itemId: itemId\n      };\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } //POLITICAS DE CREDITOS - INFORME FINANCIERO\n\n\n  async consultarInformiacionFinancieraFiadores(transactId) {\n    try {\n      var params = {\n        transactId: transactId\n      };\n      var data = qs.stringify(params);\n      var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\n      /*{\r\n      \"finantialInfoGuarantor\": [],\r\n      \"status\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin contenido\"\r\n      }\r\n      }*/\n\n      return result.finantialInfoGuarantor;\n    } catch (err) {\n      console.error(\"api consultarListaDesembolsoPropCred: \", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarInformacionFinancieraFiadores(data) {\n    try {\n      /*{\r\n      \"transactId\": 1,\r\n      \"debtorId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async actualizarPoliticaCredito(data) {\n    try {\n      /*{\r\n      \"transactId\": 2,\r\n      \"debtorId\": 7,\r\n      \"itemId\": 7,\r\n      \"parameter\": \"Reglas\",\r\n      \"condition\": \"Restriccion\",\r\n      \"comply\": false,\r\n      \"observations\": \"Politicas de Credito\",\r\n      \"status\": true\r\n      }\r\n      */\n      data[\"status\"] = true;\n      var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data); //saveProposalData\n      //OK\n\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      }*/\n\n      return result;\n    } catch (err) {\n      console.error(\"api guardarDesembolsoPropCred\", err);\n    }\n\n    return undefined;\n  }\n\n  async eliminarPoliticaCredit(transactId, debtorId, itemId) {\n    try {\n      var data = {\n        transactId: transactId,\n        debtorId: debtorId,\n        itemId: itemId\n      };\n      var result = await this.del(url.URL_BACKEND_POLITICACREDITO + \"?\" + qs.stringify(data));\n      return result; //WatchlistModel.fromJson(result);\n    } catch (err) {\n      console.error(\"api eliminarFianzaPropCred: \", err);\n    }\n\n    return undefined;\n  } ///////////// CATALOGOS //////////////////////\n  /////////////////////////////////////////\n  //LISTA DE TIPO DE IDENTIFICACION\n\n\n  async consultarCatalogoTipoIdentificacion() {\n    try {\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\n      /*\r\n      \"status\": {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"identificationType\": [\r\n      {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n      },\r\n      {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n      },\r\n      }\r\n      */\n\n      if (result.status.statusCode === \"200\") {\n        var data = [];\n\n        for (const identif of result.identificationType) {\n          if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\n            data.push(identif);\n          }\n        }\n\n        return data;\n      }\n    } catch (err) {\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\n    }\n\n    return undefined;\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\n  } //CC-320\tConsultarListaClasificacionRiesgo\n\n\n  async retrieveRiskClassification() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.riskClassification;\n    } catch (err) {\n      console.error(\"api retrieveRiskClassification: \", err);\n    }\n\n    return undefined;\n  } //CC-319\tConsultarListaTipoRevision\n\n\n  async retrieveRevisionType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\n      /*{\r\n      \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n      ]\r\n      }*/\n\n      return result.revisionType;\n    } catch (err) {\n      console.error(\"api retrieveRevisionType: \", err);\n    }\n\n    return undefined;\n  } //CC-321\tconsultarListaTipoPropuesta\n\n\n  async retrieveProposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.proposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-325\tconsultarListaTipoSubPropuesta\n\n\n  async retrieveSubproposalType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.subproposalType;\n    } catch (err) {\n      console.error(\"api retrieveProposalType: \", err);\n    }\n\n    return undefined;\n  } //CC-322\tconsultarListaTipoFacilidad\n\n\n  async retrieveFacilityType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.facilityType;\n    } catch (err) {\n      console.error(\"api retrieveFacilityType: \", err);\n    }\n\n    return undefined;\n  } //CC-324\tconsultarListaTipoFianza\n\n\n  async retrieveBailType() {\n    try {\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n      }*/\n\n      return result.bailType;\n    } catch (err) {\n      console.error(\"api retrieveBailType: \", err);\n    }\n\n    return undefined;\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/BackendServices/Services.js"],"names":["BusquedaDescarteModel","UsuarioProspectoModel","DocumentoAnexoModel","IgrInboxResultModel","ApiService","url","opt","qs","moment","Services","guardarDocumentoAnexo","data","result","post","URL_BACKEND_DOCUMENTS","status","statusCode","eliminarDocumentoAnexo","stringify","del","console","log","consultarDocumentosAnexos","params","get","URL_BACKEND_DOCUMENTSANEXOS","attachments","undefined","guardarHistorico","ULR_BACKEND_HISTORICO","err","error","searchLogs","logs","response","guardarDatosGeneralesIGR","URL_BACKEND_DATOSGENERALES_IGR","put","consultarDatosGeneralesIGR","transactId","statusService","guardarDatosEmpresaIGR","URL_BACKEND_DATOSEMPRESA_IGR","consultarDatosEmpresaIGR","guardarHistorialEmpresaIGR","URL_BACKEND_HISTORIALEMPRESA","consultarHistorialEmpresaIGR","processId","PROCESS_INFORMEGESTION","activityId","ACT_HISTORIAEMPRESA","consultarDatosAccionistas","URL_BACKEND_ACCIONISTASECCION","shareholders","nuevoAccionista","URL_BACKEND_ACCIONISTA","actualizarAccionista","eliminarAccionista","guardarSeccionAccionista","description","observations","infoDate","Number","format","consultarSeccionAccionista","guardarEstructuraEmpresaIGR","URL_BACKEND_ESTRUCTURAEMPRESA","consultarEstructuraEmpresaIGR","consultarDatosGobiernoCorporativo","URL_BACKEND_GOBIERNOCORPORATIVO","nuevoGobiernoCorporativo","actualizarGobiernoCorporativo","eliminarGobiernoCoporativo","consultarDatosRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONAL","nuevoRelevoGeneracional","actualizarRelevoGeneracional","eliminarRelevoGeneracional","guardarSeccionRelevoGeneracional","URL_BACKEND_RELEVOGENERACIONALSECTION","consultarSeccionRelevoGeneracional","getManagementRelaysInfoResponseDTO","guardarFlujoOperativo","URL_BACKEND_FLUJOOPERATIVO_IGR","consultarFlujoOperativo","vidtramite","vidproceso","vidactividad","ACT_FLUJOOPERATIVO","consultarDatosEmpresaRelacionada","URL_BACKEND_EMPRESARELACIONADA","nuevoEmpresaRelacionada","actualizarEmpresaRelacionada","eliminarEmpresaRelacionada","guardarSeccionEmpresaRelacionada","trasactId","URL_BACKEND_EMPRESARELACIONADASECCION","consultarListaClientesIGR","URL_BACKEND_INFOCLIENTE","nuevoClienteIGR","actualizarClienteIGR","URL_BACKEND_INFOCLIENTEINFO","eliminarClienteIGR","guardarSeccionClienteIGR","URL_BACKEND_INFOCLIENTESECCION","consultarSeccionClienteIGR","clientSectionCompaniesDTO","consultarListaProveedoresIGR","URL_BACKEND_IGR_INFOPROVEEDORES","nuevoProveedorIGR","actualizarProveedorIGR","eliminarProveedorIGR","guardarSeccionProveedorIGR","URL_BACKEND_IGR_INFOPROVEEDORESSECCION","consultarSeccionProveedorIGR","suppliersList","consultarListaReciprocidadIGR","URL_BACKEND_IGR_RECIPROCIDAD","nuevoReciprocidadIGR","actualizarReciprocidadIGR","eliminarReciprocidadIGR","guardarSeccionReciprocidad","URL_BACKEND_IGR_RECIPROCIDADSECCION","consultarSeccionReciprocidad","consultarActivosFijosIGR","ACT_FACILIDADACTIVOSFIJOS","URL_BACKEND_IGR_ACTIVOSFIJOS","serviceStatus","nuevoActivosFijosIGR","actualizarActivosFijosIGR","eliminarActivosFijosIGR","guardarSeccionActivosFijosIGR","URL_BACKEND_IGR_ACTIVOSFIJOSSECCION","consultarSegurosEmpresaIGR","URL_BACKEND_IGR_SEGUROSEMPRESA","companyInsurance","nuevoSegurosEmpresaIGR","actualizarSegurosEmpresaIGR","eliminarSegurosEmpresaIGR","guardarArquitecturaEmpresarialIGR","URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL","consultarArquitecturaEmpresarialIGR","ACT_ARQUITECTURAEMPRESARIAL","consultarCompetidores","URL_BACKEND_COMPETIDORESMERCADO","nuevoCompetidorIGR","actualizarCompetidorIGR","eliminarCompetidorIGR","consultarProyecciones","URL_BACKEND_PROYECCIONES","guardarProyecciones","consultarGarantes","URL_BACKEND_GARANTES","guarantors","nuevoGarante","actualizarGarante","eliminarGarante","consultarSowActualIGR","URL_BACKEND_PROPUESTACREDITO_SOWACTUAL","nuevoSowActualIGR","actualizarSowActualIGR","eliminarSowActualIGR","consultarSowPropuestoIGR","URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO","nuevoSowPropuestoIGR","actualizarSowPropuestoIGR","eliminarSowPropuestoIGR","consultarAspectosAmbientalesIGR","URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES","guardarAspectosAmbientalesIGR","consultarRelacionesBancariasDeudasCP","URL_BACKEND_IGR_DEUDASBANCARIACP","nuevoRelacionesBancariasDeudasCP","actualizarRelacionesBancariasDeudasCP","eliminarRelacionesBancariasDeudasCP","consultarRelacionesBancariasDeudasLP","URL_BACKEND_IGR_DEUDASBANCARIALP","nuevoRelacionesBancariasDeudasLP","actualizarRelacionesBancariasDeudasLP","eliminarRelacionesBancariasDeudasLP","consultarRelacionesBancariasSeccionIGR","URL_BACKEND_IGR_DEUDASBANCARIASECCION","guardarRelacionesBancariasSeccionIGR","consultarFlujoCajaDollar","URL_BACKEND_IGR_FLUJOCAJADOLLAR","nuevoFlujoCajaDollar","actualizarFlujoCajaDollar","eliminarFlujoCajaDollar","consultarFlujoCajaServicioDeudas","URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS","nuevoFlujoCajaServicioDeudas","actualizarFlujoCajaServicioDeudas","eliminarFlujoCajaServicioDeudas","consultarFlujoCajaEgresos","URL_BACKEND_IGR_FLUJOCAJAEGRESO","nuevoFlujoCajaEgresos","actualizarFlujoCajaEgresos","eliminarFlujoCajaEgresos","consultarFlujoCajaCargaTrabajo","URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO","nuevoFlujoCajaCargaTrabajo","actualizarFlujoCajaCargaTrabajo","eliminarFlujoCajaCargaTrabajo","consultarFlujoCajaIngresoFacturacion","URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION","nuevoFlujoCajaIngresoFacturacion","actualizarFlujoCajaIngresoFacturacion","eliminarFlujoCajaIngresoFacturacion","consultarFlujoCajaCobranzas","URL_BACKEND_IGR_FLUJOCAJACOBRANZAS","nuevoFlujoCajaCobranzas","actualizarFlujoCajaCobranzas","eliminarFlujoCajaCobranzas","consultarMovimientosCuentasIGR","URL_BACKEND_IGR_MOVIMIENTOCUENTAS","movements","nuevoMovimientosCuentasIGR","actualizarMovimientosCuentasIGR","eliminarMovimientosCuentasIGR","guardarSeccionMovimientosCuentas","URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION","consultarSeccionMovimientosCuentas","consultarCuentasCobrarIGR","ACT_CUENTASPORCOBRAR","URL_BACKEND_IGR_CUENTASCOBRAR","accountsReceivable","nuevoCuentasCobrarIGR","actualizarCuentasCobrarIGR","eliminarCuentasCobrarIGR","consultarCapexIGR","URL_BACKEND_IGR_CAPEX","nuevoCapexIGR","actualizarCapexIGR","eliminarCapexIGR","consultarCapexPresupuestoIGR","URL_BACKEND_IGR_CAPEXPRESUPUESTO","nuevoCapexPresupuestoIGR","actualizarCapexPresupuestoIGR","eliminarCapexPresupuestoIGR","consultarCapexDetalleProyectoIGR","URL_BACKEND_IGR_CAPEXDETALLESPROYECTO","nuevoCapexDetalleProyectoIGR","actualizarCapexDetalleProyectoIGR","eliminarCapexDetalleProyectoIGR","consultarRecomendacionesIGR","URL_BACKEND_IGR_RECOMENDACIONES","guardarRecomendacionesIGR","consultarMatrizOtrosBancosIGR","URL_BACKEND_IGR_MATRIZOTROSBANCOS","nuevoMatrizOtrosBancosIGR","actualizarMatrizOtrosBancosIGR","eliminarMatrizOtrosBancosIGR","consultarMatrizExpedientesIGR","URL_BACKEND_IGR_MATRIZEXPEDIENTES","nuevoMatrizExpedientesIGR","actualizarMatrizExpedientesIGR","eliminarMatrizExpedientesIGR","consultarMatrizNuevosNegociosIGR","URL_BACKEND_IGR_MATRIZNUEVONEGOCIO","nuevoMatrizNuevosNegociosIGR","actualizarMatrizNuevosNegociosIGR","eliminarMatrizNuevosNegociosIGR","consultarMatrizRentabilidadIGR","URL_BACKEND_IGR_MATRIZRENTABILIDAD","nuevoMatrizRentabilidadIGR","actualizarMatrizRentabilidadIGR","eliminarMatrizRentabilidadIGR","guardarMatrizSeccionIGR","URL_BACKEND_IGR_MATRIZSECCION","consultarMatrizSeccionIGR","competitiveMatrix","consultarMatrizPosicionBanescoIGR","URL_BACKEND_IGR_MATRIZPOSICIONBANESCO","positions","nuevoMatrizPosicionBanescoIGR","actualizarMatrizPosicionBanescoIGR","eliminarMatrizPosicionBanescoIGR","consultarMatrizTransaccionBanescoIGR","URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO","transactionals","nuevoMatrizTransaccionBanescoIGR","actualizarMatrizTransaccionBanescoIGR","eliminarMatrizTransaccionBanescoIGR","guardarNegocioObtenerIGR","URL_BACKEND_NEGOCIOOBTENER","consultarNegocioObtenerIGR","guardarBusquedaDescarte","model","getSaveModel","URL_BACKEND_BUSQUEDADESCARTE","consultarBusquedaDescarte","PROCESS_BUSQUEDADESCARTE","ACT_NONE","fromJson","guardarUsuarioProspecto","customerId","length","userModel","getUpdateModel","URL_BACKEND_USUARIOPROSPECTO","consultarUsuarioProspecto","costumer","guardarCumplimiento","compliance","observationsSearchDiscard","approved","observationsComp","URL_BACKEND_CUMPLIMIENTO","consultarTramiteInbox","username","responsible","URL_BACKEND_BANDEJAENTRADA_TRAMITE","actualizarTramiteInbox","consultarListaExclusion","URL_BACKEND_LISTAEXCLUSION","guardarListaExclusion","transaccionId","exclusionId","consultarListaExclusionMarcada","URL_BACKEND_LISTAEXCLUSION_MARCADA","eliminarListaExclusionMarcada","nuevoDatosGeneralesPropCred","URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES","actualizarDatosGeneralesPropCred","consultarDatosGeneralesPropCred","nuevoFacilidadPropCred","URL_BACKEND_PROPUESTACREDITO_FACILIDAD","facilityId","actualizarFacilidadPropCred","requestId","consultarFacilidadPropCred","facilitiesDetailDTO","consultarListaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS","disbursements","nuevoDesembolsoPropCred","actualizarDesembolsoPropCred","eliminarDesembolsoPropCred","disbursementId","consultarListaProgramaPagoPropCred","URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO","paymentProgramDTOList","nuevoProgramaPagoPropCred","serviceResponseTO","actualizarProgramaPagoPropCred","eliminarProgramaPagoPropCred","paymentProgramId","consultarComisionPropCred","URL_BACKEND_PROPUESTACREDITO_COMISION","commission","nuevoComisionPropCred","actualizarComisionPropCred","eliminarComisionPropCred","commissionId","consultarFormaDesembolsoPropCred","URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO","disbursementForm","nuevoFormaDesembolsoPropCred","actualizarFormaDesembolsoPropCred","eliminarFormaDesembolsoPropCred","disbursementFormId","consultarGarantiaPropCred","URL_BACKEND_PROPUESTACREDITO_GARANTIA","guarantees","nuevoGarantiaPropCred","actualizarGarantiaPropCred","eliminarGarantiaPropCred","guaranteeId","consultarFianzaPropCred","URL_BACKEND_PROPUESTACREDITO_FIANZA","bails","nuevoFianzaPropCred","actualizarFianzaPropCred","eliminarFianzaPropCred","idBail","URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR","consultarBalancePasivoAC","URL_BACKEND_BALANCEPASIVOAC","passiveCapitalBalance","nuevoBalancePasivoAC","actualizarBalancePasivoAC","eliminarBalancePasivoAC","itemPassiveId","consultarEstadoOrigenAplicacionesAC","URL_BACKEND_ESTADOORIGENAPLICACIONAC","sourceApplicationsStates","nuevoEstadoOrigenAplicacionesAC","actualizarEstadoOrigenAplicacionesAC","eliminarEstadoOrigenAplicacionesAC","sourceApplicationItemId","consultarBalanceActivoAC","URL_BACKEND_BALANCEACTIVOAC","activeBalances","nuevoBalanceActivoAC","actualizarBalanceActivoAC","eliminarBalanceActivoAC","itemActiveId","consultarIndicadorAC","URL_BACKEND_INDICADORAC","indicatorDTOList","nuevoIndicadorAC","actualizarIndicadorAC","eliminarIndicadorAC","itemIndicatorsId","consultarPoliticaCredito","URL_BACKEND_POLITICACREDITO","creditPolicy","nuevoPoliticaCredito","actualizarPoliticaCredito","eliminarPoliticaCredit","debtorId","itemId","consultarInformiacionFinancieraFiadores","finantialInfoGuarantor","actualizarInformacionFinancieraFiadores","consultarCatalogoTipoIdentificacion","ULR_BACKEND_TIPODEIDENTIFICACION","identif","identificationType","push","retrieveRiskClassification","URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO","riskClassification","retrieveRevisionType","URL_BACKEND_CATALOGO_TIPOREVISION","revisionType","retrieveProposalType","URL_BACKEND_CATALOGO_TIPOPROPUESTA","proposalType","retrieveSubproposalType","URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA","subproposalType","retrieveFacilityType","URL_BACKEND_CATALOGO_TIPOFACILIDAD","facilityType","retrieveBailType","URL_BACKEND_CATALOGO_TIPOFIANZA","bailType"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMA,MAAAA,IAAI,CAAC,MAAD,CAAJ,GAAeH,MAAM,GAAGuD,MAAT,CAAgB,YAAhB,CAAf,CA7BE,CA6B2C;;AAC7CpD,MAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiB,IAAjB;AAEA,UAAIC,MAAM,GAAG,MAAM,KAAKyB,GAAL,CAAShC,GAAG,CAAC6T,2CAAb,EAA0DvT,IAA1D,CAAnB,CAhCE,CAgCiF;;AAEnF,UAAIC,MAAM,CAACI,UAAP,KAAsB,KAA1B,EAAiC;AAC/B,eAAOJ,MAAP;AACD;AACF,KArCD,CAsCA,OAAOkB,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,mCAAd,EAAmDD,GAAnD;AACD;;AACD,WAAOH,SAAP;AACD;;AACoC,QAA/ByS,+BAA+B,CAAC7R,UAAD,EAAa;AAAE;AAClD,QAAI;AACF,UAAIhB,MAAM,GAAG;AAAEgB,QAAAA,UAAU,EAAEA;AAAd,OAAb;AACA,UAAI5B,IAAI,GAAGJ,EAAE,CAACW,SAAH,CAAaK,MAAb,CAAX;AACA,UAAIX,MAAM,GAAG,MAAM,KAAKY,GAAL,CAASnB,GAAG,CAAC6T,2CAAJ,GAAkD,GAAlD,GAAwDvT,IAAjE,CAAnB;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM,UAAIC,MAAM,CAACG,MAAP,CAAcC,UAAd,KAA6B,KAAjC,EA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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO5Z,MAAM,CAAC6Z,YAAd;AACD,KAvCD,CAwCA,OAAO3Y,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOH,SAAP;AACD,GA1sN8C,CA4sN/C;;;AAC0B,QAApB+Y,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAI9Z,MAAM,GAAG,MAAM,KAAKY,GAAL,CAASnB,GAAG,CAACsa,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAO/Z,MAAM,CAACga,YAAd;AACD,KA3DD,CA4DA,OAAO9Y,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOH,SAAP;AACD,GA9wN8C,CAgxN/C;;;AAC6B,QAAvBkZ,uBAAuB,GAAG;AAC9B,QAAI;AAEF,UAAIja,MAAM,GAAG,MAAM,KAAKY,GAAL,CAASnB,GAAG,CAACya,qCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOla,MAAM,CAACma,eAAd;AACD,KAtDD,CAuDA,OAAOjZ,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOH,SAAP;AACD,GA70N8C,CA+0N/C;;;AAC0B,QAApBqZ,oBAAoB,GAAG;AAC3B,QAAI;AAEF,UAAIpa,MAAM,GAAG,MAAM,KAAKY,GAAL,CAASnB,GAAG,CAAC4a,kCAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOra,MAAM,CAACsa,YAAd;AACD,KA/ED,CAgFA,OAAOpZ,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,4BAAd,EAA4CD,GAA5C;AACD;;AACD,WAAOH,SAAP;AACD,GAr6N8C,CAu6N/C;;;AACsB,QAAhBwZ,gBAAgB,GAAG;AACvB,QAAI;AAEF,UAAIva,MAAM,GAAG,MAAM,KAAKY,GAAL,CAASnB,GAAG,CAAC+a,+BAAb,CAAnB;AAEA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEM,aAAOxa,MAAM,CAACya,QAAd;AACD,KAjDD,CAkDA,OAAOvZ,GAAP,EAAY;AACVV,MAAAA,OAAO,CAACW,KAAR,CAAc,wBAAd,EAAwCD,GAAxC;AACD;;AACD,WAAOH,SAAP;AACD;;AA/9N8C","sourcesContent":["import { BusquedaDescarteModel, UsuarioProspectoModel } from \"../../models\";\r\nimport DocumentoAnexoModel from \"../../models/Backend/DocumentoAnexoModel\";\r\nimport IgrInboxResultModel from \"../../models/InformeGestion/InboxResultModel\";\r\nimport ApiService from \"../ApiServiceBackend\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport * as opt from \"../../helpers/options_helper\"\r\nimport qs from 'qs';\r\nimport moment from \"moment\";\r\n\r\nexport default class Services extends ApiService {\r\n\r\n  async guardarDocumentoAnexo(data) {\r\n\r\n    var result = await this.post(url.URL_BACKEND_DOCUMENTS, data);\r\n    /*\r\n    {\r\n    \"documentIdentification\": 291,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n    */\r\n    if (result.status.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async eliminarDocumentoAnexo(data) {\r\n    data = qs.stringify(data);\r\n    var result = await this.del(url.URL_BACKEND_DOCUMENTS + \"?\" + data);\r\n    /*OK\r\n    {\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n    */\r\n    console.log(\"eliminarDocumentoAnexo\", result);\r\n    if (result.statusCode === \"200\") { return true; }\r\n\r\n    return false;\r\n  }\r\n\r\n  async consultarDocumentosAnexos(params) {\r\n\r\n    //params = {transactId:55,processId:'fff',activityId:'458-956-875'}\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_DOCUMENTSANEXOS + \"?\" + data);\r\n\r\n    /*\r\n    {\r\n    \"attachments\": [\r\n        {\r\n            \"transactId\": 8,\r\n            \"documentIdentification\": 291,\r\n            \"fileName\": \"text\",\r\n            \"fileDescription\": \"description\",\r\n            \"onBaseIdentification\": \"556\",\r\n            \"processId\": 5,\r\n            \"activityId\": 1,\r\n            \"date\": \"2022-01-23\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n    */\r\n\r\n    if (result.status.statusCode === \"200\") {\r\n      return result.attachments;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                  Recibimos el body desde la pantalla, y Guardamos la bitacora                  */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarHistorico(data) {\r\n    try {\r\n      var result = await this.post(url.ULR_BACKEND_HISTORICO, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error guardarHistorico\", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*             Consultamos todos los datos de las bitacoras, pasamos las variables get            */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async searchLogs(params) {\r\n\r\n    try {\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.ULR_BACKEND_HISTORICO + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        //return result.logs;\r\n        return {status:200, result: result.logs};\r\n\r\n      }  \r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarHistorico\", err)\r\n      return {status:err.response.status, error: err.response.data}; //errorMessage, //errorCode\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS GENERALES///////\r\n  async guardarDatosGeneralesIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 2,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 up\",\r\n        \"name\": \"3 up\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 up\",\r\n        \"name\": \"5 up\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 up\",\r\n        \"name\": \"7 up\"\r\n    }\r\n      }\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSGENERALES_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSGENERALES_IGR + \"?\" + data);\r\n\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"economicGroup\": {\r\n        \"code\": \"2 save\",\r\n        \"name\": \"3 save\"\r\n    },\r\n    \"economicActivity\": {\r\n        \"code\": \"4 save\",\r\n        \"name\": \"5 save\"\r\n    },\r\n    \"bank\": {\r\n        \"code\": \"6 save\",\r\n        \"name\": \"7 save\"\r\n    },\r\n    \"status\": true,\r\n    \"identificationType\": \"RUC\",\r\n    \"customerDocumentId\": \"00000081\",\r\n    \"customerNumberT24\": \"\",\r\n    \"firstName\": \"Rey\",\r\n    \"secondName\": \"\",\r\n    \"firstLastName\": \"\",\r\n    \"secondLastName\": \"\",\r\n    \"statusService\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n} */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR DATOS EMPRESA///////\r\n  async guardarDatosEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"country\": {\r\n        \"code\": \"2\",\r\n        \"name\": \"3\"\r\n    },\r\n    \"province\": {\r\n        \"code\": \"4\",\r\n        \"name\": \"5\"\r\n    },\r\n    \"district\": {\r\n        \"code\": \"6\",\r\n        \"name\": \"7\"\r\n    },\r\n    \"township\": {\r\n        \"code\": \"8\",\r\n        \"name\": \"9\"\r\n    },\r\n    \"city\": {\r\n        \"code\": \"10\",\r\n        \"name\": \"11\"\r\n    },\r\n    \"referencePoint\": \"12\",\r\n    \"residency\": \"13\",\r\n    \"houseNumber\": \"14\",\r\n    \"phoneNumber\": 15,\r\n    \"mobileNumber\": 16,\r\n    \"workNumber\": 17,\r\n    \"email\": \"18\",\r\n    \"sector\": {\r\n        \"code\": \"19\",\r\n        \"name\": \"20\"\r\n    },\r\n    \"subSector\": {\r\n        \"code\": \"21\",\r\n        \"name\": \"22\"\r\n    },\r\n    \"exclusion\": true,\r\n    \"sustainable\": true\r\n\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_DATOSEMPRESA_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_DATOSEMPRESA_IGR + \"?\" + data);\r\n      /*\r\n      {\r\n          \"transactId\": 44,\r\n          \"country\": {\r\n              \"code\": \"2\",\r\n              \"name\": \"3\"\r\n          },\r\n          \"province\": {\r\n              \"code\": \"4\",\r\n              \"name\": \"5\"\r\n          },\r\n          \"district\": {\r\n              \"code\": \"6\",\r\n              \"name\": \"7\"\r\n          },\r\n          \"township\": {\r\n              \"code\": \"8\",\r\n              \"name\": \"9\"\r\n          },\r\n          \"city\": {\r\n              \"code\": \"10\",\r\n              \"name\": \"11\"\r\n          },\r\n          \"referencePoint\": \"12\",\r\n          \"residency\": \"13\",\r\n          \"houseNumber\": \"14\",\r\n          \"phoneNumber\": 15,\r\n          \"mobileNumber\": 16,\r\n          \"workNumber\": 17,\r\n          \"email\": \"18\",\r\n          \"sector\": {\r\n              \"code\": \"19\",\r\n              \"name\": \"20\"\r\n          },\r\n          \"subSector\": {\r\n              \"code\": \"21\",\r\n              \"name\": \"22\"\r\n          },\r\n          \"exclusion\": true,\r\n          \"sustainable\": true,\r\n          \"status\": true,\r\n          \"identificationType\": \"0\",\r\n          \"customerDocumentId\": \"00000030\",\r\n          \"customerNumberT24\": \"\",\r\n          \"firstName\": \"Novey\",\r\n          \"secondName\": \"\",\r\n          \"firstLastName\": \"\",\r\n          \"secondLastName\": \"\",\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR HISTORIAL EMPRESA///////\r\n  async guardarHistorialEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"8\",\r\n\"description\":\"description2\",\r\n\"employeesNumber\":\"346\",\r\n\"details\":\"detalles2\",\r\n\"status\":true\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_HISTORIALEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarHistorialEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_HISTORIALEMPRESA + \"?\" + data);\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFO ACCIONISTAS///////\r\n  async consultarDatosAccionistas(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n    ],\r\n    \"observations\": \"dd5\",\r\n    \"infoDate\": \"2022-01-10\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.shareholders;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1643411338,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarAccionista(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n  \"shareholderId\": 1,\r\n  \"personType\":\"N\",\r\n  \"identificationType\":\"CIP\",\r\n  \"identificationNumber\":\"8-000-888\",\r\n  \"shareholderFirstName\":\"vprimernombresocio character varying\",\r\n  \"shareholderMiddleName\":\"vsegundonombresocio character varying\",\r\n  \"shareholderFirstSurname\":\"vprimerapellidosocio character varying\",\r\n  \"shareholderSecondSurname\":\"vsegundoapellidosocio character varying\",\r\n  \"nationality\": {\r\n    \"code\": \"vidnacionalidad character varying\",\r\n    \"name\": \"vnacionalidad character varying\"\r\n  },\r\n  \"birthDate\":1643411338,\r\n  \"participation\":25,\r\n  \"yearsExperience\":30,\r\n  \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarAccionista(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n    \"shareholderId\":1\r\n}\r\n       */\r\n      var result = await this.del(url.URL_BACKEND_ACCIONISTA, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionAccionista(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 107,\r\n    \"description\": \"dd5\",\r\n    \"infoDate\":1643723937\r\n}\r\n      */\r\n      data = {\r\n        transactId: data.transactId,\r\n        description: data.observations,\r\n        infoDate: Number(moment().format(\"YYYYMMDD\"))\r\n      }\r\n      // data[\"date\"] = \"1980-11-11\";\r\n      // data[\"jsonData\"] = \"[{}]\";\r\n\r\n      var result = await this.post(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ACCIONISTASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionAccionista(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ACCIONISTASECCION + \"?\" + data);\r\n\r\n      /*\r\n       {\r\n    \"shareholders\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"personType\": \"N\",\r\n            \"identificationType\": \"CIP\",\r\n            \"identificationNumber\": \"8-000-888\",\r\n            \"shareholderFirstName\": \"vprimernombresocio character varying\",\r\n            \"shareholderMiddleName\": \"vsegundonombresocio character varying\",\r\n            \"shareholderFirstSurname\": \"vprimerapellidosocio character varying\",\r\n            \"shareholderSecondSurname\": \"vsegundoapellidosocio character varying\",\r\n            \"nationalityId\": \"vidnacionalidad character varying\",\r\n            \"nationality\": \"vnacionalidad character varying\",\r\n            \"birthDate\": \"1970-01-19\",\r\n            \"participation\": 25,\r\n            \"yearsExperience\": 30,\r\n            \"status\": true,\r\n            \"shareholderId\": 2\r\n        }\r\n    ],\r\n    \"observations\": \"dd5\",\r\n    \"infoDate\": \"2022-01-10\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      return result.observations;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ESTRUCTURA ORGANIZACIONAL///////\r\n  async guardarEstructuraEmpresaIGR(data) {\r\n    try {\r\n      /*\r\n{\r\n\"transactId\":\"46\",\r\n\"description\":\"estructura1\",\r\n\"date\":\"2021-12-10\"\r\n}\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_ESTRUCTURAEMPRESA, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarEstructuraEmpresaIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_HISTORIAEMPRESA }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTRUCTURAEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"transactId\": 44,\r\n    \"observations\": \"estructura2\",\r\n    \"infoDate\": \"2022-01-19\",\r\n    \"status\": true,\r\n    \"attachments\": []\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GOBIERNO CORPORATIVO///////\r\n  async consultarDatosGobiernoCorporativo(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GOBIERNOCORPORATIVO + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"corporateGobernance\": [],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin Contenido\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGobiernoCorporativo: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGobiernoCorporativo(data) {\r\n    /*\r\n    {\r\n    \"transactId\":\"101\",\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n     */\r\n    var result = await this.post(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  async actualizarGobiernoCorporativo(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\":\"101\",\r\n    \"corporateIdentification\":30,\r\n    \"name\":\"updated-name\",\r\n    \"position\":\"jjjj\",\r\n    \"birthDate\":\"1985-11-27\",\r\n    \"age\":32\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n      if (result.statusCode === \"200\") {\r\n        return result;//WatchlistModel.fromJson(result);\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarGobiernoCoporativo(data) {\r\n    /*{\r\n\"transactId\":\"101\",\r\n\"corporateIdentification\":17\r\n} */\r\n    var result = await this.del(url.URL_BACKEND_GOBIERNOCORPORATIVO, data);\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n\r\n  ////IGR - RELEVO GENERACIONAL ///////\r\n  async consultarDatosRelevoGeneracional(transactId) {\r\n    try {\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n    },\r\n    \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n} */\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"name\":\"pepe\",\r\n    \"position\":\"bd\",\r\n    \"birthDate\":\"1980-11-11\",\r\n    \"relationship\":\"lola\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelevoGeneracional(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"managementRIdentification\":13\r\n    \"name\":\"pepe\",\r\n    \"position\":\"bd\",\r\n    \"birthDate\":\"1980-11-11\",\r\n    \"relationship\":\"lola\"\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelevoGeneracional(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\":101,\r\n    \"managementRIdentification\":10\r\n}*/\r\n      var result = await this.del(url.URL_BACKEND_RELEVOGENERACIONAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionRelevoGeneracional(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\":101,\r\n    \"observations\":\"comentario sdads\"\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_RELEVOGENERACIONALSECTION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionRelevoGeneracional(transactId) {\r\n    try {\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"getManagementRelaysInfoResponseDTO\": {\r\n        \"transactId\": 101,\r\n        \"observations\": \"comentario\",\r\n        \"status\": true,\r\n        \"date\": \"2022-01-10\"\r\n    },\r\n    \"getManagementRelaysResponseDTOList\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 10,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 101,\r\n            \"managementRIdentification\": 11,\r\n            \"name\": \"pepe\",\r\n            \"position\": \"bd\",\r\n            \"birthDate\": \"1980-11-11\",\r\n            \"age\": 41,\r\n            \"relationship\": \"lola\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n} */\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_RELEVOGENERACIONAL + \"?\" + data);\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result.getManagementRelaysInfoResponseDTO.observations;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR Flujo Operativo///////\r\n  async guardarFlujoOperativo(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\":\"8\",\r\n\"observations\":\"ee445\",\r\n\"infoDate\":\"2021-12-10\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_FLUJOOPERATIVO_IGR, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFlujoOperativo(transactId) {\r\n    try {\r\n      //vidtramite=44&vidproceso=5&vidactividad=1\r\n      var params = { vidtramite: transactId, vidproceso: opt.PROCESS_INFORMEGESTION, vidactividad: opt.ACT_FLUJOOPERATIVO }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_FLUJOOPERATIVO_IGR + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 199,\r\n    \"observations\": \"prueba\",\r\n    \"infoDate\": \"2021-12-29\",\r\n    \"status\": true,\r\n    \"attachments\": []}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - EMPRESAS RELACIONADAS///////\r\n  async consultarDatosEmpresaRelacionada(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"observations\": \"tets\",\r\n    \"date\": \"2022-01-24\",\r\n    \"estado\": true,\r\n    \"relatedCompanies\": [\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 25,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"trasactId\": 104,\r\n            \"companyId\": 27,\r\n            \"name\": \"1113\",\r\n            \"activity\": \"112\",\r\n            \"sectorExperience\": 12,\r\n            \"relationship\": \"ffff\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"companyId\": 11\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async actualizarEmpresaRelacionada(data) {\r\n    try {\r\n      /*{\r\n    \"trasactId\":1,\r\n    \"companyId\":15,\r\n    \"name\":\"maicol up\",\r\n    \"activity\":\"actividad up\",\r\n    \"sectorExperience\":10,\r\n    \"relationship\":\"relaciona up\",\r\n    \"status\":true\r\n}*/\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_EMPRESARELACIONADA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n  async eliminarEmpresaRelacionada(data) {\r\n    try {\r\n      /*trasactId:101,companyId:11 */\r\n      var result = await this.del(url.URL_BACKEND_EMPRESARELACIONADA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionEmpresaRelacionada(data) {\r\n    try {\r\n      data = {\r\n        \"trasactId\": data.trasactId,\r\n        \"description\": data.description\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_EMPRESARELACIONADASECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN CLIENTE ///////\r\n  async consultarListaClientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTE + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"getClientsInformationDTO\": null,\r\n          \"clientsInformationListDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 1,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              },{\r\n                  \"transactId\": 101,\r\n                  \"customerInfoId\": 3,\r\n                  \"name\": \"enrique5\",\r\n                  \"country\": \"pana\",\r\n                  \"salePercentage\": 75.55,\r\n                  \"customerType\": \"cred\",\r\n                  \"salesType\": \"cred\",\r\n                  \"delayReason\": \"cred\",\r\n                  \"termDays\": 90,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":104,    \r\n    \"name\":\"enrique5\",\r\n    \"country\":\"pana\",\r\n    \"salePercentage\":75.55,\r\n    \"customerType\":\"cred\",\r\n    \"salesType\":\"cred\", \r\n    \"delayReason\":\"cred\",\t\r\n    \"termDays\":90\r\n}\r\n \r\n      */\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarClienteIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 104,\r\n    \"customerInfoId\": 14,\r\n    \"name\": \"enrique5\",\r\n    \"country\": \"pana\",\r\n    \"salePercentage\": 75.55,\r\n    \"customerType\": \"cred\",\r\n    \"salesType\": \"cred\",\r\n    \"delayReason\": \"cred\",\r\n    \"termDays\": 90,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTEINFO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarClienteIGR(data) {\r\n    try {\r\n      /*transactId:101,customerIdentification:2 */\r\n      var result = await this.del(url.URL_BACKEND_INFOCLIENTE + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionClienteIGR(data) {\r\n    try {\r\n      /*{\r\n    \"transactId\": 101,\r\n    \"description\": \"ddd\",\r\n    \"seasonalSales\": false,\r\n    \"percSeasonalPeriodSales\": 0.5,\r\n    \"dateInformation\": \"2022-01-14\"\r\n}*/\r\n      data[\"dateInformation\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      var result = await this.post(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_INFOCLIENTESECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionClienteIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_INFOCLIENTESECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"clientSectionCompaniesDTO\": {\r\n        \"transactId\": 101,\r\n        \"description\": \"ddd\",\r\n        \"seasonalSales\": false,\r\n        \"percSeasonalPeriodSales\": 0.5,\r\n        \"dateInformation\": \"2022-01-14\",\r\n        \"status\": true\r\n    }\r\n}\r\n      */\r\n\r\n      return result.clientSectionCompaniesDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN PROVEEOR ///////\r\n  async consultarListaProveedoresIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + data);\r\n      /**/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"name\": \"Provedor de prueba\",\r\n    \"oldRelationship\": 2,\r\n    \"percentPurchases\": 2.35788,\r\n    \"creditDays\": 30,\r\n    \"negotiationConditions\": \"prueba de negociacion\",\r\n    \"country\": \"panama\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarProveedorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 11,\r\n    \"providerId\": 1,\r\n    \"name\": \"provedor actualizado\",\r\n    \"oldRelationship\": 52,\r\n    \"percentPurchases\": 30.255,\r\n    \"creditDays\": 20,\r\n    \"negotiationConditions\": \"condiccion de prueba actualizada\",\r\n    \"country\": \"colombia\",\r\n    \"status\": false\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarProveedorIGR(data) {\r\n    try {\r\n      /*transactId:101,vidproveedor:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_INFOPROVEEDORES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionProveedorIGR(data) {\r\n    try {\r\n      /*{\r\n  \"transactId\": 1,\r\n  \"description\": \"descripcion text\",\r\n  \"purchasingCycle\": \"ciclocompras character varying\"\r\n}*/\r\n      var result = await this.post(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async consultarSeccionProveedorIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_INFOPROVEEDORESSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"suppliersList\": {\r\n        \"transactId\": 1,\r\n        \"description\": \"descripcion text\",\r\n        \"purchasingCycle\": \"ciclocompras character varying\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.suppliersList;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACIóN RECIPROCIDAD ///////\r\n  async consultarListaReciprocidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + data);\r\n      /*{\r\n    \"reciprocity\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 9,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"reciprocity_id\": 11,\r\n            \"year\": 2022,\r\n            \"month\": \"Enero\",\r\n            \"sales\": 200,\r\n            \"deposits\": 4000,\r\n            \"averageBalance\": 2400,\r\n            \"reciprocity\": 200,\r\n            \"sow\": 20,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 108,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarReciprocidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"reciprocity_id\":1,\r\n    \"year\":2021,\r\n    \"month\":\"December\",\r\n    \"sales\":200,\r\n    \"deposits\":4000,\r\n    \"averageBalance\":2400,\r\n    \"reciprocity\":200,\r\n    \"sow\":\"20\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarReciprocidadIGR(data) {\r\n    try {\r\n      /*transactId:101,reciprocityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_RECIPROCIDAD + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionReciprocidad(data) {\r\n    try {\r\n      /*{\r\n\"transactId\":4,\r\n\"observations\":\"Cambios\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n\r\n      /*OK\r\n      {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }\r\n      */\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECIPROCIDADSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoAccionista\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionReciprocidad(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECIPROCIDADSECCION + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"reciprocity\": [\r\n        [\r\n            101,\r\n            \"Cambios\",\r\n            \"2022-01-24\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n\r\n      if (result.status.statusCode === \"200\" || result.status.statusCode === \"204\") {\r\n        return result.observations;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - INFORMACIóN ACTIVOS FIJOS ///////\r\n  async consultarActivosFijosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_FACILIDADACTIVOSFIJOS }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + data);\r\n      /*\r\n      {\r\n    \"fixedAssets\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"facilityAssetId\": 1,\r\n            \"address\": \"vdireccion\",\r\n            \"propertyType\": {\r\n                \"code\": \"vtipopropiedad\",\r\n                \"name\": \"\"\r\n            },\r\n            \"observations\": \"vdescripcion\",\r\n            \"ownerCompany\": \"vsociedadpropietaria\",\r\n            \"leaseFee\": 5.66,\r\n            \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n            \"contractDuration\": 3,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"attachments\": [],\r\n    \"variationsAssets\": null,\r\n    \"variationsAssetsObs\": null,\r\n    \"manufacturingAgroCompanies\": null,\r\n    \"productionLine\": null,\r\n    \"capacity\": null,\r\n    \"usedCapacity\": null,\r\n    \"tradingCompany\": null,\r\n    \"warehouseCapacity\": null,\r\n    \"transportDistributionFleet\": null,\r\n    \"units\": null,\r\n    \"renovation\": null,\r\n    \"status\": null,\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\":0.00,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"facilityAssetId\":2,\r\n    \"address\": \"vdireccion\",\r\n    \"propertyType\": {\r\n        \"code\": \"vtipopropiedad\",\r\n        \"name\": \"se deja en blanco, pero hace parte del json.\"\r\n    },\r\n    \"observations\": \"vdescripcion\",\r\n    \"ownerCompany\": \"vsociedadpropietaria\",\r\n    \"leaseFee\": 5.66,\r\n    \"rentAmount\": 10.55,\r\n    \"leaseConditions\": \"vcondicionesarrendamiento\",\r\n    \"contractDuration\": 3,\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarActivosFijosIGR(data) {\r\n    try {\r\n      /*transactId:101,fixedAssetId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_ACTIVOSFIJOS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionActivosFijosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"variationsAssets\": true,\r\n    \"variationsAssetsObs\": \"vdescripcionvariaciones\",\r\n    \"manufacturingAgroCompanies\": true,\r\n    \"productionLine\": \"vlineaproduccion\",\r\n    \"capacity\": \"vcapacidad\",\r\n    \"usedCapacity\": \"vcapacidadutilizada\",\r\n    \"tradingCompany\": true,\r\n    \"warehouseCapacity\": \"vcapacidadalmacen\",\r\n    \"transportDistributionFleet\": true,\r\n    \"units\": \"vunidades\",\r\n    \"renovation\": \"vrenovacion\",\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ACTIVOSFIJOSSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - INFORMACIóN SEGUROS ///////\r\n  async consultarSegurosEmpresaIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"companyInsurance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"insuranceId\": 1,\r\n            \"company\": \"Comision\",\r\n            \"insuranceType\": null,\r\n            \"amount\": 5.0,\r\n            \"dueDate\": \"2021-12-29T05:00:00.000+00:00\",\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result.companyInsurance;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaProveedoresIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"company\":\"Comision\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-30\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSegurosEmpresaIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"insuranceId\":1,\r\n    \"company\":\"Company\",\r\n    \"insuranceType\":{\r\n        \"code\":\"Seguro\",\r\n        \"name\":\"\"\r\n    },\r\n    \"amount\":5.000,\r\n    \"dueDate\":\"2021-12-27\",\r\n    \"status\":\"true\"\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_IGR_SEGUROSEMPRESA, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSegurosEmpresaIGR(data) {\r\n    try {\r\n      /*transactId:101,InsuranceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_SEGUROSEMPRESA + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarReciprocidadIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR ARQUITECTURA EMPRESARIAL///////\r\n  async guardarArquitecturaEmpresarialIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n\"transactId\": 101,\r\n  \"ticCompanyUse\":\"Ganaderia\",\r\n  \"auditedAreas\":\"Santander\"\r\n}\r\n      */\r\n\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode !== \"200\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarArquitecturaEmpresarialIGR(transactId) {\r\n    try {\r\n\r\n      var params = { vidtramite: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_ARQUITECTURAEMPRESARIAL }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_ARQUITECTURAEMPRESARIAL + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n  \"ticCompanyUse\": \"Ganaderia\",\r\n  \"auditedAreas\": \"Santander\",\r\n  \"status\": true,\r\n  \"attachments\": []\r\n}\r\n      */\r\n\r\n      if (result.transactId !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - COMPERTIDORES DEL MERCADO ///////\r\n  async consultarCompetidores(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + data);\r\n\r\n      /*{\r\n    \"competitors\": [\r\n      {\r\n        \"transactId\":13,\r\n    \"competitorId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\",\r\n    \"status\":true\r\n      }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n    }\r\n} */\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":1,\r\n    \"name\":\"COMPETICION\",\r\n    \"description\":\"LISTA COMPETICION\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCompetidorIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":4,\r\n    \"competitorId\":8,\r\n    \"name\":\"CARRERA\",\r\n    \"description\":\"LISTA CARRERA\",\r\n    \"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_COMPETIDORESMERCADO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoProveedorIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCompetidorIGR(data) {\r\n    try {\r\n      /*transactId:101,competitorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_COMPETIDORESMERCADO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - PROYECCIONES ///////\r\n  async consultarProyecciones(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROYECCIONES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"projectionsDTO\": {\r\n        \"transactId\": 1,\r\n        \"descripcion\": \"gggsgsgsgsgs\",\r\n        \"assetsOperatingAmount\": 3,\r\n        \"assetsOperatingReason\": \"jhfjshdhshd\",\r\n        \"fixedAssetsAmount\": 3,\r\n        \"fixedAssetsReason\": \"jhfjshdhshd\",\r\n        \"othersAssetsAmount\": 3,\r\n        \"othersAssetsReason\": \"jhfjshdhshd\",\r\n        \"bankAmount\": 3,\r\n        \"bankReason\": \"jhfjshdhshd\",\r\n        \"providersAmount\": 3,\r\n        \"providersReason\": \"jhfjshdhshd\",\r\n        \"capitalAmount\": 3,\r\n        \"capitalReason\": \"jhfjshdhshd\",\r\n        \"maximodeuda\": 3,\r\n        \"estimatedDate\": \"1970-01-19\",\r\n        \"status\": true\r\n    },\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCompetidores: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarProyecciones(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":1,\r\n\"descripcion\":\"gggsgsgsgsgs\",\r\n\"assetsOperatingAmount\":3,\r\n\"assetsOperatingReason\":\"jhfjshdhshd\",\r\n\"fixedAssetsAmount\":3,\r\n\"fixedAssetsReason\":\"jhfjshdhshd\",\r\n\"othersAssetsAmount\":3,\r\n\"othersAssetsReason\":\"jhfjshdhshd\",\r\n\"bankAmount\":3,\r\n\"bankReason\":\"jhfjshdhshd\",\r\n\"providersAmount\":3,\r\n\"providersReason\":\"jhfjshdhshd\",\r\n\"capitalAmount\":3,\r\n\"capitalReason\":\"jhfjshdhshd\",\r\n\"maximodeuda\":3,\r\n\"estimatedDate\":\"2022-01-15\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROYECCIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROYECCIONES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - INFORMACION GARANTES///////\r\n  async consultarGarantes(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_GARANTES + \"?\" + data);\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 1,\r\n    \"guarantors\": [\r\n        {\r\n            \"guarantorId\": 1,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 2,\r\n            \"documentType\": \"vtipodocumento up\",\r\n            \"guarantorDocument\": \"vdocumentogarante up\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre up\",\r\n            \"secondName\": \"vsegnombre up\",\r\n            \"lastName\": \"vapellido up\",\r\n            \"secondLastName\": \"vsegapellido up\",\r\n            \"guarantorRelationship\": \"vrelaciongarante up\",\r\n            \"origin\": \"vprocedenciabien up\",\r\n            \"guarantorCommitment\": \"vcompromisogarante up\",\r\n            \"warrantyReason\": \"vrazongarantia up\",\r\n            \"date\": \"2022-01-17\",\r\n            \"status\": false\r\n        },\r\n        {\r\n            \"guarantorId\": 3,\r\n            \"documentType\": \"vtipodocumento character varying\",\r\n            \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n            \"isGuarantor\": true,\r\n            \"name\": \"vnombre character varying\",\r\n            \"secondName\": \"vsegnombre character varying\",\r\n            \"lastName\": \"vapellido character varying\",\r\n            \"secondLastName\": \"vsegapellido character varying\",\r\n            \"guarantorRelationship\": \"vrelaciongarante text\",\r\n            \"origin\": \"vprocedenciabien text\",\r\n            \"guarantorCommitment\": \"vcompromisogarante text\",\r\n            \"warrantyReason\": \"vrazongarantia text\",\r\n            \"date\": \"2022-01-19\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n\r\n      */\r\n      return result.guarantors;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api ConsultarGarantes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarante(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\": 1,\r\n  \"documentType\": \"CED\",\r\n  \"guarantorDocument\": \"vdocumentogarante character varying\",\r\n  \"isGuarantor\": true,\r\n  \"name\": \"vnombre character varying\",\r\n  \"secondName\": \"vsegnombre character varying\",\r\n  \"lastName\": \"vapellido character varying\",\r\n  \"secondLastName\": \"vsegapellido character varying\",\r\n  \"guarantorRelationship\": \"vrelaciongarante text\",\r\n  \"origin\": \"vprocedenciabien text\",\r\n  \"guarantorCommitment\": \"vcompromisogarante text\",\r\n  \"warrantyReason\": \"vrazongarantia text\"\r\n}\r\n      */\r\n\r\n      return await this.post(url.URL_BACKEND_GARANTES, data);\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarante(data) {\r\n    try {\r\n      /*\r\n      {\r\n    \"transactId\": 44,\r\n    \"guarantorId\": 1,\r\n    \"documentType\": \"vtipodocumento up\",\r\n    \"guarantorDocument\": \"vdocumentogarante up\",\r\n    \"isGuarantor\": true,\r\n    \"name\": \"vnombre up\",\r\n    \"secondName\": \"vsegnombre up\",\r\n    \"lastName\": \"vapellido up\",\r\n    \"secondLastName\": \"vsegapellido up\",\r\n    \"guarantorRelationship\": \"vrelaciongarante up\",\r\n    \"origin\": \"vprocedenciabien up\",\r\n    \"guarantorCommitment\": \"vcompromisogarante up\",\r\n    \"warrantyReason\": \"vrazongarantia up\",\r\n    \"date\": \"2022-01-18\",\r\n    \"status\": true}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n      return await this.put(url.URL_BACKEND_GARANTES, data);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarante(data) {\r\n    try {\r\n      /*transactId:101,guarantorId:2 */\r\n      var result = await this.del(url.URL_BACKEND_GARANTES + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW ACTUAL ///////\r\n  async consultarSowActualIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowActualIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowActualIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWACTUAL + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - SOW PROPUESTO ///////\r\n  async consultarSowPropuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"currentSOWDTOList\": [\r\n              {\r\n                  \"currentSowId\": 2,\r\n                  \"otherBanks\": 35.55,\r\n                  \"banesco\": 30.23,\r\n                  \"total\": 55.55,\r\n                  \"sow\": 40.25,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoSowPropuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n     \"transactId\":101,\r\n       \"otherBanks\":35.55,\r\n       \"banesco\":30.23,\r\n       \"total\":55.55,\r\n       \"sow\":40.25\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarSowPropuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"currentSowId\": 2,\r\n      \"otherBanks\": 20.55,\r\n      \"banesco\": 30.23,\r\n      \"total\": 55.55,\r\n      \"sow\": 40.25,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarSowPropuestoIGR(data) {\r\n    try {\r\n      /*transactId:101,currentSowId:2 */\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_SOWPROPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - ASPECTOS AMBIENTALES///////\r\n  async consultarAspectosAmbientalesIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"environmentalAspectsDTO\": {\r\n          \"transactId\": 101,\r\n          \"riskPreClassification\": \"2\",\r\n          \"sustainableCreditRating\": \"2\",\r\n          \"riskClassificationConfirmation\": \"2\",\r\n          \"natureLocationProject\": true,\r\n          \"physicalResettlement\": true,\r\n          \"environmentalPermits\": true,\r\n          \"newProject\": true,\r\n          \"workersContractors\": true,\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarAspectosAmbientales: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarAspectosAmbientalesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"riskPreClassification\": \"2\",\r\n      \"sustainableCreditRating\": \"2\",\r\n      \"riskClassificationConfirmation\": \"2\",\r\n      \"natureLocationProject\": true,\r\n      \"physicalResettlement\": true,\r\n      \"environmentalPermits\": true,\r\n      \"newProject\": true,\r\n      \"workersContractors\": true\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_ASPECTOSAMBIENTALES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarGarante: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS CP ///////\r\n  async consultarRelacionesBancariasDeudasCP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"getBankingRelationCPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"bb\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"bb\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIACP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasCP(data) {\r\n    try {\r\n      /*transactId:101,debtId:1 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIACP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARAS - DEUDAS LP ///////\r\n  async consultarRelacionesBancariasDeudasLP(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"transactId\": 101,\r\n          \"bankingRelationLPDTOList\": [\r\n              {\r\n                  \"debtId\": 1,\r\n                  \"bank\": \"oo\",\r\n                  \"facilityType\": \"bb\",\r\n                  \"amount\": 0.5,\r\n                  \"date\": \"2021-11-11\",\r\n                  \"expirationDate\": \"2021-11-11\",\r\n                  \"debitBalance1\": 0.5,\r\n                  \"debitBalance2\": 0.5,\r\n                  \"debitBalance3\": 0.5,\r\n                  \"rate\": 0.5,\r\n                  \"fee\": 0.5,\r\n                  \"bail\": \"bb\",\r\n                  \"fundDestiny\": \"bb\",\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"bank\": \"oo\",\r\n      \"facilityType\": \"bb\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"bb\",\r\n      \"fundDestiny\": \"bb\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"debtId\": 1,\r\n      \"bank\": \"cc\",\r\n      \"facilityType\": \"cc\",\r\n      \"amount\": 0.5,\r\n      \"date\": \"2021-11-11\",\r\n      \"expirationDate\": \"2021-11-11\",\r\n      \"debitBalance1\": 0.5,\r\n      \"debitBalance2\": 0.5,\r\n      \"debitBalance3\": 0.5,\r\n      \"rate\": 0.5,\r\n      \"fee\": 0.5,\r\n      \"bail\": \"cc\",\r\n      \"fundDestiny\": \"cc\",\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_DEUDASBANCARIALP, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarRelacionesBancariasDeudasLP(data) {\r\n    try {\r\n      /*transactId:101,debtId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_DEUDASBANCARIALP + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RELACIONES BANCARIAS SECCION///////\r\n  async consultarRelacionesBancariasSeccionIGR(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION + \"?\" + data);\r\n\r\n      /*{\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n      \"bankingRelationSection\": {\r\n          \"transactId\": 101,\r\n          \"observations\": \"ddd1\",\r\n          \"date\": \"2022-01-10\",\r\n          \"status\": true\r\n      }\r\n  } */\r\n      if (result.statusCode === \"200\" || result.statusCode === \"204\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRelacionesBancariasSeccionIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"observations\": \"ddd1\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_DEUDASBANCARIASECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_GARANTES, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarRelacionesBancariasSeccionIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - DOLLAR ///////\r\n  async consultarFlujoCajaDollar(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + data);\r\n      /*{\r\n          \"cashFlowDollarDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDolarId\": 1,\r\n                  \"description\": \"rrr\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"ddd\",\r\n      \"january\": 0.1,\r\n      \"february\": 0.1,\r\n      \"march\": 0.1,\r\n      \"april\": 0.1,\r\n      \"may\": 0.1,\r\n      \"june\": 0.1,\r\n      \"july\": 0.1,\r\n      \"august\": 0.1,\r\n      \"september\": 0.1,\r\n      \"october\": 0.1,\r\n      \"november\": 0.1,\r\n      \"december\": 0.1\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaDollar(data) {\r\n    try {\r\n\r\n      /*\r\n         {\r\n      \"transactId\": 101,\r\n      \"cashFlowDolarId\": 1,\r\n      \"description\": \"qqqq\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaDollar(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDolarId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJADOLLAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - SERVICIOS DE DEUDAS ///////\r\n  async consultarFlujoCajaServicioDeudas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\"transactId\": 101,\r\n      \"description\": \"rrr\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5\r\n    }\r\n\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowDebtServiceId\": 1,\r\n      \"description\": \"kkkk\",\r\n      \"january\": 0.5,\r\n      \"february\": 0.5,\r\n      \"march\": 0.5,\r\n      \"april\": 0.5,\r\n      \"may\": 0.5,\r\n      \"june\": 0.5,\r\n      \"july\": 0.5,\r\n      \"august\": 0.5,\r\n      \"september\": 0.5,\r\n      \"october\": 0.5,\r\n      \"november\": 0.5,\r\n      \"december\": 0.5,\r\n      \"status\": true\r\n  }\r\n\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaServicioDeudas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowDebtServiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJASERVICIODEUDAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - EGRESOS ///////\r\n  async consultarFlujoCajaEgresos(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + data);\r\n      /*{\r\n\r\n      {\r\n          \"cashFlowOutcome\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 1,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 6.000,\r\n                  \"february\": 6.000,\r\n                  \"march\": 6.000,\r\n                  \"april\": 6.000,\r\n                  \"may\": 6.000,\r\n                  \"june\": 6.000,\r\n                  \"july\": 6.000,\r\n                  \"august\": 6.000,\r\n                  \"september\": 6.000,\r\n                  \"october\": 6.000,\r\n                  \"november\": 6.000,\r\n                  \"december\": 6.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 4,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": false\r\n              },\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowOutcomeId\": 5,\r\n                  \"description\": \"Ganaderia\",\r\n                  \"january\": 5.000,\r\n                  \"february\": 5.000,\r\n                  \"march\": 5.000,\r\n                  \"april\": 5.000,\r\n                  \"may\": 5.000,\r\n                  \"june\": 5.000,\r\n                  \"july\": 5.000,\r\n                  \"august\": 5.000,\r\n                  \"september\": 5.000,\r\n                  \"october\": 5.000,\r\n                  \"november\": 5.000,\r\n                  \"december\": 5.000,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":5.000,\r\n      \"februray\":5.000,\r\n      \"march\":5.000,\r\n      \"april\":5.000,\r\n      \"may\":5.000,\r\n      \"june\":5.000,\r\n      \"july\":5.000,\r\n      \"august\":5.000,\r\n      \"september\":5.000,\r\n      \"october\":5.000,\r\n      \"november\":5.000,\r\n      \"december\":5.000\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaEgresos(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowOutcomeId\":1,\r\n      \"description\":\"Ganaderia\",\r\n      \"january\":6.000,\r\n      \"februray\":6.000,\r\n      \"march\":6.000,\r\n      \"april\":6.000,\r\n      \"may\":6.000,\r\n      \"june\":6.000,\r\n      \"july\":6.000,\r\n      \"august\":6.000,\r\n      \"september\":6.000,\r\n      \"october\":6.000,\r\n      \"november\":6.000,\r\n      \"december\":6.000,\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaEgresos(data) {\r\n    try {\r\n      /*transactId:101,cashFlowOutcomeId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAEGRESO + \"?\" + qs.stringify(data), data);\r\n      //var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAEGRESOBORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - CARGA DE TRABAJO ///////\r\n  async consultarFlujoCajaCargaTrabajo(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + data);\r\n      /*{\r\n          \"cashFlowWorkLoad\": [\r\n              [\r\n                  101,\r\n                  1,\r\n                  \"2\",\r\n                  \"PROYECTO\",\r\n                  \"ORGANISMO\",\r\n                  5.000,\r\n                  10.000,\r\n                  15.000,\r\n                  20.000,\r\n                  2.3,\r\n                  5.2,\r\n                  1.5,\r\n                  \"INDEFINIDO\",\r\n                  false\r\n              ]\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"PRESTACION DE SERVICIOS\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"cashFlowWorkloadId\":1,\r\n      \"customer\": \"2\",\r\n      \"projectName\": \"PROYECTO\",\r\n      \"organismType\":\"ORGANISMO\",\r\n      \"contractAmount\": 5.000,\r\n      \"pendingAmount\":10.000,\r\n      \"initialPlan\":15.000,\r\n      \"endPlan\":20.000,\r\n      \"executedPercentage\":2.3,\r\n      \"percentageTobeExecuted\":5.2,\r\n      \"expectedExecution\":1.5,\r\n      \"contractType\":\"INDEFINIDO\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCargaTrabajo(data) {\r\n    try {\r\n      /*transactId:101,cashFlowWorkloadId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACARGATRABAJO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - INGRESOS ///////\r\n  async consultarFlujoCajaIngresoFacturacion(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + data);\r\n      /*{\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n          \"cashFlowDebtServiceDTOList\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowDebtServiceId\": 1,\r\n                  \"description\": \"kkkk\",\r\n                  \"january\": 0.5,\r\n                  \"february\": 0.5,\r\n                  \"march\": 0.5,\r\n                  \"april\": 0.5,\r\n                  \"may\": 0.5,\r\n                  \"june\": 0.5,\r\n                  \"july\": 0.5,\r\n                  \"august\": 0.5,\r\n                  \"september\": 0.5,\r\n                  \"october\": 0.5,\r\n                  \"november\": 0.5,\r\n                  \"december\": 0.5,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowInvoiceId\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaIngresoFacturacion(data) {\r\n    try {\r\n      /*transactId:101,cashFlowInvoiceId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJAINGRESOFACTURACION + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - FLUJO DE CAJA - COBRANZAS ///////\r\n  async consultarFlujoCajaCobranzas(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + data);\r\n      /*{\r\n          \"cashFlowCollection\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"cashFlowCollectiond\": 1,\r\n                  \"description\": \"des\",\r\n                  \"january\": 1,\r\n                  \"february\": 2,\r\n                  \"march\": 3,\r\n                  \"april\": 4,\r\n                  \"may\": 5,\r\n                  \"june\": 6,\r\n                  \"july\": 7,\r\n                  \"august\": 8,\r\n                  \"september\": 9,\r\n                  \"october\": 10,\r\n                  \"november\": 11,\r\n                  \"december\": 12,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"description\": \"des\",\r\n      \"january\": 1,\r\n      \"february\": 2,\r\n      \"march\": 3,\r\n      \"april\": 4,\r\n      \"may\": 5,\r\n      \"june\": 6,\r\n      \"july\": 7,\r\n      \"august\": 8,\r\n      \"september\": 9,\r\n      \"october\": 10,\r\n      \"november\": 11,\r\n      \"december\": 12\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarFlujoCajaCobranzas(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"cashFlowCollectiond\": 1,\r\n      \"description\": \"desup\",\r\n      \"january\": 11,\r\n      \"february\": 22,\r\n      \"march\": 33,\r\n      \"april\": 44,\r\n      \"may\": 55,\r\n      \"june\": 66,\r\n      \"july\": 77,\r\n      \"august\": 88,\r\n      \"september\": 99,\r\n      \"october\": 1010,\r\n      \"november\": 1111,\r\n      \"december\": 1212,\r\n      \"status\": true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarFlujoCajaCobranzas(data) {\r\n    try {\r\n      /*transactId:101,cashFlowCollectiond:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_FLUJOCAJACOBRANZAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////IGR - MOVIMIENTOS DE CUENTAS ///////\r\n  async consultarMovimientosCuentasIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + data);\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"movementId\": 12,\r\n            \"year\": 2021,\r\n            \"month\": \"2021-12-29\",\r\n            \"deposits\": 3,\r\n            \"averageBalance\": 3,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.movements;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":1,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMovimientosCuentasIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"trasactId\":109,\r\n\"movementId\":12,\r\n\"year\":2021,\r\n\"month\":\"2021-12-30\",\r\n\"deposits\":3,\r\n\"averageBalance\":3,\r\n\"observations\":\"test\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMovimientosCuentasIGR(data) {\r\n    try {\r\n      /*transactId:101,movementId:12 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MOVIMIENTOCUENTAS + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarMovimientosCuentasIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarSeccionMovimientosCuentas(data) {\r\n    try {\r\n      /*{\r\n\"trasactId\":101,\r\n\"observations\":\"test\"\r\n} */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION, data);\r\n      }\r\n\r\n      return result;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarSeccionRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarSeccionMovimientosCuentas(transactId) {\r\n    try {\r\n      /*{\r\n    \"movements\": [\r\n        {\r\n            \"trasactId\": 109,\r\n            \"observations\": \"test\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MOVIMIENTOCUENTASSECCION + \"?\" + data);\r\n\r\n      return result.movements[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosRelevoGeneracional: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CUENTAS POR COBRAR ///////\r\n  async consultarCuentasCobrarIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId, processId: opt.PROCESS_INFORMEGESTION, activityId: opt.ACT_CUENTASPORCOBRAR }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + data);\r\n      /*{\r\n          \"accountsReceivable\": [\r\n              {\r\n                  \"countryCustomer\": \"panama\",\r\n                  \"days30\": 30,\r\n                  \"days60\": 60,\r\n                  \"days90\": 90,\r\n                  \"days120\": 120,\r\n                  \"days150\": 150,\r\n                  \"days180\": 180,\r\n                  \"days210\": 210,\r\n                  \"days240\": 240,\r\n                  \"days270\": 270,\r\n                  \"days300\": 300,\r\n                  \"days330\": 330,\r\n                  \"days331\": null,\r\n                  \"total\": 10000,\r\n                  \"percentage\": 100\r\n              }\r\n          ],\r\n          \"attachments\": null,\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result.accountsReceivable;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"countryCustomer\": \"panama\",\r\n      \"days30\": 30,\r\n      \"days60\": 60,\r\n      \"days90\": 90,\r\n      \"days120\": 120,\r\n      \"days150\": 150,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCuentasCobrarIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"accountReceivableId\":1,\r\n      \"countryCustomer\": \"colombia\",\r\n      \"days30\": 60,\r\n      \"days60\": 120,\r\n      \"days90\": 180,\r\n      \"days120\": 240,\r\n      \"days150\": 300,\r\n      \"days180\": 180,\r\n      \"days210\": 210,\r\n      \"days240\": 240,\r\n      \"days270\": 270,\r\n      \"days300\": 300,\r\n      \"days330\": 330,\r\n      \"days331\": 331,\r\n      \"total\": 10000,\r\n      \"percentage\": 100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.post(url.URL_BACKEND_IGR_CUENTASCOBRAR, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCuentasCobrarIGR(data) {\r\n    try {\r\n      /*data={transactId:101,accountReceivableId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CUENTASCOBRAR + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX ///////\r\n  async consultarCapexIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEX + \"?\" + data);\r\n      /*{\r\n          \"capex\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"description\": \"Test\",\r\n                  \"useInMiles\": 100,\r\n                  \"shareholder\": \"shareholder2\",\r\n                  \"bank\": \"bank2\",\r\n                  \"status\": false\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"description\":\"Test\",\r\n      \"useInMiles\":100,\r\n      \"shareholder\":\"shareholder2\",\r\n      \"bank\":\"bank2\",\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEX, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEX + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX PRESUPUESTO ///////\r\n  async consultarCapexPresupuestoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexId\": 1,\r\n                  \"budget\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"budget\":\"Test\",\r\n      \"amount\":100\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexPresupuestoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexId\":1,\r\n      \"budget\":\"vpresupuesto\",\r\n      \"amount\":100,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexPresupuestoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXPRESUPUESTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - CAPEX DETALLES PROYECTO ///////\r\n  async consultarCapexDetalleProyectoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + data);\r\n      /*{\r\n          \"capexBudget\": [\r\n              {\r\n                  \"transactId\": 101,\r\n                  \"capexDetailsId\": 1,\r\n                  \"observations\": \"vpresupuesto\",\r\n                  \"amount\": 100,\r\n                  \"status\": true\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"observations\":\"Inserted\",\r\n      \"amount\":5\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\":101,\r\n      \"capexDetailsId\":1,\r\n      \"observations\":\"Updated\",\r\n      \"amount\":5,\r\n      \"status\":true\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarCapexDetalleProyectoIGR(data) {\r\n    try {\r\n      /*data={transactId:101,capexDetailsId:1 }*/\r\n      var result = await this.del(url.URL_BACKEND_IGR_CAPEXDETALLESPROYECTO + \"?\" + qs.stringify(data), data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - RECOMENDACIONES ///////\r\n  async consultarRecomendacionesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_RECOMENDACIONES + \"?\" + data);\r\n      /*{\r\n          \"transactId\": 101,\r\n          \"recommendations\": \"2 save\",\r\n          \"valueChain\": \"3 save\",\r\n          \"background\": \"4 save\",\r\n          \"refinancingLog\": \"6 save\",\r\n          \"status\": true,\r\n          \"statusService\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          }\r\n      }*/\r\n      if (result.statusService.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async guardarRecomendacionesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n      \"transactId\": 101,\r\n      \"recommendations\": \"2 save\",\r\n      \"valueChain\": \"3 save\",\r\n      \"background\": \"4 save\",\r\n      \"refinancingLog\": \"6 save\"\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_IGR_RECOMENDACIONES, data);\r\n      }\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n  ////IGR - MATRIZ OTROS BANCOS ///////\r\n  async consultarMatrizOtrosBancosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + data);\r\n      /*{\r\n    \"competitiveMatrixOtherBanks\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"otherBankId\": 5,\r\n            \"bank\": \"BANESCO PANAMA\",\r\n            \"passivePercentage\": 5.000,\r\n            \"participation\": 10.000,\r\n            \"longTerm\": 15.000,\r\n            \"shortTerm\": 20.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n      \"bank\": \"BANESCO PANAMA\",\r\n      \"passivePercentage\": 5.000,\r\n      \"participation\":10.000,\r\n      \"longTerm\":15.000,\r\n      \"shortTerm\":20.000\r\n  }\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":101,\r\n  \"otherBankId\":1,\r\n  \"bank\": \"BANESCO PANAMA\",\r\n  \"passivePercentage\":3.5,\r\n  \"participation\":5.2,\r\n  \"longTerm\":1.200,\r\n  \"shortTerm\":600,\r\n  \"status\":true\r\n  }\r\n      */\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizOtrosBancosIGR(data) {\r\n    try {\r\n      /*transactId:101,otherBankId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZOTROSBANCOS + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizExpedientesIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + data);\r\n      /*{\r\n    \"files\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"filesId\": 1,\r\n            \"fileType\": {\r\n                \"code\": \"Expediente Contable\",\r\n                \"name\": \"\"\r\n            },\r\n            \"fileStatus\": \"En Revision\",\r\n            \"observations\": \"Expediente Contabilizado\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n     {\r\n\"transactId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizExpedientesIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"filesId\":5,\r\n\"fileType\":{\r\n\"code\":\"Expediente Contable\",\r\n\"name\":\"\"\r\n},\r\n\"fileStatus\":\"En Revision\",\r\n\"observations\":\"Expediente Contabilizado\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizExpedientesIGR(data) {\r\n    try {\r\n      /*transactId:101,filesId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZEXPEDIENTES + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizNuevosNegociosIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + data);\r\n      /*{\r\n    \"newBusiness\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"newBusinessId\": 1,\r\n            \"businessType\": {\r\n                \"code\": \"Papeleria\",\r\n                \"name\": \"\"\r\n            },\r\n            \"businessStatus\": \"Bueno\",\r\n            \"observations\": \"Ventas productos oficina\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":101,\r\n\"businessType\": {\r\n\"code\":\"Papeleria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Bueno\",\r\n\"observations\":\"Ventas productos oficina\"\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":2,\r\n\"newBusinessId\":2,\r\n\"businessType\": {\r\n\"code\":\"Cigarreria\",\r\n\"name\":\"\"\r\n},\r\n\"businessStatus\":\"Excelente\",\r\n\"observations\":\"Ventas productos canasta familiar\",\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizNuevosNegociosIGR(data) {\r\n    try {\r\n      /*transactId:101,newBusinessId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZNUEVONEGOCIO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizRentabilidadIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + data);\r\n      /*{\r\n    \"profitability\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"profitabilityId\": 2,\r\n            \"matrixType\": {\r\n                \"code\": \"Otros Bancos\",\r\n                \"name\": \"\"\r\n            },\r\n            \"quantity\": 50.000,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"serviceStatus\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n}*/\r\n      if (result.serviceStatus.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Otros Bancos\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 50.000\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizRentabilidadIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n\"transactId\":4,\r\n\"profitabilityId\":4,\r\n\"matrixType\":{\r\n\"code\":\"Nuevo negocio\",\r\n\"name\":\"\"\r\n},\r\n\"quantity\": 500.000,\r\n\"status\":true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizRentabilidadIGR(data) {\r\n    try {\r\n      /*transactId:101,profitabilityId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZRENTABILIDAD + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarMatrizSeccionIGR(data) {\r\n    try {\r\n      /*\r\n      {\r\n  \"transactId\": 101,\r\n    \"observations\": \"Observacion\"}\r\n */\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      //OK\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}*/\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n        result = await this.put(url.URL_BACKEND_IGR_MATRIZSECCION, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarMatrizSeccionIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZSECCION + \"?\" + data);\r\n      /*\r\n            {\r\n    \"competitiveMatrix\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"observations\": \"Observacion\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.competitiveMatrix[0];\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizPosicionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"positions\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"positionId\": 1,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n      return result.positions;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"positionId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizPosicionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,positionId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZPOSICIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async consultarMatrizTransaccionBanescoIGR(transactId) {\r\n    try {\r\n\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + data);\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"transactionals\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"product\": \"product\",\r\n            \"closeVol\": 5.66,\r\n            \"participation\": 999,\r\n            \"status\": true,\r\n            \"transactionalId\": 1\r\n        }\r\n    ]\r\n}*/\r\n      return result.transactionals;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaClientes: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":101,\r\n    \"product\":\"product\",\r\n    \"closeVol\":5.66,\r\n    \"participation\":999\r\n}\r\n      */\r\n      var result = await this.post(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async actualizarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\": 101,\r\n    \"transactionalId\": 1,\r\n    \"product\": \"product\",\r\n    \"closeVol\": 5.66,\r\n    \"participation\": 999,\r\n    \"status\": true\r\n}\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.put(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api nuevoCliente: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n  async eliminarMatrizTransaccionBanescoIGR(data) {\r\n    try {\r\n      /*transactId:101,transactionalId:2 */\r\n      var result = await this.del(url.URL_BACKEND_IGR_MATRIZTRANSACCIONBANESCO + \"?\" + qs.stringify(data), data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////IGR - GUARDAR NEGOCIOS A OBTENER///////\r\n  async guardarNegocioObtenerIGR(data) {\r\n    try {\r\n      /*\r\n  {\r\n      \"transactId\":1,\r\n      \"observations\":\"opservation up\"\r\n  }\r\n      */\r\n      //Guardamos\r\n      var result = await this.post(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      //si es 500 existe, solo debemos actualizar\r\n      if (result.statusCode === \"500\") {\r\n        data[\"status\"] = true;\r\n        result = await this.put(url.URL_BACKEND_NEGOCIOOBTENER, data);\r\n      }\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      // data = {\r\n      //   \"customerIdentification\":\"5\",\r\n      //   \"firstName\":\"diana\",\r\n      //   \"secondName\":\"\",\r\n      //   \"firstLastName\":\"perez\",\r\n      //   \"secondLastName\": \"jj\",\r\n      //   \"identificationTypeId\":1,\r\n      //   \"identificationType\":\"45\",\r\n      //   \"numberIdentification\" :45,\r\n      //   \"currentProcessIdentification\":1,\r\n      //   \"responsible\":\"dinaUser\",\r\n      //   \"sla\":58\r\n      // }\r\n    } catch (err) {\r\n      console.error(\"api guardarEstructuraEmpresaIGR\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarNegocioObtenerIGR(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_NEGOCIOOBTENER + \"?\" + data);\r\n      /*{\r\n      \"observations\": null,\r\n      \"productsAndServices\": null,\r\n      \"month\": null,\r\n      \"amount\": null,\r\n      \"status\": null,\r\n      \"transactId\": null,\r\n      \"statusService\": {\r\n          \"statusCode\": \"204\",\r\n          \"statusDesc\": \"Sin Contenido\"\r\n      }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEstructuraEmpresaIGR: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////BUSQUEDA y DESCARTE///////\r\n  async guardarBusquedaDescarte(data) {\r\n    try {\r\n      var model = BusquedaDescarteModel.getSaveModel(data);\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_BUSQUEDADESCARTE, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n\r\n      //Si es 500, la entidad existe... si existe lo actualizamos\r\n      if (result.statusCode === \"500\") {\r\n\r\n        //rutima para actualizar aun no existe\r\n\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarBusquedaDescarte\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarBusquedaDescarte(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId, processId: opt.PROCESS_BUSQUEDADESCARTE, activityId: opt.ACT_NONE }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BUSQUEDADESCARTE + \"?\" + data);\r\n      /*\r\n            const json ={\r\n            \"statusCode\": \"200\",\r\n            \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n            \"getSearchAndDiscardSectionResponseDTO\": {\r\n                \"identificationType\": 7,\r\n                \"customerDocumentId\": \"3882595\",\r\n                \"firstName\": \"antonio\",\r\n                \"secondName\": \"jose\",\r\n                \"firstLastName\": \"ledezma\",\r\n                \"secondLastName\": \"meneses\",\r\n                \"transactId\": 6,\r\n                \"compliance\": true,\r\n                \"observationsSearchDiscard\": \"prospect 1\",\r\n                \"approved\": false,\r\n                \"observationsCompliance\": null,\r\n                \"status\": true,\r\n                \"date\": \"2021-12-03\",\r\n                \"attachments\": []\r\n              }\r\n            }\r\n            */\r\n      if (result.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////// USUARIO PROSPECTO ////////////\r\n  async guardarUsuarioProspecto(data) {\r\n    let result = undefined;\r\n    try {\r\n\r\n      //Actualizar\r\n      if (data.customerId !== null && data.customerId !== undefined && data.customerId.length > 0) {\r\n        var userModel = UsuarioProspectoModel.getUpdateModel(data);\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.statusCode === \"200\") {\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      else { //Nuevo\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n        console.log(\"guardarUsuarioProspecto\", userModel);\r\n        //Guardamos Nuevo Usuario Prospecto\r\n        result = await this.post(url.URL_BACKEND_USUARIOPROSPECTO, userModel);\r\n        if (result.status.statusCode === \"200\") {\r\n          return result;\r\n        }\r\n      }\r\n      /*\r\n      //Si es 204, el Usuario existe... si existe lo actualizamos\r\n      if(result.status.statusCode === \"204\"){\r\n\r\n        data.customerId = result.customerId;\r\n        data.transactId = result.transactId;\r\n        userModel = UsuarioProspectoModel.getSaveModel(data);\r\n\r\n        //Actualizamos Usuario Prospecto\r\n        result = await this.put(url.URL_BACKEND_USUARIOPROSPECTO,userModel);\r\n        if(result.statusCode === \"200\"){\r\n\r\n          result.customerId = data.customerId;\r\n          result.transactId = data.transactId;\r\n\r\n          return result;\r\n        }\r\n      }\r\n      */\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarUsuarioProspecto: \", err);\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n  async consultarUsuarioProspecto(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_USUARIOPROSPECTO + \"?\" + data);\r\n      /*\r\n            {\r\n    \"costumer\": [\r\n        {\r\n            \"idCustomer\": 47,\r\n            \"identificationType\": \"0\",\r\n            \"customerDocumentId\": \"00000030\",\r\n            \"customerNumberT24\": \"\",\r\n            \"firstName\": \"Novey\",\r\n            \"secondName\": \"\",\r\n            \"firstLastName\": \"\",\r\n            \"secondLastName\": \"8359\",\r\n            \"date\": \"2021-12-13\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}\r\n            */\r\nreturn result.costumer[0];\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async guardarCumplimiento(data) {\r\n    try {\r\n\r\n      var model = {\r\n        transactId: data.transactId,\r\n        compliance: true,\r\n        observations: data.observationsSearchDiscard,\r\n        approved: true,\r\n        observationsComp: data.observationsComp\r\n      }\r\n\r\n      //Guardamos Busqueda y Descarte\r\n      var result = await this.post(url.URL_BACKEND_CUMPLIMIENTO, model);\r\n      //OK\r\n      /*var result ={\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      }*/\r\n\r\n      if (result.statusCode === \"200\" || result.statusCode === \"500\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarCumplimiento\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ///////////////////////////////////////\r\n  async consultarTramiteInbox(username) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { responsible: username }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE + \"?\" + data);\r\n      /*\r\n            {\r\n      \"transactions\": [\r\n          {\r\n              \"transactId\": 101,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          },\r\n          {\r\n              \"transactId\": 102,\r\n              \"instanceId\": \"8429\",\r\n              \"customerId\": 68,\r\n              \"currentProcess\": 1,\r\n              \"nextProcess\": 2,\r\n              \"responsible\": \"admin\",\r\n              \"date\": \"2021-12-15\",\r\n              \"status\": true,\r\n              \"requestId\": \"\"\r\n          }\r\n        ],\r\n        \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacción Exitosa\"\r\n        }\r\n      }\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return BusquedaDescarteModel.fromJson(result);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  async actualizarTramiteInbox(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n  \"transactId\":\"8\",\r\n  \"instanceId\":1,\r\n  \"customerId\":3,\r\n  \"currentProcess\":5,\r\n  \"nextprocess\":6,\r\n  \"responsible\":\"userTest\",\r\n  \"date\":\"2021-12-10\",\r\n  \"status\":true,\r\n  \"requestId\":3\r\n  }\r\n      */\r\n      data[\"status\"] = true;\r\n      var result = await this.post(url.URL_BACKEND_BANDEJAENTRADA_TRAMITE, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api actualizarCuentasCobrarIGR: \", err)\r\n    }\r\n    return undefined;\r\n\r\n  }\r\n\r\n\r\n\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                                METODO PARA LA LISTA DE EXCLUSION                               */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusion() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION);\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     METODO PARA GUARDAR LA LISTA DE EXCLUSION SELECCIONADA                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async guardarListaExclusion(transaccionId, exclusionId) {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Obtenemos la respuesta de la lista de exclusion y retornamos el json, queda pendiente      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    try {\r\n      let data = {\r\n        \"transactId\": transaccionId,\r\n        \"exclusionCatListId\": exclusionId\r\n      }\r\n      var result = await this.post(url.URL_BACKEND_LISTAEXCLUSION, data);\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.err(\"api guardarListaExclusion\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                     Obtenemos los chec de las listas de exclusion marcadas                     */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  async consultarListaExclusionMarcada(params) {\r\n    var data = qs.stringify(params);\r\n    return await this.get(url.URL_BACKEND_LISTAEXCLUSION_MARCADA + \"?\" + data);\r\n  }\r\n  async eliminarListaExclusionMarcada(transactId, exclusionId) {\r\n    try {\r\n      var data = { transactId: transactId, exclusionId: exclusionId };\r\n      var result = await this.del(url.URL_BACKEND_LISTAEXCLUSION + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarListaExclusionMarcada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  ////////////////////////////////////////////////////////////////\r\n\r\n  ////PROPUSTA DE CREDITO - DATOS GENERALES///////\r\n  async nuevoDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"customerNumber\":\"123\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n    \"economicGroupName\":\"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1.55,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2021-12-20\",\r\n    \"lastRequestDate\":\"2021-10-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ682022\",\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n      */\r\n      // if (result.statusCode === \"200\") {\r\n\r\n      //   //Nota: Actualizar Variable en BPM de requestId\r\n      //   return result;\r\n      // }\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDatosGeneralesPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"transactId\":107,\r\n    \"requestId\":\"XYZ682022\",\r\n    \"customerNumber\":\"1\",\r\n    \"revision\":\"1\",\r\n    \"preapproval\":true,\r\n    \"economicGroupNumber\":\"1\",\r\n     \"economicGroupName\": \"1\",\r\n    \"country\": \"cub\",\r\n    \"activityCompany\":\"banca-cambio\",\r\n    \"riskClassification\":\"1\",\r\n    \"minimumProvisionSIB\":1,\r\n    \"relatedPart\": true,\r\n    \"approvalLevel\":\"1\",\r\n    \"accountExecutive\":\"1\",\r\n    \"responsibleUnit\":\"1\",\r\n    \"countryRisk\":\"1\",\r\n    \"requestDate\": \"2022-01-20\",\r\n    \"lastRequestDate\":\"2022-01-20\",\r\n    \"nextRevisionDate\":\"2022-01-20\",\r\n    \"proposedExpirationDate\":\"2022-01-20\",\r\n    \"flow\":\"1\",\r\n    \"status\":true,\r\n    \"date\":\"2022-01-20\"\r\n}\r\n      */\r\n      data[\"date\"] = moment().format(\"YYYY-MM-DD\");//\"2021-11-10\";\r\n      data[\"status\"] = true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarDatosGeneralesPropCred(transactId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DATOSGENERALES + \"?\" + data);\r\n      /*\r\n            {\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"data\": [\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ692022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ702022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-24\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-24\"\r\n        },\r\n        {\r\n            \"transactId\": 108,\r\n            \"requestId\": \"XYZ722022\",\r\n            \"customerNumber\": \"123\",\r\n            \"revision\": \"1\",\r\n            \"preapproval\": true,\r\n            \"economicGroupNumber\": \"1\",\r\n            \"economicGroupName\": \"1\",\r\n            \"country\": \"cub\",\r\n            \"activityCompany\": \"banca\",\r\n            \"riskClassification\": \"1\",\r\n            \"minimumProvisionSIB\": 1.55,\r\n            \"relatedPart\": true,\r\n            \"approvalLevel\": \"1\",\r\n            \"accountExecutive\": \"1\",\r\n            \"responsibleUnit\": \"1\",\r\n            \"countryRisk\": \"1\",\r\n            \"requestDate\": \"2022-01-26\",\r\n            \"lastRequestDate\": \"2022-01-17\",\r\n            \"nextRevisionDate\": \"2022-01-19\",\r\n            \"proposedExpirationDate\": \"2022-01-19\",\r\n            \"flow\": \"1\",\r\n            \"status\": true,\r\n            \"date\": \"2022-01-26\"\r\n        }\r\n    ]\r\n}\r\n            */\r\n      if (result.status.statusCode === \"200\") {\r\n        return result.data;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarDatosGeneralesPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FACILIDAD ///////\r\n  async nuevoFacilidadPropCred(data) {\r\n    try {\r\n\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"cr\": \"\",\r\n    \"amount\": 22.5,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      /*\r\n      {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilityId\": 5\r\n} */\r\n  return result.facilityId;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFacilidadPropCred(data) {\r\n    try {\r\n      data.facilityId = 12;\r\n      data.requestId = \"XYZ892022\";\r\n      /*\r\n      {\r\n    \"requestId\": \"XYZ432022\", -> Viene de guardar nuevo datos generales\r\n    \"facilityId\":2, -> Viene de guardar nueva facilidad\r\n    \"cr\": \"\",\r\n    \"amount\": 22.4,\r\n    \"debtor\": \"\",\r\n    \"clientTypeId\": 1,\r\n    \"balance\": 22.5,\r\n    \"proposalTypeId\": \"\",\r\n    \"proposalTypeName\": \"\",\r\n    \"facilityTypeId\": \"\",\r\n    \"purpose\": \"\",\r\n    \"sublimits\": \"\",\r\n    \"proposalRate\": 22.5,\r\n    \"noSubsidyRate\": 22.5,\r\n    \"effectiveRate\": 22.5,\r\n    \"feci\": true,\r\n    \"termDays\": 22.5,\r\n    \"termDescription\": \"\",\r\n    \"ltv\": 22.5,\r\n    \"finantialConditions\": \"\",\r\n    \"environmentRiskCategory\": 22.5,\r\n    \"covenant\": \"\",\r\n    \"environmentRiskOpinion\": \"\",\r\n    \"finantialCovenant\": \"\",\r\n    \"legalDocumentation\": \"\",\r\n    \"creditRiskOpinion\": \"\",\r\n    \"provision\": \"\"\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD, data);//saveProposalData\r\n\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDatosGeneralesPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async consultarFacilidadPropCred(facilityId, requestId) { //retorna la Data de Busqueda y Descarte para un proceso\r\n    try {\r\n      var params = { facilityId: facilityId, requestId: requestId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FACILIDAD + \"?\" + data);\r\n      /*\r\n            const json ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"facilitiesDetailDTO\": {\r\n        \"requestId\": \"XYZ432022\",\r\n        \"facilityId\": 2,\r\n        \"cr\": \"\",\r\n        \"amount\": 22.4,\r\n        \"debtor\": \"\",\r\n        \"clientTypeId\": 1,\r\n        \"balance\": 22.5,\r\n        \"proposalTypeId\": \"\",\r\n        \"proposalTypeName\": \"\",\r\n        \"facilityTypeId\": \"\",\r\n        \"purpose\": \"\",\r\n        \"sublimits\": \"\",\r\n        \"proposalRate\": 22.5,\r\n        \"noSubsidyRate\": 22.5,\r\n        \"effectiveRate\": 22.5,\r\n        \"feci\": true,\r\n        \"termDays\": 22.5,\r\n        \"termDescription\": \"\",\r\n        \"ltv\": 22.5,\r\n        \"finantialConditions\": \"\",\r\n        \"environmentRiskCategory\": 22.5,\r\n        \"covenant\": \"\",\r\n        \"environmentRiskOpinion\": \"\",\r\n        \"finantialCovenant\": \"\",\r\n        \"legalDocumentation\": \"\",\r\n        \"creditRiskOpinion\": \"\",\r\n        \"provision\": \"\"\r\n    }\r\n}\r\n            */\r\n      return result.facilitiesDetailDTO;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarEntidadBusquedaDescarte: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - DESEMBOLSO///////\r\n  async consultarListaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + data);\r\n\r\n      /*{\r\n          \"disbursements\": [\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 2\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"disbursementTypeId2\",\r\n                  \"observations\": \"observations2\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 3\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": false,\r\n                  \"disbursementId\": 1\r\n              },\r\n              {\r\n                  \"facilityId\": 2,\r\n                  \"disbursementTypeId\": \"update2\",\r\n                  \"observations\": \"updated obs\",\r\n                  \"status\": true,\r\n                  \"disbursementId\": 4\r\n              }\r\n          ],\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacción Exitosa\"\r\n          }\r\n      } */\r\n\r\n      return result.disbursements;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":\"2\",\r\n    \"disbursementTypeId\":\"disbursementTypeId2\",\r\n    \"observations\":\"observations2\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"disbursementTypeId\":\"update2\",\r\n    \"observations\":\"updated obs\",\r\n    \"status\":true,\r\n    \"disbursementId\":2\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarDesembolsoPropCred(facilityId, disbursementId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementId: disbursementId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_DESEMBOLSOS + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - PROGRAMA DE PAGO///////\r\n  async consultarListaProgramaPagoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + data);\r\n      /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"paymentProgramDTOList\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 2\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 3\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 4\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 1\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"paymentProgram\": \"tt1\",\r\n            \"observations\": \"desc1\",\r\n            \"status\": true,\r\n            \"paymentProgramId\": 5\r\n        }\r\n    ]\r\n}*/\r\n      return result.paymentProgramDTOList;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\"    \r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*{\r\n    \"serviceResponseTO\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"paymentProgramId\": \"5\"\r\n}*/\r\n      if (result.serviceResponseTO.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarProgramaPagoPropCred(data) {\r\n    try {\r\n\r\n      /*{\t\r\n    \"facilityId\": 2,\r\n    \"paymentProgram\": \"tt1\",\r\n    \"observations\": \"desc1\",\r\n    \"paymentProgramId\":5, \r\n    \"status\":true\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarProgramaPagoPropCred(facilityId, paymentProgramId) {\r\n    try {\r\n      var data = { facilityId: facilityId, paymentProgramId: paymentProgramId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_PROGRAMAPAGO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - COMISION///////\r\n  async consultarComisionPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_COMISION + \"?\" + data);\r\n\r\n      /*{\r\n    \"commission\": [\r\n        [\r\n            2,\r\n            null,\r\n            \"vtipocomision character varying\",\r\n            12.5,\r\n            \"vdescripcion text,\",\r\n            true\r\n        ],\r\n        [\r\n            2,\r\n            null,\r\n            \"Comision\",\r\n            500000,\r\n            \"Prestamos\",\r\n            true\r\n        ]\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    }\r\n}*/\r\n      return result.commission;\r\n\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":2,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarComisionPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\":1,\r\n    \"commissionType\":\"Comision\",\r\n    \"amount\":500000,\r\n    \"observation\":\"Prestamos\",\r\n    \"status\":true,\r\n    \"commissionId\":14\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarComisionPropCred(facilityId, commissionId) {\r\n    try {\r\n      var data = { facilityId: facilityId, commissionId: commissionId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_COMISION, data);\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FORMA DE DESEMBOLSO///////\r\n  async consultarFormaDesembolsoPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + data);\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n    \"disbursementForm\": [\r\n        {\r\n            \"formOfDisbursement\": \"tipodesembolso \",\r\n            \"observations\": \"description ingreso\",\r\n            \"status\": true,\r\n            \"commissionId\": 1\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}\r\n} */\r\n      return result.disbursementForm;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\": \"2\",\r\n    \"typedistrenchment\":\"tipodesembolso \",\r\n    \"description\":\"description ingreso\"\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"disbursementId\": 2,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFormaDesembolsoPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityid\":2,\r\n    \"typedistrenchment\":\"tipodesembolso\",\r\n    \"description\":\"description actualizada\",\r\n    \"status\":true,\r\n    \"disbursementid\":1\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFormaDesembolsoPropCred(facilityId, disbursementFormId) {\r\n    try {\r\n      var data = { facilityId: facilityId, disbursementFormId: disbursementFormId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FORMADESEMBOLSO + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - GARANTIA///////\r\n  async consultarGarantiaPropCred(facilityId) {\r\n    try {\r\n      var params = { requestId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + data);\r\n\r\n      /*{\r\n    \"requestId\": \"2\",\r\n    \"guarantees\": [\r\n        {\r\n            \"guaranteeId\": 1,\r\n            \"guaranteeTypeName\": \"garantia\",\r\n            \"commercialValue\": 255,\r\n            \"fastValue\": 200,\r\n            \"observations\": \"observacion prueba\",\r\n            \"ltv\": 600,\r\n            \"appraisalDate\": \"2021-12-22\",\r\n            \"signature\": \"firma prueba\",\r\n            \"trustNumber\": \"numero nose como es \",\r\n            \"fiduciary\": \"el fidu de la prueba\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      return result.guarantees;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"requestId\": 2,\r\n      \"guaranteeTypeName\": \"garantia\",\r\n      \"commercialValue\": \"255\",\r\n      \"fastValue\": \"200\",\r\n      \"observations\": \"observacion prueba\",\r\n      \"ltv\": \"600\",\r\n      \"appraisalDate\": \"2021-12-22T19:13:53.786004+00:00\",\r\n      \"signature\": \"firma prueba\",\r\n      \"trustNumber\": \"numero nose como es \",\r\n      \"fiduciary\": \"el fidu de la prueba\"\r\n    }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"guaranteeId\": 1,\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    }\r\n}*/\r\n      if (result.status.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarGarantiaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"requestId\": 2,\r\n    \"guaranteeId\": 1,\r\n    \"guaranteeTypeName\": \"2\",\r\n    \"commercialValue\": 655,\r\n    \"fastValue\": 800,\r\n    \"observations\": \"observacion prueba\",\r\n    \"ltv\": 700,\r\n    \"appraisalDate\": \"2021-12-22T05:00:00.000+00:00\",\r\n    \"signature\": \"firma prueba actualizada\",\r\n    \"trustNumber\": \"numero nose como es \",\r\n    \"fiduciary\": \"el fidu de la prueba actualizada\",\r\n    \"status\": false\r\n}\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarGarantiaPropCred(facilityId, guaranteeId) {\r\n    try {\r\n      var data = { requestId: facilityId, guaranteeId: guaranteeId };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_GARANTIA + \"?\" + qs.stringify(data));\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarEmpresaRelacionada: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  ////PROPUSTA DE CREDITO - FIANZAS///////\r\n  async consultarFianzaPropCred(facilityId) {\r\n    try {\r\n      var params = { facilityId: facilityId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_PROPUESTACREDITO_FIANZA + \"?\" + data);\r\n\r\n      /*{\r\n    \"bails\": [\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 2,\r\n            \"typeBail\": \"Jose Vargas\",\r\n            \"observations\": \"Competicion\",\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"facilityId\": 2,\r\n            \"idBail\": 1,\r\n            \"typeBail\": \"Fianza\",\r\n            \"observations\": \"Entrega\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n      return result.bails;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"typeBail\": \"Jose Vargas\",\r\n      \"observations\":\"Competicion\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarFianzaPropCred(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"facilityId\": 2,\r\n      \"idBail\":1,\r\n      \"typeBail\": \"Fianza\",\r\n      \"observations\":\"Entrega\",\r\n      \"status\":true\r\n  }\r\n      */\r\n\r\n      var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZA, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      if (result.statusCode === \"200\") {\r\n        return result;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarFianzaPropCred(facilityId, idBail) {\r\n    try {\r\n      var data = { facilityId: facilityId, idBail: idBail };\r\n      var result = await this.del(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n  /////ANALISIS DE CREDITO //////\r\n  ///////////////////////////////\r\n  //Balance Pasivo\r\n  async consultarBalancePasivoAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEPASIVOAC + \"?\" + data);\r\n\r\n      /*\r\n     {\r\n    \"passiveCapitalBalance\": [\r\n        {\r\n            \"transactId\": 101,\r\n            \"itemPassiveId\": 1,\r\n            \"itemPassive\": \"2\",\r\n            \"year1\": 3,\r\n            \"year2\": 4,\r\n            \"year3\": 5,\r\n            \"year4\": 7,\r\n            \"presentYear\": 8,\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}\r\n      */\r\n      return result.passiveCapitalBalance;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":4,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2018,\r\n\"year2\": 2019,\r\n\"year3\": 2020,\r\n\"year4\": 2021,\r\n\"presentYear\":2022\r\n}\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarBalancePasivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n\"transactId\":2,\r\n\"itemPassiveId\":2,\r\n\"itemPassive\":\"ITEM PASIVO\", \r\n\"year1\": 2017,\r\n\"year2\": 2018,\r\n\"year3\": 2019,\r\n\"year4\": 2020,\r\n\"presentYear\":2021,\r\n\"status\":true\r\n}\r\n      */\r\n     data[\"status\"]=true;\r\n\r\n      var result = await this.put(url.URL_BACKEND_BALANCEPASIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalancePasivoAC(transactId, itemPassiveId) {\r\n    try {\r\n      var data = { transactId: transactId, itemPassiveId: itemPassiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEPASIVOAC, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async consultarEstadoOrigenAplicacionesAC(transactId) {\r\n    try {\r\n      var params = { transactId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + data);\r\n\r\n      /*{\r\n          \"status\": {\r\n              \"statusCode\": \"200\",\r\n              \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n          },\r\n          \"sourceApplicationsStates\": [\r\n              {\r\n                  \"transactId\": 44,\r\n                  \"sourceApplicationItemId\": 1,\r\n                  \"sourceApplicationItem\": \"origen 2\",\r\n                  \"year1\": 55,\r\n                  \"year2\": 66,\r\n                  \"year3\": 77,\r\n                  \"year4\": 88,\r\n                  \"presentYear\": 99,\r\n                  \"status\": true\r\n              }\r\n          ]\r\n      }*/\r\n\r\n      return result.sourceApplicationsStates;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\": 44,\r\n      \"sourceApplicationItem\": \"origen 2\",\r\n      \"year1\": \"55\",\r\n      \"year2\": \"66\",\r\n      \"year3\": \"77\",\r\n      \"year4\": \"88\",\r\n      \"presentYear\": \"99\"\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarEstadoOrigenAplicacionesAC(data) {\r\n    try {\r\n\r\n      /*{\r\n    \"transactId\": 1,\r\n    \"sourceApplicationItemId\": 4,\r\n    \"sourceApplicationItem\": \"origen 2up\",\r\n    \"year1\": 55,\r\n    \"year2\": 66,\r\n    \"year3\": 77,\r\n    \"year4\": 88,\r\n    \"presentYear\": 99,\r\n    \"status\": true\r\n}\r\n      */\r\ndata[\"status\"]=true;\r\n      var result = await this.put(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarEstadoOrigenAplicacionesAC(transactId, sourceApplicationItemId) {\r\n    try {\r\n      var data = { transactId: transactId, sourceApplicationItemId: sourceApplicationItemId };\r\n      var result = await this.del(url.URL_BACKEND_ESTADOORIGENAPLICACIONAC + \"?\" + qs.stringify(data));\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //Balance Activo\r\n  async consultarBalanceActivoAC(transactId) {\r\n    try {\r\n      var params = { requestId: transactId }\r\n      var data = qs.stringify(params);\r\n      var result = await this.get(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + data);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción Exitosa\"\r\n    },\r\n    \"activeBalances\": [\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 1,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        },\r\n        {\r\n            \"idtramite\": 1,\r\n            \"idactivoitem\": 2,\r\n            \"activoitem\": \"kkkkk\",\r\n            \"anio1\": 1,\r\n            \"anio2\": 2,\r\n            \"anio3\": 3,\r\n            \"anio4\": 4,\r\n            \"anioactual\": 1.1,\r\n            \"estado\": true\r\n        }\r\n    ]\r\n} */\r\n\r\n\r\n\r\n      return result.activeBalances;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n  async nuevoBalanceActivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n      \"transactId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1\r\n  }\r\n      */\r\n\r\n      var result = await this.post(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async actualizarBalanceActivoAC(data) {\r\n    try {\r\n\r\n      /*{\r\n       \"transactId\":1,\r\n       \"itemActiveId\":1,\r\n       \"itemActive\": \"kkkkk\",\r\n       \"year1\":1,\r\n      \"year2\":2,\r\n      \"year3\":3,\r\n      \"year4\":4,\r\n       \"presentYear\": 1.1,\r\n       \"status\":true\r\n  }\r\n      */\r\n  data[\"status\"]=true;\r\n      var result = await this.put(url.URL_BACKEND_BALANCEACTIVOAC, data);//saveProposalData\r\n      //OK\r\n      /*var result ={\r\n      \"statusCode\": \"200\",\r\n      \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n  }\r\n  }*/\r\n      return result;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api guardarDesembolsoPropCred\", err);\r\n    }\r\n    return undefined;\r\n  }\r\n  async eliminarBalanceActivoAC(transactId, itemActiveId) {\r\n    try {\r\n      var data = { requestId: transactId, itemActiveId: itemActiveId };\r\n      var result = await this.del(url.URL_BACKEND_BALANCEACTIVOAC + \"?\" + qs.stringify(data));\r\n      //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n      return result;//WatchlistModel.fromJson(result);\r\n    }\r\n    catch (err) {\r\n      console.error(\"api eliminarFianzaPropCred: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n//Balance Activo\r\nasync consultarIndicadorAC(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_INDICADORAC + \"?\" + data);\r\n\r\n    /*{\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\",\r\n    \"indicatorDTOList\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"itemIndicatorsId\": 1,\r\n            \"itemIndicators\": \"fghf\",\r\n            \"year1\": 0.55,\r\n            \"year2\": 0.55,\r\n            \"year3\": 0.55,\r\n            \"year4\": 0.55,\r\n            \"presentYear\": 0.55,\r\n            \"status\": true\r\n        },\r\n        {\r\n            \"transactId\": 1,\r\n            \"itemIndicatorsId\": 2,\r\n            \"itemIndicators\": \"fghf\",\r\n            \"year1\": 0.56,\r\n            \"year2\": 0.55,\r\n            \"year3\": 0.55,\r\n            \"year4\": 0.55,\r\n            \"presentYear\": 0.56,\r\n            \"status\": true\r\n        }\r\n    ]\r\n}*/\r\n    return result.indicatorDTOList;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoIndicadorAC(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"itemIndicators\": \"fghf\",\r\n    \"year1\": 0.55,\r\n    \"year2\": 0.55,\r\n    \"year3\": 0.55,\r\n    \"year4\": 0.55,\r\n    \"presentYear\": 0.55\r\n}\r\n\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarIndicadorAC(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"itemIndicatorsId\": 1,\r\n    \"itemIndicators\": \"1111\",\r\n    \"year1\": 0.56,\r\n    \"year2\": 0.55,\r\n    \"year3\": 0.55,\r\n    \"year4\": 0.55,\r\n    \"presentYear\": 0.56,\r\n    \"status\": true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_INDICADORAC, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarIndicadorAC(transactId, itemIndicatorsId) {\r\n  try {\r\n    var data = { transactId: transactId, itemIndicatorsId: itemIndicatorsId };\r\n    var result = await this.del(url.URL_BACKEND_INDICADORAC  + \"?\" + qs.stringify(data));\r\n    //var result = await this.put(url.URL_BACKEND_PROPUESTACREDITO_FIANZABORRAR, data);\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarFianzaPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n//POLITICAS DE CREDITOS - INFORME FINANCIERO\r\nasync consultarPoliticaCredito(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\r\n\r\n    /*{\r\n    \"creditPolicy\": [\r\n        {\r\n            \"transactId\": 1,\r\n            \"debtorId\": 7,\r\n            \"itemId\": 1,\r\n            \"parameter\": \"Reglas\",\r\n            \"condition\": \"Restriccion\",\r\n            \"comply\": false,\r\n            \"observations\": \"Politicas de Credito\",\r\n            \"status\": true\r\n        }\r\n    ],\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacción exitosa\"\r\n    }\r\n}*/\r\n    \r\nreturn result.creditPolicy;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync nuevoPoliticaCredito(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"debtorId\": 7,\r\n    \"parameter\": \"Reglas\",\r\n    \"condition\": \"Restriccion\",\r\n    \"comply\": false,\r\n    \"observations\": \"Politicas de Credito\",\r\n    \"status\": true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarPoliticaCredito(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 2,\r\n    \"debtorId\": 7,\r\n    \"itemId\": 7,\r\n    \"parameter\": \"Reglas\",\r\n    \"condition\": \"Restriccion\",\r\n    \"comply\": false,\r\n    \"observations\": \"Politicas de Credito\",\r\n    \"status\": true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarPoliticaCredit(transactId, debtorId,itemId) {\r\n  try {\r\n    var data = { transactId: transactId, debtorId: debtorId,itemId:itemId };\r\n    var result = await this.del(url.URL_BACKEND_POLITICACREDITO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarFianzaPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n\r\n//POLITICAS DE CREDITOS - INFORME FINANCIERO\r\nasync consultarInformiacionFinancieraFiadores(transactId) {\r\n  try {\r\n    var params = { transactId: transactId }\r\n    var data = qs.stringify(params);\r\n    var result = await this.get(url.URL_BACKEND_POLITICACREDITO + \"?\" + data);\r\n\r\n    /*{\r\n    \"finantialInfoGuarantor\": [],\r\n    \"status\": {\r\n        \"statusCode\": \"204\",\r\n        \"statusDesc\": \"Sin contenido\"\r\n    }\r\n}*/\r\n    \r\nreturn result.finantialInfoGuarantor;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api consultarListaDesembolsoPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarInformacionFinancieraFiadores(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 1,\r\n    \"debtorId\": 7,\r\n    \"parameter\": \"Reglas\",\r\n    \"condition\": \"Restriccion\",\r\n    \"comply\": false,\r\n    \"observations\": \"Politicas de Credito\",\r\n    \"status\": true\r\n}\r\n    */\r\n\r\n    var result = await this.post(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync actualizarPoliticaCredito(data) {\r\n  try {\r\n\r\n    /*{\r\n    \"transactId\": 2,\r\n    \"debtorId\": 7,\r\n    \"itemId\": 7,\r\n    \"parameter\": \"Reglas\",\r\n    \"condition\": \"Restriccion\",\r\n    \"comply\": false,\r\n    \"observations\": \"Politicas de Credito\",\r\n    \"status\": true\r\n}\r\n    */\r\ndata[\"status\"]=true;\r\n    var result = await this.put(url.URL_BACKEND_POLITICACREDITO, data);//saveProposalData\r\n    //OK\r\n    /*var result ={\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n}\r\n}*/\r\nreturn result;\r\n  }\r\n  catch (err) {\r\n    console.error(\"api guardarDesembolsoPropCred\", err);\r\n  }\r\n  return undefined;\r\n}\r\nasync eliminarPoliticaCredit(transactId, debtorId,itemId) {\r\n  try {\r\n    var data = { transactId: transactId, debtorId: debtorId,itemId:itemId };\r\n    var result = await this.del(url.URL_BACKEND_POLITICACREDITO  + \"?\" + qs.stringify(data));\r\n\r\n    return result;//WatchlistModel.fromJson(result);\r\n  }\r\n  catch (err) {\r\n    console.error(\"api eliminarFianzaPropCred: \", err)\r\n  }\r\n  return undefined;\r\n}\r\n\r\n  ///////////// CATALOGOS //////////////////////\r\n  /////////////////////////////////////////\r\n\r\n  //LISTA DE TIPO DE IDENTIFICACION\r\n  async consultarCatalogoTipoIdentificacion() {\r\n    try {\r\n      var result = await this.get(url.ULR_BACKEND_TIPODEIDENTIFICACION);\r\n\r\n      /*\r\n      \"status\": {\r\n    \"statusCode\": \"200\",\r\n    \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n},\r\n\"identificationType\": [\r\n    {\r\n        \"id\": \"CED\",\r\n        \"description\": \"Identity\",\r\n        \"state\": true\r\n    },\r\n    {\r\n        \"id\": \"CIP\",\r\n        \"description\": \"Identity - Panama\",\r\n        \"state\": true\r\n    },\r\n  }\r\n      */\r\n      if (result.status.statusCode === \"200\") {\r\n        var data = [];\r\n        for (const identif of result.identificationType) {\r\n          if (identif[\"id\"] === \"CED\" || identif[\"id\"] === \"PAS\" || identif[\"id\"] === \"RUC\") {\r\n            data.push(identif);\r\n          }\r\n        }\r\n        return data;\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(\"api error consultarCatalogoTipoIdentificacion: \", err);\r\n    }\r\n    return undefined;\r\n\r\n    /*\r\n    return watchlist.fromJson(result);\r\n      const json = [\r\n        { id: 1, description: 'RUC' },\r\n        { id: 2, description: 'Cédula' },\r\n        { id: 3, description: 'Pasaporte' },\r\n    ];\r\n    return json;\r\n    */\r\n  }\r\n\r\n  //CC-320\tConsultarListaClasificacionRiesgo\r\n  async retrieveRiskClassification() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_CLASIFICACIONRIESGO);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"riskClassification\": [\r\n        {\r\n            \"id\": \"NO\",\r\n            \"description\": \"Normal\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"ME\",\r\n            \"description\": \"Mencion especial\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"DU\",\r\n            \"description\": \"Dudoso\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"IR\",\r\n            \"description\": \"Irrecuperable\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.riskClassification;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRiskClassification: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-319\tConsultarListaTipoRevision\r\n  async retrieveRevisionType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOREVISION);\r\n\r\n      /*{\r\n    \"status\": {\r\n        \"statusCode\": \"200\",\r\n        \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n    },\r\n    \"revisionType\": [\r\n        {\r\n            \"id\": \"AN\",\r\n            \"description\": \"Anual\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"SE\",\r\n            \"description\": \"Semestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"TR\",\r\n            \"description\": \"Trimestral\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"NP\",\r\n            \"description\": \"Nueva propuesta\",\r\n            \"state\": true\r\n        },\r\n        {\r\n            \"id\": \"OT\",\r\n            \"description\": \"Otra\",\r\n            \"state\": true\r\n        }\r\n    ]\r\n}*/\r\n\r\n      return result.revisionType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveRevisionType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-321\tconsultarListaTipoPropuesta\r\n  async retrieveProposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"proposalType\": [\r\n          {\r\n              \"id\": \"NU\",\r\n              \"description\": \"Nuevo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RE\",\r\n              \"description\": \"Revision\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REC\",\r\n              \"description\": \"Revision con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REN\",\r\n              \"description\": \"Renovacion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RNC\",\r\n              \"description\": \"Renovacion con cambio\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MEN\",\r\n              \"description\": \"Mencion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAN\",\r\n              \"description\": \"Cancelar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"RES\",\r\n              \"description\": \"Restructuracion\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"REF\",\r\n              \"description\": \"Refinanciamiento\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.proposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-325\tconsultarListaTipoSubPropuesta\r\n  async retrieveSubproposalType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOSUBPROPUESTA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"subproposalType\": [\r\n          {\r\n              \"id\": \"DISV\",\r\n              \"description\": \"Disminución de las ventas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRI\",\r\n              \"description\": \"Lenta Rotación de Inventario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LRCC\",\r\n              \"description\": \"Lenta Rotación de Cuentas por Cobrar\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DFO\",\r\n              \"description\": \"Desvío de Fondo a Otras Actividades\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DEF\",\r\n              \"description\": \"Descalce Financiero\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"FEX\",\r\n              \"description\": \"Factores Externos a la Empresa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CAI\",\r\n              \"description\": \"Caída en Ingresos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"DISR\",\r\n              \"description\": \"Disminución de la Rentabilidad\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.subproposalType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveProposalType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-322\tconsultarListaTipoFacilidad\r\n  async retrieveFacilityType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFACILIDAD);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"facilityType\": [\r\n          {\r\n              \"id\": \"LCR\",\r\n              \"description\": \"Linea de credito rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCN\",\r\n              \"description\": \"Linea de credito no rotativa\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCS\",\r\n              \"description\": \"Linea de credito para sobregiro\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"LCC\",\r\n              \"description\": \"Linea de credito convertible a prestamo\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PC\",\r\n              \"description\": \"Prestamo comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PI\",\r\n              \"description\": \"Prestamo interno\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PR\",\r\n              \"description\": \"prestamo prendario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"HP\",\r\n              \"description\": \"Prestamo hipotecario\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAC\",\r\n              \"description\": \"Prestamo auto comercial\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PCE\",\r\n              \"description\": \"Prestamo comercial para equipos\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PS\",\r\n              \"description\": \"Prestamo sindicado\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CC\",\r\n              \"description\": \"Carta de credito\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"PAG\",\r\n              \"description\": \"Prestamo agropecuario\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.facilityType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveFacilityType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  //CC-324\tconsultarListaTipoFianza\r\n  async retrieveBailType() {\r\n    try {\r\n\r\n      var result = await this.get(url.URL_BACKEND_CATALOGO_TIPOFIANZA);\r\n\r\n      /*{\r\n      \"status\": {\r\n          \"statusCode\": \"200\",\r\n          \"statusDesc\": \"Transacciï¿½n Exitosa\"\r\n      },\r\n      \"bailType\": [\r\n          {\r\n              \"id\": \"SIPN\",\r\n              \"description\": \"Solidaria ilimitada PN\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SIPJ\",\r\n              \"description\": \"olidaria ilimitada PJ\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CRU\",\r\n              \"description\": \"Cruzadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MAL\",\r\n              \"description\": \"Mancomunadas limitadas\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"SOL\",\r\n              \"description\": \"Solidaria limitada\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"CUM\",\r\n              \"description\": \"Cumplimiento\",\r\n              \"state\": true\r\n          },\r\n          {\r\n              \"id\": \"MIL\",\r\n              \"description\": \"Mancomunadas ilimitadas\",\r\n              \"state\": true\r\n          }\r\n      ]\r\n  }*/\r\n\r\n      return result.bailType;\r\n    }\r\n    catch (err) {\r\n      console.error(\"api retrieveBailType: \", err)\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}