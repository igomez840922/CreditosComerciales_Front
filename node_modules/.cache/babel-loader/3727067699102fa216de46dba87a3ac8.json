{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\ClientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport DatePicker from 'react-datepicker';\nimport Select from \"react-select\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport { AvDateField } from \"availity-reactstrap-validation\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { BlackListHistoryModel } from '../../../models/Common/BlackListHistoryModel';\nimport BlackListForm from \"./BlackListForm\";\nimport checkNumber from \"../../../helpers/checkNumber\";\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport { Link } from \"react-router-dom\"; //Import Flatepicker\n\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\n\nconst ClientForm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [transactId, settransactId] = useState(props.transactId);\n  const [selectClient, setselectClient] = useState(props.clientSelected);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\n  const [roleList, setroleList] = useState([]);\n  const [roleSelected, setroleSelected] = useState(undefined);\n  const [countryList, setcountryList] = useState([]);\n  const [campoRequeridoCountry, setcampoRequeridoCountry] = useState(false);\n  const [countrySelected, setcountrySelected] = useState(undefined);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [showBlackListForm, setshowBlackListForm] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    //console.log(\"useEffect\", transactId)\n    fetchData();\n  }, []);\n\n  function fetchData() {\n    loadIdentificationTypes();\n    loadPersonTypes();\n    loadRoles();\n    loadCountries();\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    // consultarCatalogoTipoIdentificacion\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n        setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    // consultarCatalogoTipoPersona\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n        setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de roles\n\n\n  function loadRoles() {\n    apiServiceBackend.retrieveRoleCatalog().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"roleDescription\"]),\n            value: data[i][\"roleId\"],\n            checked: false\n          });\n        }\n\n        if (selectClient !== undefined && selectClient.roles.length > 0) {\n          selectClient.roles.map(async function (item, i) {\n            var rol = json.find(rolItem => {\n              return rolItem.value === item.roleId;\n            });\n\n            if (rol !== undefined && rol !== null) {\n              rol.checked = true;\n            }\n          });\n        }\n\n        setroleList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de paises\n\n\n  function loadCountries() {\n    apiCoreServices.getPaisesCatalogo().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.Records.length; i++) {\n          json.push({\n            label: t(data.Records[i][\"Description\"]),\n            value: data.Records[i][\"Code\"]\n          });\n        } // console.log(\"loadCountries\", selectClient);\n\n\n        setcountryList(json);\n        setcountrySelected(json.find(x => x.value === selectClient.nationality)); // setcountrySelected(selectClient !== undefined ? json.find(x => x.value === selectClient.nationality) : json[0]);\n      }\n    }).catch(error => {});\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormClient(e) {\n    // console.log(\"handleChangeInputFormClient\", e);\n    if (e.target.name == 'socialReason') e.target.name = 'name';\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n    clientPerson[e.target.name] = e.target.value;\n    setselectClient(clientPerson); //si la persona es juridica auto seleccionamos RUC\n\n    if (clientPerson.personType === 2) {\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\n    }\n  } //Actualizar roles de Cliente cada vez que se actualiza un checkbox\n\n\n  function handleChangeInputChkClient(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n\n    if (e.target.checked) {\n      //si es true lo agregamos\n      clientPerson.roles.push({\n        roleId: e.target.name\n      });\n    } else {\n      //lo borramos\n      clientPerson.roles = clientPerson.roles.filter(rol => rol.roleId !== e.target.name);\n    }\n\n    setselectClient(clientPerson);\n  } //Guardar el Cliente\n\n\n  async function handleSubmitFormClient(event, errors, values) {\n    var _values$name, _values$secondName;\n\n    selectClient.name = (_values$name = values.name) !== null && _values$name !== void 0 ? _values$name : values.nameJ;\n    selectClient.secondName = (_values$secondName = values.secondName) !== null && _values$secondName !== void 0 ? _values$secondName : values.secondNameJ;\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    if (selectClient !== undefined && selectClient !== null) {\n      if (countrySelected == undefined) {\n        setcampoRequeridoCountry(true);\n        return;\n      } else {\n        setcampoRequeridoCountry(false);\n      }\n\n      if (selectClient.roles.length <= 0) {\n        showMessage(t(\"YoumustselectatleasoneRoleforthisclient\"), true);\n        return;\n      }\n\n      if (selectClient.blacklist.length <= 0) {\n        showMessage(t(\"ThisclienthasnotbeenverifiedonWatchLists\"), true);\n        return;\n      }\n\n      if (selectClient.idType.length <= 0) {\n        showMessage(t(\"PleaseselectIdentificationType\"), true);\n        return;\n      }\n\n      if (selectClient.nationality.length <= 0) {\n        showMessage(t(\"PleaseselectNationality\"), true);\n        return;\n      }\n\n      if (selectClient.personId <= 0) {\n        //nueva persona\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n            props.checkDebtorShareholders();\n          } else {\n            showMessage(t(\"Datacouldnotbesaved\"), true);\n          }\n        }).catch(error => {});\n      } else {\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n          } else {\n            showMessage(t(\"Datacouldnotbesaved\"), true);\n          }\n        }).catch(err => {});\n      }\n    } else {\n      showMessage(t(\"Theclientisnotvalid\"), true);\n    }\n  } //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\n\n\n  function getClientDataFormByPersonType(personType) {\n    if (personType === undefined) {\n      return null;\n    }\n\n    switch (personType.value) {\n      case 1:\n        {\n          //Natural\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"FirstName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"name\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.name : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.lastName : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondSurname\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondSurname\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondSurname : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"birthDate\",\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Flatpickr, {\n                  name: \"birthDate\",\n                  className: \"form-control d-block\",\n                  placeholder: OPTs.FORMAT_DATE_SHOW,\n                  options: {\n                    dateFormat: OPTs.FORMAT_DATE,\n                    //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\n                    defaultDate: new Date(v) //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n                  },\n                  onChange: (selectedDates, dateStr, instance) => {\n                    handleChangeInputFormClient({\n                      target: {\n                        name: \"birthDate\",\n                        value: moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\")\n                      }\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 11\n            }, this)]\n          }, \"cfn\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this);\n        }\n\n      case 2:\n        {\n          //Juridica\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"SocialReason\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"nameJ\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.name : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"CommercialName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondNameJ\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondName : '',\n                  errorMessage: t(\"Required Field\") // validate={{ required: { value: true } }}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 13\n            }, this)]\n          }, \"cfj\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }, this);\n        }\n\n      default:\n        break;\n    }\n\n    return null;\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n\n    if (selectClient !== undefined) {\n      clientPerson.personId = selectClient.personId;\n    }\n\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    setselectClient(clientPerson);\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } //Abrir modal de verificacion en listas de vigilancias\n\n\n  function showWatchListCheck(show = true) {\n    setshowBlackListForm(show);\n  }\n\n  function addWatchListResult(resultWatchList) {\n    if (selectClient !== undefined) {\n      var blacklistmdl = new BlackListHistoryModel(); //new BlacklistModel();\n\n      blacklistmdl.blackList = resultWatchList.blackList;\n      blacklistmdl.comment = resultWatchList.comments;\n      blacklistmdl.transactId = transactId;\n      selectClient.blacklist.push(blacklistmdl);\n      setselectClient(selectClient);\n    }\n  } //Elimina record de la lista de Incidencias de Black Lista\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmClient\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmitFormClient,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-sub-title\",\n          children: t(\"ClientData\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"personType\",\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setpersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'personType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: personTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: personTypeSelected,\n                  name: \"personType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"customerNumberT24\",\n                  children: t(\"ClientNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"customerNumberT24\",\n                  type: \"number\",\n                  disabled: selectClient !== undefined ? selectClient.isNew : true,\n                  value: selectClient !== undefined ? selectClient.customerNumberT24 : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [getClientDataFormByPersonType(personTypeSelected), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: t(\"IdType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'idType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: identificationTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: identificationTypeSelected,\n                  name: \"idType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"idnumber\",\n                  children: t(\"IdNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"clientDocumentId\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: selectClient !== undefined ? selectClient.clientDocumentId : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"nationality\",\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setcountrySelected(countryList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'nationality',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: countryList,\n                  classNamePrefix: \"select2-selection\",\n                  value: countrySelected,\n                  name: \"nationality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 19\n                }, this), campoRequeridoCountry ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-error-parrafo\",\n                  children: t(\"Required Field\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"phone\",\n                  children: t(\"PhoneNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"phone\",\n                  type: \"text\",\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  },\n                  validate: {\n                    number: {\n                      value: true,\n                      errorMessage: t(\"InvalidField\")\n                    }\n                  },\n                  value: selectClient !== undefined ? selectClient.phone : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"email\",\n                  children: t(\"Email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"email\",\n                  type: \"email\",\n                  value: selectClient !== undefined ? selectClient.email : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-sub-title\",\n                  children: t(\"Roles\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: roleList.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                        check: true,\n                        className: \"my-2\",\n                        children: [/*#__PURE__*/_jsxDEV(AvInput, {\n                          type: \"checkbox\",\n                          defaultChecked: item.checked,\n                          name: item.value,\n                          onChange: handleChangeInputChkClient\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: item.value,\n                          children: [\" \", item.label]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 531,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"card-sub-title\",\n                        children: t(\"BlackListIncidences\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 6,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"btn\",\n                        color: \"success\",\n                        type: \"button\",\n                        style: {\n                          margin: '5px'\n                        },\n                        onClick: showWatchListCheck,\n                        title: t(\"Add\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-lg fa-plus-circle\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 551,\n                          columnNumber: 151\n                        }, this), \" \", \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 551,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"table-responsive styled-table-div\",\n                        children: /*#__PURE__*/_jsxDEV(Table, {\n                          className: \"table table-striped table-hover styled-table table\",\n                          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                children: t(\"WithMatches\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 560,\n                                columnNumber: 33\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: t(\"Observations\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 561,\n                                columnNumber: 33\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 559,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 558,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: selectClient !== undefined && selectClient.blacklist !== undefined && selectClient.blacklist.length > 0 ? selectClient.blacklist.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: item.blackList ? \"Si\" : \"No\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 568,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: item.comment\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 569,\n                                columnNumber: 37\n                              }, this)]\n                            }, index, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 567,\n                              columnNumber: 35\n                            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                                colSpan: 7,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"alert alert-info\",\n                                  style: {\n                                    textAlign: \"center\"\n                                  },\n                                  children: t(\"NotVerified\")\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 574,\n                                  columnNumber: 37\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 573,\n                                columnNumber: 35\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 572,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 564,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 557,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                show: msgData.show,\n                variant: msgData.isError ? \"danger\" : \"success\",\n                dismissible: true,\n                onClose: () => {\n                  console.log(\"onClose\");\n                  setmsgData({\n                    show: false,\n                    msg: \"\",\n                    isError: false\n                  });\n                },\n                children: msgData.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            style: {\n              margin: '5px 0px'\n            },\n            type: \"button\",\n            onClick: props.onCancel,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), \" \", t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"submit\",\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 77\n            }, this), \" \", t(\"Save\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), showBlackListForm ? /*#__PURE__*/_jsxDEV(BlackListForm, {\n      clientSelected: selectClient,\n      isOpen: showBlackListForm,\n      toggle: () => {\n        setshowBlackListForm(!showBlackListForm);\n      },\n      watchListResult: addWatchListResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 9\n    }, this) : null]\n  }, \"libl\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientForm, \"11V8C3eDvgD0FknL5KnVmhe5z5Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = ClientForm;\nClientForm.propTypes = {\n  onCancel: PropTypes.func,\n  clientSelected: PropTypes.any,\n  transactId: PropTypes.any,\n  checkDebtorShareholders: PropTypes.func\n};\nexport default ClientForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"ClientForm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/ClientForm.js"],"names":["React","useState","PropTypes","useTranslation","moment","DatePicker","Select","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","Alert","BackendServices","CoreServices","BpmServices","AvForm","AvField","AvGroup","AvInput","AvCheckbox","AvDateField","PersonModel","BlackListHistoryModel","BlackListForm","checkNumber","OPTs","Link","Flatpickr","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","ClientForm","props","t","i18n","transactId","settransactId","selectClient","setselectClient","clientSelected","identificationTypeList","setidentificationTypeList","identificationTypeSelected","setidentificationTypeSelected","undefined","personTypeList","setpersonTypeList","personTypeSelected","setpersonTypeSelected","roleList","setroleList","roleSelected","setroleSelected","countryList","setcountryList","campoRequeridoCountry","setcampoRequeridoCountry","countrySelected","setcountrySelected","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","msgData","setmsgData","show","msg","isError","showBlackListForm","setshowBlackListForm","useEffect","fetchData","loadIdentificationTypes","loadPersonTypes","loadRoles","loadCountries","consultarCatalogoTipoIdentificacion","then","data","json","i","length","push","label","value","find","x","idType","catch","error","consultarCatalogoTipoPersona","Number","personType","retrieveRoleCatalog","checked","roles","map","item","rol","rolItem","roleId","getPaisesCatalogo","Records","nationality","handleChangeInputFormClient","e","target","name","clientPerson","handleChangeInputChkClient","filter","handleSubmitFormClient","event","errors","values","nameJ","secondName","secondNameJ","preventDefault","showMessage","blacklist","personId","nuevoOrquestadoListaPersonaSolicitud","onCancel","checkDebtorShareholders","actualizarOrquestadoListaPersonaSolicitud","err","getClientDataFormByPersonType","required","lastName","secondSurname","FORMAT_DATE_SHOW","dateFormat","FORMAT_DATE","defaultDate","Date","v","selectedDates","dateStr","instance","format","loadClientDataT24","dataClientT24","customerNumberT24","id","clientDocumentId","idnumber","firstname","secondname","lastname","secondlastname","partyType","idtype","message","showWatchListCheck","addWatchListResult","resultWatchList","blacklistmdl","blackList","comment","comments","isNew","errorMessage","number","phone","email","index","textAlign","margin","console","log","propTypes","func","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport DatePicker from 'react-datepicker';\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\r\nimport { AvDateField } from \"availity-reactstrap-validation\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { BlackListHistoryModel } from '../../../models/Common/BlackListHistoryModel';\r\nimport BlackListForm from \"./BlackListForm\"\r\nimport checkNumber from \"../../../helpers/checkNumber\";\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport { Link } from \"react-router-dom\"\r\n//Import Flatepicker\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClientForm = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const [transactId, settransactId] = useState(props.transactId);\r\n  const [selectClient, setselectClient] = useState(props.clientSelected);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\r\n  const [roleList, setroleList] = useState([]);\r\n  const [roleSelected, setroleSelected] = useState(undefined);\r\n  const [countryList, setcountryList] = useState([]);\r\n  const [campoRequeridoCountry, setcampoRequeridoCountry] = useState(false);\r\n  const [countrySelected, setcountrySelected] = useState(undefined);\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  const [showBlackListForm, setshowBlackListForm] = useState(false);\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    //console.log(\"useEffect\", transactId)\r\n    fetchData();\r\n  }, []);\r\n  function fetchData() {\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    loadRoles();\r\n    loadCountries();\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    // consultarCatalogoTipoIdentificacion\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json)\r\n          setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    // consultarCatalogoTipoPersona\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n          setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de roles\r\n  function loadRoles() {\r\n    apiServiceBackend.retrieveRoleCatalog()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"roleDescription\"]), value: data[i][\"roleId\"], checked: false })\r\n          }\r\n          if (selectClient !== undefined && selectClient.roles.length > 0) {\r\n            selectClient.roles.map(async function (item, i) {\r\n              var rol = json.find((rolItem) => {\r\n                return rolItem.value === item.roleId;\r\n              })\r\n              if (rol !== undefined && rol !== null) {\r\n                rol.checked = true;\r\n              }\r\n            })\r\n          }\r\n          setroleList(json)\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de paises\r\n  function loadCountries() {\r\n    apiCoreServices.getPaisesCatalogo()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.Records.length; i++) {\r\n            json.push({ label: t(data.Records[i][\"Description\"]), value: data.Records[i][\"Code\"] })\r\n          }\r\n          // console.log(\"loadCountries\", selectClient);\r\n          setcountryList(json);\r\n          setcountrySelected(json.find(x => x.value === selectClient.nationality));\r\n          // setcountrySelected(selectClient !== undefined ? json.find(x => x.value === selectClient.nationality) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormClient(e) {\r\n    // console.log(\"handleChangeInputFormClient\", e);\r\n    if (e.target.name == 'socialReason')\r\n      e.target.name = 'name';\r\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n    clientPerson[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n    //si la persona es juridica auto seleccionamos RUC\r\n    if (clientPerson.personType === 2) {\r\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\r\n    }\r\n  }\r\n  //Actualizar roles de Cliente cada vez que se actualiza un checkbox\r\n  function handleChangeInputChkClient(e) {\r\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n    if (e.target.checked) { //si es true lo agregamos\r\n      clientPerson.roles.push({ roleId: e.target.name })\r\n    }\r\n    else {//lo borramos\r\n      clientPerson.roles = clientPerson.roles.filter(rol => rol.roleId !== e.target.name)\r\n    }\r\n    setselectClient(clientPerson);\r\n  }\r\n  //Guardar el Cliente\r\n  async function handleSubmitFormClient(event, errors, values) {\r\n\r\n    selectClient.name = values.name ?? values.nameJ;\r\n    selectClient.secondName = values.secondName ?? values.secondNameJ;\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    if (selectClient !== undefined && selectClient !== null) {\r\n      if (countrySelected == undefined) {\r\n        setcampoRequeridoCountry(true);\r\n        return;\r\n      } else {\r\n        setcampoRequeridoCountry(false)\r\n      }\r\n      if (selectClient.roles.length <= 0) {\r\n        showMessage(t(\"YoumustselectatleasoneRoleforthisclient\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.blacklist.length <= 0) {\r\n        showMessage(t(\"ThisclienthasnotbeenverifiedonWatchLists\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.idType.length <= 0) {\r\n        showMessage(t(\"PleaseselectIdentificationType\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.nationality.length <= 0) {\r\n        showMessage(t(\"PleaseselectNationality\"), true);\r\n        return;\r\n      }\r\n\r\n\r\n\r\n      if (selectClient.personId <= 0) {//nueva persona\r\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient).then((data) => {\r\n          if (data !== null && data !== undefined) {\r\n            //salir\r\n            props.onCancel();\r\n\r\n            props.checkDebtorShareholders();\r\n          }\r\n          else {\r\n            showMessage(t(\"Datacouldnotbesaved\"), true);\r\n          }\r\n        }).catch((error) => { });\r\n      }\r\n      else {\r\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              //salir\r\n              props.onCancel();\r\n            }\r\n            else {\r\n              showMessage(t(\"Datacouldnotbesaved\"), true);\r\n            }\r\n          }).catch((err) => { });\r\n      }\r\n    }\r\n    else {\r\n      showMessage(t(\"Theclientisnotvalid\"), true);\r\n    }\r\n  }\r\n  //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\r\n  function getClientDataFormByPersonType(personType) {\r\n    if (personType === undefined) {\r\n      return null;\r\n    }\r\n    switch (personType.value) {\r\n      case 1: {//Natural\r\n        return (<React.Fragment key=\"cfn\">\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"FirstName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.name : ''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.secondName : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"lastName\">{t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.lastName : ''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondSurname\">{t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondSurname\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.secondSurname : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"birthDate\">{t(\"DBO\")}</Label>\r\n              {/*\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                validate={{date: {format:OPTs.FORMAT_DATE}}}\r\n                errorMessage={t(\"This client is not of legal age\")}\r\n                max={moment().subtract(18, 'years')}\r\n                type=\"date\" onChange={(e) => { e.target.value = moment(e.target.value).format(\"YYYY-MM-DD\"); handleChangeInputFormClient(e) }}\r\n                value={selectClient !== undefined ? selectClient.birthDate : ''}\r\n                 />*/}\r\n\r\n              <Flatpickr\r\n                name=\"birthDate\"\r\n                className=\"form-control d-block\"\r\n                placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                options={{\r\n                  dateFormat: OPTs.FORMAT_DATE,\r\n                  //maxDate: new Date().setFullYear(new Date().getFullYear() - 18),\r\n                  defaultDate: new Date(v),//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                }}\r\n                onChange={(selectedDates, dateStr, instance) => { handleChangeInputFormClient({ target: { name: \"birthDate\", value: moment(dateStr,\"DD/MM/YYYY\").format(\"YYYY-MM-DD\") } }) }}\r\n\r\n              />\r\n\r\n            </AvGroup>\r\n\r\n          </Col>\r\n        </React.Fragment>)\r\n      }\r\n      case 2: {//Juridica\r\n        return (\r\n          <React.Fragment key=\"cfj\">\r\n            <Col md=\"6\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"nameJ\"\r\n                  type=\"text\" onChange={handleChangeInputFormClient}\r\n                  value={selectClient !== undefined ? selectClient.name : ''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondName\">{t(\"CommercialName\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"secondNameJ\"\r\n                  type=\"text\"\r\n                  onChange={handleChangeInputFormClient}\r\n                  value={selectClient !== undefined ? selectClient.secondName : ''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                // validate={{ required: { value: true } }}\r\n                />\r\n              </div>\r\n            </Col>\r\n\r\n          </React.Fragment>\r\n        )\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n    return null;\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    var clientPerson = new PersonModel();\r\n    if (selectClient !== undefined) {\r\n      clientPerson.personId = selectClient.personId;\r\n    }\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    setselectClient(clientPerson);\r\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));\r\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));\r\n  }\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  //Abrir modal de verificacion en listas de vigilancias\r\n  function showWatchListCheck(show = true) {\r\n    setshowBlackListForm(show);\r\n  }\r\n  function addWatchListResult(resultWatchList) {\r\n    if (selectClient !== undefined) {\r\n      var blacklistmdl = new BlackListHistoryModel(); //new BlacklistModel();\r\n      blacklistmdl.blackList = resultWatchList.blackList;\r\n      blacklistmdl.comment = resultWatchList.comments;\r\n      blacklistmdl.transactId = transactId;\r\n      selectClient.blacklist.push(blacklistmdl);\r\n      setselectClient(selectClient);\r\n    }\r\n  }\r\n\r\n  //Elimina record de la lista de Incidencias de Black Lista\r\n  return (\r\n    <React.Fragment key=\"libl\">\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmClient\" className=\"needs-validation\" onSubmit={handleSubmitFormClient}>\r\n        <Card>\r\n          <h5 className=\"card-sub-title\">{t(\"ClientData\")}</h5>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"}\r\n                    onChange={(e) => { setpersonTypeSelected(personTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'personType', value: e.value } }) }}\r\n                    options={personTypeList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={personTypeSelected}\r\n                    name=\"personType\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"customerNumberT24\">{t(\"ClientNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"customerNumberT24\" type=\"number\" disabled={selectClient !== undefined ? selectClient.isNew : true}\r\n                    value={selectClient !== undefined ? selectClient.customerNumberT24 : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {getClientDataFormByPersonType(personTypeSelected)}\r\n\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label>{t(\"IdType\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"}\r\n                    onChange={(e) => { setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'idType', value: e.value } }) }}\r\n                    options={identificationTypeList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={identificationTypeSelected}\r\n                    name=\"idType\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"clientDocumentId\" type=\"text\"\r\n                    validate={{ required: { value: true, errorMessage: t(\"Required Field\") } }}\r\n                    value={selectClient !== undefined ? selectClient.clientDocumentId : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"nationality\">{t(\"Nationality\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"}\r\n                    onChange={(e) => { setcountrySelected(countryList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'nationality', value: e.value } }) }}\r\n                    options={countryList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={countrySelected}\r\n                    name=\"nationality\"\r\n                  />\r\n                  {campoRequeridoCountry ?\r\n                    <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                    : null}\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"phone\">{t(\"PhoneNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"phone\"\r\n                    type=\"text\"\r\n                    onKeyPress={(e) => { return checkNumber(e) }}\r\n                    validate={{\r\n                      number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                    }}\r\n                    value={selectClient !== undefined ? selectClient.phone : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"email\" type=\"email\"\r\n                    value={selectClient !== undefined ? selectClient.email : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <h5 className=\"card-sub-title\">{t(\"Roles\")}</h5>\r\n                  <CardBody>\r\n                    <Row>\r\n                      {roleList.map((item, index) => (\r\n                        <Col md=\"4\">\r\n                          <AvGroup check className=\"my-2\">\r\n                            <AvInput type=\"checkbox\" defaultChecked={item.checked} name={item.value} onChange={handleChangeInputChkClient} />\r\n                            <Label htmlFor={item.value}> {item.label}</Label>\r\n                          </AvGroup>\r\n                        </Col>\r\n                      ))}\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <CardBody>\r\n                    <Row>\r\n                      <Col md=\"6\">\r\n                        <h5 className=\"card-sub-title\">{t(\"BlackListIncidences\")}</h5>\r\n                      </Col>\r\n                      <Col md={6} style={{ textAlign: \"right\", }}>\r\n                        <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={showWatchListCheck} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"12\">\r\n                        <div className=\"table-responsive styled-table-div\">\r\n                          <Table className=\"table table-striped table-hover styled-table table\">\r\n                            <thead>\r\n                              <tr>\r\n                                <th>{t(\"WithMatches\")}</th>\r\n                                <th>{t(\"Observations\")}</th>\r\n                              </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                              {selectClient !== undefined && selectClient.blacklist !== undefined && selectClient.blacklist.length > 0 ?\r\n                                selectClient.blacklist.map((item, index) => (\r\n                                  <tr key={index}>\r\n                                    <td>{item.blackList ? \"Si\" : \"No\"}</td>\r\n                                    <td>{item.comment}</td>\r\n                                  </tr>\r\n                                )) :\r\n                                <tr>\r\n                                  <td colSpan={7}>\r\n                                    <div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NotVerified\")}</div>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                              }\r\n                            </tbody>\r\n                          </Table>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                  {msgData.msg}\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n            <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={props.onCancel}>\r\n              <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n            </Button>\r\n            <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n              {\" \"}{t(\"Save\")}\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </AvForm>\r\n      {showBlackListForm ?\r\n        <BlackListForm clientSelected={selectClient} isOpen={showBlackListForm} toggle={() => { setshowBlackListForm(!showBlackListForm) }} watchListResult={addWatchListResult} />\r\n        : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\nClientForm.propTypes = {\r\n  onCancel: PropTypes.func,\r\n  clientSelected: PropTypes.any,\r\n  transactId: PropTypes.any,\r\n  checkDebtorShareholders: PropTypes.func\r\n}\r\nexport default ClientForm;"]},"metadata":{},"sourceType":"module"}