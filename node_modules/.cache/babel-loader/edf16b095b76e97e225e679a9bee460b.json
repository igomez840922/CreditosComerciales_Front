{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\FacilityListBpm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelper } from '../../helpers';\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\";\nimport { Table, Card, CardBody, Row, Col, Label } from \"reactstrap\";\nimport HeaderSections from '../Common/HeaderSections';\nimport { useTranslation } from \"react-i18next\";\nimport { BackendServices, CoreServices } from \"../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FacilityListBpm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataReturn, setdataReturn] = useState(null);\n  const [debtorList, setdebtorList] = useState([]);\n  const [facilityTypeList, setfacilityTypeList] = useState([]); //Servicios\n\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  useEffect(() => {\n    if (props.transactionId != null) {\n      initializeData();\n    }\n  }, []);\n\n  async function initializeData() {\n    //los deudores\n    var result = await backendServices.consultarDeudores(props.transactionId);\n\n    if (result !== undefined) {\n      setdebtorList(result);\n    }\n\n    console.log(\"initializeData\", result); //catalogo de facilidades\n\n    result = await backendServices.retrieveFacilityType();\n\n    if (result !== undefined) {\n      setfacilityTypeList(result);\n    }\n\n    console.log(\"initializeData\", result); // consultarPropuesta de Credito\n\n    backendServices.consultGeneralDataPropCred(props.transactionId).then(resp => {\n      if (resp !== undefined) {\n        //Consultar Lista de Facilidades\n        backendServices.consultarFacilidades(resp[0].requestId).then(resp => {\n          setdataReturn(resp);\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n          title: \"FacilityActual\",\n          t: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"table mt-1\",\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"table-light\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Debtor\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Facility Type\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: t(\"Proposal\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"ProposalRisk\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"ProposalRate\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"Proposed Risk\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-end\",\n                children: t(\"Variation\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: dataReturn ? dataReturn.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.debtor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.facilityTypeId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.proposalTypeName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-end\",\n                children: [\"$\", item.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-end\",\n                children: [\"$\", item.proposalRate]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-end\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-end\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)]\n            }, 'row-' + index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FacilityListBpm, \"aHYlZ1M0zYjxO+cg6sJE2BRzL98=\", false, function () {\n  return [useTranslation];\n});\n\n_c = FacilityListBpm;\nFacilityListBpm.propTypes = {\n  transactionId: PropTypes.string\n};\nexport default FacilityListBpm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityListBpm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/FacilityListBpm.js"],"names":["React","useState","useEffect","PropTypes","translationHelper","AvForm","AvGroup","AvField","AvFeedback","Table","Card","CardBody","Row","Col","Label","HeaderSections","useTranslation","BackendServices","CoreServices","FacilityListBpm","props","t","i18n","dataReturn","setdataReturn","debtorList","setdebtorList","facilityTypeList","setfacilityTypeList","coreServices","setcoreServices","backendServices","setbackendServices","transactionId","initializeData","result","consultarDeudores","undefined","console","log","retrieveFacilityType","consultGeneralDataPropCred","then","resp","consultarFacilidades","requestId","map","item","index","debtor","facilityTypeId","proposalTypeName","amount","proposalRate","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelper } from '../../helpers';\r\nimport { AvForm, AvGroup, AvField, AvFeedback } from \"availity-reactstrap-validation\"\r\nimport {\r\n    Table,\r\n    Card,\r\n    CardBody,\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\n\r\nimport HeaderSections from '../Common/HeaderSections';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { BackendServices, CoreServices } from \"../../services\";\r\n\r\nconst FacilityListBpm = (props) => {\r\n    \r\n    const { t, i18n } = useTranslation();\r\n    const [dataReturn, setdataReturn] = useState(null);\r\n    const [debtorList, setdebtorList] = useState([]);\r\n    const [facilityTypeList, setfacilityTypeList] = useState([]);\r\n    \r\n  //Servicios\r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n\r\n    useEffect(() => {\r\n        if (props.transactionId != null) {\r\n            initializeData();        }\r\n    }, []);\r\n\r\n    async function initializeData() {\r\n\r\n        //los deudores\r\n      var result =  await backendServices.consultarDeudores(props.transactionId);\r\n      if(result!==undefined){\r\n        setdebtorList(result);\r\n      }\r\n\r\n      console.log(\"initializeData\",result);\r\n       \r\n      //catalogo de facilidades\r\n       result =  await backendServices.retrieveFacilityType();\r\n      if(result!==undefined){\r\n        setfacilityTypeList(result);\r\n      }\r\n\r\n      console.log(\"initializeData\",result);\r\n      \r\n       // consultarPropuesta de Credito\r\n       backendServices.consultGeneralDataPropCred(props.transactionId).then((resp) => {\r\n        if(resp!==undefined){\r\n            //Consultar Lista de Facilidades\r\n            backendServices.consultarFacilidades(resp[0].requestId).then((resp) => {\r\n                setdataReturn(resp)\r\n            });\r\n        }\r\n    });    \r\n    }\r\n    \r\n    return (\r\n\r\n        <React.Fragment>\r\n      <>\r\n        <CardBody>\r\n          <HeaderSections title={\"FacilityActual\"} t={t}></HeaderSections>\r\n          <p className=\"card-title-desc\">\r\n          </p>\r\n          <Table className=\"table mt-1\" responsive>\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th>{t(\"Debtor\")}</th>\r\n                <th>{t(\"Facility Type\")}</th>\r\n                <th>{t(\"Proposal\")}</th>\r\n                <th className=\"text-end\">{t(\"ProposalRisk\")}</th>\r\n                <th className=\"text-end\">{t(\"ProposalRate\")}</th>\r\n                <th className=\"text-end\">{t(\"Proposed Risk\")}</th>\r\n                <th className=\"text-end\">{t(\"Variation\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dataReturn?\r\n              dataReturn.map((item, index) => (\r\n                <tr key={'row-' + index}>\r\n                  <td>{item.debtor}</td>\r\n                  <td>{item.facilityTypeId}</td>\r\n                  <td>{item.proposalTypeName}</td>\r\n                  <td className=\"text-end\">${item.amount}</td>\r\n                  <td className=\"text-end\">${item.proposalRate}</td>\r\n                  <td className=\"text-end\"></td>\r\n                  <td className=\"text-end\"></td>\r\n                </tr>)\r\n              )\r\n              :null}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </>\r\n    </React.Fragment >   \r\n       \r\n    );\r\n};\r\nFacilityListBpm.propTypes = {\r\n    transactionId: PropTypes.string,\r\n};\r\nexport default FacilityListBpm;\r\n"]},"metadata":{},"sourceType":"module"}