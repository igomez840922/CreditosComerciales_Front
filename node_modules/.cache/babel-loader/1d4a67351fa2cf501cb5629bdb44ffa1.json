{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalReciprocidad.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport * as opt from \"../../../../../helpers/options_helper\";\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter, InputGroup } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport Currency from \"../../../../../helpers/currency\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../../services\";\nimport SessionHelper from \"../../../../../helpers/SessionHelper\";\nimport moment from \"moment\";\nimport { GetMontNumberByName, GetMontNameByNumber } from '../../../../../helpers/commons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalReciprocidad = props => {\n  _s();\n\n  var _props$dataRecipro$de, _props$dataRecipro, _props$dataRecipro$av, _props$dataRecipro2, _props$dataRecipro$sa, _props$dataRecipro3, _props$dataRecipro$re, _props$dataRecipro4, _props$dataRecipro$so, _props$dataRecipro5;\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\n  const [year, setyear] = useState(null);\n  const [month, setmonth] = useState(null);\n  const [mesSelect, setmesSelect] = useState(undefined);\n  const meses = [{\n    label: t(\"January\"),\n    value: t(\"January\")\n  }, {\n    label: t(\"February\"),\n    value: t(\"February\")\n  }, {\n    label: t(\"March\"),\n    value: t(\"March\")\n  }, {\n    label: t(\"April\"),\n    value: t(\"April\")\n  }, {\n    label: t(\"May\"),\n    value: t(\"May\")\n  }, {\n    label: t(\"June\"),\n    value: t(\"June\")\n  }, {\n    label: t(\"July\"),\n    value: t(\"July\")\n  }, {\n    label: t(\"August\"),\n    value: t(\"August\")\n  }, {\n    label: t(\"September\"),\n    value: t(\"September\")\n  }, {\n    label: t(\"October\"),\n    value: t(\"October\")\n  }, {\n    label: t(\"November\"),\n    value: t(\"November\")\n  }, {\n    label: t(\"December\"),\n    value: t(\"December\")\n  }];\n  const [mainDebtor, setmainDebtor] = useState(null);\n  const [coreServices, setcoreServices] = useState(new CoreServices());\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\n  const [deposits, setdeposits] = useState(currencyData.format((_props$dataRecipro$de = props === null || props === void 0 ? void 0 : (_props$dataRecipro = props.dataRecipro) === null || _props$dataRecipro === void 0 ? void 0 : _props$dataRecipro.deposits) !== null && _props$dataRecipro$de !== void 0 ? _props$dataRecipro$de : 0));\n  const [averageBalance, setaverageBalance] = useState(currencyData.format((_props$dataRecipro$av = props === null || props === void 0 ? void 0 : (_props$dataRecipro2 = props.dataRecipro) === null || _props$dataRecipro2 === void 0 ? void 0 : _props$dataRecipro2.averageBalance) !== null && _props$dataRecipro$av !== void 0 ? _props$dataRecipro$av : 0));\n  React.useEffect(() => {\n    var result = sessionHelper.get(opt.VARNAME_LOCATIONDATA);\n\n    if (result !== undefined && result !== null) {\n      loadMainDebtor(result.transactionId);\n    } // Read Api Service data\n\n\n    var defaultVal = null;\n    setmesSelect(undefined);\n\n    try {\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\n\n        if (defaultVal !== undefined) {\n          setmesSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props.isOpen]);\n  React.useEffect(() => {\n    getReciprocity();\n  }, [year, month]); //cargar deudor principal\n\n  async function loadMainDebtor(transactionId) {\n    var result = await backendServices.consultPrincipalDebtor(transactionId);\n\n    if (result !== undefined && result !== null) {\n      setmainDebtor(result);\n    }\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } // values.year = ano;\n\n\n    values.month = mesSelect.value;\n\n    if (props.tipo == \"guardar\") {\n      props.dataManagament(values, props.tipo);\n    } else {\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\n      props.dataManagament(values, props.tipo);\n    } // props.onSubmit(values);\n\n  }\n\n  async function getReciprocity() {\n    if (mainDebtor !== null && year !== null && year > 1995 && year <= Number(moment().format(\"YYYY\")) && month !== null) {\n      var data = await coreServices.getReciprocity(mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.customerNumberT24, year, month.toUpperCase());\n\n      if (data !== undefined) {\n        console.log(\"getReciprocity\", data);\n        setdeposits(currencyData.format(data.deposits));\n        setaverageBalance(currencyData.format(data.averageAmt));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Reciprocity\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idYear\",\n                        children: t(\"Date\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"requestDate\",\n                        type: \"month\",\n                        id: \"requestDate\",\n                        onChange: e => {\n                          setyear(e.target.value.split(\"-\")[0]);\n                          setmonth(GetMontNumberByName(mesSelect));\n                          setmonth(e.target.value.split(\"-\")[1]);\n                          console.log(e.target.value);\n                        },\n                        value: moment(props.dataRecipro.year + \"-\" + (mesSelect !== undefined ? GetMontNumberByName(mesSelect) : \"01\")).format(\"YYYY-MM\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                        className: \"form-control\",\n                        type: \"month\",\n                        defaultValue: mesSelect + \"/\" + props.dataRecipro.year,\n                        id: \"example-month-input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idYear\",\n                        children: t(\"Year\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"year\",\n                        id: \"year\",\n                        onChange: e => {\n                          setyear(e.target.value);\n                        },\n                        value: props.dataRecipro.year,\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          },\n                          number: {\n                            value: true,\n                            errorMessage: t(\"InvalidField\")\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idMonth\",\n                        children: t(\"Month\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        noOptionsMessage: () => \"\",\n                        onChange: e => {\n                          setmesSelect(meses.find(x => x.value === e.value));\n                          setmonth(e.value);\n                        },\n                        options: meses,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: mesSelect // value={props.dataRecipro.mes}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this), campoRequeridoMes ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sales\",\n                        children: t(\"Sales\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"sales\",\n                        id: \"sales\",\n                        value: currencyData.format((_props$dataRecipro$sa = props === null || props === void 0 ? void 0 : (_props$dataRecipro3 = props.dataRecipro) === null || _props$dataRecipro3 === void 0 ? void 0 : _props$dataRecipro3.sales) !== null && _props$dataRecipro$sa !== void 0 ? _props$dataRecipro$sa : 0),\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"deposits\",\n                        children: t(\"Deposits\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"deposits\",\n                        value: deposits,\n                        id: \"deposits\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"averagebalance\",\n                        children: t(\"AverageBalance\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"averageBalance\",\n                        value: averageBalance,\n                        id: \"averageBalance\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"reciprocity\",\n                        children: t(\"Reciprocity\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"reciprocity\",\n                        value: currencyData.format((_props$dataRecipro$re = props === null || props === void 0 ? void 0 : (_props$dataRecipro4 = props.dataRecipro) === null || _props$dataRecipro4 === void 0 ? void 0 : _props$dataRecipro4.reciprocity) !== null && _props$dataRecipro$re !== void 0 ? _props$dataRecipro$re : 0),\n                        id: \"reciprocity\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"sow\",\n                        children: t(\"Sow\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"sow\",\n                        value: currencyData.format((_props$dataRecipro$so = props === null || props === void 0 ? void 0 : (_props$dataRecipro5 = props.dataRecipro) === null || _props$dataRecipro5 === void 0 ? void 0 : _props$dataRecipro5.sow) !== null && _props$dataRecipro$so !== void 0 ? _props$dataRecipro$so : 0),\n                        id: \"sow\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 100\n                  }, this), \" \", \" \", props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalReciprocidad, \"Ax9VHuHjPz6a9dj7vtqQXIz26d4=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalReciprocidad;\nModalReciprocidad.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  partyId: PropTypes.string\n};\nexport default ModalReciprocidad;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalReciprocidad\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalReciprocidad.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","opt","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","AvForm","AvField","AvGroup","Select","Currency","BackendServices","CoreServices","BpmServices","SessionHelper","moment","GetMontNumberByName","GetMontNameByNumber","ModalReciprocidad","props","currencyData","t","i18n","campoRequeridoAno","setcampoRequeridoAno","campoRequeridoMes","setcampoRequeridoMes","year","setyear","month","setmonth","mesSelect","setmesSelect","undefined","meses","label","value","mainDebtor","setmainDebtor","coreServices","setcoreServices","backendServices","setbackendServices","sessionHelper","setsessionHelper","deposits","setdeposits","format","dataRecipro","averageBalance","setaverageBalance","useEffect","result","get","VARNAME_LOCATIONDATA","loadMainDebtor","transactionId","defaultVal","length","find","x","err","isOpen","getReciprocity","consultPrincipalDebtor","handleSubmit","event","errors","values","preventDefault","tipo","dataManagament","reciprocity_id","Number","data","customerNumberT24","toUpperCase","console","log","averageAmt","toggle","backgroundColor","e","target","split","required","errorMessage","number","sales","getRealValue","reciprocity","sow","textAlign","margin","botones","propTypes","bool","func","partyId","string"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport * as opt from \"../../../../../helpers/options_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\nimport Currency from \"../../../../../helpers/currency\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../../services\";\r\nimport SessionHelper from \"../../../../../helpers/SessionHelper\";\r\nimport moment from \"moment\";\r\n\r\nimport {GetMontNumberByName,GetMontNameByNumber} from '../../../../../helpers/commons'\r\n\r\nconst ModalReciprocidad = (props) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoAno, setcampoRequeridoAno] = useState(false);\r\n  const [campoRequeridoMes, setcampoRequeridoMes] = useState(false);\r\n  const [year, setyear] = useState(null);\r\n  const [month, setmonth] = useState(null);\r\n  const [mesSelect, setmesSelect] = useState(undefined);\r\n  const meses = [{ label: t(\"January\"), value: t(\"January\") }\r\n    , { label: t(\"February\"), value: t(\"February\") },\r\n  { label: t(\"March\"), value: t(\"March\") },\r\n  { label: t(\"April\"), value: t(\"April\") },\r\n  { label: t(\"May\"), value: t(\"May\") },\r\n  { label: t(\"June\"), value: t(\"June\") },\r\n  { label: t(\"July\"), value: t(\"July\") },\r\n  { label: t(\"August\"), value: t(\"August\") },\r\n  { label: t(\"September\"), value: t(\"September\") },\r\n  { label: t(\"October\"), value: t(\"October\") },\r\n  { label: t(\"November\"), value: t(\"November\") },\r\n  { label: t(\"December\"), value: t(\"December\") }];\r\n    \r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  \r\n  const [coreServices, setcoreServices] = useState(new CoreServices());\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [sessionHelper, setsessionHelper] = useState(new SessionHelper());\r\n\r\n  const [deposits,setdeposits] = useState(currencyData.format(props?.dataRecipro?.deposits ?? 0))\r\n  const [averageBalance,setaverageBalance] = useState(currencyData.format(props?.dataRecipro?.averageBalance ?? 0))\r\n\r\n  React.useEffect(() => {\r\n    var result =sessionHelper.get(opt.VARNAME_LOCATIONDATA);\r\n      if (result !== undefined && result !== null) {\r\n        loadMainDebtor(result.transactionId)\r\n      }\r\n\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setmesSelect(undefined)\r\n    try {\r\n      if (meses.length > 0 && props.dataRecipro.month !== null && mesSelect === undefined) {\r\n        defaultVal = meses.find(x => x.value === props.dataRecipro.month);\r\n        if (defaultVal !== undefined) {\r\n          setmesSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.isOpen]);\r\n\r\n  React.useEffect(() => {\r\n    getReciprocity()\r\n  }, [year,month]);\r\n\r\n  //cargar deudor principal\r\n  async function loadMainDebtor(transactionId) {\r\n    var result = await backendServices.consultPrincipalDebtor(transactionId)\r\n    if(result!==undefined && result !== null){\r\n      setmainDebtor(result);\r\n    }    \r\n  }\r\n    \r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    // values.year = ano;\r\n    values.month = mesSelect.value;\r\n    if (props.tipo == \"guardar\") {\r\n      props.dataManagament(values, props.tipo);\r\n    } else {\r\n      values.reciprocity_id = props.dataRecipro.reciprocity_id;\r\n      props.dataManagament(values, props.tipo);\r\n    }\r\n    // props.onSubmit(values);\r\n  }\r\n\r\n  async function getReciprocity(){\r\n    if(mainDebtor!==null && year!==null && year>1995 && year<=Number(moment().format(\"YYYY\")) && month!==null){\r\n      var data = await coreServices.getReciprocity(mainDebtor?.customerNumberT24,year,month.toUpperCase()); \r\n      if(data!==undefined){\r\n        console.log(\"getReciprocity\",data); \r\n        setdeposits(currencyData.format(data.deposits))\r\n        setaverageBalance(currencyData.format(data.averageAmt))\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"Reciprocity\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idYear\">{t(\"Date\")}</Label>\r\n                        <AvField\r\n                            className=\"form-control\"\r\n                            name=\"requestDate\"\r\n                            type=\"month\"\r\n                            id=\"requestDate\"\r\n                            onChange={(e) => { setyear(e.target.value.split(\"-\")[0]);setmonth(GetMontNumberByName(mesSelect));setmonth(e.target.value.split(\"-\")[1]); console.log(e.target.value);}}\r\n                            value={moment(props.dataRecipro.year + \"-\" + (mesSelect!==undefined?GetMontNumberByName(mesSelect):\"01\")).format(\"YYYY-MM\")}\r\n                        />\r\n\r\n                        <input\r\n                      className=\"form-control\"\r\n                      type=\"month\"\r\n                      defaultValue={mesSelect+\"/\"+props.dataRecipro.year}\r\n                      id=\"example-month-input\"\r\n                    />\r\n                      </div>\r\n                    </Col>\r\n                    \r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idYear\">{t(\"Year\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"year\"\r\n                          id=\"year\"\r\n                          onChange={(e) => { setyear(e.target.value);}}\r\n                          value={props.dataRecipro.year}\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idMonth\">{t(\"Month\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"} \r\n                          onChange={(e) => { setmesSelect(meses.find(x => x.value === e.value)); setmonth(e.value);}}\r\n                          options={meses}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={mesSelect}\r\n                        // value={props.dataRecipro.mes}\r\n                        />\r\n                        {campoRequeridoMes ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sales\">{t(\"Sales\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sales\"\r\n                          id=\"sales\"\r\n                          value={currencyData.format(props?.dataRecipro?.sales ?? 0)}\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"deposits\">{t(\"Deposits\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"deposits\"\r\n                          value={deposits}\r\n                          id=\"deposits\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"averagebalance\">{t(\"AverageBalance\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"averageBalance\"\r\n                          value={averageBalance}\r\n                          id=\"averageBalance\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"reciprocity\">{t(\"Reciprocity\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"reciprocity\"\r\n                          value={currencyData.format(props?.dataRecipro?.reciprocity ?? 0)}\r\n                          id=\"reciprocity\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"sow\">{t(\"Sow\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"sow\"\r\n                          value={currencyData.format(props?.dataRecipro?.sow ?? 0)}\r\n                          id=\"sow\"\r\n                          pattern=\"^[0-9,.]*$\"\r\n                          onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalReciprocidad.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  partyId:PropTypes.string\r\n};\r\n\r\nexport default ModalReciprocidad;\r\n"]},"metadata":{},"sourceType":"module"}