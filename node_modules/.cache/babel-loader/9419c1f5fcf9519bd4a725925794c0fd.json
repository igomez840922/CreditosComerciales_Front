{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Dropdown,DropdownItem,DropdownMenu,DropdownToggle}from\"reactstrap\";import{get,map}from\"lodash\";import{withTranslation}from\"react-i18next\";//i18n\nimport i18n from\"../../../i18n\";import languages from\"../../../common/languages\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LanguageDropdown=function LanguageDropdown(){// Declare a new state variable, which we'll call \"menu\"\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),selectedLang=_useState2[0],setSelectedLang=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),menu=_useState4[0],setMenu=_useState4[1];useEffect(function(){var currentLanguage=localStorage.getItem(\"I18N_LANGUAGE\");setSelectedLang(currentLanguage);},[]);var changeLanguageAction=function changeLanguageAction(lang){//set language as i18n\ni18n.changeLanguage(lang);localStorage.setItem(\"I18N_LANGUAGE\",lang);setSelectedLang(lang);};var toggle=function toggle(){setMenu(!menu);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Dropdown,{isOpen:menu,toggle:toggle,className:\"d-none d-sm-inline-block\",children:[/*#__PURE__*/_jsx(DropdownToggle,{className:\"btn header-item waves-effect\",tag:\"button\",children:/*#__PURE__*/_jsx(\"img\",{src:get(languages,\"\".concat(selectedLang,\".flag\")),alt:\"Header Language\",height:\"16\"})}),/*#__PURE__*/_jsx(DropdownMenu,{className:\"dropdown-menu-end\",right:true,children:map(Object.keys(languages),function(key){return/*#__PURE__*/_jsxs(DropdownItem,{onClick:function onClick(){return changeLanguageAction(key);},className:\"notify-item \".concat(selectedLang===key?\"active\":\"none\"),children:[/*#__PURE__*/_jsx(\"img\",{src:get(languages,\"\".concat(key,\".flag\")),alt:\"Qovex\",className:\"me-1\",height:\"12\"}),/*#__PURE__*/_jsx(\"span\",{className:\"align-middle\",children:get(languages,\"\".concat(key,\".label\"))})]},key);})})]})});};export default withTranslation()(LanguageDropdown);","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/CommonForBoth/TopbarDropdown/LanguageDropdown.js"],"names":["React","useEffect","useState","Dropdown","DropdownItem","DropdownMenu","DropdownToggle","get","map","withTranslation","i18n","languages","LanguageDropdown","selectedLang","setSelectedLang","menu","setMenu","currentLanguage","localStorage","getItem","changeLanguageAction","lang","changeLanguage","setItem","toggle","Object","keys","key"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OACEC,QADF,CAEEC,YAFF,CAGEC,YAHF,CAIEC,cAJF,KAKO,YALP,CAMA,OAASC,GAAT,CAAcC,GAAd,KAAyB,QAAzB,CACA,OAASC,eAAT,KAAgC,eAAhC,CAEA;AACA,MAAOC,CAAAA,IAAP,KAAiB,eAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,C,6IAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B;AACA,cAAwCV,QAAQ,CAAC,EAAD,CAAhD,wCAAOW,YAAP,eAAqBC,eAArB,eACA,eAAwBZ,QAAQ,CAAC,KAAD,CAAhC,yCAAOa,IAAP,eAAaC,OAAb,eAEAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,eAAe,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAxB,CACAL,eAAe,CAACG,eAAD,CAAf,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAAC,IAAI,CAAI,CACnC;AACAX,IAAI,CAACY,cAAL,CAAoBD,IAApB,EACAH,YAAY,CAACK,OAAb,CAAqB,eAArB,CAAsCF,IAAtC,EACAP,eAAe,CAACO,IAAD,CAAf,CACD,CALD,CAOA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnBR,OAAO,CAAC,CAACD,IAAF,CAAP,CACD,CAFD,CAIA,mBACE,sCACE,MAAC,QAAD,EAAU,MAAM,CAAEA,IAAlB,CAAwB,MAAM,CAAES,MAAhC,CAAwC,SAAS,CAAC,0BAAlD,wBACE,KAAC,cAAD,EAAgB,SAAS,CAAC,8BAA1B,CAAyD,GAAG,CAAC,QAA7D,uBACE,YACE,GAAG,CAAEjB,GAAG,CAACI,SAAD,WAAeE,YAAf,UADV,CAEE,GAAG,CAAC,iBAFN,CAGE,MAAM,CAAC,IAHT,EADF,EADF,cAQE,KAAC,YAAD,EAAc,SAAS,CAAC,mBAAxB,CAA4C,KAAK,KAAjD,UACGL,GAAG,CAACiB,MAAM,CAACC,IAAP,CAAYf,SAAZ,CAAD,CAAyB,SAAAgB,GAAG,qBAC9B,MAAC,YAAD,EAEE,OAAO,CAAE,yBAAMP,CAAAA,oBAAoB,CAACO,GAAD,CAA1B,EAFX,CAGE,SAAS,uBAAiBd,YAAY,GAAKc,GAAjB,CAAuB,QAAvB,CAAkC,MAAnD,CAHX,wBAME,YACE,GAAG,CAAEpB,GAAG,CAACI,SAAD,WAAegB,GAAf,UADV,CAEE,GAAG,CAAC,OAFN,CAGE,SAAS,CAAC,MAHZ,CAIE,MAAM,CAAC,IAJT,EANF,cAYE,aAAM,SAAS,CAAC,cAAhB,UACGpB,GAAG,CAACI,SAAD,WAAegB,GAAf,WADN,EAZF,GACOA,GADP,CAD8B,EAA5B,CADN,EARF,GADF,EADF,CAiCD,CAtDD,CAwDA,cAAelB,CAAAA,eAAe,GAAGG,gBAAH,CAA9B","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from \"reactstrap\"\r\nimport { get, map } from \"lodash\"\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\n//i18n\r\nimport i18n from \"../../../i18n\"\r\nimport languages from \"../../../common/languages\"\r\n\r\nconst LanguageDropdown = () => {\r\n  // Declare a new state variable, which we'll call \"menu\"\r\n  const [selectedLang, setSelectedLang] = useState(\"\")\r\n  const [menu, setMenu] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const currentLanguage = localStorage.getItem(\"I18N_LANGUAGE\")\r\n    setSelectedLang(currentLanguage)\r\n  }, [])\r\n\r\n  const changeLanguageAction = lang => {\r\n    //set language as i18n\r\n    i18n.changeLanguage(lang)\r\n    localStorage.setItem(\"I18N_LANGUAGE\", lang)\r\n    setSelectedLang(lang)\r\n  }\r\n\r\n  const toggle = () => {\r\n    setMenu(!menu)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dropdown isOpen={menu} toggle={toggle} className=\"d-none d-sm-inline-block\">\r\n        <DropdownToggle className=\"btn header-item waves-effect\" tag=\"button\">\r\n          <img\r\n            src={get(languages, `${selectedLang}.flag`)}\r\n            alt=\"Header Language\"\r\n            height=\"16\"\r\n          />\r\n        </DropdownToggle>\r\n        <DropdownMenu className=\"dropdown-menu-end\" right>\r\n          {map(Object.keys(languages), key => (\r\n            <DropdownItem\r\n              key={key}\r\n              onClick={() => changeLanguageAction(key)}\r\n              className={`notify-item ${selectedLang === key ? \"active\" : \"none\"\r\n                }`}\r\n            >\r\n              <img\r\n                src={get(languages, `${key}.flag`)}\r\n                alt=\"Qovex\"\r\n                className=\"me-1\"\r\n                height=\"12\"\r\n              />\r\n              <span className=\"align-middle\">\r\n                {get(languages, `${key}.label`)}\r\n              </span>\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(LanguageDropdown)\r\n"]},"metadata":{},"sourceType":"module"}