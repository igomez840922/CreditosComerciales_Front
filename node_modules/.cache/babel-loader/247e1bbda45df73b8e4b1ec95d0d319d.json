{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\LogProcess\\\\index.js\",\n    _s = $RefreshSig$();\n\n//Gestionar Log de los Procesos\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport functionshelper from \"../../helpers/functions_helper\";\nimport { Table, Card, CardBody, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\"; //i18n\n\nimport { withTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport ModalNewLog from \"./ModalNewLog\";\nimport { BackendServices } from \"../../services/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogProcess = props => {\n  _s();\n\n  //Data que recibimos en el location\n  const [locationData, setLocationData] = useState(props.locationData);\n  const [dataList, setDataList] = useState([]);\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [success_msg, setsuccess_msg] = useState(\"\");\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\"); //On Mounting (componentDidMount) if selectedData has changes\n\n  React.useEffect(() => {\n    if (props.locationData !== undefined && props.locationData !== null) {\n      setLocationData(props.locationData);\n      searchData(props.locationData);\n    }\n  }, [props.locationData]); //nuevo log\n\n  function toggleDisplayNewLogModal() {\n    setDisplayNewLogModal(!displayNewLogModal);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } //buscamos las Propuestas de Credito\n\n\n  function searchData(data) {\n    var parameters = {\n      responsible: data.customerName,\n      instanceNumber: data.instanceId,\n      transactId: data.transactionId\n    };\n    const api = new BackendServices();\n    api.consultarHistorico(parameters).then(resp => {\n      if (resp !== undefined) {\n        const dataRows = resp.map((dt, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: dt.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dt.observations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: functionshelper.getProcessName(dt.processId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: dt.responsible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this));\n        setDataList(dataRows);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function onSaveLogProcess(observations) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*              Le pasamos los valores al servicio de guardar bitacora                            */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    let data = {\n      \"instanceId\": locationData.instanceId,\n      \"transactId\": locationData.transactionId,\n      \"clientId\": locationData.customerId,\n      \"observations\": observations,\n      \"responsible\": locationData.customerName,\n      //hay que poner el usuario login\n      \"processId\": locationData.processId,\n      \"activityId\": locationData.activityId,\n      \"status\": true\n    };\n    const api = new BackendServices();\n    api.guardarHistorico(data).then(resp => {\n      if (resp !== undefined) {\n        searchData(locationData);\n        setsuccess_msg(props.t(\"SuccessSaveMessage\"));\n        setsuccess_dlg(true);\n      } else {\n        seterror_msg(props.t(\"ErrorSaveMessage\"));\n        seterror_dlg(true);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: props.t(\"Binnacle\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: \"table mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Date\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Comment\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Process\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"Activity\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: props.t(\"User\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"float-end\",\n                        onClick: () => {\n                          toggleDisplayNewLogModal();\n                        },\n                        title: props.t(\"Add\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 130\n                        }, this), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: dataList\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewLog, {\n      onSaveLogProcess: observations => {\n        onSaveLogProcess(observations);\n      },\n      isOpen: displayNewLogModal,\n      toggle: () => {\n        toggleDisplayNewLogModal();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), success_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: props.t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccess_dlg(false);\n      },\n      children: success_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: props.t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogProcess, \"f06nakfSX4D/22L1cszqd+ngvfA=\");\n\n_c = LogProcess;\nLogProcess.propTypes = {\n  locationData: PropTypes.any\n};\nexport default withTranslation()(LogProcess);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogProcess\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/LogProcess/index.js"],"names":["React","useState","PropTypes","Link","functionshelper","Table","Card","CardBody","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","withTranslation","SweetAlert","ModalNewLog","BackendServices","LogProcess","props","locationData","setLocationData","dataList","setDataList","displayNewLogModal","setDisplayNewLogModal","success_dlg","setsuccess_dlg","success_msg","setsuccess_msg","error_dlg","seterror_dlg","error_msg","seterror_msg","useEffect","undefined","searchData","toggleDisplayNewLogModal","removeBodyCss","document","body","classList","add","data","parameters","responsible","customerName","instanceNumber","instanceId","transactId","transactionId","api","consultarHistorico","then","resp","dataRows","map","dt","idx","date","observations","getProcessName","processId","catch","err","console","log","onSaveLogProcess","customerId","activityId","guardarHistorico","t","propTypes","any"],"mappings":"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","sourcesContent":["//Gestionar Log de los Procesos\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from \"react-router-dom\"\r\nimport functionshelper from \"../../helpers/functions_helper\"\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport ModalNewLog from \"./ModalNewLog\"\r\nimport {BackendServices} from \"../../services/index\";\r\n\r\n\r\nconst LogProcess = props => {\r\n\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(props.locationData);  \r\n  \r\n  const [dataList, setDataList] = useState([]);\r\n  const [displayNewLogModal, setDisplayNewLogModal] = useState(false);\r\n    \r\n  const [success_dlg, setsuccess_dlg] = useState(false);  \r\n  const [success_msg, setsuccess_msg] = useState(\"\");\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  \r\n  //On Mounting (componentDidMount) if selectedData has changes\r\n  React.useEffect(() => {\r\n    if(props.locationData!==undefined && props.locationData!==null){\r\n      setLocationData(props.locationData)\r\n      searchData(props.locationData);\r\n    }\r\n  }, [props.locationData]);\r\n\r\n  //nuevo log\r\n  function toggleDisplayNewLogModal() {\r\n    setDisplayNewLogModal(!displayNewLogModal);\r\n    removeBodyCss()\r\n  }\r\n\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  //buscamos las Propuestas de Credito\r\n  function searchData(data) {\r\n\r\n    \r\n    var parameters ={responsible:data.customerName,instanceNumber:data.instanceId,transactId:data.transactionId}\r\n    const api = new BackendServices();\r\n      api.consultarHistorico(parameters)\r\n      .then(resp => {\r\n        if(resp!==undefined){          \r\n\r\n          const dataRows = resp.map((dt,idx) => (\r\n            <tr key={idx}>\r\n              <th scope=\"row\">{dt.date}</th>\r\n              <td>{dt.observations}</td>\r\n              <td>{ functionshelper.getProcessName(dt.processId) }</td>\r\n              <td></td>\r\n              <td>{dt.responsible}</td>\r\n              <td></td>\r\n            </tr>)\r\n          );\r\n          \r\n          setDataList(dataRows);\r\n        }        \r\n      }).catch(err => {\r\n        console.log(err);});\r\n\r\n  }\r\n\r\n  function onSaveLogProcess(observations) {\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      /*              Le pasamos los valores al servicio de guardar bitacora                            */\r\n      /* ---------------------------------------------------------------------------------------------- */\r\n      let data = {\r\n        \"instanceId\":locationData.instanceId,\r\n        \"transactId\": locationData.transactionId,\r\n        \"clientId\": locationData.customerId,\r\n        \"observations\":observations,\r\n        \"responsible\":locationData.customerName, //hay que poner el usuario login\r\n        \"processId\":locationData.processId,\r\n        \"activityId\":locationData.activityId,\r\n        \"status\":true\r\n    }\r\n      const api = new BackendServices();\r\n      api.guardarHistorico(data)\r\n      .then(resp => {\r\n        if(resp!==undefined){\r\n          searchData(locationData);\r\n\r\n          setsuccess_msg(props.t(\"SuccessSaveMessage\"))\r\n          setsuccess_dlg(true)\r\n        }\r\n        else{\r\n            seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n            seterror_dlg(true)\r\n        }        \r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n  }  \r\n\r\n  return (\r\n\r\n    <React.Fragment>\r\n      <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <h4 className=\"card-title\">{props.t(\"Binnacle\")}</h4>\r\n              <div className=\"table-responsive\">\r\n                <Table className=\"table mb-0\">\r\n                  <thead className=\"table-light\">\r\n                    <tr>\r\n                      <th>{props.t(\"Date\")}</th>\r\n                      <th>{props.t(\"Comment\")}</th>\r\n                      <th>{props.t(\"Process\")}</th>\r\n                      <th>{props.t(\"Activity\")}</th>\r\n                      <th>{props.t(\"User\")}</th>\r\n                      <th>\r\n                        <Link to=\"#\" className=\"float-end\" onClick={() => { toggleDisplayNewLogModal() }} title={props.t(\"Add\")}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i>{\" \"}</Link>                            \r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataList}\r\n                  </tbody>\r\n                </Table>\r\n\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <ModalNewLog onSaveLogProcess={(observations) => { onSaveLogProcess(observations) }} isOpen={displayNewLogModal} toggle={() => { toggleDisplayNewLogModal() }} />\r\n\r\n\r\n      {success_dlg ? (\r\n            <SweetAlert\r\n              success\r\n              title={props.t(\"SuccessDialog\")}\r\n              onConfirm={() => {\r\n                setsuccess_dlg(false)\r\n                \r\n              }}\r\n            >\r\n              {success_msg}\r\n            </SweetAlert>\r\n          ) : null}\r\n\r\n          {error_dlg ? (\r\n            <SweetAlert\r\n              error\r\n              title={props.t(\"ErrorDialog\")}\r\n              onConfirm={() => {\r\n                seterror_dlg(false)\r\n              }}\r\n            >\r\n              {error_msg}\r\n            </SweetAlert>\r\n          ) : null}\r\n\r\n\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nLogProcess.propTypes = {\r\n  locationData: PropTypes.any,\r\n};\r\n\r\nexport default (withTranslation()(LogProcess))\r\n"]},"metadata":{},"sourceType":"module"}