{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\10_Fideicomiso\\\\Relacionfiduciaria\\\\preview.model.js\";\nimport moment from \"moment\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport { Tab, Tabs } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class previewEscrow {\n  constructor(dataSession) {\n    this.backendServices = new BackendServices();\n    this.bpmServices = new BpmServices();\n    this.coreServices = new CoreServices();\n    this.validateRoute = false;\n    this.isActiveLoading = false;\n    // super();\n    this.saveDataSession(dataSession);\n  }\n\n  saveDataSession(dataSession) {\n    var _this$location, _this$location2;\n\n    dataSession && sessionStorage.setItem('locationData', JSON.stringify(dataSession));\n\n    if (((_this$location = this.location) === null || _this$location === void 0 ? void 0 : _this$location.data) !== null && ((_this$location2 = this.location) === null || _this$location2 === void 0 ? void 0 : _this$location2.data) !== undefined) {\n      var _this$location3, _this$location4;\n\n      if (((_this$location3 = this.location) === null || _this$location3 === void 0 ? void 0 : _this$location3.data.transactionId) === undefined || ((_this$location4 = this.location) === null || _this$location4 === void 0 ? void 0 : _this$location4.data.transactionId.length) <= 0) {\n        //this.location?.data.transactionId = 0;\n        //checkAndCreateProcedure(this.location?.data);\n        this.validateRoute = true;\n      } else {\n        var _this$location5, _this$location6, _this$location7;\n\n        sessionStorage.setItem('locationData', JSON.stringify((_this$location5 = this.location) === null || _this$location5 === void 0 ? void 0 : _this$location5.data));\n        this.locationData = (_this$location6 = this.location) === null || _this$location6 === void 0 ? void 0 : _this$location6.data;\n        this.dataSession = (_this$location7 = this.location) === null || _this$location7 === void 0 ? void 0 : _this$location7.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        this.locationData = result;\n        this.dataSession = result;\n      }\n    }\n\n    this.loadCustomerID();\n    this.loadDataGeneral();\n    this.loadDataIGR();\n    this.loadDataEnvironmentAspects();\n    this.loadCatalogCreditRisk();\n  }\n\n  async loadCatalogCreditRisk() {\n    // let catalogue = await this.backendServices.getCreditRiskOpinionCatalog();\n    // this.flowType = (catalogue?.map(creditRiskOpinion => ({ Code: creditRiskOpinion.id, Description: creditRiskOpinion.description })))\n    this.flowType = [{\n      Code: '1',\n      Description: 'Normal'\n    }, {\n      Code: '2',\n      Description: 'Urgente'\n    }];\n  }\n\n  loadOtherServiceFiduciary() {\n    return new Promise((resolve, reject) => {\n      Promise.allSettled([this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId), this.backendServices.retrieveFacilityType(), this.coreServices.getTipoGarantiaCatalogo(), this.backendServices.retrieveProposalType()]).then(data => {\n        const [{\n          value: GeneralDataPropCred\n        }, {\n          value: FacilityType\n        }, {\n          value: guaranteesType\n        }, {\n          value: proposalType\n        }] = data;\n        this.facilityType = FacilityType;\n        this.proposalType = proposalType;\n        this.guaranteesType = guaranteesType === null || guaranteesType === void 0 ? void 0 : guaranteesType.Records;\n        this.backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(async resp => {\n          resp = resp.filter($$ => $$.debtor !== '  ' && $$.facilityTypeId !== \" \").filter($$ => $$.proposalTypeId !== \"MEN\" && $$.applyEscrow);\n          console.log(resp);\n\n          if (resp.length > 0) {\n            this.facilities = resp;\n            this.instructiveType = resp[0].debtor;\n            this.facility = resp[0];\n            this.facilityId = resp[0].facilityId;\n            this.tabsFacility = resp.map((items, index) => /*#__PURE__*/_jsxDEV(Tab, {\n              className: \"m-0\",\n              eventKey: index,\n              title: FacilityType.find($$ => $$.id === items.facilityTypeId).description\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this));\n            this.basaFid = await this.LoadNumeroFideicomiso();\n          }\n\n          resolve(this.tabsFacility);\n        }).catch(err => {\n          console.error(err);\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    });\n  }\n\n  async LoadFiduciario() {\n    return await this.backendServices.consultarSeccionServiciosFiduciario(this.locationData.transactionId);\n  }\n\n  async LoadOtherFiduciario() {\n    return new Promise(async (resolve, reject) => {\n      Promise.allSettled([this.backendServices.consultListProgramPagoPropCred(this.facilityId), this.backendServices.consultarGarantiaPropCred(this.facilityId), this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId, this.facilityId), this.LoadNumeroFideicomiso()]).then(allPromise => {\n        var _this$proposalType$fi;\n\n        const [{\n          value: paymentMethods\n        }, {\n          value: guarantees\n        }, {\n          value: otherServiceFiduciary\n        }, {\n          value: basaFid\n        }] = allPromise;\n        this.basaFid = basaFid;\n        let dataOtherFiduciary = {};\n        (paymentMethods !== null || paymentMethods !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary,\n          paymentType: paymentMethods.map(paymentMethod => paymentMethod.paymentProgram).join('; ')\n        });\n        (guarantees !== null || guarantees !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary,\n          fixedActiveType: guarantees.map(guarantee => {\n            var _this$guaranteesType$;\n\n            return (_this$guaranteesType$ = this.guaranteesType.find(x => x.Code === guarantee.guaranteeTypeName)) === null || _this$guaranteesType$ === void 0 ? void 0 : _this$guaranteesType$.Description;\n          }).join('; ')\n        });\n        (otherServiceFiduciary !== null || otherServiceFiduciary !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary,\n          proposal: (_this$proposalType$fi = this.proposalType.find(x => x.id === this.facility.proposalTypeId)) === null || _this$proposalType$fi === void 0 ? void 0 : _this$proposalType$fi.description,\n          purpose: this.facility.purpose,\n          ...otherServiceFiduciary\n        });\n        resolve(dataOtherFiduciary);\n      }).catch(err => {\n        console.error(err);\n      });\n    }); // return await this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId, this.facilityId);\n  }\n\n  async LoadNumeroFideicomiso() {\n    return await this.backendServices.consultarNumeroFideicomiso(this.locationData.transactionId).then(resp => {\n      var _resp$find;\n\n      return resp === null || resp === void 0 ? void 0 : (_resp$find = resp.find(fiduciary => fiduciary.facilityId === this.facilityId)) === null || _resp$find === void 0 ? void 0 : _resp$find.trustName;\n    });\n  }\n\n  async loadCustomerID() {\n    this.customerID = await this.backendServices.consultPrincipalDebtor(this.locationData.transactionId).then(resp => resp.customerNumberT24);\n  }\n\n  async loadDataGeneral() {\n    this.dataGeneral = await this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId).then(resp => {\n      var _this$flowType$find;\n\n      return { ...resp[0],\n        requestDate: this.formatDate(resp[0].requestDate),\n        lastRequestDate: this.formatDate(resp[0].lastRequestDate),\n        nextRevisionDate: this.formatDate(resp[0].nextRevisionDate),\n        proposedExpirationDate: this.formatDate(resp[0].proposedExpirationDate),\n        flow: (_this$flowType$find = this.flowType.find(flowType => flowType.Code === resp[0].flow)) === null || _this$flowType$find === void 0 ? void 0 : _this$flowType$find.Description\n      };\n    });\n  }\n\n  async loadDataIGR() {\n    this.dataGeneralIGR = await this.backendServices.consultGeneralDataIGR(this.locationData.transactionId);\n  }\n\n  async loadDataEnvironmentAspects() {\n    this.dataGeneralEnvironmentAspects = await this.backendServices.consultEnvironmentalAspectsIGR(this.locationData.transactionId).then(resp => resp.environmentalAspectsDTO);\n  }\n\n  async getFacilityHistory() {\n    return new Promise(async (resolve, reject) => {\n      var _this$locationData$tr, _this$locationData;\n\n      await this.backendServices.consultGeneralDataPropCred((_this$locationData$tr = (_this$locationData = this.locationData) === null || _this$locationData === void 0 ? void 0 : _this$locationData.transactionId) !== null && _this$locationData$tr !== void 0 ? _this$locationData$tr : 0).then(async propuesta => {\n        var _propuesta$;\n\n        this.backendServices.consultarFacilidadesT24((_propuesta$ = propuesta[0]) === null || _propuesta$ === void 0 ? void 0 : _propuesta$.requestId).then(async resp => {\n          if (resp.length > 0 && resp != undefined) {\n            resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\n          }\n        });\n        this.backendServices.consultarFacilidades(propuesta[0].requestId).then(resp => {\n          var _resp;\n\n          resp = (_resp = resp) === null || _resp === void 0 ? void 0 : _resp.filter(data => data.debtor != \"  \");\n\n          if (resp.length > 0) {\n            resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\n          }\n        });\n      });\n    });\n  }\n\n  formatDate(date) {\n    return date ? moment(date).format(\"DD/MM/YYYY\") : '';\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/Relacionfiduciaria/preview.model.js"],"names":["moment","BackendServices","CoreServices","BpmServices","Tab","Tabs","previewEscrow","constructor","dataSession","backendServices","bpmServices","coreServices","validateRoute","isActiveLoading","saveDataSession","sessionStorage","setItem","JSON","stringify","location","data","undefined","transactionId","length","locationData","result","getItem","parse","loadCustomerID","loadDataGeneral","loadDataIGR","loadDataEnvironmentAspects","loadCatalogCreditRisk","flowType","Code","Description","loadOtherServiceFiduciary","Promise","resolve","reject","allSettled","consultGeneralDataPropCred","retrieveFacilityType","getTipoGarantiaCatalogo","retrieveProposalType","then","value","GeneralDataPropCred","FacilityType","guaranteesType","proposalType","facilityType","Records","consultarFacilidades","requestId","resp","filter","$$","debtor","facilityTypeId","proposalTypeId","applyEscrow","console","log","facilities","instructiveType","facility","facilityId","tabsFacility","map","items","index","find","id","description","basaFid","LoadNumeroFideicomiso","catch","err","error","LoadFiduciario","consultarSeccionServiciosFiduciario","LoadOtherFiduciario","consultListProgramPagoPropCred","consultarGarantiaPropCred","consultarSeccionOtrosServiciosFiduciario","allPromise","paymentMethods","guarantees","otherServiceFiduciary","dataOtherFiduciary","paymentType","paymentMethod","paymentProgram","join","fixedActiveType","guarantee","x","guaranteeTypeName","proposal","purpose","consultarNumeroFideicomiso","fiduciary","trustName","customerID","consultPrincipalDebtor","customerNumberT24","dataGeneral","requestDate","formatDate","lastRequestDate","nextRevisionDate","proposedExpirationDate","flow","dataGeneralIGR","consultGeneralDataIGR","dataGeneralEnvironmentAspects","consultEnvironmentalAspectsIGR","environmentalAspectsDTO","getFacilityHistory","propuesta","consultarFacilidadesT24","reduce","acc","crr","amount","date","format"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\r\nimport { Tab, Tabs } from 'react-bootstrap';\r\n\r\nexport default class previewEscrow {\r\n\r\n    backendServices = new BackendServices();\r\n    bpmServices = new BpmServices();\r\n    coreServices = new CoreServices();\r\n    serviciosFiduciario;\r\n    otherServiciosFiduciario;\r\n    locationData;\r\n    basaFid;\r\n    dataSession;\r\n    validateRoute = false;\r\n    customerID;\r\n    dataGeneral;\r\n    dataGeneralIGR;\r\n    dataGeneralEnvironmentAspects;\r\n    levelAutonomy;\r\n    isActiveLoading = false;\r\n    facilityType;\r\n    proposalType;\r\n    guaranteesType;\r\n    facilities;\r\n    instructiveType;\r\n    facility;\r\n    facilityId;\r\n    tabsFacility;\r\n\r\n    flowType;\r\n\r\n\r\n    constructor(dataSession) {\r\n        // super();\r\n        this.saveDataSession(dataSession)\r\n    }\r\n\r\n    saveDataSession(dataSession) {\r\n        dataSession && sessionStorage.setItem('locationData', JSON.stringify(dataSession));\r\n        if (this.location?.data !== null && this.location?.data !== undefined) {\r\n            if (this.location?.data.transactionId === undefined || this.location?.data.transactionId.length <= 0) {\r\n                //this.location?.data.transactionId = 0;\r\n                //checkAndCreateProcedure(this.location?.data);\r\n                this.validateRoute = true\r\n            }\r\n            else {\r\n                sessionStorage.setItem('locationData', JSON.stringify(this.location?.data));\r\n                this.locationData = this.location?.data;\r\n                this.dataSession = this.location?.data;\r\n            }\r\n        }\r\n        else {\r\n            //chequeamos si tenemos guardado en session\r\n            var result = sessionStorage.getItem('locationData');\r\n            if (result !== undefined && result !== null) {\r\n                result = JSON.parse(result);\r\n                this.locationData = result;\r\n                this.dataSession = result;\r\n            }\r\n        }\r\n\r\n        this.loadCustomerID();\r\n        this.loadDataGeneral();\r\n        this.loadDataIGR();\r\n        this.loadDataEnvironmentAspects();\r\n        this.loadCatalogCreditRisk()\r\n    }\r\n    async loadCatalogCreditRisk() {\r\n        // let catalogue = await this.backendServices.getCreditRiskOpinionCatalog();\r\n        // this.flowType = (catalogue?.map(creditRiskOpinion => ({ Code: creditRiskOpinion.id, Description: creditRiskOpinion.description })))\r\n        this.flowType = [{ Code: '1', Description: 'Normal' }, { Code: '2', Description: 'Urgente' }]\r\n    }\r\n\r\n    loadOtherServiceFiduciary() {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.allSettled([\r\n                this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId),\r\n                this.backendServices.retrieveFacilityType(),\r\n                this.coreServices.getTipoGarantiaCatalogo(),\r\n                this.backendServices.retrieveProposalType(),\r\n            ]).then(data => {\r\n                const [{ value: GeneralDataPropCred }, { value: FacilityType }, { value: guaranteesType }, { value: proposalType }] = data;\r\n                this.facilityType = FacilityType;\r\n                this.proposalType = proposalType;\r\n                this.guaranteesType = guaranteesType?.Records;\r\n                this.backendServices.consultarFacilidades(GeneralDataPropCred[0].requestId).then(async resp => {\r\n                    resp = resp.filter($$ => $$.debtor !== '  ' && $$.facilityTypeId !== \" \").filter($$ => $$.proposalTypeId !== \"MEN\" && $$.applyEscrow);\r\n                    console.log(resp)\r\n                    if (resp.length > 0) {\r\n                        this.facilities = resp;\r\n                        this.instructiveType = resp[0].debtor;\r\n                        this.facility = resp[0];\r\n                        this.facilityId = resp[0].facilityId;\r\n                        this.tabsFacility = (resp.map((items, index) => (\r\n                            <Tab className=\"m-0\" key={index} eventKey={index} title={FacilityType.find($$ => $$.id === items.facilityTypeId).description}></Tab>\r\n                        )));\r\n                        this.basaFid = await this.LoadNumeroFideicomiso();\r\n                    }\r\n                    resolve(this.tabsFacility);\r\n                }).catch(err => {\r\n                    console.error(err);\r\n                });\r\n\r\n            }).catch(err => {\r\n                console.error(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    async LoadFiduciario() {\r\n        return await this.backendServices.consultarSeccionServiciosFiduciario(this.locationData.transactionId);\r\n    }\r\n\r\n    async LoadOtherFiduciario() {\r\n        return new Promise(async (resolve, reject) => {\r\n            Promise.allSettled([\r\n                this.backendServices.consultListProgramPagoPropCred(this.facilityId),\r\n                this.backendServices.consultarGarantiaPropCred(this.facilityId),\r\n                this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId, this.facilityId),\r\n                this.LoadNumeroFideicomiso()\r\n            ]).then(allPromise => {\r\n                const [{ value: paymentMethods }, { value: guarantees }, { value: otherServiceFiduciary }, { value: basaFid }] = allPromise;\r\n                this.basaFid = basaFid;\r\n\r\n                let dataOtherFiduciary = {};\r\n                (paymentMethods !== null || paymentMethods !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary, paymentType: paymentMethods.map(paymentMethod => paymentMethod.paymentProgram).join('; ') });\r\n                (guarantees !== null || guarantees !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary, fixedActiveType: guarantees.map(guarantee => this.guaranteesType.find(x => x.Code === guarantee.guaranteeTypeName)?.Description).join('; ') });\r\n                (otherServiceFiduciary !== null || otherServiceFiduciary !== undefined) && (dataOtherFiduciary = { ...dataOtherFiduciary, proposal: this.proposalType.find(x => x.id === this.facility.proposalTypeId)?.description, purpose: this.facility.purpose, ...otherServiceFiduciary });\r\n                resolve(dataOtherFiduciary);\r\n            }).catch(err => {\r\n                console.error(err)\r\n            });\r\n        });\r\n        // return await this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId, this.facilityId);\r\n    }\r\n\r\n    async LoadNumeroFideicomiso() {\r\n        return await this.backendServices.consultarNumeroFideicomiso(this.locationData.transactionId).then(resp => resp?.find(fiduciary => fiduciary.facilityId === this.facilityId)?.trustName);\r\n    }\r\n\r\n    async loadCustomerID() {\r\n        this.customerID = await this.backendServices.consultPrincipalDebtor(this.locationData.transactionId).then(resp => resp.customerNumberT24);\r\n    }\r\n\r\n    async loadDataGeneral() {\r\n        this.dataGeneral = await this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId).then(resp => ({ ...resp[0], requestDate: this.formatDate(resp[0].requestDate), lastRequestDate: this.formatDate(resp[0].lastRequestDate), nextRevisionDate: this.formatDate(resp[0].nextRevisionDate), proposedExpirationDate: this.formatDate(resp[0].proposedExpirationDate), flow: this.flowType.find(flowType => flowType.Code === resp[0].flow)?.Description }));\r\n    }\r\n\r\n    async loadDataIGR() {\r\n        this.dataGeneralIGR = await this.backendServices.consultGeneralDataIGR(this.locationData.transactionId);\r\n    }\r\n    async loadDataEnvironmentAspects() {\r\n        this.dataGeneralEnvironmentAspects = await this.backendServices.consultEnvironmentalAspectsIGR(this.locationData.transactionId).then(resp => resp.environmentalAspectsDTO)\r\n    }\r\n\r\n\r\n    async getFacilityHistory() {\r\n        return new Promise(async (resolve, reject) => {\r\n            await this.backendServices.consultGeneralDataPropCred(this.locationData?.transactionId ?? 0).then(async propuesta => {\r\n                this.backendServices.consultarFacilidadesT24(propuesta[0]?.requestId).then(async resp => {\r\n                    if (resp.length > 0 && resp != undefined) {\r\n                        resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0))\r\n                    }\r\n                });\r\n                this.backendServices.consultarFacilidades(propuesta[0].requestId).then(resp => {\r\n                    resp = resp?.filter(data => data.debtor != \"  \");\r\n                    if (resp.length > 0) {\r\n                        resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\r\n                    }\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    formatDate(date) {\r\n        return date ? moment(date).format(\"DD/MM/YYYY\") : '';\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}