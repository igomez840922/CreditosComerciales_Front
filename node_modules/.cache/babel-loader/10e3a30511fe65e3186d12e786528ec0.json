{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\SearchClientCore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Row, Col, Card, CardBody, Button, Label, Table, Pagination, PaginationItem, PaginationLink, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport { CoreServices } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchClientCore = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [dataRows, setDataRows] = useState([]);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [personTypeList, setPersonTypeList] = useState(undefined);\n  const [personTypeSelected, setPersonTypeSelected] = useState([]); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    loadInitialData();\n  }, []);\n\n  function loadInitialData() {\n    let json = [{\n      label: t(\"LegalPerson\"),\n      value: 2\n    }, {\n      label: t(\"NaturalPerson\"),\n      value: 1\n    }];\n    setPersonTypeList(json);\n    setPersonTypeSelected(json[0]);\n  }\n\n  function searchData(values) {\n    setIsActiveLoading(true);\n    const apiCore = new CoreServices();\n    apiCore.getPartiesInformation(values).then(dataList => {\n      var rows = dataList.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.clientname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.idtype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.idnumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: () => {\n              props.onClientSelect(data);\n            },\n            title: t(\"Select\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-check-box-multiple-outline mdi-24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 98\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this));\n      setDataRows(rows);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    }).finally(() => {\n      setIsActiveLoading(false);\n    });\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit2(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values[\"PartyType\"] = personTypeSelected.value === 1 ? \"Natural\" : \"Juridico\";\n    searchData(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n    active: isActiveLoading,\n    spinner: true,\n    text: t(\"WaitingPlease\"),\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"SearchClient\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmClientSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit2,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), dataRows.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Client Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Client Name\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"ID Type\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"ID Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataRows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(CardBody, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchClientCore, \"VFmpeVMyXYP8sBjjwl2755dHsEo=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = SearchClientCore;\nSearchClientCore.propTypes = {\n  onClientSelect: PropTypes.func\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default SearchClientCore;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchClientCore\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/SearchClientCore.js"],"names":["React","useState","PropTypes","useTranslation","Select","useLocation","useHistory","LoadingOverlay","Row","Col","Card","CardBody","Button","Label","Table","Pagination","PaginationItem","PaginationLink","CardFooter","AvForm","AvField","Link","CoreServices","SearchClientCore","props","t","i18n","location","dataRows","setDataRows","isActiveLoading","setIsActiveLoading","personTypeList","setPersonTypeList","undefined","personTypeSelected","setPersonTypeSelected","useEffect","loadInitialData","json","label","value","searchData","values","apiCore","getPartiesInformation","then","dataList","rows","map","data","id","clientname","idtype","idnumber","onClientSelect","catch","error","console","finally","handleSubmit2","event","errors","preventDefault","length","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { CoreServices } from '../../services';\r\n\r\nconst SearchClientCore = (props) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation();  \r\n  \r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [personTypeList, setPersonTypeList] = useState(undefined);\r\n  const [personTypeSelected, setPersonTypeSelected] = useState([]);\r\n  \r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    loadInitialData();        \r\n  }, []);\r\n\r\n  function loadInitialData() {\r\n    let json = [{ label: t(\"LegalPerson\"), value: 2 },{ label: t(\"NaturalPerson\"), value: 1 },];\r\n    setPersonTypeList(json);\r\n    setPersonTypeSelected(json[0]);\r\n  }\r\n\r\n  function searchData(values) {\r\n    setIsActiveLoading(true);\r\n    const apiCore = new CoreServices()\r\n    apiCore.getPartiesInformation(values).then((dataList) => {\r\n        \r\n        var rows = dataList.map((data) => (\r\n            <tr key={ data.id }>\r\n              <td>{ data.id }</td>\r\n              <td>{ data.clientname }</td>\r\n              <td>{ data.idtype }</td>\r\n              <td>{ data.idnumber }</td>\r\n              <td>        \r\n                <Link  to={\"#\"} onClick={()=> { props.onClientSelect(data)}} title={t(\"Select\")}><i className=\"mdi mdi-check-box-multiple-outline mdi-24px\"></i></Link>\r\n              </td>\r\n            </tr>)\r\n          );\r\n\r\n          setDataRows(rows);\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching documents', error);\r\n      }).finally (() => {\r\n        setIsActiveLoading(false);\r\n      })\r\n  }\r\n\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit2(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }    \r\n    values[\"PartyType\"] = personTypeSelected.value===1?\"Natural\":\"Juridico\";\r\n    searchData(values);\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <h5>{t(\"SearchClient\")}</h5>\r\n        <p className=\"card-title-desc\">\r\n        </p>\r\n        \r\n        <AvForm id=\"frmClientSearch\" className=\"needs-validation\" onSubmit={handleSubmit2}>\r\n        <Card>\r\n          <CardBody>\r\n            \r\n          </CardBody>\r\n        </Card>          \r\n          \r\n        </AvForm> \r\n\r\n{dataRows.length > 0?\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"table mb-0\">\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th>{t(\"Client Number\")}</th>\r\n                <th>{t(\"Client Name\")}</th>\r\n                <th>{t(\"ID Type\")}</th>\r\n                <th>{t(\"ID Number\")}</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { dataRows }\r\n            </tbody>\r\n          </Table>\r\n           \r\n        </div>\r\n:null}\r\n        <CardBody></CardBody>\r\n\r\n     \r\n    </LoadingOverlay>\r\n\r\n  )\r\n}\r\n\r\nSearchClientCore.propTypes = {\r\n  onClientSelect:PropTypes.func,\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default SearchClientCore;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}