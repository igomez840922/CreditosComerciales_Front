{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\6_AnalisisCredito\\\\ModalFinancialInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../services\";\nimport ApiServiceBackend from \"../../../services/BackendServices/Services\";\nimport Select from \"react-select\";\nimport Currency from \"../../../helpers/currency\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalFinancialInformation = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  var _props$DataUpdate$ide, _props$DataUpdate9, _props$DataUpdate$sha, _props$DataUpdate10, _props$DataUpdate$act, _props$DataUpdate11, _props$DataUpdate$act2, _props$DataUpdate12, _props$DataUpdate$pas, _props$DataUpdate13, _props$DataUpdate$per2, _props$DataUpdate14;\n\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [identificationType, setidentificationType] = useState(\"1\"); //1-Juridico, 2-Persona\n\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\n  const [tipo, setTipo] = useState('guardar');\n  const [tipoPersona, settipoPersona] = useState(undefined);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [cambio, setcambio] = useState(1);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\n  const [TypeIdentification, setTypeIdentification] = useState(null);\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\n  const currencyData = new Currency(); // Submitimos formulario para busqueda de clientes\n\n  const personTypeData = [{\n    label: t(\"Legal\"),\n    value: \"1\"\n  }, {\n    label: t(\"Natural\"),\n    value: \"2\"\n  }];\n\n  function handleSubmit(event, errors, values) {\n    var _props$DataUpdate, _props$DataUpdate$sta, _props$DataUpdate2;\n\n    if (tipo == null) {\n      setcampoRequeridoTipo(true);\n      return;\n    } else {\n      setcampoRequeridoTipo(false);\n    }\n\n    if (TypeIdentification == null) {\n      setcampoRequeridoIdentificacion(true);\n      return;\n    } else {\n      setcampoRequeridoIdentificacion(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.identificationType = TypeIdentification;\n    values.personType = tipo.label;\n    values.share = currencyData.getRealValue(values.share);\n    values.activeCash = currencyData.getRealValue(values.activeCash);\n    values.activeShares = currencyData.getRealValue(values.activeShares);\n    values.passiveLoan = currencyData.getRealValue(values.passiveLoan);\n    values.personalWealth = currencyData.getRealValue(values.personalWealth);\n    props.SendDataToServer({ ...values,\n      guarantorId: (_props$DataUpdate = props.DataUpdate) === null || _props$DataUpdate === void 0 ? void 0 : _props$DataUpdate.guarantorId,\n      status: (_props$DataUpdate$sta = (_props$DataUpdate2 = props.DataUpdate) === null || _props$DataUpdate2 === void 0 ? void 0 : _props$DataUpdate2.status) !== null && _props$DataUpdate$sta !== void 0 ? _props$DataUpdate$sta : true\n    });\n    props.toggle();\n  }\n\n  React.useEffect(() => {\n    LoadIdentification();\n\n    if (props.tipo != \"guardar\") {\n      var _props$DataUpdate$per, _props$DataUpdate3;\n\n      setidentificationType((_props$DataUpdate$per = (_props$DataUpdate3 = props.DataUpdate) === null || _props$DataUpdate3 === void 0 ? void 0 : _props$DataUpdate3.personType) !== null && _props$DataUpdate$per !== void 0 ? _props$DataUpdate$per : 'RUC');\n    }\n  }, [props]);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n\n    try {\n      if (identificationTypeList.length > 0 && props.DataUpdate.identificationType !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.value === props.DataUpdate.identificationType);\n\n        if (defaultVal !== undefined) {\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    setIdentificationTypeSelected(undefined);\n    setpersonTypeSelect(undefined);\n\n    try {\n      if (personTypeData.length > 0 && props.DataUpdate.personType !== null && personTypeSelect === undefined) {\n        defaultVal = personTypeData.find(x => x.label === props.DataUpdate.personType);\n\n        if (defaultVal !== undefined) {\n          setTipo(defaultVal);\n          setpersonTypeSelect(defaultVal);\n        }\n      }\n\n      if (identificationTypeList.length > 0 && props.DataUpdate.identificationType !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.label === props.DataUpdate.identificationType);\n\n        if (defaultVal !== undefined) {\n          setidentificationType(defaultVal.label);\n          setTypeIdentification(defaultVal.label);\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n\n  function changeTipo(event) {\n    setTipo(event);\n    setidentificationType(event.value);\n  } //On change Inputs\n\n\n  function handleChangeInputfrmSearch(e) {\n    //selectedData[e.target.name] = e.target.value;\n    //props.updateDataModel(selectedData);    \n    switch (e.target.name) {\n      case \"identificationType\":\n        {\n          setidentificationType(e.target.value);\n          break;\n        }\n    }\n  }\n\n  function LoadIdentification() {\n    const apiServiceBackend = new ApiServiceBackend();\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"ID Type\"),\r\n            options: json,\r\n          },\r\n        ];*/\n\n\n        setIdentificationTypeList(json);\n      }\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  }\n\n  function getSearchForm(tipo) {\n    //segun tipo de identiicaci√≥n\n    switch (tipo != undefined && tipo.value) {\n      case \"RUC\":\n        {\n          var _props$DataUpdate$fir, _props$DataUpdate4;\n\n          //Juridico\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"firstName\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"firstName\",\n                type: \"text\",\n                onChange: handleChangeInputfrmSearch,\n                value: (_props$DataUpdate$fir = (_props$DataUpdate4 = props.DataUpdate) === null || _props$DataUpdate4 === void 0 ? void 0 : _props$DataUpdate4.firstName) !== null && _props$DataUpdate$fir !== void 0 ? _props$DataUpdate$fir : '',\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this);\n        }\n\n      default:\n        {\n          var _props$DataUpdate$fir2, _props$DataUpdate5, _props$DataUpdate$sec, _props$DataUpdate6, _props$DataUpdate$fir3, _props$DataUpdate7, _props$DataUpdate$sec2, _props$DataUpdate8;\n\n          //Cedula o Pasaporte \n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"firstName\",\n                  children: t(\"First Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"firstName\",\n                  value: (_props$DataUpdate$fir2 = (_props$DataUpdate5 = props.DataUpdate) === null || _props$DataUpdate5 === void 0 ? void 0 : _props$DataUpdate5.firstName) !== null && _props$DataUpdate$fir2 !== void 0 ? _props$DataUpdate$fir2 : '',\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"secondName\",\n                  value: (_props$DataUpdate$sec = (_props$DataUpdate6 = props.DataUpdate) === null || _props$DataUpdate6 === void 0 ? void 0 : _props$DataUpdate6.secondName) !== null && _props$DataUpdate$sec !== void 0 ? _props$DataUpdate$sec : '',\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"firstLastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"firstLastName\",\n                  value: (_props$DataUpdate$fir3 = (_props$DataUpdate7 = props.DataUpdate) === null || _props$DataUpdate7 === void 0 ? void 0 : _props$DataUpdate7.firstLastName) !== null && _props$DataUpdate$fir3 !== void 0 ? _props$DataUpdate$fir3 : '',\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  errorMessage: t(\"Required Field\"),\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondLastName\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"secondLastName\",\n                  value: (_props$DataUpdate$sec2 = (_props$DataUpdate8 = props.DataUpdate) === null || _props$DataUpdate8 === void 0 ? void 0 : _props$DataUpdate8.secondLastName) !== null && _props$DataUpdate$sec2 !== void 0 ? _props$DataUpdate$sec2 : '',\n                  type: \"text\",\n                  onChange: handleChangeInputfrmSearch,\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this);\n        }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"Guarantors Financial Information\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        style: {\n          backgroundColor: \"#f3f5f7\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"ID Type\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setIdentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                          setTypeIdentification(e.label);\n                        },\n                        options: identificationTypeList,\n                        placeholder: t(\"SelectType\"),\n                        value: identificationTypeSelected\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 49\n                      }, this), campoRequeridoIdentificacion ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    xl: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"idnumber\",\n                        children: t(\"ID Number\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"identificationNumber\",\n                        type: \"text\",\n                        id: \"identificationNumber\",\n                        value: (_props$DataUpdate$ide = (_props$DataUpdate9 = props.DataUpdate) === null || _props$DataUpdate9 === void 0 ? void 0 : _props$DataUpdate9.identificationNumber) !== null && _props$DataUpdate$ide !== void 0 ? _props$DataUpdate$ide : '',\n                        validate: {\n                          required: {\n                            value: true,\n                            errorMessage: t(\"Required Field\")\n                          } // number: { value: true, errorMessage: t(\"InvalidField\") },\n\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"identificationType\",\n                        children: t(\"PersonType\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setpersonTypeSelect(personTypeData.find(x => x.value === e.value));\n                          changeTipo(e);\n                        },\n                        options: personTypeData,\n                        id: \"sustainableCustomer\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: personTypeSelect // value={props.DataUpdate.shareholderName}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 49\n                      }, this), campoRequeridoTipo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 306,\n                        columnNumber: 53\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 41\n                  }, this), getSearchForm(identificationTypeSelected)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"share\",\n                        children: t(\"Share\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"share\",\n                        value: currencyData.format((_props$DataUpdate$sha = (_props$DataUpdate10 = props.DataUpdate) === null || _props$DataUpdate10 === void 0 ? void 0 : _props$DataUpdate10.share) !== null && _props$DataUpdate$sha !== void 0 ? _props$DataUpdate$sha : 0),\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        onChange: handleChangeInputfrmSearch,\n                        className: \"form-control\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"activeCash\",\n                        children: t(\"ActiveCash\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"activeCash\",\n                        value: currencyData.format((_props$DataUpdate$act = (_props$DataUpdate11 = props.DataUpdate) === null || _props$DataUpdate11 === void 0 ? void 0 : _props$DataUpdate11.activeCash) !== null && _props$DataUpdate$act !== void 0 ? _props$DataUpdate$act : 0),\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        onChange: handleChangeInputfrmSearch,\n                        className: \"form-control\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"activeShares\",\n                        children: t(\"ActiveShares\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 343,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"activeShares\",\n                        value: currencyData.format((_props$DataUpdate$act2 = (_props$DataUpdate12 = props.DataUpdate) === null || _props$DataUpdate12 === void 0 ? void 0 : _props$DataUpdate12.activeShares) !== null && _props$DataUpdate$act2 !== void 0 ? _props$DataUpdate$act2 : 0),\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        onChange: handleChangeInputfrmSearch,\n                        className: \"form-control\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"passiveLoan\",\n                        children: t(\"PassiveLoan\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"passiveLoan\",\n                        value: currencyData.format((_props$DataUpdate$pas = (_props$DataUpdate13 = props.DataUpdate) === null || _props$DataUpdate13 === void 0 ? void 0 : _props$DataUpdate13.passiveLoan) !== null && _props$DataUpdate$pas !== void 0 ? _props$DataUpdate$pas : 0),\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        onChange: handleChangeInputfrmSearch,\n                        className: \"form-control\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"personalWealth\",\n                        children: t(\"PersonalWealth\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"personalWealth\",\n                        value: currencyData.format((_props$DataUpdate$per2 = (_props$DataUpdate14 = props.DataUpdate) === null || _props$DataUpdate14 === void 0 ? void 0 : _props$DataUpdate14.personalWealth) !== null && _props$DataUpdate$per2 !== void 0 ? _props$DataUpdate$per2 : 0),\n                        type: \"text\",\n                        pattern: \"^[0-9,.]*$\",\n                        onKeyUp: e => {\n                          let x = currencyData.getRealValue(e.target.value);\n                          e.target.value = currencyData.format(x);\n                        },\n                        onChange: handleChangeInputfrmSearch,\n                        className: \"form-control\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 41\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 120\n                  }, this), \" \", \" \", t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 9\n  }, this);\n}, \"iqaTIk+GV2FVZAstH3hnD8GA4rw=\", false, function () {\n  return [useTranslation];\n}));\n_c2 = ModalFinancialInformation;\nModalFinancialInformation.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func // onSelectClient: PropTypes.func.isRequired\n\n};\nexport default withTranslation()(ModalFinancialInformation);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalFinancialInformation$React.forwardRef\");\n$RefreshReg$(_c2, \"ModalFinancialInformation\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/6_AnalisisCredito/ModalFinancialInformation.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","AvForm","AvField","AvGroup","CoreServices","ApiServiceBackend","Select","Currency","ModalFinancialInformation","forwardRef","props","ref","t","i18n","identificationType","setidentificationType","campoRequeridoTipo","setcampoRequeridoTipo","campoRequeridoNacionalidad","setcampoRequeridoNacionalidad","tipo","setTipo","tipoPersona","settipoPersona","undefined","dataReturn","setDataReturn","jsonAccionistas","cambio","setcambio","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","personTypeSelect","setpersonTypeSelect","TypeIdentification","setTypeIdentification","campoRequeridoIdentificacion","setcampoRequeridoIdentificacion","currencyData","personTypeData","label","value","handleSubmit","event","errors","values","preventDefault","length","personType","share","getRealValue","activeCash","activeShares","passiveLoan","personalWealth","SendDataToServer","guarantorId","DataUpdate","status","toggle","useEffect","LoadIdentification","defaultVal","find","x","err","changeTipo","handleChangeInputfrmSearch","e","target","name","apiServiceBackend","consultarCatalogoTipoIdentificacion","then","data","json","i","push","catch","error","console","getSearchForm","firstName","required","secondName","firstLastName","secondLastName","isOpen","backgroundColor","identificationNumber","errorMessage","format","textAlign","margin","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n    Card,\r\n    CardBody,\r\n    CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../services\";\r\nimport ApiServiceBackend from \"../../../services/BackendServices/Services\";\r\nimport Select from \"react-select\";\r\nimport Currency from \"../../../helpers/currency\";\r\n\r\nconst ModalFinancialInformation = React.forwardRef((props, ref) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [identificationType, setidentificationType] = useState(\"1\");//1-Juridico, 2-Persona\r\n    const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\r\n    const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\r\n    const [tipo, setTipo] = useState('guardar');\r\n    const [tipoPersona, settipoPersona] = useState(undefined);\r\n    const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n    const [cambio, setcambio] = useState(1);\r\n    const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n    const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n    const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\r\n    const [TypeIdentification, setTypeIdentification] = useState(null);\r\n    const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\r\n    const currencyData = new Currency();\r\n\r\n    // Submitimos formulario para busqueda de clientes\r\n    const personTypeData = [{ label: t(\"Legal\"), value: \"1\" }, { label: t(\"Natural\"), value: \"2\" }]\r\n    function handleSubmit(event, errors, values) {\r\n        if (tipo == null) {\r\n            setcampoRequeridoTipo(true);\r\n            return;\r\n        } else {\r\n            setcampoRequeridoTipo(false);\r\n        }\r\n\r\n        if (TypeIdentification == null) {\r\n            setcampoRequeridoIdentificacion(true);\r\n            return;\r\n        } else {\r\n            setcampoRequeridoIdentificacion(false);\r\n        }\r\n\r\n        event.preventDefault();\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n\r\n        values.identificationType = TypeIdentification;\r\n        values.personType = tipo.label;\r\n\r\n        values.share = currencyData.getRealValue(values.share);\r\n        values.activeCash = currencyData.getRealValue(values.activeCash);\r\n        values.activeShares = currencyData.getRealValue(values.activeShares);\r\n        values.passiveLoan = currencyData.getRealValue(values.passiveLoan);\r\n        values.personalWealth = currencyData.getRealValue(values.personalWealth);\r\n\r\n        props.SendDataToServer({ ...values, guarantorId: props.DataUpdate?.guarantorId, status: props.DataUpdate?.status ?? true });\r\n        props.toggle();\r\n    }\r\n    React.useEffect(() => {\r\n\r\n        LoadIdentification();\r\n\r\n        if (props.tipo != \"guardar\") {\r\n            setidentificationType(props.DataUpdate?.personType ?? 'RUC')\r\n        }\r\n\r\n    }, [props]);\r\n    React.useEffect(() => {\r\n        // Read Api Service data\r\n        var defaultVal = null;\r\n        try {\r\n            if (identificationTypeList.length > 0 && props.DataUpdate.identificationType !== null && identificationTypeSelected === undefined) {\r\n                defaultVal = identificationTypeList.find(x => x.value === props.DataUpdate.identificationType);\r\n                if (defaultVal !== undefined) {\r\n                    setIdentificationTypeSelected(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n    }, [props]);\r\n    React.useEffect(() => {\r\n        // Read Api Service data\r\n        var defaultVal = null;\r\n\r\n        setIdentificationTypeSelected(undefined)\r\n        setpersonTypeSelect(undefined)\r\n        try {\r\n\r\n            if (personTypeData.length > 0 && props.DataUpdate.personType !== null && personTypeSelect === undefined) {\r\n                defaultVal = personTypeData.find(x => x.label === props.DataUpdate.personType);\r\n                if (defaultVal !== undefined) {\r\n                    setTipo(defaultVal)\r\n                    setpersonTypeSelect(defaultVal);\r\n                }\r\n            }\r\n            if (identificationTypeList.length > 0 && props.DataUpdate.identificationType !== null && identificationTypeSelected === undefined) {\r\n                defaultVal = identificationTypeList.find(x => x.label === props.DataUpdate.identificationType);\r\n                if (defaultVal !== undefined) {\r\n                    setidentificationType(defaultVal.label)\r\n                    setTypeIdentification(defaultVal.label)\r\n                    setIdentificationTypeSelected(defaultVal);\r\n                }\r\n            }\r\n        }\r\n        catch (err) { }\r\n\r\n    }, [props]);\r\n\r\n    function changeTipo(event) {\r\n        setTipo(event);\r\n        setidentificationType(event.value);\r\n    }\r\n\r\n    //On change Inputs\r\n    function handleChangeInputfrmSearch(e) {\r\n        //selectedData[e.target.name] = e.target.value;\r\n        //props.updateDataModel(selectedData);    \r\n\r\n        switch (e.target.name) {\r\n            case \"identificationType\": {\r\n                setidentificationType(e.target.value);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    function LoadIdentification() {\r\n        const apiServiceBackend = new ApiServiceBackend();\r\n        apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n            .then((data) => {\r\n                if (data !== null && data !== undefined) {\r\n                    let json = [];\r\n                    for (let i = 0; i < data.length; i++) {\r\n                        json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n                    }\r\n                    /*const optionGroup1 = [\r\n                      {\r\n                        label: t(\"ID Type\"),\r\n                        options: json,\r\n                      },\r\n                    ];*/\r\n                    setIdentificationTypeList(json)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error('api error: ', error);\r\n            });\r\n    }\r\n    function getSearchForm(tipo) {\r\n        //segun tipo de identiicaci√≥n\r\n        switch (tipo != undefined && tipo.value) {\r\n            case \"RUC\": { //Juridico\r\n                return (\r\n                    <Col md=\"8\">\r\n                        <div className=\"mb-3\">\r\n                            <Label htmlFor=\"firstName\">{t(\"SocialReason\")}</Label>\r\n                            <AvField\r\n                                className=\"form-control\"\r\n                                name=\"firstName\"\r\n                                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                                value={props.DataUpdate?.firstName ?? ''}\r\n                                errorMessage={t(\"Required Field\")}\r\n                                validate={{ required: { value: true } }} />\r\n                        </div>\r\n                    </Col>\r\n                )\r\n            }\r\n            default: { //Cedula o Pasaporte \r\n                return (\r\n                    <React.Fragment>\r\n                        <Col md=\"4\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"firstName\">{t(\"First Name\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"firstName\"\r\n                                    value={props.DataUpdate?.firstName ?? ''}\r\n                                    type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                                    errorMessage={t(\"Required Field\")}\r\n                                    validate={{ required: { value: true } }} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n                                <AvField\r\n                                    name=\"secondName\"\r\n                                    value={props.DataUpdate?.secondName ?? ''}\r\n                                    type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                                    className=\"form-control\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"firstLastName\">{t(\"FirstLastName\")}</Label>\r\n                                <AvField\r\n                                    name=\"firstLastName\"\r\n                                    value={props.DataUpdate?.firstLastName ?? ''}\r\n                                    type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                                    errorMessage={t(\"Required Field\")}\r\n                                    className=\"form-control\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"4\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"secondLastName\">{t(\"SecondLastName\")}</Label>\r\n                                <AvField\r\n                                    name=\"secondLastName\"\r\n                                    value={props.DataUpdate?.secondLastName ?? ''}\r\n                                    type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                                    className=\"form-control\" />\r\n                            </div>\r\n                        </Col>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            size=\"xl\"\r\n            isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}>\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title mt-0\">{t(\"Guarantors Financial Information\")}</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={props.toggle}\r\n                    data-dismiss=\"modal\"\r\n                    className=\"close\"\r\n                    aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n                <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n                    <Row>\r\n                        <Col xl=\"12\">\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col xl=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label>{t(\"ID Type\")}</Label>\r\n                                                <Select\r\n                                                    onChange={(e) => {\r\n                                                        setIdentificationTypeSelected(identificationTypeList.find(x => x.value === e.value))\r\n                                                        setTypeIdentification(e.label);\r\n                                                    }}\r\n                                                    options={identificationTypeList}\r\n                                                    placeholder={t(\"SelectType\")}\r\n                                                    value={identificationTypeSelected}\r\n                                                />\r\n                                                {campoRequeridoIdentificacion ?\r\n                                                    <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                                                    : null}\r\n                                            </div>\r\n                                        </Col>\r\n\r\n                                        <Col xl=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"idnumber\">{t(\"ID Number\")}</Label>\r\n                                                <AvField\r\n                                                    className=\"form-control\"\r\n                                                    name=\"identificationNumber\"\r\n                                                    type=\"text\"\r\n                                                    id=\"identificationNumber\"\r\n                                                    value={props.DataUpdate?.identificationNumber ?? ''}\r\n                                                    validate={{\r\n                                                        required: { value: true, errorMessage: t(\"Required Field\") },\r\n                                                        // number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"identificationType\">{t(\"PersonType\")}</Label>\r\n                                                <Select\r\n                                                    onChange={(e) => { setpersonTypeSelect(personTypeData.find(x => x.value === e.value)); changeTipo(e) }}\r\n                                                    options={personTypeData}\r\n                                                    id=\"sustainableCustomer\"\r\n                                                    classNamePrefix=\"select2-selection\"\r\n                                                    placeholder={t(\"toselect\")}\r\n                                                    value={personTypeSelect}\r\n                                                // value={props.DataUpdate.shareholderName}\r\n                                                />\r\n                                                {campoRequeridoTipo ?\r\n                                                    <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                                                    : null}\r\n\r\n                                            </div>\r\n                                        </Col>\r\n                                        {getSearchForm(identificationTypeSelected)}\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"share\">{t(\"Share\")}</Label>\r\n                                                <AvField\r\n                                                    name=\"share\"\r\n                                                    value={currencyData.format(props.DataUpdate?.share ?? 0)}\r\n                                                    type=\"text\"\r\n                                                    pattern=\"^[0-9,.]*$\"\r\n                                                    onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                                                    onChange={handleChangeInputfrmSearch}\r\n                                                    className=\"form-control\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"activeCash\">{t(\"ActiveCash\")}</Label>\r\n                                                <AvField\r\n                                                    name=\"activeCash\"\r\n                                                    value={currencyData.format(props.DataUpdate?.activeCash ?? 0)}\r\n                                                    type=\"text\"\r\n                                                    pattern=\"^[0-9,.]*$\"\r\n                                                    onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                                                    onChange={handleChangeInputfrmSearch}\r\n                                                    className=\"form-control\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"activeShares\">{t(\"ActiveShares\")}</Label>\r\n                                                <AvField\r\n                                                    name=\"activeShares\"\r\n                                                    value={currencyData.format(props.DataUpdate?.activeShares ?? 0)}\r\n                                                    type=\"text\"\r\n                                                    pattern=\"^[0-9,.]*$\"\r\n                                                    onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                                                    onChange={handleChangeInputfrmSearch}\r\n                                                    className=\"form-control\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"passiveLoan\">{t(\"PassiveLoan\")}</Label>\r\n                                                <AvField\r\n                                                    name=\"passiveLoan\"\r\n                                                    value={currencyData.format(props.DataUpdate?.passiveLoan ?? 0)}\r\n                                                    type=\"text\"\r\n                                                    pattern=\"^[0-9,.]*$\"\r\n                                                    onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                                                    onChange={handleChangeInputfrmSearch}\r\n                                                    className=\"form-control\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                        <Col md=\"4\">\r\n                                            <div className=\"mb-3\">\r\n                                                <Label htmlFor=\"personalWealth\">{t(\"PersonalWealth\")}</Label>\r\n                                                <AvField\r\n                                                    name=\"personalWealth\"\r\n                                                    value={currencyData.format(props.DataUpdate?.personalWealth ?? 0)}\r\n                                                    type=\"text\"\r\n                                                    pattern=\"^[0-9,.]*$\"\r\n                                                    onKeyUp={(e) => { let x = currencyData.getRealValue(e.target.value); e.target.value = currencyData.format(x); }}\r\n                                                    onChange={handleChangeInputfrmSearch}\r\n                                                    className=\"form-control\" />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </CardBody>\r\n                                <CardFooter style={{ textAlign: \"right\" }}>\r\n                                    <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                                        <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                                    </Button>\r\n                                    {\r\n                                        <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                                            {\" \"} {t(\"Save\")}\r\n                                        </Button>}\r\n                                </CardFooter>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </AvForm>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nModalFinancialInformation.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    toggle: PropTypes.func,\r\n    // onSelectClient: PropTypes.func.isRequired\r\n};\r\n\r\nexport default (withTranslation()(ModalFinancialInformation));\r\n"]},"metadata":{},"sourceType":"module"}