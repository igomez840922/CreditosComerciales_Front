{"ast":null,"code":"import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{CoreServices}from'../../../services';export var SearchClient=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(paramSearch){var PartyType,PartyId,coreServices,dataClient;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:PartyType=paramSearch.personType,PartyId=paramSearch.idnumber;console.group(\"Working searchClient\");paramSearch[\"PartyId\"]=paramSearch.idnumber;paramSearch[\"PartyType\"]=paramSearch.personType;console.info({PartyType:PartyType,PartyId:PartyId});console.groupEnd();coreServices=new CoreServices();_context.next=9;return coreServices.getPartiesInformation({PartyId:PartyId,PartyType:PartyType}).then(function(data){console.group(\"Response api:\");console.info(data);console.groupEnd();return data;}).catch();case 9:dataClient=_context.sent;return _context.abrupt(\"return\",dataClient);case 11:case\"end\":return _context.stop();}}},_callee);}));return function SearchClient(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/SearchClient.js"],"names":["CoreServices","SearchClient","paramSearch","PartyType","personType","PartyId","idnumber","console","group","info","groupEnd","coreServices","getPartiesInformation","then","data","catch","dataClient"],"mappings":"2VAAA,OAASA,YAAT,KAA6B,mBAA7B,CAEA,MAAO,IAAMC,CAAAA,YAAY,0FAAG,iBAAOC,WAAP,gKAERC,SAFQ,CAIpBD,WAJoB,CAEpBE,UAFoB,CAGVC,OAHU,CAIpBH,WAJoB,CAGpBI,QAHoB,CAMxBC,OAAO,CAACC,KAAR,CAAc,sBAAd,EACAN,WAAW,CAAC,SAAD,CAAX,CAAyBA,WAAW,CAACI,QAArC,CACAJ,WAAW,CAAC,WAAD,CAAX,CAA2BA,WAAW,CAACE,UAAvC,CAEAG,OAAO,CAACE,IAAR,CAAa,CACTN,SAAS,CAATA,SADS,CAETE,OAAO,CAAPA,OAFS,CAAb,EAIAE,OAAO,CAACG,QAAR,GAEMC,YAhBkB,CAgBH,GAAIX,CAAAA,YAAJ,EAhBG,uBAiBCW,CAAAA,YAAY,CACjCC,qBADqB,CACC,CAClBP,OAAO,CAAPA,OADkB,CAElBF,SAAS,CAATA,SAFkB,CADD,EAKpBU,IALoB,CAKf,SAAAC,IAAI,CAAI,CACVP,OAAO,CAACC,KAAR,CAAc,eAAd,EACAD,OAAO,CAACE,IAAR,CAAaK,IAAb,EACAP,OAAO,CAACG,QAAR,GACA,MAAOI,CAAAA,IAAP,CACH,CAVoB,EAUlBC,KAVkB,EAjBD,QAiBlBC,UAjBkB,+CAiCpBA,UAjCoB,yDAAH,kBAAZf,CAAAA,YAAY,4CAAlB","sourcesContent":["import { CoreServices } from '../../../services'\r\n\r\nexport const SearchClient = async (paramSearch) => {\r\n    const {\r\n        personType: PartyType,\r\n        idnumber: PartyId,\r\n    } = paramSearch\r\n\r\n    console.group(\"Working searchClient\");\r\n    paramSearch[\"PartyId\"] = paramSearch.idnumber\r\n    paramSearch[\"PartyType\"] = paramSearch.personType\r\n\r\n    console.info({\r\n        PartyType,\r\n        PartyId,\r\n    })\r\n    console.groupEnd();\r\n\r\n    const coreServices = new CoreServices()\r\n    const dataClient = await coreServices.\r\n        getPartiesInformation({\r\n            PartyId,\r\n            PartyType,\r\n        })\r\n        .then(data => {\r\n            console.group(\"Response api:\")\r\n            console.info(data)\r\n            console.groupEnd()\r\n            return data\r\n        }).catch(\r\n\r\n        )\r\n    // console.log(\"result:\", result);\r\n\r\n    return (\r\n        dataClient\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}