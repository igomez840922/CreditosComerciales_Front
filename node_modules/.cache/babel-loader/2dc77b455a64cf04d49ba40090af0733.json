{"ast":null,"code":"import { WatchListModel, DocumentModel, ClientInfoModel, PartiesStaffModel } from \"../../models/Core\";\nimport ApiServiceCore from \"../ApiServiceCore\";\nimport * as url from \"../../helpers/url_helper\";\nimport qs from \"qs\";\nimport { ACT_FACILIDADACTIVOSFIJOS } from \"../../helpers/options_helper\";\nimport moment from \"moment\";\nexport default class Services extends ApiServiceCore {\n  //analysis/customers -> retorna la info de lista de vigilancia\n  //ConsultarListaCriterioCORE    \n  async postWhatchList(params) {\n    try {\n      /*\r\n      {\r\n      \"pCustomerId\": \"06--00711-002304\",\r\n      \"pTypeId\": \"CEDULA_IDENTIDAD\",\r\n      \"pModelId\": \"LISTA_VIGILANCIA\",\r\n      \"pCustomerListParams\": {\r\n      \"KeyValueParam\": [\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"NOMBRE\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Librada\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_NOMBRE\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Emilio\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"PRIMER_APELLIDO\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Rivera\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_APELLIDO\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"Gaviria\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"TIPO_ID\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"CEDULA_IDENTIDAD\"\r\n        },\r\n        {\r\n            \"_x003C_Key_x003E_k__BackingField\": \"CEDULA\",\r\n            \"_x003C_Value_x003E_k__BackingField\": \"06--00711-002304\"\r\n        }\r\n      ]\r\n      },\r\n      \"pUser\": \"wallytech_ws_user\",\r\n      \"pWaitingInterval\": 180000000,\r\n      \"pPriority\": 1\r\n      }\r\n      */\n      var result = await this.post(url.URL_CORE_WATCHLIST, params);\n      return {\n        status: 200,\n        result: WatchListModel.fromJson(result).results\n      };\n    } catch (err) {\n      return {\n        status: err.response.status,\n        error: err.response.data\n      }; //errorMessage, //errorCode\n    }\n  } //documents -> salva documento en gestor documental ONBASE\n  //GuardarDocumentoECM\n\n\n  async postDocument(data) {\n    var config = {\n      headers: {\n        //\"Accept\":\"*/*\",\n        //\"Accept-Encoding\":\"gzip, deflate, sdch, br\",\n        //\"Accept-Language\":\"fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4\",\n        //\"Access-Control-Request-Headers\":\"accept, content-type\",\n        //\"Content-Type\":\"text/plain\",\n        //\"Content-Length\":JSON.stringify(data).length.toString(),\n        //\"Host\":\"https://qa.api.ob.banesco.com.pa/\",\n        //Connection: \"keep-alive\",\n        //\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\",\n        \"userId\": \"mq3898\",\n        //Usuario\n        \"clientDt\": \"clientDt\",\n        //\"Fecha de ejecuciÃ³n del cliente.\"\n        \"appName\": \"ReactJs\",\n        //\"Aplicacion que consume el servicio\"\n        \"requestId\": \"202112202\",\n        //\"Identificador de la solicitud.\"\n        \"channelId\": \"channelID\" //\"Canal consumidor\",                \n\n      }\n    };\n    var result = await this.post(url.URL_CORE_DOCUMENTS, data, config);\n    console.log(\"Result Document: \", result);\n    /*\r\n    var result = {\r\n        \"Status\": {\r\n            \"StatusCode\": \"M0000\",\r\n            \"StatusDesc\": \"OK\"\r\n        },\r\n        \"Token\": \"e793-ddb2-ab0e-6626-5d3e-5f19-b79b-1f5d\",\r\n        \"Result\": {\r\n            \"DocName\": \"TDC - Contrato de TDC  (98765432)\",\r\n            \"DocumentID\": \"34589873\",\r\n            \"FormType\": \"HTML\"\r\n        }\r\n    }\r\n    */\n    //console.log(result);\n\n    if (result.Status.StatusCode === \"M0000\") {\n      var dataresult = {\n        docName: result.Result['DocName'],\n        documentId: result.Result['DocumentID'],\n        formType: result.Result['FormType']\n      };\n      return dataresult;\n    }\n\n    return undefined;\n  } //documents -> Ver documento en gestor documental ONBASE\n  //VerDocumentoECM\n\n\n  async postViewDocument(docId) {\n    try {\n      var data = {\n        DocumentHandle: docId,\n        ReturnBase64: false\n      };\n      var result = await this.post(url.URL_CORE_DOCUMENTSVIEW, data);\n      console.log(\"Result Document: \", result);\n      return result.Documents[0].DocPop;\n    } catch (e) {}\n\n    return null;\n  } //v1/parties/information -> retorna la info del cliente\n  //BuscarClienteCORE\n\n\n  async getPartiesInformation(params) {\n    /*var item =[ {id:800120843,clientnumber:800120843,clientname:\"Israel Michel Gomez Alfonso\",firstname:\"Israel\",secondname:\"Michel\",\r\n    lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"CED\",idnumber:\"456123\"},\r\n    {id:800120845,clientnumber:800120845,clientname:\"Pancho Pedro Gomez Alfonso\",firstname:\"Pancho\",secondname:\"Pedro\",\r\n    lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"RUC\",idnumber:\"456456\"}];\r\n    return item;*/\n    //params = {PartyId:800120843}\n    var data = qs.stringify(params);\n    console.log(data); //url.URL_CORSBYPASS +\n\n    var result = await this.get(url.URL_CORE_PARTIEINFO + \"?\" + data);\n    console.log(result);\n    return ClientInfoModel.fromJson(result);\n  } ///v1/parties/staff\n\n\n  async getPartiesStaff(params) {\n    //params = {PartyId:600235373}\n    params = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PARTIESTAFF + \"?\" + params);\n    return PartiesStaffModel.fromJson(result);\n  } ///v1/parties/staff\n\n\n  async putPartiesStaff(data) {\n    data = {\n      \"Party\": {\n        \"PartyKey\": {\n          \"PartyId\": \"600235373\"\n        },\n        \"OrgPartyInfo\": {\n          \"OrgData\": {\n            \"Staff\": [{\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"City\": {\n                        \"Cod\": \"PANAMA\"\n                      },\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Jurisdiction\": {\n                        \"Cod\": \"8606\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Street\": \"PRINCIPAL\",\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }],\n                    \"Phone\": [{\n                      \"PhoneNum\": \"66669999\",\n                      \"PhoneType\": \"Home\"\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"Shareholding\": \"100\",\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"08\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": {\n                \"OtherNationality\": false,\n                \"US183Permanence\": false,\n                \"USRelated\": false,\n                \"USResid\": false,\n                \"USSignor\": false\n              },\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"PA\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"Profession\": {\n                \"Value\": \"1007\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"09\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1959-02-12\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"City\": {\n                        \"Cod\": \"PANAMA\"\n                      },\n                      \"CountyDistrict\": {\n                        \"Cod\": \"8047\"\n                      },\n                      \"Jurisdiction\": {\n                        \"Cod\": \"8606\"\n                      },\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Street\": \"PRINCIPAL\",\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }],\n                    \"Phone\": [{\n                      \"PhoneNum\": \"65263673\",\n                      \"PhoneType\": \"Home\"\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"E-8-101498\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PEPData\": {\n                \"IsPEP\": false\n              },\n              \"PersonName\": {\n                \"FirstName\": \"LUIS\",\n                \"LastName\": \"MELLA\",\n                \"SecondLastName\": \"RODRIGUEZ\",\n                \"SecondName\": \"FRANCISCO\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1982-02-15\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"PA\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"02--00710-002013\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PersonName\": {\n                \"FirstName\": \"JONATHAN\",\n                \"LastName\": \"DELGADO\",\n                \"SecondLastName\": \"MARIN\",\n                \"SecondName\": \"IVES\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }, {\n              \"BirthDt\": \"1958-09-29\",\n              \"FATCA\": null,\n              \"Gender\": \"MALE\",\n              \"PartyData\": {\n                \"Contact\": {\n                  \"Locator\": {\n                    \"PostAddr\": [{\n                      \"Province\": {\n                        \"Cod\": \"PA08\"\n                      },\n                      \"Country\": {\n                        \"CountryCode\": \"PA\"\n                      }\n                    }]\n                  }\n                },\n                \"Nationality\": \"ES\",\n                \"IssuedIdent\": [{\n                  \"Ident\": {\n                    \"IssuedIdentValue\": \"ANT119629\"\n                  }\n                }]\n              },\n              \"PartyKey\": {\n                \"PartyType\": \"1\"\n              },\n              \"PersonName\": {\n                \"FirstName\": \"RAMON\",\n                \"LastName\": \"MAÃAS\",\n                \"SecondLastName\": \"SEGURA\"\n              },\n              \"SharesType\": {\n                \"Cod\": \"1\"\n              },\n              \"StaffPosition\": \"10\",\n              \"OrgName\": null\n            }]\n          }\n        }\n      }\n    };\n    var result = await this.put(url.URL_CORE_PARTIESTAFF, data);\n    return PartiesStaffModel.fromJson(result);\n  } //ConsultarListaEmpresasRelacionadas\n\n\n  async getCompaniesRelations(params) {\n    //params = {PartyId:600012387}\n    var data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\n    return PartiesStaffModel.fromJson(result);\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos los paises desde el catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPaisesCatalogo() {\n    try {\n      let json = {\n        records: [{\n          DESCRIPCION: \"PANAMA\",\n          CODIGO: \"PA\"\n        }, {\n          DESCRIPCION: \"ECUADOR\",\n          CODIGO: \"EC\"\n        }],\n        Records: [{\n          Description: \"PANAMA\",\n          Code: \"PA\"\n        }, {\n          Description: \"ECUADOR\",\n          Code: \"EC\"\n        }]\n      }; // return json;\n\n      let params = {\n        catalog_name: 'PAIS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*       Api para obtener las provincias de un pais, pasandole como parametro el id del pais      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getProvinciasCatalogo(pais) {\n    try {\n      let params = {\n        catalog_name: 'PROVINCIA',\n        parent_catalog_name: pais,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*    API para obtener los distrito de cada provincia pasandole como parametro el id provincia    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getDistritoCatalogo(provincia) {\n    try {\n      let params = {\n        catalog_name: 'DISTRITO',\n        parent_catalog_name: provincia,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                      Api para obtener los corregimientos de cada distrito                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCorregimientoCatalogo(distrito) {\n    try {\n      let params = {\n        catalog_name: 'CORREGIMIENTO',\n        parent_catalog_name: distrito,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                         Api para obtener las ciudades de cada provincia                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCiudadCatalogo(provincia) {\n    try {\n      let params = {\n        catalog_name: 'CIUDAD',\n        parent_catalog_name: provincia,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                      Api para obtener el grupo economico de los catalogos                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getGrupoEconomicoCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'GRUPO ECONOMICO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      result.catalog.Records.unshift({\n        Description: \"N/A\",\n        Code: \"N/A\"\n      });\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                   Api para obtener las bancas esta api proviene de catalogos                   */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getBancaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'BANCA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                   Api muestra todos los cargos que retorna desde el catalogo                   */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCargosCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'CARGO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Api retorna todos los bancos exitentes para el catalogo                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getBancosCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'BANCOS',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getActividadEconomicaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'ACTIVIDAD ECONOMICA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSubActividadEconomicaCatalogo(codeActividad) {\n    try {\n      let params = {\n        catalog_name: 'SUB ACTIVIDAD ECONOMICA',\n        parent_catalog_name: codeActividad,\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (err) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO DE SECTOR ECONOMICO                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSectorEconomicoCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'SECTOR ECONOMICO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO RELACION                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getRelacionCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'RELACION',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO TIPO DE GARANTIA                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getTipoGarantiaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'TIPO DE GARANTIA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /*\r\n  \"catalog\": {\r\n      \"type\": \"TIPO DE GARANTIA\",\r\n      \"records\": [\r\n          {\r\n              \"CODIGO\": \"100\",\r\n              \"DESCRIPCION\": \"Garantia Hipotecaria Mueble\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"200\",\r\n              \"DESCRIPCION\": \"Garantia Hipotecaria Inmueble\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"300\",\r\n              \"DESCRIPCION\": \"Depositos Pignorados en el Banco\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"400\",\r\n              \"DESCRIPCION\": \"Depositos Pignorados en Otros Banco\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"500\",\r\n              \"DESCRIPCION\": \"Garantia Prendaria\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"600\",\r\n              \"DESCRIPCION\": \"Otras Garantias\"\r\n          },\r\n          {\r\n              \"CODIGO\": \"700\",\r\n              \"DESCRIPCION\": \"SIN GARANTIAS\"\r\n          }\r\n      ]\r\n  }\r\n  */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO MONEDAS                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getMonedaCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'MONEDA',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     CATALOGO SUCURSAL  o Agencias                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSucursalCatalogo() {\n    try {\n      let params = {\n        catalog_name: 'SUCURSAL',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos los subproductos catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSubProductosCatalogo() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUBPRODUCTO',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                       Api para obtener todos las sucursales o agencias catalogo                      */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getSucursalesCatalogo() {\n    try {\n      // return json;\n      let params = {\n        catalog_name: 'SUCURSAL',\n        parent_catalog_name: \"\",\n        keyword: \"\"\n      };\n      let data = qs.stringify(params);\n      var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\n      return result.catalog;\n    } catch (ex) {}\n\n    return null;\n  }\n  /*------------------------------------------------------------------------------------*/\n  ///v1/loans/details/informations\n  //Retorna las facilidades de un cliente ... partyId -> numero del cliente en T24\n\n\n  async getFacilidades(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\n    return result.AcctLoans.AcctLoan;\n  } //retorna los Clientes Relacionados se le pasa el Numero de Cliente de T24\n\n\n  async getRelatedClients(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n\n    try {\n      //servicio retorna clientes relacionados\n      var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\n      console.log(\"getFacilidades result\", result); //Armamos la data a mostrar en pantalla\n\n      result.PartyPartyRels.PartyPartyRel.map(function (item, i) {\n        var partyNumber = item.PartyPartyRelInfo.PartyRef[0].RelPartyRef[0].PartyKey[0].PartyId;\n\n        if (partyNumber !== undefined && partyNumber !== null && partyNumber.length > 0) {\n          dataResult.push(partyNumber);\n        }\n      });\n    } catch (err) {\n      console.error(\"URL_CORE_FACILIDADES\", err);\n    }\n\n    return dataResult;\n  } //ExposicionCorporativa se le pasa el Numero de Cliente de T24\n\n\n  async getCorporateExhibition(partyId) {\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n    var longTerm = {\n      name: \"Facilidades Largo Plazo\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var shortTerm = {\n      name: \"Facilidades Corto Plazo\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var totalTerm = {\n      name: \"Total de Facilidades\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var pledged = {\n      name: \"Monto Pignorado\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n    var netExposition = {\n      name: \"Exposicion Neta\",\n      approvalRisk: 0,\n      proposalRisk: 0,\n      variationRisk: 0\n    };\n\n    try {\n      //servicio retorna CP y LP (Corto y Largo Plazo)\n      var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\n      console.log(\"getCorporateExhibition result\", result); //Armamos la data a mostrar en pantalla\n\n      result.AcctLoans.AcctLoan.map(function (item, i) {\n        var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\n        var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\n\n        if (dueYear - openYear > 1) {\n          //Largo Plazo\n          longTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          longTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\n        } else {\n          //Corto Pazo                    \n          shortTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt);\n          shortTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\n        }\n      });\n      console.log(\"getCorporateExhibition item\", longTerm);\n      longTerm.variationRisk = longTerm.approvalRisk - longTerm.proposalRisk;\n      shortTerm.variationRisk = shortTerm.approvalRisk - shortTerm.proposalRisk;\n      dataResult.push(longTerm);\n      dataResult.push(shortTerm);\n      totalTerm.approvalRisk = shortTerm.approvalRisk + longTerm.approvalRisk;\n      totalTerm.proposalRisk = shortTerm.proposalRisk + longTerm.proposalRisk;\n      totalTerm.variationRisk = totalTerm.approvalRisk - totalTerm.proposalRisk;\n      dataResult.push(totalTerm);\n    } catch (err) {\n      console.error(\"URL_CORE_FACILIDADES\", err);\n    }\n\n    try {\n      console.log(\"plage\"); //servicio retorna Pignorados\n\n      var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data);\n      console.log(\"plage\", result); //Armamos la data a mostrar en pantalla\n\n      result.Collaterals.CollateralInfo.map(function (item, i) {\n        if (item.AcctKey.AcctReference !== null) {\n          pledged.approvalRisk += Number(item.Collateral.CollateralAmt.Amt);\n          pledged.proposalRisk += Number(item.Collateral.CollateralAmt.Amt);\n          pledged.variationRisk += Number(item.Collateral.CollateralAmt.Amt);\n        }\n      });\n      dataResult.push(pledged);\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n    }\n\n    netExposition.approvalRisk = totalTerm.approvalRisk - pledged.approvalRisk;\n    netExposition.proposalRisk = totalTerm.proposalRisk - pledged.proposalRisk;\n    netExposition.variationRisk = totalTerm.approvalRisk - pledged.proposalRisk;\n    dataResult.push(netExposition);\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  } //ExposicionCorporativa se le pasa el Numero de Cliente de T24\n\n\n  async getCorporateExhibitionByClients(partyId) {\n    let clients = await this.getRelatedClients(partyId);\n    var dataResult = [];\n\n    for (var i = 0; i < clients.length; i++) {\n      let result = await this.getCorporateExhibition(clients[i]);\n\n      if (result !== null && result.length > 0) {\n        dataResult.push({\n          clientId: \"Cliente \" + i,\n          data: result\n        });\n      }\n    }\n\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                 Retorna los balances por meses                                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getAverages(AcctReference) {\n    let params = {\n      AcctReference: AcctReference\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                     Obtenemos una lista de las importaciones que se generen                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getListaImportaciones(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_IMPORTACIONES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                 Obtenemos una lista de las exportaciones que se hayan generado                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getListaExportaciones(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_EXPORTACIONES + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                          Obtenemos los prestamos entrantes existentes                          */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosEntrantes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_INGOING + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                    Obtenemos una lista de todos los presstamos que ya salen                    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosSalientes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_OUTOGOING + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos la lista de creditos que existen en la actualidad activos              */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCreditosExistentes(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_CREDITOS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                        Creditos en linea                                       */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getCreditosLine(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_CREDITOS_LINE + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*     Nos devuelve todas las transacciones que ha realizado el usuario por un rango de fechas    */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getTransactions(AcctId, EndDt, StartDt) {\n    // ejemplo del dataField\n    // AcctId=1001553287&EndDt=2021-10-16T09:32:51&StartDt=2021-09-16T00:00:00\n    let params = {\n      AcctId: AcctId,\n      EndDt: EndDt,\n      StartDt: StartDt\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_TRANSACCTIONS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                                  Obtenemos todos los prestamos                                 */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamos(PartyId) {\n    let params = {\n      PartyId: PartyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PRESTAMOS + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos toda la informacion del prestamos dentro de una actividad              */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  async getPrestamosInfo(AcctId) {\n    let params = {\n      AcctId: AcctId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_PRESTAMOS_INFORMATION + \"?\" + data);\n    return result;\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*               Obtenemos toda la informacion del Reporting Services                            */\n\n  /* ---------------------------------------------------------------------------------------------- */\n  //https://qa.api.ob.banesco.com.pa/APIUtil/v1/reports/atoms?FECHA=20210930&CLIENTE=600167424\n\n\n  async getReportingServices(partyId) {\n    //partyId -> numero del cliente en T24\n    let params = {\n      FECHA: '20210930',\n      //preguntar pq la fecha no se puede cambiar\n      CLIENTE: partyId\n    };\n    let data = qs.stringify(params);\n    var result = await this.get(url.URL_CORE_REPORTINGSERVICES + \"?\" + data);\n    return result;\n    /*{\r\n    \"records\": [\r\n    {\r\n        \"FECHA\": \"20210930\",\r\n        \"T_CREDITO\": \"002\",\r\n        \"T_FACILIDAD\": \"05\",\r\n        \"CLASIFICACION\": \"02\",\r\n        \"LOC_EXT\": \"L\",\r\n        \"REGION\": \"014\",\r\n        \"CLIENTE_RUC\": \"8-805-442\",\r\n        \"TNO_EMPRESA\": \"06\",\r\n        \"NOMBRE_CLIENTE\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n        \"GRUPO_ECON\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n        \"GRUPO_RUC\": \"8-805-442\",\r\n        \"T_RELACION\": \"P999\",\r\n        \"ACT_ECON\": \"2103\",\r\n        \"TASA_INT\": \"10.5\",\r\n        \"MONTO_IN\": 5400,\r\n        \"INT_PC\": 0,\r\n        \"FECHA_INI\": \"20150616\",\r\n        \"FECHA_FIN\": \"20230116\",\r\n        \"FECHA_REFIN\": \"NA\",\r\n        \"FECHA_RENEG\": \"20200817\",\r\n        \"G1\": \"0701\",\r\n        \"MONTO_G1\": 0,\r\n        \"G2\": \"NA\",\r\n        \"MONTO_G2\": 0,\r\n        \"G3\": \"NA\",\r\n        \"MONTO_G3\": 0,\r\n        \"G4\": \"NA\",\r\n        \"MONTO_G4\": 0,\r\n        \"G5\": \"NA\",\r\n        \"MONTO_G5\": 0,\r\n        \"PROV_REG\": 0,\r\n        \"PROV_NIIF\": 119.05,\r\n        \"PROV_PAIS\": 0,\r\n        \"SALDO\": 6401.61,\r\n        \"N_CUOTAS_VENCER\": \"7\",\r\n        \"X_VENCER30\": \"100.86\",\r\n        \"X_VENCER60\": \"100.86\",\r\n        \"X_VENCER90\": \"100.86\",\r\n        \"X_VENCER120\": \"100.86\",\r\n        \"X_VENCER180\": \"100.86\",\r\n        \"X_VENCER1A\": \"100.86\",\r\n        \"X_VENCER5A\": \"5796.45\",\r\n        \"X_VENCER10A\": \"0.00\",\r\n        \"X_VENCERM10A\": \"0.00\",\r\n        \"N_CUOTA_VENCIDAS\": \"0\",\r\n        \"VENCIDOS30\": \"0.00\",\r\n        \"VENCIDOS60\": \"0.00\",\r\n        \"VENCIDOS90\": \"0.00\",\r\n        \"VENCIDOS120\": \"0.00\",\r\n        \"VENCIDOS180\": \"0.00\",\r\n        \"VENCIDOS1A\": \"0.00\",\r\n        \"VENCIDOSM1A\": \"0.00\",\r\n        \"RANGO_MORA\": \"1. Al dÃ­a\",\r\n        \"DIAS_MORA\": 0,\r\n        \"PROX_CAP\": \"20211016\",\r\n        \"PER_CAP\": \"01\",\r\n        \"PROX_INT\": \"20211016\",\r\n        \"PER_INT\": \"01\",\r\n        \"CUOTA_XPAGAR\": \"100.86\",\r\n        \"SUCURSAL\": \"201\",\r\n        \"MONEDA\": \"USD\",\r\n        \"CUENTA_CONTABLE\": \"\",\r\n        \"PRODUCTO\": \"TDC\",\r\n        \"BANCA\": \"\",\r\n        \"SECTOR1\": \"PRESTACARD\",\r\n        \"SECTOR2\": \"\",\r\n        \"SECTOR3\": \"\",\r\n        \"SECTOR4\": \"PRESTACARD\",\r\n        \"PRODUCTO1\": \"TARJETA DE CREDITO CONSUMO\",\r\n        \"PRODUCTO2\": \"TDC\",\r\n        \"PRODUCTO3\": \"Prestacard Visa\",\r\n        \"NUM_OPS\": \"4466840182907004\",\r\n        \"NUM_CLIENTE\": \"600167424\",\r\n        \"CENTRO_COSTO\": \"\",\r\n        \"NUM_LINEA\": \"\",\r\n        \"COD_OFIC\": \"\",\r\n        \"COD_OFIC2\": \"\"\r\n    }\r\n    ],\r\n    \"Status\": {\r\n    \"StatusCode\": \"M0000\",\r\n    \"StatusDesc\": \"SUCCESS\"\r\n    }\r\n    } */\n  } //Retorna todos los colateralsId por numero de cliente\n\n\n  async getColaterals(partyId) {\n    //Numero del cliente en T24\n    let params = {\n      PartyId: partyId\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n\n    try {\n      console.log(\"plage\"); //servicio retorna Pignorados\n\n      var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data); //Armamos la data a mostrar en pantalla\n\n      result.Collaterals.CollateralInfo.map(function (item, i) {\n        if (item.Collateral.CollateralKey.CollateralId !== null) {\n          dataResult.push({\n            collateralId: item.Collateral.CollateralKey.CollateralId,\n            facilityAmt: item.Collateral.CollateralAmt.Amt\n          });\n        }\n      });\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n    }\n\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  } // retorna Detalle de Garantias\n\n\n  async getWarrantyDetails(collateralId, warrantyType) {\n    //Numero del id colateral ... warrytype = Muebles, Inmuebles, Otros, Depositos\n    let params = {\n      CollateralId: collateralId,\n      InqType: warrantyType\n    };\n    let data = qs.stringify(params);\n    var dataResult = [];\n\n    try {\n      //servicio retorna Pignorados\n      var result = await this.get(url.URL_CORE_COLLATERALS + \"?\" + data); //Armamos la data a mostrar en pantalla\n\n      /*result.Collaterals.CollateralInfo.map(function(item, i){\r\n          if(item.Collateral.CollateralKey.CollateralId!==null){\r\n              dataResult.push({collateralId: item.Collateral.CollateralKey.CollateralId,facilityAmt: item.Collateral.CollateralAmt.Amt});\r\n          }\r\n                          \r\n      })*/\n    } catch (err) {\n      console.error(\"URL_CORE_PIGNORADO\", err);\n    }\n\n    console.log(\"dataResult\", dataResult);\n    return dataResult;\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/CoreServices/Services.js"],"names":["WatchListModel","DocumentModel","ClientInfoModel","PartiesStaffModel","ApiServiceCore","url","qs","ACT_FACILIDADACTIVOSFIJOS","moment","Services","postWhatchList","params","result","post","URL_CORE_WATCHLIST","status","fromJson","results","err","response","error","data","postDocument","config","headers","URL_CORE_DOCUMENTS","console","log","Status","StatusCode","dataresult","docName","Result","documentId","formType","undefined","postViewDocument","docId","DocumentHandle","ReturnBase64","URL_CORE_DOCUMENTSVIEW","Documents","DocPop","e","getPartiesInformation","stringify","get","URL_CORE_PARTIEINFO","getPartiesStaff","URL_CORE_PARTIESTAFF","putPartiesStaff","put","getCompaniesRelations","URL_CORE_COMPANIESRELATIONS","getPaisesCatalogo","json","records","DESCRIPCION","CODIGO","Records","Description","Code","catalog_name","parent_catalog_name","keyword","URL_CORE_CATALOGO","catalog","ex","getProvinciasCatalogo","pais","getDistritoCatalogo","provincia","getCorregimientoCatalogo","distrito","getCiudadCatalogo","getGrupoEconomicoCatalogo","unshift","getBancaCatalogo","getCargosCatalogo","getBancosCatalogo","getActividadEconomicaCatalogo","getSubActividadEconomicaCatalogo","codeActividad","getSectorEconomicoCatalogo","getRelacionCatalogo","getTipoGarantiaCatalogo","getMonedaCatalogo","getSucursalCatalogo","getSubProductosCatalogo","getSucursalesCatalogo","getFacilidades","partyId","PartyId","URL_CORE_FACILIDADES","AcctLoans","AcctLoan","getRelatedClients","dataResult","PartyPartyRels","PartyPartyRel","map","item","i","partyNumber","PartyPartyRelInfo","PartyRef","RelPartyRef","PartyKey","length","push","getCorporateExhibition","longTerm","name","approvalRisk","proposalRisk","variationRisk","shortTerm","totalTerm","pledged","netExposition","openYear","parseInt","String","AcctOpeningInfo","OpenDt","split","dueYear","CreditAcctData","DueDt","Number","InitialAmt","Amt","AcctBal","CurAmt","URL_CORE_PIGNORADO","Collaterals","CollateralInfo","AcctKey","AcctReference","Collateral","CollateralAmt","getCorporateExhibitionByClients","clients","clientId","getAverages","URL_CORE_AVERAGES","getListaImportaciones","URL_CORE_IMPORTACIONES","getListaExportaciones","URL_CORE_EXPORTACIONES","getPrestamosEntrantes","URL_CORE_INGOING","getPrestamosSalientes","URL_CORE_OUTOGOING","getCreditosExistentes","URL_CORE_CREDITOS","getCreditosLine","URL_CORE_CREDITOS_LINE","getTransactions","AcctId","EndDt","StartDt","URL_CORE_TRANSACCTIONS","getPrestamos","URL_CORE_PRESTAMOS","getPrestamosInfo","URL_CORE_PRESTAMOS_INFORMATION","getReportingServices","FECHA","CLIENTE","URL_CORE_REPORTINGSERVICES","getColaterals","CollateralKey","CollateralId","collateralId","facilityAmt","getWarrantyDetails","warrantyType","InqType","URL_CORE_COLLATERALS"],"mappings":"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,OAAO,EAAE9E;AAFA,KAAb;AAIA,QAAItE,IAAI,GAAGf,EAAE,CAACuC,SAAH,CAAalC,MAAb,CAAX;AACA,QAAIC,MAAM,GAAG,MAAM,KAAKkC,GAAL,CAASzC,GAAG,CAACqK,0BAAJ,GAAiC,GAAjC,GAAuCrJ,IAAhD,CAAnB;AAEA,WAAOT,MAAP;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GA7rCgD,CAgsCjD;;;AACmB,QAAb+J,aAAa,CAAChF,OAAD,EAAU;AAAE;AAE3B,QAAIhF,MAAM,GAAG;AACTiF,MAAAA,OAAO,EAAED;AADA,KAAb;AAIA,QAAItE,IAAI,GAAGf,EAAE,CAACuC,SAAH,CAAalC,MAAb,CAAX;AAEA,QAAIsF,UAAU,GAAG,EAAjB;;AACA,QAAG;AAECvE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAFD,CAIC;;AACA,UAAIf,MAAM,GAAG,MAAM,KAAKkC,GAAL,CAASzC,GAAG,CAACiI,kBAAJ,GAAyB,GAAzB,GAA+BjH,IAAxC,CAAnB,CALD,CAOC;;AACAT,MAAAA,MAAM,CAAC2H,WAAP,CAAmBC,cAAnB,CAAkCpC,GAAlC,CAAsC,UAASC,IAAT,EAAeC,CAAf,EAAiB;AACnD,YAAGD,IAAI,CAACsC,UAAL,CAAgBiC,aAAhB,CAA8BC,YAA9B,KAA6C,IAAhD,EAAqD;AACjD5E,UAAAA,UAAU,CAACY,IAAX,CAAgB;AAACiE,YAAAA,YAAY,EAAEzE,IAAI,CAACsC,UAAL,CAAgBiC,aAAhB,CAA8BC,YAA7C;AAA0DE,YAAAA,WAAW,EAAE1E,IAAI,CAACsC,UAAL,CAAgBC,aAAhB,CAA8BT;AAArG,WAAhB;AACH;AAEJ,OALD;AAMH,KAdD,CAeA,OAAMjH,GAAN,EAAU;AACNQ,MAAAA,OAAO,CAACN,KAAR,CAAc,oBAAd,EAAmCF,GAAnC;AACH;;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBsE,UAAzB;AACA,WAAOA,UAAP;AACH,GA/tCgD,CAiuCjD;;;AACwB,QAAlB+E,kBAAkB,CAACF,YAAD,EAAcG,YAAd,EAA4B;AAAE;AAElD,QAAItK,MAAM,GAAG;AACTkK,MAAAA,YAAY,EAAEC,YADL;AAETI,MAAAA,OAAO,EAACD;AAFC,KAAb;AAKA,QAAI5J,IAAI,GAAGf,EAAE,CAACuC,SAAH,CAAalC,MAAb,CAAX;AAEA,QAAIsF,UAAU,GAAG,EAAjB;;AACA,QAAG;AACC;AACA,UAAIrF,MAAM,GAAG,MAAM,KAAKkC,GAAL,CAASzC,GAAG,CAAC8K,oBAAJ,GAA2B,GAA3B,GAAiC9J,IAA1C,CAAnB,CAFD,CAIC;;AACA;AACZ;AACA;AACA;AACA;AACA;AACS,KAXD,CAYA,OAAMH,GAAN,EAAU;AACNQ,MAAAA,OAAO,CAACN,KAAR,CAAc,oBAAd,EAAmCF,GAAnC;AACH;;AAEDQ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBsE,UAAzB;AACA,WAAOA,UAAP;AACH;;AA9vCgD","sourcesContent":["\r\nimport { WatchListModel, DocumentModel, ClientInfoModel, PartiesStaffModel } from \"../../models/Core\";\r\nimport ApiServiceCore from \"../ApiServiceCore\";\r\nimport * as url from \"../../helpers/url_helper\"\r\nimport qs from \"qs\";\r\nimport { ACT_FACILIDADACTIVOSFIJOS } from \"../../helpers/options_helper\";\r\nimport moment from \"moment\";\r\n\r\nexport default class Services extends ApiServiceCore {\r\n\r\n    //analysis/customers -> retorna la info de lista de vigilancia\r\n    //ConsultarListaCriterioCORE    \r\n    async postWhatchList(params) {\r\n        try{\r\n            /*\r\n        {\r\n      \"pCustomerId\": \"06--00711-002304\",\r\n      \"pTypeId\": \"CEDULA_IDENTIDAD\",\r\n      \"pModelId\": \"LISTA_VIGILANCIA\",\r\n      \"pCustomerListParams\": {\r\n          \"KeyValueParam\": [\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"NOMBRE\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Librada\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_NOMBRE\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Emilio\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"PRIMER_APELLIDO\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Rivera\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"SEGUNDO_APELLIDO\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"Gaviria\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"TIPO_ID\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"CEDULA_IDENTIDAD\"\r\n              },\r\n              {\r\n                  \"_x003C_Key_x003E_k__BackingField\": \"CEDULA\",\r\n                  \"_x003C_Value_x003E_k__BackingField\": \"06--00711-002304\"\r\n              }\r\n          ]\r\n      },\r\n      \"pUser\": \"wallytech_ws_user\",\r\n      \"pWaitingInterval\": 180000000,\r\n      \"pPriority\": 1\r\n  }\r\n        */\r\n        var result = await this.post(url.URL_CORE_WATCHLIST, params);\r\n\r\n        return {status:200, result: WatchListModel.fromJson(result).results};\r\n        \r\n        }\r\n        catch(err){ \r\n            return {status:err.response.status, error: err.response.data}; //errorMessage, //errorCode\r\n        }\r\n    }\r\n    \r\n    //documents -> salva documento en gestor documental ONBASE\r\n    //GuardarDocumentoECM\r\n    async postDocument(data) {\r\n\r\n        var config = {\r\n            headers: {\r\n                //\"Accept\":\"*/*\",\r\n                //\"Accept-Encoding\":\"gzip, deflate, sdch, br\",\r\n                //\"Accept-Language\":\"fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4\",\r\n                //\"Access-Control-Request-Headers\":\"accept, content-type\",\r\n                //\"Content-Type\":\"text/plain\",\r\n                //\"Content-Length\":JSON.stringify(data).length.toString(),\r\n                //\"Host\":\"https://qa.api.ob.banesco.com.pa/\",\r\n                //Connection: \"keep-alive\",\r\n                //\"User-Agent\":\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36\",\r\n                \"userId\": \"mq3898\", //Usuario\r\n                \"clientDt\": \"clientDt\", //\"Fecha de ejecuciÃ³n del cliente.\"\r\n                \"appName\": \"ReactJs\",//\"Aplicacion que consume el servicio\"\r\n                \"requestId\": \"202112202\",//\"Identificador de la solicitud.\"\r\n                \"channelId\": \"channelID\", //\"Canal consumidor\",                \r\n            }\r\n        }\r\n                \r\n        var result = await this.post(url.URL_CORE_DOCUMENTS, data,config);\r\n\r\n        console.log(\"Result Document: \", result);\r\n\r\n        /*\r\n        var result = {\r\n            \"Status\": {\r\n                \"StatusCode\": \"M0000\",\r\n                \"StatusDesc\": \"OK\"\r\n            },\r\n            \"Token\": \"e793-ddb2-ab0e-6626-5d3e-5f19-b79b-1f5d\",\r\n            \"Result\": {\r\n                \"DocName\": \"TDC - Contrato de TDC  (98765432)\",\r\n                \"DocumentID\": \"34589873\",\r\n                \"FormType\": \"HTML\"\r\n            }\r\n        }\r\n        */\r\n        //console.log(result);\r\n        if (result.Status.StatusCode === \"M0000\") {\r\n            var dataresult = {docName:result.Result['DocName'],documentId:result.Result['DocumentID'],formType:result.Result['FormType']}            \r\n            return dataresult;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    //documents -> Ver documento en gestor documental ONBASE\r\n    //VerDocumentoECM\r\n    async postViewDocument(docId) {\r\n\r\n        try{\r\n            var data = {\r\n            DocumentHandle: docId, \r\n            ReturnBase64:false\r\n        }\r\n                \r\n        var result = await this.post(url.URL_CORE_DOCUMENTSVIEW, data);\r\n\r\n        console.log(\"Result Document: \", result);\r\n\r\n        return result.Documents[0].DocPop;\r\n        }\r\n        catch(e){}\r\n        return null;\r\n                \r\n        \r\n            \r\n    }\r\n\r\n    //v1/parties/information -> retorna la info del cliente\r\n    //BuscarClienteCORE\r\n    async getPartiesInformation(params) {\r\n\r\n        /*var item =[ {id:800120843,clientnumber:800120843,clientname:\"Israel Michel Gomez Alfonso\",firstname:\"Israel\",secondname:\"Michel\",\r\n        lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"CED\",idnumber:\"456123\"},\r\n        {id:800120845,clientnumber:800120845,clientname:\"Pancho Pedro Gomez Alfonso\",firstname:\"Pancho\",secondname:\"Pedro\",\r\n        lastname:\"Gomez\",secondlastname:\"Alfonso\",idtype:\"RUC\",idnumber:\"456456\"}];\r\n        return item;*/\r\n        //params = {PartyId:800120843}\r\n        var data = qs.stringify(params);\r\n        console.log(data);\r\n        //url.URL_CORSBYPASS +\r\n        var result = await this.get(url.URL_CORE_PARTIEINFO + \"?\" + data);  \r\n        console.log(result);\r\n        return ClientInfoModel.fromJson(result);\r\n    }\r\n\r\n    ///v1/parties/staff\r\n    async getPartiesStaff(params) {\r\n\r\n        //params = {PartyId:600235373}\r\n        params = qs.stringify(params);\r\n\r\n        var result = await this.get(url.URL_CORE_PARTIESTAFF + \"?\" + params);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    ///v1/parties/staff\r\n    async putPartiesStaff(data) {\r\n\r\n        data = {\r\n            \"Party\": {\r\n                \"PartyKey\": {\r\n                    \"PartyId\": \"600235373\"\r\n                },\r\n                \"OrgPartyInfo\": {\r\n                    \"OrgData\": {\r\n                        \"Staff\": [\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"City\": {\r\n                                                        \"Cod\": \"PANAMA\"\r\n                                                    },\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Jurisdiction\": {\r\n                                                        \"Cod\": \"8606\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Street\": \"PRINCIPAL\",\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"Phone\": [\r\n                                                {\r\n                                                    \"PhoneNum\": \"66669999\",\r\n                                                    \"PhoneType\": \"Home\"\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"Shareholding\": \"100\",\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"08\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": {\r\n                                    \"OtherNationality\": false,\r\n                                    \"US183Permanence\": false,\r\n                                    \"USRelated\": false,\r\n                                    \"USResid\": false,\r\n                                    \"USSignor\": false\r\n                                },\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"PA\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"Profession\": {\r\n                                    \"Value\": \"1007\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"09\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1959-02-12\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"City\": {\r\n                                                        \"Cod\": \"PANAMA\"\r\n                                                    },\r\n                                                    \"CountyDistrict\": {\r\n                                                        \"Cod\": \"8047\"\r\n                                                    },\r\n                                                    \"Jurisdiction\": {\r\n                                                        \"Cod\": \"8606\"\r\n                                                    },\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Street\": \"PRINCIPAL\",\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ],\r\n                                            \"Phone\": [\r\n                                                {\r\n                                                    \"PhoneNum\": \"65263673\",\r\n                                                    \"PhoneType\": \"Home\"\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"E-8-101498\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PEPData\": {\r\n                                    \"IsPEP\": false\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"LUIS\",\r\n                                    \"LastName\": \"MELLA\",\r\n                                    \"SecondLastName\": \"RODRIGUEZ\",\r\n                                    \"SecondName\": \"FRANCISCO\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1982-02-15\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"PA\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"02--00710-002013\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"JONATHAN\",\r\n                                    \"LastName\": \"DELGADO\",\r\n                                    \"SecondLastName\": \"MARIN\",\r\n                                    \"SecondName\": \"IVES\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            },\r\n                            {\r\n                                \"BirthDt\": \"1958-09-29\",\r\n                                \"FATCA\": null,\r\n                                \"Gender\": \"MALE\",\r\n                                \"PartyData\": {\r\n                                    \"Contact\": {\r\n                                        \"Locator\": {\r\n                                            \"PostAddr\": [\r\n                                                {\r\n                                                    \"Province\": {\r\n                                                        \"Cod\": \"PA08\"\r\n                                                    },\r\n                                                    \"Country\": {\r\n                                                        \"CountryCode\": \"PA\"\r\n                                                    }\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    \"Nationality\": \"ES\",\r\n                                    \"IssuedIdent\": [\r\n                                        {\r\n                                            \"Ident\": {\r\n                                                \"IssuedIdentValue\": \"ANT119629\"\r\n                                            }\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                \"PartyKey\": {\r\n                                    \"PartyType\": \"1\"\r\n                                },\r\n                                \"PersonName\": {\r\n                                    \"FirstName\": \"RAMON\",\r\n                                    \"LastName\": \"MAÃAS\",\r\n                                    \"SecondLastName\": \"SEGURA\"\r\n                                },\r\n                                \"SharesType\": {\r\n                                    \"Cod\": \"1\"\r\n                                },\r\n                                \"StaffPosition\": \"10\",\r\n                                \"OrgName\": null\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var result = await this.put(url.URL_CORE_PARTIESTAFF, data);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    //ConsultarListaEmpresasRelacionadas\r\n    async getCompaniesRelations(params) {\r\n\r\n        //params = {PartyId:600012387}\r\n        var data = qs.stringify(params);\r\n\r\n        var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\r\n\r\n        return PartiesStaffModel.fromJson(result);\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos los paises desde el catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPaisesCatalogo() {\r\n        try{\r\n            let json={records:[{DESCRIPCION:\"PANAMA\",CODIGO:\"PA\"}, {DESCRIPCION:\"ECUADOR\",CODIGO:\"EC\"}],Records:[{Description:\"PANAMA\",Code:\"PA\"}, {Description:\"ECUADOR\",Code:\"EC\"}]}\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'PAIS',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*       Api para obtener las provincias de un pais, pasandole como parametro el id del pais      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getProvinciasCatalogo(pais) {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'PROVINCIA',\r\n                parent_catalog_name: pais,\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*    API para obtener los distrito de cada provincia pasandole como parametro el id provincia    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getDistritoCatalogo(provincia) {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'DISTRITO',\r\n                parent_catalog_name: provincia,\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                      Api para obtener los corregimientos de cada distrito                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCorregimientoCatalogo(distrito) {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'CORREGIMIENTO',\r\n                parent_catalog_name: distrito,\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                         Api para obtener las ciudades de cada provincia                        */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCiudadCatalogo(provincia) {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'CIUDAD',\r\n                parent_catalog_name: provincia,\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                      Api para obtener el grupo economico de los catalogos                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getGrupoEconomicoCatalogo() {\r\n        try{let params = {\r\n            catalog_name: 'GRUPO ECONOMICO',\r\n            parent_catalog_name: \"\",\r\n            keyword:\"\"\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n        result.catalog.Records.unshift({Description:\"N/A\",Code:\"N/A\"})\r\n        return result.catalog;}\r\n        catch(err){}\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                   Api para obtener las bancas esta api proviene de catalogos                   */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getBancaCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'BANCA',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;}\r\n        catch(err){}\r\n        return null;\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                   Api muestra todos los cargos que retorna desde el catalogo                   */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCargosCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'CARGO',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     Api retorna todos los bancos exitentes para el catalogo                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getBancosCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'BANCOS',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;        \r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getActividadEconomicaCatalogo() {\r\n        try{\r\n            let params = {\r\n            catalog_name: 'ACTIVIDAD ECONOMICA',\r\n            parent_catalog_name: \"\",\r\n            keyword:\"\"\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n        return result.catalog;\r\n    }\r\n        catch(err){}\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE ACTIVIDAD ECONOMICA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSubActividadEconomicaCatalogo(codeActividad) {\r\n        try{\r\n            let params = {\r\n            catalog_name: 'SUB ACTIVIDAD ECONOMICA',\r\n            parent_catalog_name: codeActividad,\r\n            keyword:\"\"\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n        return result.catalog;\r\n    }\r\n        catch(err){}\r\n        return null;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO DE SECTOR ECONOMICO                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSectorEconomicoCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'SECTOR ECONOMICO',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;      \r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO RELACION                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getRelacionCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'RELACION',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;      \r\n\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO TIPO DE GARANTIA                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getTipoGarantiaCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'TIPO DE GARANTIA',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;      \r\n\r\n        \r\n    }\r\n    /*\r\n    \"catalog\": {\r\n        \"type\": \"TIPO DE GARANTIA\",\r\n        \"records\": [\r\n            {\r\n                \"CODIGO\": \"100\",\r\n                \"DESCRIPCION\": \"Garantia Hipotecaria Mueble\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"200\",\r\n                \"DESCRIPCION\": \"Garantia Hipotecaria Inmueble\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"300\",\r\n                \"DESCRIPCION\": \"Depositos Pignorados en el Banco\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"400\",\r\n                \"DESCRIPCION\": \"Depositos Pignorados en Otros Banco\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"500\",\r\n                \"DESCRIPCION\": \"Garantia Prendaria\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"600\",\r\n                \"DESCRIPCION\": \"Otras Garantias\"\r\n            },\r\n            {\r\n                \"CODIGO\": \"700\",\r\n                \"DESCRIPCION\": \"SIN GARANTIAS\"\r\n            }\r\n        ]\r\n    }\r\n    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO MONEDAS                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getMonedaCatalogo() {\r\n\r\n        try{\r\n            let params = {\r\n                catalog_name: 'MONEDA',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;    \r\n\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     CATALOGO SUCURSAL  o Agencias                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSucursalCatalogo() {\r\n        try{\r\n            let params = {\r\n                catalog_name: 'SUCURSAL',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;    \r\n\r\n        \r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos los subproductos catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSubProductosCatalogo() {\r\n        try{\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUBPRODUCTO',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Api para obtener todos las sucursales o agencias catalogo                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getSucursalesCatalogo() {\r\n        try{\r\n            // return json;\r\n            let params = {\r\n                catalog_name: 'SUCURSAL',\r\n                parent_catalog_name: \"\",\r\n                keyword:\"\"\r\n            }\r\n            let data = qs.stringify(params);\r\n            var result = await this.get(url.URL_CORE_CATALOGO + \"?\" + data);\r\n            return result.catalog;\r\n        }\r\n        catch(ex){}\r\n        return null;\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------*/\r\n    ///v1/loans/details/informations\r\n    //Retorna las facilidades de un cliente ... partyId -> numero del cliente en T24\r\n    async getFacilidades(partyId) {\r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n        \r\n        return result.AcctLoans.AcctLoan;\r\n    }\r\n\r\n    //retorna los Clientes Relacionados se le pasa el Numero de Cliente de T24\r\n    async getRelatedClients(partyId) {\r\n        \r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = []; \r\n        \r\n        try{\r\n\r\n            //servicio retorna clientes relacionados\r\n            var result = await this.get(url.URL_CORE_COMPANIESRELATIONS + \"?\" + data);\r\n        \r\n            console.log(\"getFacilidades result\", result);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.PartyPartyRels.PartyPartyRel.map(function(item, i){\r\n\r\n                var partyNumber = item.PartyPartyRelInfo.PartyRef[0].RelPartyRef[0].PartyKey[0].PartyId;    \r\n                if(partyNumber!==undefined && partyNumber!==null && partyNumber.length > 0){\r\n                    dataResult.push(partyNumber);\r\n                }                \r\n            })\r\n        }\r\n        catch(err){\r\n            console.error(\"URL_CORE_FACILIDADES\",err);\r\n        }\r\n        \r\n        return dataResult;\r\n    }\r\n\r\n    //ExposicionCorporativa se le pasa el Numero de Cliente de T24\r\n    async getCorporateExhibition(partyId) {\r\n        \r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = []; \r\n        var longTerm ={name:\"Facilidades Largo Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var shortTerm ={name:\"Facilidades Corto Plazo\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var totalTerm ={name:\"Total de Facilidades\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var pledged ={name:\"Monto Pignorado\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n        var netExposition ={name:\"Exposicion Neta\",approvalRisk:0,proposalRisk:0,variationRisk:0};\r\n\r\n        try{\r\n\r\n            //servicio retorna CP y LP (Corto y Largo Plazo)\r\n            var result = await this.get(url.URL_CORE_FACILIDADES + \"?\" + data);\r\n        \r\n            console.log(\"getCorporateExhibition result\", result);\r\n\r\n            //Armamos la data a mostrar en pantalla\r\n            result.AcctLoans.AcctLoan.map(function(item, i){\r\n                var openYear = parseInt(String(item.AcctOpeningInfo.OpenDt).split('-')[0]);\r\n                var dueYear = parseInt(String(item.CreditAcctData.DueDt).split('-')[0]);\r\n                if(dueYear - openYear > 1){ //Largo Plazo\r\n                    longTerm.approvalRisk += Number(item.AcctOpeningInfo.InitialAmt.Amt) ;\r\n                    longTerm.proposalRisk += Number( item.AcctBal[0].CurAmt.Amt);\r\n                }\r\n                else{ //Corto Pazo                    \r\n                    shortTerm.approvalRisk +=Number(item.AcctOpeningInfo.InitialAmt.Amt) ;\r\n                    shortTerm.proposalRisk += Number(item.AcctBal[0].CurAmt.Amt);\r\n                }\r\n            })\r\n\r\n            console.log(\"getCorporateExhibition item\", longTerm);\r\n                            \r\n            longTerm.variationRisk=longTerm.approvalRisk - longTerm.proposalRisk;\r\n            shortTerm.variationRisk=shortTerm.approvalRisk - shortTerm.proposalRisk;\r\n\r\n            dataResult.push(longTerm);\r\n            dataResult.push(shortTerm);\r\n\r\n            totalTerm.approvalRisk = shortTerm.approvalRisk + longTerm.approvalRisk;\r\n            totalTerm.proposalRisk = shortTerm.proposalRisk + longTerm.proposalRisk;\r\n            totalTerm.variationRisk=totalTerm.approvalRisk - totalTerm.proposalRisk;\r\n\r\n            dataResult.push(totalTerm);\r\n\r\n        }\r\n        catch(err){\r\n            console.error(\"URL_CORE_FACILIDADES\",err);\r\n        }\r\n\r\n        try{\r\n\r\n            console.log(\"plage\");\r\n\r\n            //servicio retorna Pignorados\r\n            var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data);\r\n            \r\n            console.log(\"plage\",result);\r\n            //Armamos la data a mostrar en pantalla\r\n            result.Collaterals.CollateralInfo.map(function(item, i){\r\n                \r\n                if(item.AcctKey.AcctReference !== null){\r\n                    pledged.approvalRisk += Number(item.Collateral.CollateralAmt.Amt) ;\r\n                    pledged.proposalRisk += Number(item.Collateral.CollateralAmt.Amt);\r\n                    pledged.variationRisk+= Number(item.Collateral.CollateralAmt.Amt);\r\n                }\r\n                \r\n            })\r\n\r\n            dataResult.push(pledged);\r\n        }\r\n        catch(err){\r\n            console.error(\"URL_CORE_PIGNORADO\",err);\r\n        }\r\n\r\n        netExposition.approvalRisk = totalTerm.approvalRisk - pledged.approvalRisk;\r\n        netExposition.proposalRisk = totalTerm.proposalRisk - pledged.proposalRisk;\r\n        netExposition.variationRisk = totalTerm.approvalRisk - pledged.proposalRisk;\r\n\r\n        dataResult.push(netExposition);\r\n\r\n        console.log(\"dataResult\",dataResult);\r\n        return dataResult;\r\n    }\r\n    \r\n    //ExposicionCorporativa se le pasa el Numero de Cliente de T24\r\n    async getCorporateExhibitionByClients(partyId) {        \r\n        \r\n        let clients = await this.getRelatedClients(partyId);        \r\n        var dataResult = [];   \r\n        for (var i = 0; i < clients.length; i++) {\r\n            let result = await this.getCorporateExhibition(clients[i]); \r\n            if(result!==null && result.length>0){\r\n                dataResult.push({clientId:\"Cliente \" + i, data:result}); \r\n            } \r\n        }              \r\n        console.log(\"dataResult\",dataResult);\r\n        return dataResult;\r\n    }\r\n\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                 Retorna los balances por meses                                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getAverages(AcctReference) {\r\n        let params = {\r\n            AcctReference: AcctReference\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_AVERAGES + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     Obtenemos una lista de las importaciones que se generen                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getListaImportaciones(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_IMPORTACIONES + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                 Obtenemos una lista de las exportaciones que se hayan generado                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getListaExportaciones(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_EXPORTACIONES + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                          Obtenemos los prestamos entrantes existentes                          */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosEntrantes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_INGOING + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                    Obtenemos una lista de todos los presstamos que ya salen                    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosSalientes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_OUTOGOING + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos la lista de creditos que existen en la actualidad activos              */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCreditosExistentes(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CREDITOS + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                        Creditos en linea                                       */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getCreditosLine(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_CREDITOS_LINE + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*     Nos devuelve todas las transacciones que ha realizado el usuario por un rango de fechas    */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getTransactions(AcctId,EndDt,StartDt) {\r\n        // ejemplo del dataField\r\n        // AcctId=1001553287&EndDt=2021-10-16T09:32:51&StartDt=2021-09-16T00:00:00\r\n        let params = {\r\n            AcctId: AcctId,\r\n            EndDt: EndDt,\r\n            StartDt: StartDt,\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_TRANSACCTIONS + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                                  Obtenemos todos los prestamos                                 */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamos(PartyId) {\r\n        let params = {\r\n            PartyId: PartyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_PRESTAMOS + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos toda la informacion del prestamos dentro de una actividad              */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    async getPrestamosInfo(AcctId) {\r\n        let params = {\r\n            AcctId: AcctId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_PRESTAMOS_INFORMATION + \"?\" + data);\r\n        \r\n        return result;\r\n    }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*               Obtenemos toda la informacion del Reporting Services                            */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n\r\n    //https://qa.api.ob.banesco.com.pa/APIUtil/v1/reports/atoms?FECHA=20210930&CLIENTE=600167424\r\n\r\n    async getReportingServices(partyId) { //partyId -> numero del cliente en T24\r\n        let params = {\r\n            FECHA:'20210930', //preguntar pq la fecha no se puede cambiar\r\n            CLIENTE: partyId\r\n        }\r\n        let data = qs.stringify(params);\r\n        var result = await this.get(url.URL_CORE_REPORTINGSERVICES + \"?\" + data);\r\n        \r\n        return result;\r\n\r\n        /*{\r\n    \"records\": [\r\n        {\r\n            \"FECHA\": \"20210930\",\r\n            \"T_CREDITO\": \"002\",\r\n            \"T_FACILIDAD\": \"05\",\r\n            \"CLASIFICACION\": \"02\",\r\n            \"LOC_EXT\": \"L\",\r\n            \"REGION\": \"014\",\r\n            \"CLIENTE_RUC\": \"8-805-442\",\r\n            \"TNO_EMPRESA\": \"06\",\r\n            \"NOMBRE_CLIENTE\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n            \"GRUPO_ECON\": \"ROBERTO ANTONIO SANCHEZ CONCEPCION\",\r\n            \"GRUPO_RUC\": \"8-805-442\",\r\n            \"T_RELACION\": \"P999\",\r\n            \"ACT_ECON\": \"2103\",\r\n            \"TASA_INT\": \"10.5\",\r\n            \"MONTO_IN\": 5400,\r\n            \"INT_PC\": 0,\r\n            \"FECHA_INI\": \"20150616\",\r\n            \"FECHA_FIN\": \"20230116\",\r\n            \"FECHA_REFIN\": \"NA\",\r\n            \"FECHA_RENEG\": \"20200817\",\r\n            \"G1\": \"0701\",\r\n            \"MONTO_G1\": 0,\r\n            \"G2\": \"NA\",\r\n            \"MONTO_G2\": 0,\r\n            \"G3\": \"NA\",\r\n            \"MONTO_G3\": 0,\r\n            \"G4\": \"NA\",\r\n            \"MONTO_G4\": 0,\r\n            \"G5\": \"NA\",\r\n            \"MONTO_G5\": 0,\r\n            \"PROV_REG\": 0,\r\n            \"PROV_NIIF\": 119.05,\r\n            \"PROV_PAIS\": 0,\r\n            \"SALDO\": 6401.61,\r\n            \"N_CUOTAS_VENCER\": \"7\",\r\n            \"X_VENCER30\": \"100.86\",\r\n            \"X_VENCER60\": \"100.86\",\r\n            \"X_VENCER90\": \"100.86\",\r\n            \"X_VENCER120\": \"100.86\",\r\n            \"X_VENCER180\": \"100.86\",\r\n            \"X_VENCER1A\": \"100.86\",\r\n            \"X_VENCER5A\": \"5796.45\",\r\n            \"X_VENCER10A\": \"0.00\",\r\n            \"X_VENCERM10A\": \"0.00\",\r\n            \"N_CUOTA_VENCIDAS\": \"0\",\r\n            \"VENCIDOS30\": \"0.00\",\r\n            \"VENCIDOS60\": \"0.00\",\r\n            \"VENCIDOS90\": \"0.00\",\r\n            \"VENCIDOS120\": \"0.00\",\r\n            \"VENCIDOS180\": \"0.00\",\r\n            \"VENCIDOS1A\": \"0.00\",\r\n            \"VENCIDOSM1A\": \"0.00\",\r\n            \"RANGO_MORA\": \"1. Al dÃ­a\",\r\n            \"DIAS_MORA\": 0,\r\n            \"PROX_CAP\": \"20211016\",\r\n            \"PER_CAP\": \"01\",\r\n            \"PROX_INT\": \"20211016\",\r\n            \"PER_INT\": \"01\",\r\n            \"CUOTA_XPAGAR\": \"100.86\",\r\n            \"SUCURSAL\": \"201\",\r\n            \"MONEDA\": \"USD\",\r\n            \"CUENTA_CONTABLE\": \"\",\r\n            \"PRODUCTO\": \"TDC\",\r\n            \"BANCA\": \"\",\r\n            \"SECTOR1\": \"PRESTACARD\",\r\n            \"SECTOR2\": \"\",\r\n            \"SECTOR3\": \"\",\r\n            \"SECTOR4\": \"PRESTACARD\",\r\n            \"PRODUCTO1\": \"TARJETA DE CREDITO CONSUMO\",\r\n            \"PRODUCTO2\": \"TDC\",\r\n            \"PRODUCTO3\": \"Prestacard Visa\",\r\n            \"NUM_OPS\": \"4466840182907004\",\r\n            \"NUM_CLIENTE\": \"600167424\",\r\n            \"CENTRO_COSTO\": \"\",\r\n            \"NUM_LINEA\": \"\",\r\n            \"COD_OFIC\": \"\",\r\n            \"COD_OFIC2\": \"\"\r\n        }\r\n    ],\r\n    \"Status\": {\r\n        \"StatusCode\": \"M0000\",\r\n        \"StatusDesc\": \"SUCCESS\"\r\n    }\r\n} */\r\n    }\r\n\r\n\r\n    //Retorna todos los colateralsId por numero de cliente\r\n    async getColaterals(partyId) { //Numero del cliente en T24\r\n        \r\n        let params = {\r\n            PartyId: partyId\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = []; \r\n        try{\r\n\r\n            console.log(\"plage\");\r\n\r\n            //servicio retorna Pignorados\r\n            var result = await this.get(url.URL_CORE_PIGNORADO + \"?\" + data);\r\n            \r\n            //Armamos la data a mostrar en pantalla\r\n            result.Collaterals.CollateralInfo.map(function(item, i){\r\n                if(item.Collateral.CollateralKey.CollateralId!==null){\r\n                    dataResult.push({collateralId: item.Collateral.CollateralKey.CollateralId,facilityAmt: item.Collateral.CollateralAmt.Amt});\r\n                }\r\n                                \r\n            })\r\n        }\r\n        catch(err){\r\n            console.error(\"URL_CORE_PIGNORADO\",err);\r\n        }\r\n       \r\n        console.log(\"dataResult\",dataResult);\r\n        return dataResult;\r\n    }\r\n\r\n    // retorna Detalle de Garantias\r\n    async getWarrantyDetails(collateralId,warrantyType) { //Numero del id colateral ... warrytype = Muebles, Inmuebles, Otros, Depositos\r\n        \r\n        let params = {\r\n            CollateralId: collateralId,\r\n            InqType:warrantyType\r\n        }\r\n\r\n        let data = qs.stringify(params);\r\n\r\n        var dataResult = []; \r\n        try{\r\n            //servicio retorna Pignorados\r\n            var result = await this.get(url.URL_CORE_COLLATERALS + \"?\" + data);\r\n            \r\n            //Armamos la data a mostrar en pantalla\r\n            /*result.Collaterals.CollateralInfo.map(function(item, i){\r\n                if(item.Collateral.CollateralKey.CollateralId!==null){\r\n                    dataResult.push({collateralId: item.Collateral.CollateralKey.CollateralId,facilityAmt: item.Collateral.CollateralAmt.Amt});\r\n                }\r\n                                \r\n            })*/\r\n        }\r\n        catch(err){\r\n            console.error(\"URL_CORE_PIGNORADO\",err);\r\n        }\r\n       \r\n        console.log(\"dataResult\",dataResult);\r\n        return dataResult;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}