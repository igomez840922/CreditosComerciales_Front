{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\GeneralesEmpresa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Row, Col, Card, CardBody, Button, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { CoreServices } from \"../../../../../services\";\nimport Select from \"react-select\";\nimport Switch from \"react-switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst GeneralesEmpresa = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [paises, setPaises] = useState([]);\n  const [paisesSelected, setPaisesSelected] = useState(undefined);\n  const [codigoPais, setCodigoPais] = useState(null);\n  const [switch1, setswitch1] = useState(false);\n  const [switch2, setswitch2] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciasSelected, setProvinciasSelected] = useState(undefined);\n  const [codigoProvincia, setCodigoProvincia] = useState(null);\n  const [distrito, setDistrito] = useState([]);\n  const [distritoSelected, setDistritoSelected] = useState(undefined);\n  const [codigoDistrito, setCodigoDistrito] = useState(null);\n  const [corregimiento, setCorregimiento] = useState([]);\n  const [corregimientoSelected, setCorregimientoSelected] = useState(undefined);\n  const [codigoCorregimiento, setCodigoCorregimiento] = useState(null);\n  const [clienteSostenibleSelect, setclienteSostenibleSelect] = useState(undefined);\n  const [listaExclusionSelect, setlistaExclusionSelect] = useState(undefined);\n  const [sectorSelect, setsectorSelect] = useState(undefined);\n  const [ciudad, setCiudad] = useState([]);\n  const [ciudadSelected, setCiudadSelected] = useState(undefined);\n  const [codigoCiudad, setCodigoCiudad] = useState(null);\n  const [dataReturn, setDataReturn] = useState(props.datosEmpresa);\n  const [sectorList, setSectorList] = useState([]);\n  const [subsectorList, setSubsectorList] = useState([]);\n  const [formValid, setFormValid] = useState(false);\n  const [SectorEconomico, setSectorEconomico] = useState([]);\n  const [codigoSector, setcodigoSector] = useState({\n    label: \"\",\n    value: \"\"\n  });\n  const [campoRequeridoSector, setcampoRequeridoSector] = useState(false);\n  const [campoRequeridoSostenible, setcampoRequeridoSostenible] = useState(false);\n  const [campoRequeridoExclusion, setcampoRequeridoExclusion] = useState(false);\n  const listaExclusion = [{\n    label: \"No\",\n    value: 1\n  }, {\n    label: \"Si\",\n    value: 2\n  }];\n  const clienteSostenible = [{\n    label: \"No\",\n    value: 1\n  }, {\n    label: \"Si\",\n    value: 2\n  }];\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmGeneralesEmpresa');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  React.useEffect(() => {\n    // Read Api Service data\n    cargarPaises();\n    cargarSectorEconomico();\n  }, [props]);\n  React.useEffect(() => {\n    // Read Api Service data\n    try {\n      var defaultVal = null; // if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\n      //   defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\n      //   if (defaultVal !== undefined) {\n      //     setPaisesSelected(defaultVal);\n      //   }\n      // }\n\n      if (provincias.length > 0 && props.datosEmpresa.province !== null && provinciasSelected === undefined) {\n        defaultVal = provincias.find(x => x.value === props.datosEmpresa.province.code);\n\n        if (defaultVal !== undefined) {\n          setProvinciasSelected(defaultVal);\n        }\n      }\n\n      if (distrito.length > 0 && props.datosEmpresa.district !== null && distritoSelected === undefined) {\n        defaultVal = distrito.find(x => x.value === props.datosEmpresa.district.code);\n\n        if (defaultVal !== undefined) {\n          setDistritoSelected(defaultVal);\n        }\n      }\n\n      if (corregimiento.length > 0 && props.datosEmpresa.township !== null && corregimientoSelected === undefined) {\n        defaultVal = corregimiento.find(x => x.value === props.datosEmpresa.township.code);\n\n        if (defaultVal !== undefined) {\n          setCorregimientoSelected(defaultVal);\n        }\n      }\n\n      if (ciudad.length > 0 && props.datosEmpresa.city !== null && ciudadSelected === undefined) {\n        defaultVal = ciudad.find(x => x.value === props.datosEmpresa.city.code);\n\n        if (defaultVal !== undefined) {\n          setCiudadSelected(defaultVal);\n        }\n      }\n\n      if (SectorEconomico.length > 0 && props.datosEmpresa.sector !== null && sectorSelect === undefined) {\n        defaultVal = SectorEconomico.find(x => x.value === props.datosEmpresa.sector.code);\n\n        if (defaultVal !== undefined) {\n          setsectorSelect(defaultVal);\n        }\n      } // if (clienteSostenible.length > 0 && props.datosEmpresa.sustainable !== null && clienteSostenibleSelect === undefined) {\n      //     defaultVal = props.datosEmpresa.sustainable?2:1;\n      //     setclienteSostenibleSelect(props.datosEmpresa.sustainable?2:1);\n      // }\n      // if (listaExclusion.length > 0 && props.datosEmpresa.exclusion !== null && listaExclusionSelect === undefined) {\n      //     defaultVal = props.datosEmpresa.exclusion?2:1;\n      //     setlistaExclusionSelect(props.datosEmpresa.exclusion?2:1);\n      //     setclienteSostenibleSelect(props.datosEmpresa.sustainable?2:1);\n      // }\n\n    } catch (err) {}\n  }, [paises]); ///////////////////////////////////////////////\n\n  function cargarSectorEconomico() {\n    const api = new CoreServices();\n    api.getSectorEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"Selectasector\"),\n        options: json\n      }];\n      setSectorEconomico(json);\n    });\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"countryIdentification\") {\n      dataReturn.country.name = e.label;\n      dataReturn.country.code = e.value;\n    }\n\n    if (tipo == \"provinceIdentification\") {\n      dataReturn.province.name = e.label;\n      dataReturn.province.code = e.value;\n    }\n\n    if (tipo == \"districtIdentification\") {\n      dataReturn.district.name = e.label;\n      dataReturn.district.code = e.value;\n    }\n\n    if (tipo == \"townshipIdentification\") {\n      dataReturn.township.name = e.label;\n      dataReturn.township.code = e.value;\n    }\n\n    if (tipo == \"cityIdentification\") {\n      dataReturn.city.name = e.label;\n      dataReturn.city.code = e.value;\n    }\n\n    if (tipo == \"referencePoint\") {\n      dataReturn.referencePoint = e.target.value;\n    }\n\n    if (tipo == \"residency\") {\n      dataReturn.residency = e.target.value;\n    }\n\n    if (tipo == \"houseNumber\") {\n      dataReturn.houseNumber = e.target.value;\n    }\n\n    if (tipo == \"phoneNumber\") {\n      dataReturn.phoneNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"mobileNumber\") {\n      dataReturn.mobileNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"workNumber\") {\n      dataReturn.workNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"email\") {\n      dataReturn.email = e.target.value;\n    }\n\n    if (tipo == \"sectorIdentification\") {\n      dataReturn.sector.name = e.label;\n      dataReturn.sector.code = e.value;\n    }\n\n    if (tipo == \"subSectorIdentification\") {\n      dataReturn.subSector.code = e.target.value;\n      dataReturn.subSector.name = e.target.selectedOptions[0].innerHTML;\n    }\n\n    if (tipo == \"exclusion\") {\n      dataReturn.exclusion = switch1;\n      setswitch1(!switch1);\n    }\n\n    if (tipo == \"sustainable\") {\n      dataReturn.sustainable = !switch2;\n      setswitch2(!switch2);\n    }\n\n    if (tipo == \"apto\") {\n      dataReturn.apto = e.target.value;\n    }\n\n    setDataReturn(dataReturn);\n  }\n\n  function cargarPaises() {\n    setDataReturn(props.datosEmpresa);\n    cargarProvincias(props.datosEmpresa.country.code);\n    cargarDistrito(props.datosEmpresa.province.code);\n    cargarCorregimiento(props.datosEmpresa.district.code);\n    cargarCiudad(props.datosEmpresa.township.code);\n    setswitch1(props.datosEmpresa.exclusion);\n    setswitch2(props.datosEmpresa.sustainable);\n    const api = new CoreServices();\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectCountry\"),\r\n          options: json,\r\n        },\r\n        ];*/\n\n\n      setPaises(json);\n\n      try {\n        var defaultVal = null;\n\n        if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\n          defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\n\n          if (defaultVal !== undefined) {\n            setPaisesSelected(defaultVal);\n          }\n        }\n      } catch (err) {}\n    });\n  }\n\n  function cargarProvincias(pais) {\n    const api = new CoreServices();\n    api.getProvinciasCatalogo(pais).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectProvince\"),\r\n          options: json,\r\n        },\r\n        ];*/\n\n\n      setProvincias(json); // setProvinciasSelected(undefined);\n    });\n  }\n\n  function cargarDistrito(provincia) {\n    const api = new CoreServices();\n    api.getDistritoCatalogo(provincia).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectDistrict\"),\r\n          options: json,\r\n        },\r\n      ];*/\n\n\n      setDistrito(json); // setDistritoSelected(undefined);\n    });\n  }\n\n  function cargarCorregimiento(distrito) {\n    const api = new CoreServices();\n    api.getCorregimientoCatalogo(distrito).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectTownship\"),\r\n          options: json,\r\n        },\r\n        ];*/\n\n\n      setCorregimiento(json); // setCorregimientoSelected(undefined);\n    });\n  }\n\n  function cargarCiudad(provincia) {\n    const api = new CoreServices();\n    api.getCiudadCatalogo(provincia).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      console.log(response);\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n      /*const optionGroup1 = [\r\n        {\r\n          label: t(\"SelectCity\"),\r\n          options: json,\r\n        },\r\n        ];*/\n\n\n      setCiudad(json);\n    });\n  }\n\n  function changePais(event) {\n    setDistrito([]);\n    setCorregimiento([]);\n    setCiudad([]);\n    setProvincias([]);\n    setCodigoPais(event.value);\n    cargarProvincias(event.value);\n    changeAll(event, \"countryIdentification\");\n    dataReturn.province = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.district = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.city = {\n      code: \"\",\n      name: \"\"\n    };\n  }\n\n  function changeProvincia(event) {\n    setCorregimiento([]);\n    setDistrito([]);\n    setCiudad([]);\n    cargarCiudad(event.value);\n    setCodigoProvincia(event.value);\n    cargarDistrito(event.value);\n    changeAll(event, \"provinceIdentification\");\n    dataReturn.district = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.city = {\n      code: \"\",\n      name: \"\"\n    };\n  }\n\n  function changeDistrito(event) {\n    setCorregimiento([]);\n    setCodigoDistrito(event.value);\n    cargarCorregimiento(event.value);\n    changeAll(event, \"districtIdentification\");\n    dataReturn.townshipIdentification = 0;\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n  }\n\n  function changeCorregimiento(event) {\n    setCodigoCorregimiento(event.value);\n    changeAll(event, \"townshipIdentification\");\n  }\n\n  function changeCiudad(event) {\n    setCodigoCiudad(event.value);\n    changeAll(event, \"cityIdentification\");\n  }\n\n  function handleChange(e) {\n    setFormValid(false);\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    dataReturn.exclusion = switch1;\n    dataReturn.sustainable = switch2;\n    setDataReturn(dataReturn);\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setFormValid(true);\n  } //On Mounting (componentDidMount)\n\n\n  React.useEffect(() => {\n    // Read Api Service data\n    loadInitialData();\n  }, []);\n\n  function loadInitialData() {\n    const api = new ApiServicesCommon();\n    api.getSectorList().then(data => {\n      setSectorList(data);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    });\n    api.getSubSectorList().then(data => {\n      setSubsectorList(data);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"General of the Company\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmGeneralesEmpresa\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Country\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setPaisesSelected(paises.find(x => x.value === e.value));\n                changePais(e);\n              },\n              options: paises,\n              id: \"paises\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: paisesSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Province\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setProvinciasSelected(provincias.find(x => x.value === e.value));\n                changeProvincia(e);\n              },\n              options: provincias,\n              id: \"provincias\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: provinciasSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"District\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setDistritoSelected(distrito.find(x => x.value === e.value));\n                changeDistrito(e);\n              },\n              options: distrito,\n              id: \"distrito\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: distritoSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Township\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setCorregimiento(corregimiento.find(x => x.value === e.value));\n                changeCorregimiento(e);\n              },\n              options: corregimiento,\n              id: \"corregimiento\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: corregimientoSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"City\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setCiudad(ciudad.find(x => x.value === e.value));\n                changeCiudad(e);\n              },\n              options: ciudad,\n              id: \"ciudad\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: ciudadSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"referencePoint\",\n              children: t(\"Reference Point\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"referencePoint\");\n              },\n              className: \"form-control\",\n              name: \"referencePoint\",\n              type: \"text\",\n              id: \"referencePoint\",\n              value: props.datosEmpresa.referencePoint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"buildingResidence\",\n              children: t(\"Building/Residence\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"residency\");\n              },\n              className: \"form-control\",\n              name: \"buildingResidence\",\n              type: \"text\",\n              id: \"buildingResidence\",\n              value: props.datosEmpresa.residency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"apto\",\n              children: t(\"Apto\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"apto\");\n              },\n              className: \"form-control\",\n              name: \"apto\",\n              type: \"number\",\n              id: \"apto\",\n              value: props.datosEmpresa.apto\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumber\",\n              children: t(\"Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"phoneNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumber\",\n              type: \"number\",\n              id: \"phoneNumber\",\n              value: props.datosEmpresa.phoneNumber,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumberMobile\",\n              children: t(\"Mobile Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"mobileNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumberMobile\",\n              type: \"number\",\n              id: \"phoneNumberMobile\",\n              value: props.datosEmpresa.mobileNumber,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumberOffice\",\n              children: t(\"Office Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"workNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumberOffice\",\n              type: \"number\",\n              id: \"phoneNumberOffice\",\n              value: props.datosEmpresa.workNumber,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email\",\n              children: t(\"Email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"email\");\n              },\n              className: \"form-control\",\n              name: \"email\",\n              type: \"email\",\n              id: \"email\",\n              value: props.datosEmpresa.email,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                email: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Apply for Exclusion List\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n              check: true,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                name: \"theProjectInvolvePhysicalEconomicResettlement\",\n                uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 700,\n                  columnNumber: 34\n                }, this),\n                checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 32\n                }, this),\n                onColor: \"#007943\",\n                className: \"form-label\",\n                onChange: () => {\n                  changeAll(\"e\", \"exclusion\");\n                },\n                checked: switch1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"SustainableCustomer\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n              check: true,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                name: \"theProjectInvolvePhysicalEconomicResettlement\",\n                uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 34\n                }, this),\n                checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 731,\n                  columnNumber: 32\n                }, this),\n                onColor: \"#007943\",\n                className: \"form-label\",\n                onChange: () => {\n                  changeAll(\"e\", \"sustainable\");\n                },\n                checked: switch2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n}, \"t1L5HHbWtGLxyew3AbdnGrravvI=\", false, function () {\n  return [useTranslation, React.useImperativeHandle];\n}));\n_c4 = GeneralesEmpresa;\nGeneralesEmpresa.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n}; //export default (withTranslation()(GeneralesEmpresa));\n\nexport default GeneralesEmpresa;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"GeneralesEmpresa$React.forwardRef\");\n$RefreshReg$(_c4, \"GeneralesEmpresa\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/GeneralesEmpresa.js"],"names":["React","useState","PropTypes","useTranslation","Row","Col","Card","CardBody","Button","Label","AvForm","AvField","AvGroup","ApiServicesCommon","CoreServices","Select","Switch","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","GeneralesEmpresa","forwardRef","props","ref","t","i18n","paises","setPaises","paisesSelected","setPaisesSelected","undefined","codigoPais","setCodigoPais","switch1","setswitch1","switch2","setswitch2","provincias","setProvincias","provinciasSelected","setProvinciasSelected","codigoProvincia","setCodigoProvincia","distrito","setDistrito","distritoSelected","setDistritoSelected","codigoDistrito","setCodigoDistrito","corregimiento","setCorregimiento","corregimientoSelected","setCorregimientoSelected","codigoCorregimiento","setCodigoCorregimiento","clienteSostenibleSelect","setclienteSostenibleSelect","listaExclusionSelect","setlistaExclusionSelect","sectorSelect","setsectorSelect","ciudad","setCiudad","ciudadSelected","setCiudadSelected","codigoCiudad","setCodigoCiudad","dataReturn","setDataReturn","datosEmpresa","sectorList","setSectorList","subsectorList","setSubsectorList","formValid","setFormValid","SectorEconomico","setSectorEconomico","codigoSector","setcodigoSector","label","value","campoRequeridoSector","setcampoRequeridoSector","campoRequeridoSostenible","setcampoRequeridoSostenible","campoRequeridoExclusion","setcampoRequeridoExclusion","listaExclusion","clienteSostenible","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","cargarPaises","cargarSectorEconomico","defaultVal","length","province","find","x","code","district","township","city","sector","err","api","getSectorEconomicoCatalogo","then","response","json","i","Records","push","optionGroup1","options","changeAll","e","tipo","country","name","referencePoint","target","residency","houseNumber","phoneNumber","Number","mobileNumber","workNumber","email","subSector","selectedOptions","innerHTML","exclusion","sustainable","apto","cargarProvincias","cargarDistrito","cargarCorregimiento","cargarCiudad","getPaisesCatalogo","pais","getProvinciasCatalogo","provincia","getDistritoCatalogo","getCorregimientoCatalogo","getCiudadCatalogo","console","log","changePais","event","changeProvincia","changeDistrito","townshipIdentification","changeCorregimiento","changeCiudad","handleChange","handleSubmit","errors","values","preventDefault","loadInitialData","getSectorList","data","catch","error","getSubSectorList","required","errorMessage","number","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { CoreServices } from \"../../../../../services\";\r\nimport Select from \"react-select\";\r\nimport Switch from \"react-switch\";\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\nconst GeneralesEmpresa = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [paises, setPaises] = useState([]);\r\n  const [paisesSelected, setPaisesSelected] = useState(undefined);\r\n  const [codigoPais, setCodigoPais] = useState(null);\r\n  const [switch1, setswitch1] = useState(false);\r\n  const [switch2, setswitch2] = useState(false);\r\n  const [provincias, setProvincias] = useState([]);\r\n  const [provinciasSelected, setProvinciasSelected] = useState(undefined);\r\n  const [codigoProvincia, setCodigoProvincia] = useState(null);\r\n\r\n  const [distrito, setDistrito] = useState([]);\r\n  const [distritoSelected, setDistritoSelected] = useState(undefined);\r\n  const [codigoDistrito, setCodigoDistrito] = useState(null);\r\n\r\n  const [corregimiento, setCorregimiento] = useState([]);\r\n  const [corregimientoSelected, setCorregimientoSelected] = useState(undefined);\r\n  const [codigoCorregimiento, setCodigoCorregimiento] = useState(null);\r\n  const [clienteSostenibleSelect, setclienteSostenibleSelect] = useState(undefined);\r\n  const [listaExclusionSelect, setlistaExclusionSelect] = useState(undefined);\r\n  const [sectorSelect, setsectorSelect] = useState(undefined);\r\n\r\n  const [ciudad, setCiudad] = useState([]);\r\n  const [ciudadSelected, setCiudadSelected] = useState(undefined);\r\n  const [codigoCiudad, setCodigoCiudad] = useState(null);\r\n\r\n  const [dataReturn, setDataReturn] = useState(props.datosEmpresa);\r\n  const [sectorList, setSectorList] = useState([]);\r\n  const [subsectorList, setSubsectorList] = useState([]);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [SectorEconomico, setSectorEconomico] = useState([]);\r\n  const [codigoSector, setcodigoSector] = useState({ label: \"\", value: \"\" });\r\n  const [campoRequeridoSector, setcampoRequeridoSector] = useState(false);\r\n  const [campoRequeridoSostenible, setcampoRequeridoSostenible] = useState(false);\r\n  const [campoRequeridoExclusion, setcampoRequeridoExclusion] = useState(false);\r\n  const listaExclusion = [{ label: \"No\", value: 1 }, { label: \"Si\", value: 2 }]\r\n  const clienteSostenible = [{ label: \"No\", value: 1 }, { label: \"Si\", value: 2 }]\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmGeneralesEmpresa');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    cargarPaises();\r\n    cargarSectorEconomico();\r\n  }, [props]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    try {\r\n      var defaultVal = null;\r\n      // if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\r\n      //   defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\r\n      //   if (defaultVal !== undefined) {\r\n      //     setPaisesSelected(defaultVal);\r\n      //   }\r\n      // }\r\n      if (provincias.length > 0 && props.datosEmpresa.province !== null && provinciasSelected === undefined) {\r\n        defaultVal = provincias.find(x => x.value === props.datosEmpresa.province.code);\r\n        if (defaultVal !== undefined) {\r\n          setProvinciasSelected(defaultVal);\r\n        }\r\n      }\r\n      if (distrito.length > 0 && props.datosEmpresa.district !== null && distritoSelected === undefined) {\r\n        defaultVal = distrito.find(x => x.value === props.datosEmpresa.district.code);\r\n        if (defaultVal !== undefined) {\r\n          setDistritoSelected(defaultVal);\r\n        }\r\n      }\r\n      if (corregimiento.length > 0 && props.datosEmpresa.township !== null && corregimientoSelected === undefined) {\r\n        defaultVal = corregimiento.find(x => x.value === props.datosEmpresa.township.code);\r\n        if (defaultVal !== undefined) {\r\n          setCorregimientoSelected(defaultVal);\r\n        }\r\n      }\r\n      if (ciudad.length > 0 && props.datosEmpresa.city !== null && ciudadSelected === undefined) {\r\n        defaultVal = ciudad.find(x => x.value === props.datosEmpresa.city.code);\r\n        if (defaultVal !== undefined) {\r\n          setCiudadSelected(defaultVal);\r\n        }\r\n      }\r\n      if (SectorEconomico.length > 0 && props.datosEmpresa.sector !== null && sectorSelect === undefined) {\r\n        defaultVal = SectorEconomico.find(x => x.value === props.datosEmpresa.sector.code);\r\n        if (defaultVal !== undefined) {\r\n          setsectorSelect(defaultVal);\r\n        }\r\n      }\r\n      // if (clienteSostenible.length > 0 && props.datosEmpresa.sustainable !== null && clienteSostenibleSelect === undefined) {\r\n      //     defaultVal = props.datosEmpresa.sustainable?2:1;\r\n      //     setclienteSostenibleSelect(props.datosEmpresa.sustainable?2:1);\r\n      // }\r\n      // if (listaExclusion.length > 0 && props.datosEmpresa.exclusion !== null && listaExclusionSelect === undefined) {\r\n      //     defaultVal = props.datosEmpresa.exclusion?2:1;\r\n      //     setlistaExclusionSelect(props.datosEmpresa.exclusion?2:1);\r\n      //     setclienteSostenibleSelect(props.datosEmpresa.sustainable?2:1);\r\n      // }\r\n    }\r\n    catch (err) { }\r\n  }, [paises]);\r\n\r\n  ///////////////////////////////////////////////\r\n\r\n\r\n  function cargarSectorEconomico() {\r\n    const api = new CoreServices();\r\n    api.getSectorEconomicoCatalogo().then(response => {\r\n      if(response === null){ return;}\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      const optionGroup1 = [\r\n        {\r\n          label: t(\"Selectasector\"),\r\n          options: json,\r\n        },\r\n\r\n      ];\r\n      setSectorEconomico(json);\r\n    })\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"countryIdentification\") {\r\n      dataReturn.country.name = e.label;\r\n      dataReturn.country.code = e.value;\r\n    }\r\n    if (tipo == \"provinceIdentification\") {\r\n      dataReturn.province.name = e.label;\r\n      dataReturn.province.code = e.value;\r\n    }\r\n    if (tipo == \"districtIdentification\") {\r\n      dataReturn.district.name = e.label;\r\n      dataReturn.district.code = e.value;\r\n    }\r\n    if (tipo == \"townshipIdentification\") {\r\n      dataReturn.township.name = e.label;\r\n      dataReturn.township.code = e.value;\r\n    }\r\n    if (tipo == \"cityIdentification\") {\r\n      dataReturn.city.name = e.label;\r\n      dataReturn.city.code = e.value;\r\n    }\r\n    if (tipo == \"referencePoint\") {\r\n      dataReturn.referencePoint = e.target.value;\r\n    }\r\n    if (tipo == \"residency\") {\r\n      dataReturn.residency = e.target.value;\r\n    }\r\n    if (tipo == \"houseNumber\") {\r\n      dataReturn.houseNumber = e.target.value;\r\n    }\r\n    if (tipo == \"phoneNumber\") {\r\n      dataReturn.phoneNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"mobileNumber\") {\r\n      dataReturn.mobileNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"workNumber\") {\r\n      dataReturn.workNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"email\") {\r\n      dataReturn.email = e.target.value;\r\n    }\r\n    if (tipo == \"sectorIdentification\") {\r\n      dataReturn.sector.name = e.label;\r\n      dataReturn.sector.code = e.value;\r\n    }\r\n    if (tipo == \"subSectorIdentification\") {\r\n      dataReturn.subSector.code = e.target.value;\r\n      dataReturn.subSector.name = e.target.selectedOptions[0].innerHTML;\r\n    }\r\n    if (tipo == \"exclusion\") {\r\n      dataReturn.exclusion = switch1;\r\n      setswitch1(!switch1);\r\n    }\r\n    if (tipo == \"sustainable\") {\r\n      dataReturn.sustainable = !switch2;\r\n      setswitch2(!switch2);\r\n    }\r\n    if (tipo == \"apto\") {\r\n      dataReturn.apto = e.target.value;\r\n    }\r\n    setDataReturn(dataReturn)\r\n\r\n  }\r\n\r\n  function cargarPaises() {\r\n    setDataReturn(props.datosEmpresa)\r\n    cargarProvincias(props.datosEmpresa.country.code);\r\n    cargarDistrito(props.datosEmpresa.province.code);\r\n    cargarCorregimiento(props.datosEmpresa.district.code);\r\n    cargarCiudad(props.datosEmpresa.township.code);\r\n    setswitch1(props.datosEmpresa.exclusion);\r\n    setswitch2(props.datosEmpresa.sustainable);\r\n    const api = new CoreServices();\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectCountry\"),\r\n            options: json,\r\n          },\r\n\r\n        ];*/\r\n        setPaises(json);\r\n        try {\r\n          var defaultVal = null;\r\n          if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\r\n            defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\r\n            if (defaultVal !== undefined) {\r\n              setPaisesSelected(defaultVal);\r\n            }\r\n          }\r\n        }\r\n        catch (err) { }\r\n      });\r\n  }\r\n\r\n  function cargarProvincias(pais) {\r\n    const api = new CoreServices();\r\n    api.getProvinciasCatalogo(pais)\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectProvince\"),\r\n            options: json,\r\n          },\r\n\r\n        ];*/\r\n        setProvincias(json);\r\n        // setProvinciasSelected(undefined);\r\n      });\r\n  }\r\n\r\n  function cargarDistrito(provincia) {\r\n    const api = new CoreServices();\r\n    api.getDistritoCatalogo(provincia)\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n        \r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectDistrict\"),\r\n            options: json,\r\n          },\r\n        ];*/\r\n        setDistrito(json);\r\n        // setDistritoSelected(undefined);\r\n      });\r\n  }\r\n\r\n  function cargarCorregimiento(distrito) {\r\n    const api = new CoreServices();\r\n    api.getCorregimientoCatalogo(distrito)\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectTownship\"),\r\n            options: json,\r\n          },\r\n\r\n        ];*/\r\n        setCorregimiento(json);\r\n        // setCorregimientoSelected(undefined);\r\n      });\r\n  }\r\n\r\n  function cargarCiudad(provincia) {\r\n    const api = new CoreServices();\r\n    api.getCiudadCatalogo(provincia)\r\n      .then(response => {\r\n        if(response === null){ return;}\r\n\r\n        console.log(response);\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        /*const optionGroup1 = [\r\n          {\r\n            label: t(\"SelectCity\"),\r\n            options: json,\r\n          },\r\n\r\n        ];*/\r\n        setCiudad(json);\r\n      });\r\n  }\r\n\r\n  function changePais(event) {\r\n    setDistrito([]);\r\n    setCorregimiento([]);\r\n    setCiudad([]);\r\n    setProvincias([]);\r\n    setCodigoPais(event.value);\r\n    cargarProvincias(event.value);\r\n    changeAll(event, \"countryIdentification\")\r\n    dataReturn.province = { code: \"\", name: \"\" };\r\n    dataReturn.district = { code: \"\", name: \"\" };\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n    dataReturn.city = { code: \"\", name: \"\" };\r\n  }\r\n\r\n  function changeProvincia(event) {\r\n    setCorregimiento([]);\r\n    setDistrito([]);\r\n    setCiudad([]);\r\n    cargarCiudad(event.value);\r\n    setCodigoProvincia(event.value);\r\n    cargarDistrito(event.value);\r\n    changeAll(event, \"provinceIdentification\")\r\n    dataReturn.district = { code: \"\", name: \"\" };\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n    dataReturn.city = { code: \"\", name: \"\" };\r\n  }\r\n\r\n  function changeDistrito(event) {\r\n    setCorregimiento([]);\r\n    setCodigoDistrito(event.value);\r\n    cargarCorregimiento(event.value);\r\n    changeAll(event, \"districtIdentification\")\r\n\r\n    dataReturn.townshipIdentification = 0;\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n  }\r\n\r\n  function changeCorregimiento(event) {\r\n    setCodigoCorregimiento(event.value);\r\n    changeAll(event, \"townshipIdentification\")\r\n  }\r\n\r\n  function changeCiudad(event) {\r\n    setCodigoCiudad(event.value);\r\n    changeAll(event, \"cityIdentification\")\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setFormValid(false);\r\n  }\r\n\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {    \r\n    dataReturn.exclusion = switch1;\r\n    dataReturn.sustainable = switch2;\r\n    setDataReturn(dataReturn)\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n  }\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    loadInitialData();\r\n  }, []);\r\n\r\n  function loadInitialData() {\r\n    const api = new ApiServicesCommon()\r\n    api.getSectorList()\r\n      .then((data) => {\r\n        setSectorList(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching documents', error);\r\n      });\r\n\r\n    api.getSubSectorList()\r\n      .then((data) => {\r\n        setSubsectorList(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching documents', error);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"General of the Company\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n\r\n      <AvForm id=\"frmGeneralesEmpresa\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Country\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setPaisesSelected(paises.find(x => x.value === e.value))\r\n                  changePais(e);\r\n                }}\r\n                options={paises}\r\n                id=\"paises\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={paisesSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Province\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setProvinciasSelected(provincias.find(x => x.value === e.value))\r\n                  changeProvincia(e);\r\n                }}\r\n                options={provincias}\r\n                id=\"provincias\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={provinciasSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"District\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setDistritoSelected(distrito.find(x => x.value === e.value))\r\n                  changeDistrito(e);\r\n                }}\r\n                options={distrito}\r\n                id=\"distrito\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={distritoSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Township\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setCorregimiento(corregimiento.find(x => x.value === e.value))\r\n                  changeCorregimiento(e);\r\n                }}\r\n                options={corregimiento}\r\n                id=\"corregimiento\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={corregimientoSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"City\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setCiudad(ciudad.find(x => x.value === e.value))\r\n                  changeCiudad(e);\r\n                }}\r\n                options={ciudad}\r\n                id=\"ciudad\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={ciudadSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"referencePoint\">{t(\"Reference Point\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"referencePoint\") }}\r\n                className=\"form-control\"\r\n                name=\"referencePoint\"\r\n                type=\"text\"\r\n                id=\"referencePoint\"\r\n                value={props.datosEmpresa.referencePoint}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"buildingResidence\">{t(\"Building/Residence\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"residency\") }}\r\n                className=\"form-control\"\r\n                name=\"buildingResidence\"\r\n                type=\"text\"\r\n                id=\"buildingResidence\"\r\n                value={props.datosEmpresa.residency}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"apto\">{t(\"Apto\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"apto\") }}\r\n                className=\"form-control\"\r\n                name=\"apto\"\r\n                type=\"number\"\r\n                id=\"apto\"\r\n                value={props.datosEmpresa.apto}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumber\">{t(\"Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"phoneNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumber\"\r\n                type=\"number\"\r\n                id=\"phoneNumber\"\r\n                value={props.datosEmpresa.phoneNumber}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumberMobile\">{t(\"Mobile Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"mobileNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumberMobile\"\r\n                type=\"number\"\r\n                id=\"phoneNumberMobile\"\r\n                value={props.datosEmpresa.mobileNumber}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumberOffice\">{t(\"Office Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"workNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumberOffice\"\r\n                type=\"number\"\r\n                id=\"phoneNumberOffice\"\r\n                value={props.datosEmpresa.workNumber}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"email\") }}\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={props.datosEmpresa.email}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  email: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* \r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Sector\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setsectorSelect(SectorEconomico.find(x => x.value === e.value))\r\n                  changeAll(e, \"sectorIdentification\")\r\n                }}\r\n                options={SectorEconomico}\r\n                id=\"sectorIdentification\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={sectorSelect}\r\n              />\r\n              {campoRequeridoSector ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"SubSector\")}</Label>\r\n              <AvField type=\"select\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") }\r\n                }}\r\n                name=\"subsector\" className=\"form-control\" onChange={(e) => { changeAll(e, \"subSectorIdentification\") }} value={props.datosEmpresa.subSector.code}>\r\n                {subsectorList.map(item => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </AvField>\r\n            </div>\r\n          </Col>\r\n          */}\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Apply for Exclusion List\")}</Label>\r\n              <AvGroup check className=\"mb-3\">\r\n                <Switch name=\"theProjectInvolvePhysicalEconomicResettlement\"\r\n                  uncheckedIcon={<Offsymbol />}\r\n                  checkedIcon={<OnSymbol />}\r\n                  onColor=\"#007943\"\r\n                  className=\"form-label\"\r\n                  onChange={() => {\r\n                    changeAll(\"e\", \"exclusion\");\r\n                  }}\r\n                  checked={switch1}\r\n                />\r\n              </AvGroup>\r\n              {/* <Select\r\n                onChange={(e) => {\r\n                  setlistaExclusionSelect(listaExclusion.find(x => x.value === e.value)); changeAll(e, \"exclusion\")\r\n                }}\r\n                options={listaExclusion}\r\n                id=\"sustainableCustomer\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={props.datosEmpresa.exclusion}\r\n                value={listaExclusionSelect}\r\n              /> */}\r\n              {/* {campoRequeridoExclusion ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null} */}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"SustainableCustomer\")}</Label>\r\n              <AvGroup check className=\"mb-3\">\r\n                <Switch name=\"theProjectInvolvePhysicalEconomicResettlement\"\r\n                  uncheckedIcon={<Offsymbol />}\r\n                  checkedIcon={<OnSymbol />}\r\n                  onColor=\"#007943\"\r\n                  className=\"form-label\"\r\n                  onChange={() => {                    \r\n                    changeAll(\"e\", \"sustainable\")\r\n                  }}\r\n                  checked={switch2}\r\n                />\r\n              </AvGroup>\r\n              {/* <Select\r\n                onChange={(e) => { setclienteSostenibleSelect(clienteSostenible.find(x => x.value === e.value)); changeAll(e, \"sustainable\") }}\r\n                options={clienteSostenible}\r\n                id=\"sustainableCustomer\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={props.datosEmpresa.sustainable}\r\n                value={clienteSostenibleSelect}\r\n              /> */}\r\n              {/* {campoRequeridoSostenible ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null} */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n    </React.Fragment>);\r\n\r\n})\r\n\r\nGeneralesEmpresa.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\n//export default (withTranslation()(GeneralesEmpresa));\r\nexport default GeneralesEmpresa;"]},"metadata":{},"sourceType":"module"}