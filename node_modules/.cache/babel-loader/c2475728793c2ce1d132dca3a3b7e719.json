{"ast":null,"code":"import{Card,CardBody,Row,Col,Label}from\"reactstrap\";import{AvField,AvGroup,AvInput}from\"availity-reactstrap-validation\";import AttachmentList from'../../../../components/Attachments/AttachmentList';//i18n\nimport{useTranslation}from'react-i18next';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SimpleChekQuestion=function SimpleChekQuestion(props){return/*#__PURE__*/_jsxs(AvGroup,{check:true,className:\"my-2\",children:[/*#__PURE__*/_jsx(AvInput,{id:props.name,type:\"checkbox\",name:props.name}),/*#__PURE__*/_jsxs(Label,{check:true,htmlFor:props.name,children:[\" \",props.question]})]});};var ComposedQuestion=function ComposedQuestion(props){return/*#__PURE__*/_jsxs(AvGroup,{check:true,className:\"my-2\",children:[/*#__PURE__*/_jsx(AvInput,{id:props.name,type:\"checkbox\",name:props.name}),/*#__PURE__*/_jsxs(Label,{check:true,htmlFor:props.name,children:[\" \",props.question]}),/*#__PURE__*/_jsx(AvInput,{type:\"textarea\",name:props.name+'Comments'})]});};var FormAspectosAmbientales=function FormAspectosAmbientales(props){var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var simpleQuestions=[{name:'check1',question:'¿El proyecto está ubicado o es colindante a un área natural protegida?'},{name:'check2',question:'¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?'},{name:'check3',question:'¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?'},{name:'check4',question:'¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?'},{name:'check5',question:'¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?'}];var composedQuestions=[{name:'check6',question:'Require de licencia o permiso ambiental para el desarrollo del proyecto o actividad'},{name:'check7',question:'El proyecto se encuentra cerca de un área natural protegida'},{name:'check8',question:'El proyecto se encuentra en una zona de pueblos indígenas'},{name:'check9',question:'El proyecto cuenta con una persona que se ocupa en la GAS'},{name:'check10',question:'El proyecto cumple con toda la regulación laboral aplicable'}];return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title\",children:t(\"EnvironmentalAspects\")}),/*#__PURE__*/_jsx(\"p\",{className:\"card-title-desc\"}),/*#__PURE__*/_jsxs(Row,{className:\"my-2\",children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(AvGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"preclassification\",children:t(\"PreClassificationRisk\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"preclassification\",type:\"text\",id:\"preclassification\",value:\"Medio\",disabled:true})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(AvGroup,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"clasificacionRiesgoSostenible\",children:t(\"EnvironmentalRiskclassification\")}),/*#__PURE__*/_jsxs(AvField,{className:\"form-control\",name:\"clasificacionRiesgoSostenible\",type:\"select\",id:\"clasificacionRiesgoSostenible\",value:\"MedioAlto\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"Bajo\",children:\"Bajo\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medio\",children:\"Medio\"}),/*#__PURE__*/_jsx(\"option\",{value:\"MedioAlto\",children:\"Medio Alto\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Alto\",children:\"Alto\"})]})]})}),/*#__PURE__*/_jsx(Col,{md:\"12\",children:simpleQuestions.map(function(item){return/*#__PURE__*/_jsx(SimpleChekQuestion,{name:item.name,question:item.question},item.name);})})]}),/*#__PURE__*/_jsx(Row,{className:\"my-4\",children:/*#__PURE__*/_jsx(Col,{md:\"12\",children:/*#__PURE__*/_jsx(AttachmentList,{editMode:true,attachments:[]})})})]})});};export default FormAspectosAmbientales;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/16_RiesgoAmbiental/riesgoAmbiental/FormAspectosAmbientales.js"],"names":["Card","CardBody","Row","Col","Label","AvField","AvGroup","AvInput","AttachmentList","useTranslation","SimpleChekQuestion","props","name","question","ComposedQuestion","FormAspectosAmbientales","t","i18n","simpleQuestions","composedQuestions","map","item"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\"\r\n\r\nimport { AvField, AvGroup, AvInput } from \"availity-reactstrap-validation\"\r\nimport AttachmentList from '../../../../components/Attachments/AttachmentList';\r\n\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst SimpleChekQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={ props.name } type=\"checkbox\" name={ props.name } />\r\n      <Label check htmlFor={ props.name }> { props.question }</Label>\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nSimpleChekQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string\r\n};\r\n\r\nconst ComposedQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={ props.name } type=\"checkbox\" name={ props.name } />\r\n      <Label check htmlFor={ props.name }> { props.question }</Label>\r\n      <AvInput type=\"textarea\" name={ props.name + 'Comments' } />\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nComposedQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string\r\n};\r\n\r\nconst FormAspectosAmbientales = props => {\r\n\r\n  \r\n  const { t, i18n } = useTranslation();\r\n\r\n\r\n  const simpleQuestions = [\r\n    { name: 'check1', question: '¿El proyecto está ubicado o es colindante a un área natural protegida?' },\r\n    { name: 'check2', question: '¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?' },\r\n    { name: 'check3', question: '¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?' },\r\n    { name: 'check4', question: '¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?' },\r\n    { name: 'check5', question: '¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?' },\r\n  ];\r\n\r\n  const composedQuestions = [\r\n    { name: 'check6', question: 'Require de licencia o permiso ambiental para el desarrollo del proyecto o actividad' },\r\n    { name: 'check7', question: 'El proyecto se encuentra cerca de un área natural protegida' },\r\n    { name: 'check8', question: 'El proyecto se encuentra en una zona de pueblos indígenas' },\r\n    { name: 'check9', question: 'El proyecto cuenta con una persona que se ocupa en la GAS' },\r\n    { name: 'check10', question: 'El proyecto cumple con toda la regulación laboral aplicable' },\r\n  ];\r\n\r\n  return (\r\n    <Card>\r\n\r\n      <CardBody>\r\n        <h4 className=\"card-title\">{ t(\"EnvironmentalAspects\") }</h4>\r\n        <p className=\"card-title-desc\"></p>\r\n\r\n        <Row className=\"my-2\">\r\n          <Col md=\"4\">\r\n\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"preclassification\">{ t(\"PreClassificationRisk\") }</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"preclassification\"\r\n                type=\"text\"\r\n                id=\"preclassification\"\r\n                value=\"Medio\" disabled={true}></AvField>\r\n            </AvGroup>\r\n            </Col>\r\n            <Col md=\"4\">\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"clasificacionRiesgoSostenible\">{ t(\"EnvironmentalRiskclassification\") }</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"clasificacionRiesgoSostenible\"\r\n                type=\"select\"\r\n                id=\"clasificacionRiesgoSostenible\"\r\n                value=\"MedioAlto\">\r\n                <option value=\"Bajo\">Bajo</option>\r\n                <option value=\"Medio\">Medio</option>\r\n                <option value=\"MedioAlto\">Medio Alto</option>\r\n                <option value=\"Alto\">Alto</option>\r\n              </AvField>\r\n            </AvGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n            \r\n            { simpleQuestions.map(item => (\r\n                <SimpleChekQuestion key={ item.name } name={ item.name } question={ item.question } />\r\n              ))\r\n            }\r\n\r\n{/*\r\n            { composedQuestions.map(item => (\r\n              <ComposedQuestion key={ item.name } name={ item.name } question={ item.question } />\r\n            ))}\r\n */}\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n        <Row className=\"my-4\">\r\n          <Col md=\"12\">\r\n            <AttachmentList editMode={ true } attachments={[]} />\r\n          </Col>\r\n        </Row>\r\n\r\n      </CardBody>\r\n\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nFormAspectosAmbientales.propTypes = {\r\n};\r\n\r\nexport default FormAspectosAmbientales;\r\n"]},"metadata":{},"sourceType":"module"}