{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport moment from \"moment\";\nimport { Card, CardBody, CardHeader, Row, Col, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\nimport MaskSoaint from \"../../../../../api/plugins_soaint/maskNumber\";\nimport { BackendServices, CoreServices } from '../../../../../services';\nimport * as url from \"../../../../../helpers/url_helper\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DatosGenerales = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmDatosGenerales');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn2\n  }));\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const history = useHistory();\n  const [locationData, setLocationData] = useState(location.data);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\n  const [banca, setBanca] = useState([]);\n  const [bancaSelected, setBancaSelected] = useState(undefined);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\n  const [bancaDate, setDataBanca] = useState([]);\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\n  const [dataReturn, setDataReturn] = useState({\n    codigoTipoPersona: null,\n    codigoTipoIdentificacion: null,\n    numeroCliente: null,\n    primerNombre: null,\n    segundoNombre: null,\n    primerApellido: null,\n    segundoApellido: null,\n    numeroIdentificacion: null,\n    transactId: 0,\n    economicGroup: {\n      code: \"\",\n      name: \"\"\n    },\n    economicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    subeconomicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    bank: {\n      code: \"\",\n      name: \"\"\n    }\n  });\n  const [dataReturn2, setDataReturn2] = useState();\n  const [formValid, setFormValid] = useState(false);\n  const [cambio, setCambio] = useState(2);\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\n  const [dataDeudores, setdataDeudores] = useState(null);\n  const [VariableDisabled, setVariableDisabled] = useState(false);\n  const [VariableDisabled2, setVariableDisabled2] = useState(false);\n  const [numberExpresion, setnumberExpresion] = useState(0);\n  const [isActiveLoading, setIsActiveLoading] = useState(false); //loading de la pagina\n\n  const [mainDebtor, setmainDebtor] = useState(null); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    let dataSession;\n\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    setIsActiveLoading(true); // Read Api Service data      \n\n    loadMainDebtor(dataSession.transactionId);\n    loadData(dataSession);\n    loadInitialData(dataSession);\n    loadListGroupEconomic();\n    loadBank();\n    loadActivityEconomic();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n\n    try {\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n        if (defaultVal !== undefined) {\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\n\n        if (defaultVal !== undefined) {\n          setVariableDisabled(true);\n          setGruposEconomicosSelected(defaultVal);\n        } else {\n          defaultVal = gruposEconomicos.find(x => x.label === dataReturn.economicGroup.name);\n\n          if (defaultVal !== undefined) {\n            setGruposEconomicosSelected(defaultVal);\n\n            if (VariableDisabled2) {\n              setVariableDisabled(true);\n            }\n          }\n        }\n      }\n\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\n\n        if (defaultVal !== undefined) {\n          setBancaSelected(defaultVal);\n        }\n      }\n\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setActividadEmpresaSelected(defaultVal);\n        }\n      }\n\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setSubActividadEmpresaSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [cambio]);\n  React.useEffect(() => {\n    try {\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\n        loadClientSelectedData(props.selectedClient);\n      }\n    } catch (err) {}\n  }, [props.selectedClient]);\n\n  function loadMainDebtor(transactionId) {\n    const backendServices = new BackendServices();\n    backendServices.consultPrincipalDebtor(transactionId).then(resp => {\n      console.log(resp);\n      setmainDebtor(resp);\n    });\n  } ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\n  // cargar actividad economica\n\n\n  function loadActivityEconomic() {\n    const api = new CoreServices(); // getActividadEconomicaCatalogo\n\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setActividadEmpresa(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarSubActividadEconomica\n\n\n  function loadSubActivityEconomic(codActividad) {\n    const api = new CoreServices(); // getSubActividadEconomicaCatalogo\n\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setSubActividadEmpresa(json);\n\n      if (dataReturn.subeconomicActivity !== null) {\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\n      } else {\n        dataReturn.subeconomicActivity = {\n          code: json[0].value,\n          name: json[0].label\n        };\n        setSubActividadEmpresaSelected(json[0]);\n      }\n\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarListaGrupoEconomico\n\n\n  function loadListGroupEconomic() {\n    const api = new CoreServices(); // getGrupoEconomicoCatalogo\n\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        if (response.Records[i][\"Code\"] == \"0003\") {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        } else {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        }\n      }\n\n      setGruposEconomicos(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarBancas\n\n\n  function loadBank() {\n    const api = new CoreServices();\n    api.getBancaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setBanca(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  } // consultarDatos\n\n\n  async function loadData(locationData) {\n    const api = new CoreServices();\n    const apiBack = new BackendServices(); //consultarDeudorPrincipal\n\n    await apiBack.consultPrincipalDebtor(locationData.transactionId).then(async resp => {\n      dataReturn.numeroCliente = resp.customerNumberT24;\n      dataReturn.primerNombre = resp.name;\n      dataReturn.segundoNombre = resp.name2;\n      dataReturn.primerApellido = resp.lastName;\n      dataReturn.segundoApellido = resp.lastName2;\n      dataReturn.numeroIdentificacion = resp.clientDocId;\n      dataReturn.nuevoDato = \"\";\n      setDataReturn(dataReturn);\n      await apiBack.consultGeneralDataIGR(locationData.transactionId).then(async resp => {\n        if (resp.statusService.statusCode == \"204\") {\n          var _locationData$transac;\n\n          await apiBack.consultPrincipalDebtor((_locationData$transac = locationData === null || locationData === void 0 ? void 0 : locationData.transactionId) !== null && _locationData$transac !== void 0 ? _locationData$transac : 0).then(async response => {\n            if (response === null) {\n              return;\n            }\n\n            console.log(response);\n            await api.getPartiesInformationExtra(response.typePerson, response.customerNumberT24).then(async response2 => {\n              console.log(response2);\n              await api.getEconomicGroup(response.customerNumberT24).then(async resp2 => {\n                var _resp$economicGroup$c, _resp$economicGroup, _response2$activity$E, _response2$activity, _resp$economicActivit, _resp$economicActivit2, _resp$subeconomicActi, _resp$subeconomicActi2, _resp$subeconomicActi3, _resp$subeconomicActi4, _resp$bank$code, _resp$bank, _resp$bank$name, _resp$bank2, _response2$activity$E2, _response2$activity2;\n\n                console.log(resp2); // return\n\n                setVariableDisabled2(true);\n                dataReturn.codigoTipoIdentificacion = resp.identificationType;\n                dataReturn.transactId = locationData.transactionId;\n                dataReturn.economicGroup.code = (_resp$economicGroup$c = (_resp$economicGroup = resp.economicGroup) === null || _resp$economicGroup === void 0 ? void 0 : _resp$economicGroup.code) !== null && _resp$economicGroup$c !== void 0 ? _resp$economicGroup$c : \"\";\n                dataReturn.economicGroup.name = resp2;\n                dataReturn.economicActivity.code = (_response2$activity$E = response2 === null || response2 === void 0 ? void 0 : (_response2$activity = response2.activity) === null || _response2$activity === void 0 ? void 0 : _response2$activity.EconomicActivity) !== null && _response2$activity$E !== void 0 ? _response2$activity$E : \"\";\n                dataReturn.economicActivity.name = (_resp$economicActivit = resp === null || resp === void 0 ? void 0 : (_resp$economicActivit2 = resp.economicActivity) === null || _resp$economicActivit2 === void 0 ? void 0 : _resp$economicActivit2.name) !== null && _resp$economicActivit !== void 0 ? _resp$economicActivit : \"\";\n                dataReturn.subeconomicActivity.code = (_resp$subeconomicActi = (_resp$subeconomicActi2 = resp.subeconomicActivity) === null || _resp$subeconomicActi2 === void 0 ? void 0 : _resp$subeconomicActi2.code) !== null && _resp$subeconomicActi !== void 0 ? _resp$subeconomicActi : \"\";\n                dataReturn.subeconomicActivity.name = (_resp$subeconomicActi3 = (_resp$subeconomicActi4 = resp.subeconomicActivity) === null || _resp$subeconomicActi4 === void 0 ? void 0 : _resp$subeconomicActi4.name) !== null && _resp$subeconomicActi3 !== void 0 ? _resp$subeconomicActi3 : \"\";\n                dataReturn.bank.code = (_resp$bank$code = (_resp$bank = resp.bank) === null || _resp$bank === void 0 ? void 0 : _resp$bank.code) !== null && _resp$bank$code !== void 0 ? _resp$bank$code : \"\";\n                dataReturn.bank.name = (_resp$bank$name = (_resp$bank2 = resp.bank) === null || _resp$bank2 === void 0 ? void 0 : _resp$bank2.name) !== null && _resp$bank$name !== void 0 ? _resp$bank$name : \"\";\n                loadSubActivityEconomic((_response2$activity$E2 = response2 === null || response2 === void 0 ? void 0 : (_response2$activity2 = response2.activity) === null || _response2$activity2 === void 0 ? void 0 : _response2$activity2.EconomicActivity) !== null && _response2$activity$E2 !== void 0 ? _response2$activity$E2 : \"\");\n                setDataReturn(dataReturn);\n                setCambio(null);\n                setCambio(5);\n                setIsActiveLoading(false);\n                return;\n              });\n            });\n          });\n        } else {\n          var _resp$economicGroup$c2, _resp$economicGroup2, _resp$economicGroup$n, _resp$economicGroup3, _resp$economicActivit3, _resp$economicActivit4, _resp$economicActivit5, _resp$economicActivit6, _resp$subeconomicActi5, _resp$subeconomicActi6, _resp$subeconomicActi7, _resp$subeconomicActi8, _resp$bank$code2, _resp$bank3, _resp$bank$name2, _resp$bank4, _resp$economicActivit7, _resp$economicActivit8;\n\n          setIsActiveLoading(false);\n          dataReturn.codigoTipoIdentificacion = resp.identificationType;\n          dataReturn.transactId = locationData.transactionId;\n          dataReturn.economicGroup.code = (_resp$economicGroup$c2 = resp === null || resp === void 0 ? void 0 : (_resp$economicGroup2 = resp.economicGroup) === null || _resp$economicGroup2 === void 0 ? void 0 : _resp$economicGroup2.code) !== null && _resp$economicGroup$c2 !== void 0 ? _resp$economicGroup$c2 : \"\";\n          dataReturn.economicGroup.name = (_resp$economicGroup$n = resp === null || resp === void 0 ? void 0 : (_resp$economicGroup3 = resp.economicGroup) === null || _resp$economicGroup3 === void 0 ? void 0 : _resp$economicGroup3.name) !== null && _resp$economicGroup$n !== void 0 ? _resp$economicGroup$n : \"\";\n          dataReturn.economicActivity.code = (_resp$economicActivit3 = resp === null || resp === void 0 ? void 0 : (_resp$economicActivit4 = resp.economicActivity) === null || _resp$economicActivit4 === void 0 ? void 0 : _resp$economicActivit4.code) !== null && _resp$economicActivit3 !== void 0 ? _resp$economicActivit3 : \"\";\n          dataReturn.economicActivity.name = (_resp$economicActivit5 = resp === null || resp === void 0 ? void 0 : (_resp$economicActivit6 = resp.economicActivity) === null || _resp$economicActivit6 === void 0 ? void 0 : _resp$economicActivit6.name) !== null && _resp$economicActivit5 !== void 0 ? _resp$economicActivit5 : \"\";\n          dataReturn.subeconomicActivity.code = (_resp$subeconomicActi5 = resp === null || resp === void 0 ? void 0 : (_resp$subeconomicActi6 = resp.subeconomicActivity) === null || _resp$subeconomicActi6 === void 0 ? void 0 : _resp$subeconomicActi6.code) !== null && _resp$subeconomicActi5 !== void 0 ? _resp$subeconomicActi5 : \"\";\n          dataReturn.subeconomicActivity.name = (_resp$subeconomicActi7 = resp === null || resp === void 0 ? void 0 : (_resp$subeconomicActi8 = resp.subeconomicActivity) === null || _resp$subeconomicActi8 === void 0 ? void 0 : _resp$subeconomicActi8.name) !== null && _resp$subeconomicActi7 !== void 0 ? _resp$subeconomicActi7 : \"\";\n          dataReturn.bank.code = (_resp$bank$code2 = resp === null || resp === void 0 ? void 0 : (_resp$bank3 = resp.bank) === null || _resp$bank3 === void 0 ? void 0 : _resp$bank3.code) !== null && _resp$bank$code2 !== void 0 ? _resp$bank$code2 : \"\";\n          dataReturn.bank.name = (_resp$bank$name2 = resp === null || resp === void 0 ? void 0 : (_resp$bank4 = resp.bank) === null || _resp$bank4 === void 0 ? void 0 : _resp$bank4.name) !== null && _resp$bank$name2 !== void 0 ? _resp$bank$name2 : \"\";\n          loadSubActivityEconomic((_resp$economicActivit7 = resp === null || resp === void 0 ? void 0 : (_resp$economicActivit8 = resp.economicActivity) === null || _resp$economicActivit8 === void 0 ? void 0 : _resp$economicActivit8.code) !== null && _resp$economicActivit7 !== void 0 ? _resp$economicActivit7 : \"\");\n          setDataReturn(dataReturn);\n          setCambio(null);\n          setCambio(5);\n        }\n      }).catch(error => {});\n    }); // consultarDatosGeneralesIGR\n  } // guardarDatosGenerales\n\n\n  function saveDataGeneral() {\n    const apiBack = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Actualizamos los datos del cliente                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setDataReturn2(dataReturn);\n    setDataReturn(dataReturn); // saveDataGeneral();\n\n    setFormValid(true);\n  }\n\n  function loadInitialData(locationData) {\n    const apiServiceBackend = new ApiServiceBackend(); // consultarCatalogoTipoIdentificacion\n\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setIdentificationTypeList(json);\n      }\n    }); // consultarCatalogoTipoPersonaDescripcion\n\n    apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(\"\").then(resp2 => {\n      // consultarDeudores\n      apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\n        if (resp.length > 0) {\n          setdataDeudores(resp.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"PersonType\"),\n              children: resp2.find(x => x.code === Number(data.typePerson)).label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"FullName\"),\n              children: Number(data.typePerson) === 2 ? data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"IdentificationType\"),\n              children: data.idType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"IdentificationNumber\"),\n              children: data.clientDocId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-label\": t(\"Customer ID\"),\n              children: data.customerNumberT24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)));\n        } else {\n          setdataDeudores( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'center'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, 12346, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this));\n        }\n      }).catch(error => {});\n    });\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"tipoPersona\") {\n      dataReturn.codigoTipoPersona = e.value;\n    }\n\n    if (tipo == \"Tipo\") {\n      dataReturn.codigoTipoIdentificacion = e.value;\n    }\n\n    if (tipo == \"codigoGrupo\") {\n      dataReturn.economicGroup.code = e.value;\n      dataReturn.economicGroup.name = e.label;\n      setCodigoGrupo(e.value);\n      setCNombreGrupo(e.label);\n    }\n\n    if (tipo == \"codigoBanca\") {\n      dataReturn.bank.code = e.value;\n      dataReturn.bank.name = e.label;\n      setDataBanca(e);\n    }\n\n    if (tipo == \"numeroCliente\") {\n      dataReturn.numeroCliente = e.target.value;\n    }\n\n    if (tipo == \"primerNombre\") {\n      dataReturn.primerNombre = e.target.value;\n    }\n\n    if (tipo == \"segundoNombre\") {\n      dataReturn.segundoNombre = e.target.value;\n    }\n\n    if (tipo == \"primerApellido\") {\n      dataReturn.primerApellido = e.target.value;\n    }\n\n    if (tipo == \"segundoApellido\") {\n      dataReturn.segundoApellido = e.target.value;\n    }\n\n    if (tipo == \"numeroIdentificacion\") {\n      dataReturn.numeroIdentificacion = e.target.value;\n    }\n\n    if (tipo == \"actividadEconomica\") {\n      dataReturn.economicActivity.code = e.value;\n      dataReturn.economicActivity.name = e.label;\n      dataReturn.subeconomicActivity = null;\n      loadSubActivityEconomic(e.value);\n    }\n\n    if (tipo == \"subactividadEconomica\") {\n      dataReturn.subeconomicActivity.code = e.value;\n      dataReturn.subeconomicActivity.name = e.label;\n    }\n\n    setDataReturn(dataReturn);\n  } /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\n\n\n  function loadClientSelectedData(selectedClient) {\n    dataReturn.numeroCliente = selectedClient.id;\n    dataReturn.primerNombre = selectedClient.firstname;\n    dataReturn.segundoNombre = selectedClient.secondname;\n    dataReturn.primerApellido = selectedClient.lastname;\n    dataReturn.segundoApellido = selectedClient.secondlastname;\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\n    setDataReturn(dataReturn);\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n    if (defaultVal !== undefined) {\n      setIdentificationTypeSelected(defaultVal);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"Processinginformation\"),\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: t(\"General Data\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n        id: \"frmDatosGenerales\",\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: t(\"Economic Group\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value));\n                  changeAll(e, \"codigoGrupo\");\n                },\n                isDisabled: VariableDisabled,\n                options: gruposEconomicos,\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"SelectGroup\"),\n                value: gruposEconomicosSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this), campoRequeridoGrupo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: t(\"Banking\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setBancaSelected(banca.find(x => x.value === e.value));\n                  changeAll(e, \"codigoBanca\");\n                },\n                options: banca,\n                value: bancaSelected //defaultValue={props.datosGenerales.bank.code}\n                ,\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"SelectBanking\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), campoRequeridoBanca ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: t(\"Economic Activity\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value));\n                  changeAll(e, \"actividadEconomica\");\n                },\n                placeholder: t(\"Selectcompanyactivity\"),\n                options: actividadEmpresa,\n                classNamePrefix: \"select2-selection\",\n                value: actividadEmpresaSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this), campoRequeridoActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                children: [\"Sub\", t(\"Economic Activity\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value));\n                  changeAll(e, \"subactividadEconomica\");\n                },\n                placeholder: t(\"Selectcompanysubactivity\"),\n                options: subactividadEmpresa,\n                classNamePrefix: \"select2-selection\",\n                value: subactividadEmpresaSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this), campoRequeridoSubActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), mainDebtor != null ? null : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-sub-title\",\n        children: t(\"Debtors\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-striped table-hover styled-table table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"PersonType\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"FullName\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"IdentificationType\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"IdentificationNumber\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Customer ID\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataDeudores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}, \"ZBnB93tZu1ByjE5Kc00AXNluGuU=\", false, function () {\n  return [React.useImperativeHandle, useTranslation, useLocation, useHistory];\n}));\n_c2 = DatosGenerales;\nDatosGenerales.propTypes = {\n  onSubmit: PropTypes.func,\n  onOpenClientSelection: PropTypes.func\n};\nexport default DatosGenerales;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DatosGenerales$React.forwardRef\");\n$RefreshReg$(_c2, \"DatosGenerales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/DatosGenerales.js"],"names":["React","useState","withTranslation","PropTypes","useTranslation","Select","useLocation","useHistory","moment","Card","CardBody","CardHeader","Row","Col","Label","Table","AvForm","AvField","ApiServiceBackend","MaskSoaint","BackendServices","CoreServices","url","LoadingOverlay","DatosGenerales","forwardRef","props","ref","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn2","t","i18n","location","history","locationData","setLocationData","data","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","undefined","gruposEconomicos","setGruposEconomicos","gruposEconomicosSelected","setGruposEconomicosSelected","banca","setBanca","bancaSelected","setBancaSelected","actividadEmpresa","setActividadEmpresa","actividadEmpresaSelected","setActividadEmpresaSelected","subactividadEmpresa","setSubActividadEmpresa","subactividadEmpresaSelected","setSubActividadEmpresaSelected","bancaDate","setDataBanca","codigoGrupo","setCodigoGrupo","nombreGrupo","setCNombreGrupo","dataReturn","setDataReturn","codigoTipoPersona","codigoTipoIdentificacion","numeroCliente","primerNombre","segundoNombre","primerApellido","segundoApellido","numeroIdentificacion","transactId","economicGroup","code","name","economicActivity","subeconomicActivity","bank","setDataReturn2","setFormValid","cambio","setCambio","campoRequeridoGrupo","setcampoRequeridoGrupo","campoRequeridoActividad","setcampoRequeridoActividad","campoRequeridoSubActividad","setcampoRequeridoSubActividad","campoRequeridoBanca","setcampoRequeridoBanca","dataDeudores","setdataDeudores","VariableDisabled","setVariableDisabled","VariableDisabled2","setVariableDisabled2","numberExpresion","setnumberExpresion","isActiveLoading","setIsActiveLoading","mainDebtor","setmainDebtor","useEffect","dataSession","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadMainDebtor","loadData","loadInitialData","loadListGroupEconomic","loadBank","loadActivityEconomic","defaultVal","find","x","value","label","err","selectedClient","loadClientSelectedData","backendServices","consultPrincipalDebtor","then","resp","console","log","api","getActividadEconomicaCatalogo","response","json","i","Records","loadSubActivityEconomic","codActividad","getSubActividadEconomicaCatalogo","getGrupoEconomicoCatalogo","getBancaCatalogo","apiBack","customerNumberT24","name2","lastName","lastName2","clientDocId","nuevoDato","consultGeneralDataIGR","statusService","statusCode","getPartiesInformationExtra","typePerson","response2","getEconomicGroup","resp2","identificationType","activity","EconomicActivity","catch","error","saveDataGeneral","handleSubmit","event","errors","values","preventDefault","apiServiceBackend","consultarCatalogoTipoIdentificacion","consultarCatalogoTipoPersonaDescripcion","consultarDeudores","map","index","Number","idType","textAlign","changeAll","e","tipo","target","id","firstname","secondname","lastname","secondlastname","idtype","idnumber","partyType","propTypes","onSubmit","func","onOpenClientSelection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Card, CardBody, CardHeader,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\r\nimport MaskSoaint from \"../../../../../api/plugins_soaint/maskNumber\";\r\nimport { BackendServices, CoreServices } from '../../../../../services';\r\nimport * as url from \"../../../../../helpers/url_helper\"\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nconst DatosGenerales = React.forwardRef((props, ref) => {\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmDatosGenerales');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn2\r\n  }))\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const history = useHistory();\r\n\r\n  const [locationData, setLocationData] = useState(location.data);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\r\n  const [banca, setBanca] = useState([]);\r\n  const [bancaSelected, setBancaSelected] = useState(undefined);\r\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\r\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\r\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\r\n  const [bancaDate, setDataBanca] = useState([]);\r\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\r\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState({\r\n    codigoTipoPersona: null,\r\n    codigoTipoIdentificacion: null,\r\n    numeroCliente: null,\r\n    primerNombre: null,\r\n    segundoNombre: null,\r\n    primerApellido: null,\r\n    segundoApellido: null,\r\n    numeroIdentificacion: null,\r\n    transactId: 0,\r\n    economicGroup: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    economicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    subeconomicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    bank: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n  });\r\n  const [dataReturn2, setDataReturn2] = useState();\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [cambio, setCambio] = useState(2);\r\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\r\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\r\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\r\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\r\n  const [dataDeudores, setdataDeudores] = useState(null);\r\n  const [VariableDisabled, setVariableDisabled] = useState(false);\r\n  const [VariableDisabled2, setVariableDisabled2] = useState(false);\r\n  const [numberExpresion, setnumberExpresion] = useState(0);\r\n\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false); //loading de la pagina\r\n\r\n  const[mainDebtor,setmainDebtor] = useState(null)\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n\r\n    let dataSession;\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n    setIsActiveLoading(true)\r\n\r\n    // Read Api Service data      \r\n    loadMainDebtor(dataSession.transactionId);\r\n    loadData(dataSession);\r\n    loadInitialData(dataSession);\r\n    loadListGroupEconomic();\r\n    loadBank();\r\n    loadActivityEconomic()\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    try {\r\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\r\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n        if (defaultVal !== undefined) {\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\r\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\r\n        if (defaultVal !== undefined) {\r\n          setVariableDisabled(true)\r\n          setGruposEconomicosSelected(defaultVal);\r\n        } else {\r\n          defaultVal = gruposEconomicos.find(x => x.label === dataReturn.economicGroup.name);\r\n          if (defaultVal !== undefined) {\r\n            setGruposEconomicosSelected(defaultVal);\r\n            if (VariableDisabled2) {\r\n              setVariableDisabled(true)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\r\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\r\n        if (defaultVal !== undefined) {\r\n          setBancaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\r\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\r\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setSubActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [cambio]);\r\n  React.useEffect(() => {\r\n    try {\r\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\r\n        loadClientSelectedData(props.selectedClient);\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.selectedClient]);\r\n\r\n  function loadMainDebtor(transactionId){\r\n    const backendServices = new BackendServices();\r\n    backendServices.consultPrincipalDebtor(transactionId).then(resp => {\r\n      console.log(resp);\r\n      setmainDebtor(resp)\r\n    })\r\n    \r\n  }\r\n\r\n  ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\r\n  // cargar actividad economica\r\n  function loadActivityEconomic() {\r\n    const api = new CoreServices();\r\n    // getActividadEconomicaCatalogo\r\n    api.getActividadEconomicaCatalogo().then(response => {\r\n      if (response === null) { return; }\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      setActividadEmpresa(json);\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  // cargarSubActividadEconomica\r\n  function loadSubActivityEconomic(codActividad) {\r\n    const api = new CoreServices();\r\n    // getSubActividadEconomicaCatalogo\r\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\r\n      if (response === null) { return; }\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      setSubActividadEmpresa(json);\r\n      if (dataReturn.subeconomicActivity !== null) {\r\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\r\n      }\r\n      else {\r\n        dataReturn.subeconomicActivity = { code: json[0].value, name: json[0].label }\r\n        setSubActividadEmpresaSelected(json[0]);\r\n      }\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  // cargarListaGrupoEconomico\r\n  function loadListGroupEconomic() {\r\n    const api = new CoreServices();\r\n    // getGrupoEconomicoCatalogo\r\n    api.getGrupoEconomicoCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          if (response.Records[i][\"Code\"] == \"0003\") {\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n          } else {\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n          }\r\n        }\r\n        setGruposEconomicos(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  // cargarBancas\r\n  function loadBank() {\r\n    const api = new CoreServices();\r\n    api.getBancaCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        setBanca(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  // consultarDatos\r\n  async function loadData(locationData) {\r\n    const api = new CoreServices();\r\n    const apiBack = new BackendServices();\r\n    //consultarDeudorPrincipal\r\n    await apiBack.consultPrincipalDebtor(locationData.transactionId).then(async resp => {\r\n      dataReturn.numeroCliente = resp.customerNumberT24\r\n      dataReturn.primerNombre = resp.name\r\n      dataReturn.segundoNombre = resp.name2\r\n      dataReturn.primerApellido = resp.lastName\r\n      dataReturn.segundoApellido = resp.lastName2\r\n      dataReturn.numeroIdentificacion = resp.clientDocId\r\n      dataReturn.nuevoDato = \"\"\r\n      setDataReturn(dataReturn);\r\n      await apiBack.consultGeneralDataIGR(locationData.transactionId).then(async resp => {\r\n        if (resp.statusService.statusCode == \"204\") {\r\n          await apiBack.consultPrincipalDebtor(locationData?.transactionId ?? 0).then(async response => {\r\n            if (response === null) { return; }\r\n            console.log(response);\r\n            await api.getPartiesInformationExtra(response.typePerson, response.customerNumberT24).then(async response2 => {\r\n              console.log(response2);\r\n              await api.getEconomicGroup(response.customerNumberT24).then(async resp2 => {\r\n                console.log(resp2);\r\n                // return\r\n                setVariableDisabled2(true);\r\n                dataReturn.codigoTipoIdentificacion = resp.identificationType\r\n                dataReturn.transactId = locationData.transactionId;\r\n                dataReturn.economicGroup.code = resp.economicGroup?.code ?? \"\";\r\n                dataReturn.economicGroup.name = resp2;\r\n                dataReturn.economicActivity.code = response2?.activity?.EconomicActivity ?? \"\";\r\n                dataReturn.economicActivity.name = resp?.economicActivity?.name ?? \"\";\r\n                dataReturn.subeconomicActivity.code = resp.subeconomicActivity?.code ?? \"\";\r\n                dataReturn.subeconomicActivity.name = resp.subeconomicActivity?.name ?? \"\";\r\n                dataReturn.bank.code = resp.bank?.code ?? \"\";\r\n                dataReturn.bank.name = resp.bank?.name ?? \"\";\r\n                loadSubActivityEconomic(response2?.activity?.EconomicActivity ?? \"\")\r\n                setDataReturn(dataReturn);\r\n                setCambio(null);\r\n                setCambio(5);\r\n                setIsActiveLoading(false)\r\n                return\r\n              });\r\n            });\r\n          })\r\n        } else {\r\n          setIsActiveLoading(false)\r\n          dataReturn.codigoTipoIdentificacion = resp.identificationType\r\n          dataReturn.transactId = locationData.transactionId;\r\n          dataReturn.economicGroup.code = resp?.economicGroup?.code ?? \"\";\r\n          dataReturn.economicGroup.name = resp?.economicGroup?.name ?? \"\";\r\n          dataReturn.economicActivity.code = resp?.economicActivity?.code ?? \"\";\r\n          dataReturn.economicActivity.name = resp?.economicActivity?.name ?? \"\";\r\n          dataReturn.subeconomicActivity.code = resp?.subeconomicActivity?.code ?? \"\";\r\n          dataReturn.subeconomicActivity.name = resp?.subeconomicActivity?.name ?? \"\";\r\n          dataReturn.bank.code = resp?.bank?.code ?? \"\";\r\n          dataReturn.bank.name = resp?.bank?.name ?? \"\";\r\n          loadSubActivityEconomic(resp?.economicActivity?.code ?? \"\")\r\n          setDataReturn(dataReturn);\r\n          setCambio(null);\r\n          setCambio(5);\r\n        }\r\n      }).catch((error) => {\r\n      });\r\n    })\r\n    // consultarDatosGeneralesIGR\r\n  }\r\n  // guardarDatosGenerales\r\n  function saveDataGeneral() {\r\n    const apiBack = new BackendServices();\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Actualizamos los datos del cliente                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    \r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setDataReturn2(dataReturn)\r\n    setDataReturn(dataReturn)\r\n    // saveDataGeneral();\r\n    setFormValid(true);\r\n  }\r\n  function loadInitialData(locationData) {\r\n    const apiServiceBackend = new ApiServiceBackend();\r\n    // consultarCatalogoTipoIdentificacion\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n    // consultarCatalogoTipoPersonaDescripcion\r\n    apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(\"\").then(resp2 => {\r\n      // consultarDeudores\r\n      apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\r\n        if (resp.length > 0) {\r\n          setdataDeudores(resp.map((data, index) => (\r\n            <tr key={index}>\r\n              <td data-label={t(\"PersonType\")}>{resp2.find(x => x.code === Number(data.typePerson)).label}</td>\r\n              <td data-label={t(\"FullName\")}>{Number(data.typePerson) === 2 ? data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2}</td>\r\n              <td data-label={t(\"IdentificationType\")}>{data.idType}</td>\r\n              <td data-label={t(\"IdentificationNumber\")}>{data.clientDocId}</td>\r\n              <td data-label={t(\"Customer ID\")}>{data.customerNumberT24}</td>\r\n            </tr>)))\r\n        } else {\r\n          setdataDeudores(\r\n            <tr key={12346}>\r\n              <td colSpan=\"4\" style={{ textAlign: 'center' }}></td>\r\n            </tr>);\r\n        }\r\n\r\n      }).catch((error) => {\r\n\r\n      });\r\n    });\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"tipoPersona\") {\r\n      dataReturn.codigoTipoPersona = e.value\r\n    }\r\n    if (tipo == \"Tipo\") {\r\n      dataReturn.codigoTipoIdentificacion = e.value\r\n    }\r\n    if (tipo == \"codigoGrupo\") {\r\n      dataReturn.economicGroup.code = e.value;\r\n      dataReturn.economicGroup.name = e.label;\r\n      setCodigoGrupo(e.value)\r\n      setCNombreGrupo(e.label)\r\n    }\r\n    if (tipo == \"codigoBanca\") {\r\n      dataReturn.bank.code = e.value;\r\n      dataReturn.bank.name = e.label;\r\n      setDataBanca(e);\r\n    }\r\n    if (tipo == \"numeroCliente\") {\r\n      dataReturn.numeroCliente = e.target.value;\r\n    }\r\n    if (tipo == \"primerNombre\") {\r\n      dataReturn.primerNombre = e.target.value;\r\n    }\r\n    if (tipo == \"segundoNombre\") {\r\n      dataReturn.segundoNombre = e.target.value;\r\n    }\r\n    if (tipo == \"primerApellido\") {\r\n      dataReturn.primerApellido = e.target.value;\r\n    }\r\n    if (tipo == \"segundoApellido\") {\r\n      dataReturn.segundoApellido = e.target.value;\r\n    }\r\n    if (tipo == \"numeroIdentificacion\") {\r\n      dataReturn.numeroIdentificacion = e.target.value;\r\n    }\r\n    if (tipo == \"actividadEconomica\") {\r\n      dataReturn.economicActivity.code = e.value;\r\n      dataReturn.economicActivity.name = e.label;\r\n\r\n      dataReturn.subeconomicActivity = null;\r\n      loadSubActivityEconomic(e.value)\r\n    }\r\n    if (tipo == \"subactividadEconomica\") {\r\n      dataReturn.subeconomicActivity.code = e.value;\r\n      dataReturn.subeconomicActivity.name = e.label;\r\n    }\r\n    setDataReturn(dataReturn)\r\n\r\n  }\r\n\r\n  /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\r\n  function loadClientSelectedData(selectedClient) {\r\n    dataReturn.numeroCliente = selectedClient.id;\r\n    dataReturn.primerNombre = selectedClient.firstname;\r\n    dataReturn.segundoNombre = selectedClient.secondname;\r\n    dataReturn.primerApellido = selectedClient.lastname;\r\n    dataReturn.segundoApellido = selectedClient.secondlastname;\r\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\r\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\r\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\r\n    setDataReturn(dataReturn);\r\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n    if (defaultVal !== undefined) {\r\n      setIdentificationTypeSelected(defaultVal);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"Processinginformation\")}>\r\n\r\n        <h5 className=\"card-title\">{t(\"General Data\")}</h5>\r\n        <AvForm id=\"frmDatosGenerales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-4\">\r\n                <Label>{t(\"Economic Group\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => {\r\n                    setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value))\r\n                    changeAll(e, \"codigoGrupo\");\r\n                  }}\r\n                  isDisabled={VariableDisabled}\r\n                  options={gruposEconomicos}\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"SelectGroup\")}\r\n                  value={gruposEconomicosSelected}\r\n                />\r\n                {campoRequeridoGrupo ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-4\">\r\n                <Label>{t(\"Banking\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => {\r\n                    setBancaSelected(banca.find(x => x.value === e.value))\r\n                    changeAll(e, \"codigoBanca\");\r\n                  }}\r\n                  options={banca}\r\n                  value={bancaSelected}//defaultValue={props.datosGenerales.bank.code}\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"SelectBanking\")}\r\n                />\r\n                {campoRequeridoBanca ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-4\">\r\n                <Label>{t(\"Economic Activity\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => {\r\n                    setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value))\r\n                    changeAll(e, \"actividadEconomica\")\r\n                  }}\r\n                  placeholder={t(\"Selectcompanyactivity\")}\r\n                  options={actividadEmpresa}\r\n                  classNamePrefix=\"select2-selection\"\r\n                  value={actividadEmpresaSelected}\r\n                />\r\n                {campoRequeridoActividad ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <div className=\"mb-4\">\r\n                <Label>Sub{t(\"Economic Activity\")}</Label>\r\n                <Select noOptionsMessage={() => \"\"}\r\n                  onChange={(e) => {\r\n                    setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value))\r\n                    changeAll(e, \"subactividadEconomica\")\r\n                  }}\r\n                  placeholder={t(\"Selectcompanysubactivity\")}\r\n                  options={subactividadEmpresa}\r\n                  classNamePrefix=\"select2-selection\"\r\n                  value={subactividadEmpresaSelected}\r\n                />\r\n                {campoRequeridoSubActividad ?\r\n                  <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                  : null}\r\n              </div>\r\n            </Col>\r\n\r\n            {mainDebtor!=null? null:null}      \r\n\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"4\">\r\n              {/* <MaskSoaint setnumberExpresion={setnumberExpresion} numberExpresion={numberExpresion}/> */}\r\n            </Col>\r\n          </Row>\r\n        </AvForm>\r\n\r\n        <h5 className=\"card-sub-title\">{t(\"Debtors\")}</h5>\r\n        <Table className=\"table table-striped table-hover styled-table table\">\r\n          <thead>\r\n            <tr>\r\n              <th>{t(\"PersonType\")}</th>\r\n              <th>{t(\"FullName\")}</th>\r\n              <th>{t(\"IdentificationType\")}</th>\r\n              <th>{t(\"IdentificationNumber\")}</th>\r\n              <th>{t(\"Customer ID\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dataDeudores}\r\n          </tbody>\r\n        </Table>\r\n      </LoadingOverlay>\r\n\r\n\r\n    </>\r\n  )\r\n})\r\nDatosGenerales.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onOpenClientSelection: PropTypes.func,\r\n}\r\nexport default DatosGenerales;\r\n"]},"metadata":{},"sourceType":"module"}