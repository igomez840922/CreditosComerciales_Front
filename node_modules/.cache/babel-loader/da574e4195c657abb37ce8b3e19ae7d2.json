{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\GeneralSection.js\";\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from '../../helpers';\nimport { Row, Col, Label, Card, CardBody } from \"reactstrap\";\nimport { FormGroup } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GeneralSection = props => {\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  const {\n    proposal,\n    client,\n    economicGroup,\n    risk,\n    accountExecutive,\n    responsibleUnit\n  } = props.proposal;\n  const fields = [{\n    id: 'proposalId',\n    label: t(\"Procedure Number\"),\n    value: proposal.id\n  }, {\n    id: 'clientNumber',\n    label: t(\"Client Number\"),\n    value: client.number\n  }, {\n    id: 'revisionType',\n    label: t(\"Revision Type\"),\n    value: proposal.revisionType\n  }, {\n    id: 'preapproved',\n    label: t(\"Pre Approved\"),\n    value: proposal.preapproved ? c(\"Yes\") : c(\"No\")\n  }, {\n    id: 'economicGroupNumber',\n    label: t(\"Economic Group Number\"),\n    value: economicGroup.number\n  }, {\n    id: 'economicGroupName',\n    label: t(\"Economic Group Name\"),\n    value: economicGroup.name\n  }, {\n    id: 'countryClass',\n    label: t(\"Country Class\"),\n    value: risk.countryClass\n  }, {\n    id: 'companyActivity',\n    label: t(\"Company Activity\"),\n    value: economicGroup.business\n  }, {\n    id: 'riskAssesment',\n    label: t(\"Risk Assesment\"),\n    value: risk.classification\n  }, {\n    id: 'sibMinimumProvision',\n    label: t(\"SIB Minimum Provision\"),\n    value: proposal.minSib\n  }, {\n    id: 'relatedPart',\n    label: t(\"Related Part\"),\n    value: proposal.relatedPart ? c(\"Yes\") : c(\"No\")\n  }, {\n    id: 'approvalLevel',\n    label: t(\"Approval Level\"),\n    value: proposal.approvalLevel\n  }, {\n    id: 'accountExecutive',\n    label: t(\"Account Executive\"),\n    value: accountExecutive.name\n  }, {\n    id: 'responsibleUnit',\n    label: t(\"Responsible Unit\"),\n    value: responsibleUnit.name\n  }, {\n    id: 'countryRisk',\n    label: t(\"Country Risk\"),\n    value: risk.countryRisk\n  }, {\n    id: 'flowType',\n    label: t(\"Flow Type\"),\n    value: proposal.flowType\n  }, {\n    id: 'applicationDate',\n    label: t(\"Application Date\"),\n    value: proposal.applicationDate\n  }, {\n    id: 'lastApplicationDate',\n    label: t(\"Last Application Date\"),\n    value: proposal.lastApplicationDate\n  }, {\n    id: 'nextRevisionDate',\n    label: t(\"Next Revision Date\"),\n    value: proposal.nextRevisionDate\n  }, {\n    id: 'proposalExpirationDate',\n    label: t(\"Proposal Expiration Date\"),\n    value: proposal.expirationDate\n  }];\n  const fieldCols = fields.map(field => {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      md: field.cols || 3,\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          htmlFor: field.id,\n          children: field.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: field.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, field.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: t(\"General Data\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-title-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: fieldCols\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GeneralSection;\nGeneralSection.propTypes = {\n  proposal: PropTypes.object\n};\nexport default GeneralSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralSection\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/GeneralSection.js"],"names":["PropTypes","translationHelpers","Row","Col","Label","Card","CardBody","FormGroup","GeneralSection","props","t","c","proposal","client","economicGroup","risk","accountExecutive","responsibleUnit","fields","id","label","value","number","revisionType","preapproved","name","countryClass","business","classification","minSib","relatedPart","approvalLevel","countryRisk","flowType","applicationDate","lastApplicationDate","nextRevisionDate","expirationDate","fieldCols","map","field","cols","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { translationHelpers } from '../../helpers';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Card,\r\n  CardBody\r\n} from \"reactstrap\"\r\n\r\nimport { FormGroup } from '@material-ui/core';\r\n\r\nconst GeneralSection = (props) => {\r\n\r\n  const [t, c] = translationHelpers('commercial_credit', 'common');\r\n\r\n  const { proposal, client, economicGroup, risk, accountExecutive, responsibleUnit } = props.proposal;\r\n\r\n  const fields = [\r\n    { id: 'proposalId', label: t(\"Procedure Number\"), value: proposal.id },\r\n    { id: 'clientNumber', label: t(\"Client Number\"), value: client.number },\r\n    { id: 'revisionType', label: t(\"Revision Type\"), value: proposal.revisionType },\r\n    { id: 'preapproved', label: t(\"Pre Approved\"), value: proposal.preapproved ? c(\"Yes\") : c(\"No\") },\r\n    { id: 'economicGroupNumber', label: t(\"Economic Group Number\"), value: economicGroup.number },\r\n    { id: 'economicGroupName', label: t(\"Economic Group Name\"), value: economicGroup.name },\r\n    { id: 'countryClass', label: t(\"Country Class\"), value: risk.countryClass },\r\n    { id: 'companyActivity', label: t(\"Company Activity\"), value: economicGroup.business },\r\n    { id: 'riskAssesment', label: t(\"Risk Assesment\"), value: risk.classification },\r\n    { id: 'sibMinimumProvision', label: t(\"SIB Minimum Provision\"), value: proposal.minSib },\r\n    { id: 'relatedPart', label: t(\"Related Part\"), value: proposal.relatedPart ? c(\"Yes\") : c(\"No\") },\r\n    { id: 'approvalLevel', label: t(\"Approval Level\"), value: proposal.approvalLevel },\r\n    { id: 'accountExecutive', label: t(\"Account Executive\"), value: accountExecutive.name },\r\n    { id: 'responsibleUnit', label: t(\"Responsible Unit\"), value: responsibleUnit.name },\r\n    { id: 'countryRisk', label: t(\"Country Risk\"), value: risk.countryRisk },\r\n    { id: 'flowType', label: t(\"Flow Type\"), value: proposal.flowType },\r\n    { id: 'applicationDate', label: t(\"Application Date\"), value: proposal.applicationDate },\r\n    { id: 'lastApplicationDate', label: t(\"Last Application Date\"), value: proposal.lastApplicationDate },\r\n    { id: 'nextRevisionDate', label: t(\"Next Revision Date\"), value: proposal.nextRevisionDate },\r\n    { id: 'proposalExpirationDate', label: t(\"Proposal Expiration Date\"), value: proposal.expirationDate },\r\n  ];\r\n\r\n  const fieldCols = fields.map((field) => {\r\n    return (<Col key={ field.id } md={ field.cols || 3 } className=\"mb-3\">\r\n        <FormGroup>\r\n          <strong htmlFor={ field.id }>{ field.label }</strong>\r\n          <div>{ field.value }</div>\r\n        </FormGroup>\r\n      </Col>);\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h4 className=\"card-title\">{ t(\"General Data\") }</h4>\r\n        <p className=\"card-title-desc\"></p>\r\n        <Row>\r\n          { fieldCols }\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneralSection.propTypes = {\r\n  proposal: PropTypes.object\r\n};\r\n\r\nexport default GeneralSection;\r\n"]},"metadata":{},"sourceType":"module"}