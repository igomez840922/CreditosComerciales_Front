{"ast":null,"code":"import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import MockAdapter from\"axios-mock-adapter\";import*as url from\"../url_helper\";import accessToken from\"../jwt-token-access/accessToken\";import ApiServiceAuth from\"../../services/ApiServiceAuth\";import BackendServices from\"../../services/BackendServices/Services\";import toastr from\"toastr\";import\"toastr/build/toastr.min.css\";import{calenderDefaultCategories,events,tasks}from\"../../common/data\";var users=[{uid:1,username:\"admin\",role:\"admin\",password:\"123456\",email:\"admin@themesbrand.com\"}];var fakeBackend=function fakeBackend(){// This sets the mock adap ter on the default instance\nvar mock=new MockAdapter(axios);mock.onPost(url.POST_FAKE_REGISTER).reply(function(config){var user=JSON.parse(config[\"data\"]);users.push(user);return new Promise(function(resolve,reject){setTimeout(function(){resolve([200,user]);});});});mock.onPost(\"/post-fake-login\").reply(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){var user,usr,psw,auth,header,validatorLogin,instancia,api;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=JSON.parse(config[\"data\"]);usr=user.email;psw=user.password;auth={headers:{username:usr,password:psw}};header={login:\"ok\",autorizatrion:\"true\"};validatorLogin=false;instancia=new ApiServiceAuth();api=new BackendServices();// await api.getUserInfo(usr,psw).then(resp=>{\n//   if(resp== undefined){\n//     validatorLogin=false;\n//   }else{\n//     header.dataUser=resp\n//     validatorLogin=true\n//   }\n// },reject=>{\n//   validatorLogin=false\n// });\n_context.next=10;return instancia.post(url.URL_BPM_LOGIN,{},{},auth).then(function(resp){validatorLogin=resp.data.body!=null&resp.data.body.Autentication==true;},function(reject){validatorLogin=false;});case 10:validatorLogin=true;return _context.abrupt(\"return\",new Promise(function(resolve,reject){toastr.options={positionClass:'toast-top-right',closeButton:true,progressBar:true,showEasing:'swing',hideEasing:'linear',showMethod:'fadeIn',hideMethod:'fadeOut',showDuration:'9599',hideDuration:'500995'};if(validatorLogin){resolve([200,header]);}else{toastr.error('Usuario o contrase√±a no validas','Error!');reject([400,\"Error al ingresar al portal\"]);}}));case 12:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());mock.onPost(\"/post-jwt-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var one=config.headers;var finalToken=one.Authorization;var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){// Verify Jwt token from header.Authorization\nif(finalToken===accessToken){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}}else{reject([400,\"Invalid Token !!\"]);}});});});mock.onPost(\"/post-fake-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}});});});mock.onPost(\"/fake-forget-pwd\").reply(function(config){// User needs to check that user is eXist or not and send mail for Reset New password\nreturn new Promise(function(resolve,reject){setTimeout(function(){resolve([200,\"Check you mail and reset your password.\"]);});});});mock.onPost(\"/post-jwt-register\").reply(function(config){var user=JSON.parse(config[\"data\"]);users.push(user);return new Promise(function(resolve,reject){setTimeout(function(){resolve([200,user]);});});});mock.onPost(\"/post-jwt-login\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.email===user.email&&usr.password===user.password;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){// You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\nvar token=accessToken;// JWT AccessToken\nvar tokenObj={accessToken:token};// Token Obj\nvar validUserObj=_objectSpread(_objectSpread({},validUser[0]),tokenObj);// validUser Obj\nresolve([200,validUserObj]);}else{reject([400,\"Username and password are invalid. Please enter correct username and password\"]);}});});});mock.onPost(\"/post-jwt-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var one=config.headers;var finalToken=one.Authorization;var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){// Verify Jwt token from header.Authorization\nif(finalToken===accessToken){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}}else{reject([400,\"Invalid Token !!\"]);}});});});mock.onPost(\"/post-fake-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}});});});mock.onPost(\"/jwt-forget-pwd\").reply(function(config){// User needs to check that user is eXist or not and send mail for Reset New password\nreturn new Promise(function(resolve,reject){setTimeout(function(){resolve([200,\"Check you mail and reset your password.\"]);});});});mock.onPost(\"/social-login\").reply(function(config){var user=JSON.parse(config[\"data\"]);return new Promise(function(resolve,reject){setTimeout(function(){if(user&&user.token){// You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\nvar token=accessToken;// JWT AccessToken\nvar tokenObj={accessToken:token};// Token Obj\nvar validUserObj=_objectSpread(_objectSpread({},user[0]),tokenObj);// validUser Obj\nresolve([200,validUserObj]);}else{reject([400,\"Username and password are invalid. Please enter correct username and password\"]);}});});});mock.onGet(url.GET_TASKS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(tasks){// Passing fake JSON data as response\nresolve([200,tasks]);}else{reject([400,\"Cannot get tasks\"]);}});});});mock.onGet(url.GET_EVENTS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(events){// Passing fake JSON data as response\nresolve([200,events]);}else{reject([400,\"Cannot get events\"]);}});});});mock.onPost(url.ADD_NEW_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot add event\"]);}});});});mock.onPut(url.UPDATE_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot update event\"]);}});});});mock.onDelete(url.DELETE_EVENT).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(config&&config.headers){// Passing fake JSON data as response\nresolve([200,config.headers.event]);}else{reject([400,\"Cannot delete event\"]);}});});});mock.onGet(url.GET_CATEGORIES).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(calenderDefaultCategories){// Passing fake JSON data as response\nresolve([200,calenderDefaultCategories]);}else{reject([400,\"Cannot get categories\"]);}});});});};export default fakeBackend;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/AuthType/fakeBackend.js"],"names":["axios","MockAdapter","url","accessToken","ApiServiceAuth","BackendServices","toastr","calenderDefaultCategories","events","tasks","users","uid","username","role","password","email","fakeBackend","mock","onPost","POST_FAKE_REGISTER","reply","config","user","JSON","parse","push","Promise","resolve","reject","setTimeout","usr","psw","auth","headers","header","login","autorizatrion","validatorLogin","instancia","api","post","URL_BPM_LOGIN","then","resp","data","body","Autentication","options","positionClass","closeButton","progressBar","showEasing","hideEasing","showMethod","hideMethod","showDuration","hideDuration","error","one","finalToken","Authorization","validUser","filter","idx","objIndex","findIndex","obj","localStorage","removeItem","setItem","stringify","token","tokenObj","validUserObj","onGet","GET_TASKS","GET_EVENTS","ADD_NEW_EVENT","event","onPut","UPDATE_EVENT","onDelete","DELETE_EVENT","GET_CATEGORIES"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport MockAdapter from \"axios-mock-adapter\"\r\nimport * as url from \"../url_helper\"\r\nimport accessToken from \"../jwt-token-access/accessToken\"\r\nimport ApiServiceAuth from \"../../services/ApiServiceAuth\";\r\nimport BackendServices from \"../../services/BackendServices/Services\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\"\r\n\r\nimport {\r\n  calenderDefaultCategories,\r\n  events,\r\n  tasks,\r\n} from \"../../common/data\"\r\n\r\nlet users = [\r\n  {\r\n    uid: 1,\r\n    username: \"admin\",\r\n    role: \"admin\",\r\n    password: \"123456\",\r\n    email: \"admin@themesbrand.com\",\r\n  },\r\n]\r\n\r\nconst fakeBackend = () => {\r\n  // This sets the mock adap ter on the default instance\r\n  const mock = new MockAdapter(axios)\r\n\r\nmock.onPost(url.POST_FAKE_REGISTER).reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    users.push(user)\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, user])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-login\").reply(async config => {\r\n    \r\n    const user = JSON.parse(config[\"data\"])\r\n    const usr = user.email\r\n    const psw = user.password\r\n    const auth = {headers:{\r\n      username: usr,\r\n      password: psw\r\n\r\n    }}\r\n    \r\n    const header={\r\n      login:\"ok\",\r\n      autorizatrion:\"true\"\r\n    }\r\n\r\n    let validatorLogin=false;  \r\n    let instancia = new ApiServiceAuth();\r\n    const api=new BackendServices();\r\n    // await api.getUserInfo(usr,psw).then(resp=>{\r\n    //   if(resp== undefined){\r\n    //     validatorLogin=false;\r\n    //   }else{\r\n    //     header.dataUser=resp\r\n    //     validatorLogin=true\r\n    //   }\r\n    // },reject=>{\r\n    //   validatorLogin=false\r\n    // });\r\n\r\n    await instancia.post(url.URL_BPM_LOGIN,{},{},auth).then(resp=>{\r\n      validatorLogin=resp.data.body!=null&resp.data.body.Autentication==true;\r\n    },reject=>{\r\n      validatorLogin=false\r\n    });\r\n\r\n    validatorLogin=true;\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      toastr.options = {\r\n        positionClass: 'toast-top-right',\r\n        closeButton: true,\r\n        progressBar: true,\r\n        showEasing: 'swing',\r\n        hideEasing: 'linear',\r\n        showMethod: 'fadeIn',\r\n        hideMethod: 'fadeOut',\r\n        showDuration: '9599',\r\n        hideDuration: '500995'\r\n      }\r\n      if(validatorLogin){\r\n        resolve([200, header])\r\n      } else {\r\n        toastr.error('Usuario o contrase√±a no validas','Error!');\r\n        reject([\r\n          400,\r\n          \"Error al ingresar al portal\",\r\n        ])\r\n      }\r\n  })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const one = config.headers\r\n\r\n    let finalToken = one.Authorization\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // Verify Jwt token from header.Authorization\r\n        if (finalToken === accessToken) {\r\n          if (validUser[\"length\"] === 1) {\r\n            let objIndex\r\n\r\n            //Find index of specific object using findIndex method.\r\n            objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n            //Update object's name property.\r\n            users[objIndex].username = user.username\r\n\r\n            // Assign a value to locastorage\r\n            localStorage.removeItem(\"authUser\")\r\n            localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n            resolve([200, \"Profile Editted successfully\"])\r\n          } else {\r\n            reject([400, \"Something wrong for edit profile\"])\r\n          }\r\n        } else {\r\n          reject([400, \"Invalid Token !!\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          let objIndex\r\n\r\n          //Find index of specific object using findIndex method.\r\n          objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n          //Update object's name property.\r\n          users[objIndex].username = user.username\r\n\r\n          // Assign a value to locastorage\r\n          localStorage.removeItem(\"authUser\")\r\n          localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n          resolve([200, \"Profile Editted successfully\"])\r\n        } else {\r\n          reject([400, \"Something wrong for edit profile\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/fake-forget-pwd\").reply(config => {\r\n    // User needs to check that user is eXist or not and send mail for Reset New password\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, \"Check you mail and reset your password.\"])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-register\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    users.push(user)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, user])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-login\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    const validUser = users.filter(\r\n      usr => usr.email === user.email && usr.password === user.password\r\n    )\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          // You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\r\n          const token = accessToken\r\n\r\n          // JWT AccessToken\r\n          const tokenObj = { accessToken: token } // Token Obj\r\n          const validUserObj = { ...validUser[0], ...tokenObj } // validUser Obj\r\n\r\n          resolve([200, validUserObj])\r\n        } else {\r\n          reject([\r\n            400,\r\n            \"Username and password are invalid. Please enter correct username and password\",\r\n          ])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const one = config.headers\r\n\r\n    let finalToken = one.Authorization\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // Verify Jwt token from header.Authorization\r\n        if (finalToken === accessToken) {\r\n          if (validUser[\"length\"] === 1) {\r\n            let objIndex\r\n\r\n            //Find index of specific object using findIndex method.\r\n            objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n            //Update object's name property.\r\n            users[objIndex].username = user.username\r\n\r\n            // Assign a value to locastorage\r\n            localStorage.removeItem(\"authUser\")\r\n            localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n            resolve([200, \"Profile Editted successfully\"])\r\n          } else {\r\n            reject([400, \"Something wrong for edit profile\"])\r\n          }\r\n        } else {\r\n          reject([400, \"Invalid Token !!\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          let objIndex\r\n\r\n          //Find index of specific object using findIndex method.\r\n          objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n          //Update object's name property.\r\n          users[objIndex].username = user.username\r\n\r\n          // Assign a value to locastorage\r\n          localStorage.removeItem(\"authUser\")\r\n          localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n          resolve([200, \"Profile Editted successfully\"])\r\n        } else {\r\n          reject([400, \"Something wrong for edit profile\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/jwt-forget-pwd\").reply(config => {\r\n    // User needs to check that user is eXist or not and send mail for Reset New password\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, \"Check you mail and reset your password.\"])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/social-login\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (user && user.token) {\r\n          // You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\r\n          const token = accessToken\r\n\r\n          // JWT AccessToken\r\n          const tokenObj = { accessToken: token } // Token Obj\r\n          const validUserObj = { ...user[0], ...tokenObj } // validUser Obj\r\n\r\n          resolve([200, validUserObj])\r\n        } else {\r\n          reject([\r\n            400,\r\n            \"Username and password are invalid. Please enter correct username and password\",\r\n          ])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_TASKS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (tasks) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, tasks])\r\n        } else {\r\n          reject([400, \"Cannot get tasks\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_EVENTS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (events) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, events])\r\n        } else {\r\n          reject([400, \"Cannot get events\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(url.ADD_NEW_EVENT).reply(event => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data])\r\n        } else {\r\n          reject([400, \"Cannot add event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPut(url.UPDATE_EVENT).reply(event => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data])\r\n        } else {\r\n          reject([400, \"Cannot update event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onDelete(url.DELETE_EVENT).reply(config => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (config && config.headers) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, config.headers.event])\r\n        } else {\r\n          reject([400, \"Cannot delete event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_CATEGORIES).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (calenderDefaultCategories) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, calenderDefaultCategories])\r\n        } else {\r\n          reject([400, \"Cannot get categories\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n}\r\n\r\nexport default fakeBackend\r\n"]},"metadata":{},"sourceType":"module"}