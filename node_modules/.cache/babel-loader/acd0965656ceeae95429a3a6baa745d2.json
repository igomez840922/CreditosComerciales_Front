{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\ErrorHandler.js\";\nimport React from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ErrorHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorOccurred: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      errorOccurred: true\n    }); //logErrorToMyService(error, info)\n  }\n\n  render() {\n    return this.state.errorOccurred ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Something went wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 37\n    }, this) : this.props.children;\n  }\n\n}\n/*\r\nexport default class ErrorHandler extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false,error:null,errorInfo: null };\r\n  }\r\n    componentDidCatch(error, errorInfo) {\r\n      console.log(\"componentDidCatch\",error, errorInfo);\r\n      this.setState({\r\n      \thasError: true,\r\n          error:error,\r\n          errorInfo: errorInfo\r\n      })\r\n  }\r\n    render() {\r\n      if (this.state.hasError) {\r\n          // Render error message or component\r\n          //variant={msgData.isError ? \"danger\" : \"success\"}\r\n          return \r\n          <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n              hasError: false,\r\n              error:null,\r\n              errorInfo: null\r\n          }) }}>\r\n          {this.state.errorInfo}\r\n        </Alert>\r\n      }\r\n      else{ return null}\r\n  }\r\n}\r\n*/","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/ErrorHandler.js"],"names":["React","Alert","ErrorHandler","Component","constructor","props","state","errorOccurred","componentDidCatch","error","info","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AACD;;AACHC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC/B,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,aAAa,EAAE;AAAjB,KAAd,EAD+B,CAE/B;AACC;;AAGDK,EAAAA,MAAM,GAAG;AACT,WAAO,KAAKN,KAAL,CAAWC,aAAX,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,GAA4D,KAAKF,KAAL,CAAWQ,QAA9E;AACC;;AAbuD;AAgBxD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nexport default class ErrorHandler extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = { errorOccurred: false }\r\n    }\r\n  componentDidCatch(error, info) {\r\n  this.setState({ errorOccurred: true })\r\n  //logErrorToMyService(error, info)\r\n  }\r\n  \r\n  \r\n  render() {\r\n  return this.state.errorOccurred ? <h1>Something went wrong!</h1> : this.props.children\r\n  }\r\n  }\r\n  \r\n  /*\r\nexport default class ErrorHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false,error:null,errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(\"componentDidCatch\",error, errorInfo);\r\n        this.setState({\r\n        \thasError: true,\r\n            error:error,\r\n            errorInfo: errorInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            // Render error message or component\r\n            //variant={msgData.isError ? \"danger\" : \"success\"}\r\n            return \r\n            <Alert show={this.state.hasError} variant={\"danger\"}  dismissible onClose={() => { this.setState({\r\n                hasError: false,\r\n                error:null,\r\n                errorInfo: null\r\n            }) }}>\r\n            {this.state.errorInfo}\r\n          </Alert>\r\n        }\r\n        else{ return null}\r\n    }\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}