{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./TokenService\";\nimport * as url from \"../helpers/url_helper\";\nimport qs from 'qs';\nimport http from \"http\";\nimport https from \"https\";\nimport { BackendServices } from \"../services\";\nimport errorDispacherHelper from \"../helpers/errorDispacherHelper\";\nimport * as OPTs from \"../helpers/options_helper\";\nconst userId = \"ARICO1\";\nconst channelId = \"CreditosComerciales\";\nconst client_id = '6cbk7drlvbc88vdgvgo1tg1r3o'; //'rrcmi5fefq56q4bc9pri0mfa0';//\n\nconst client_secret = 'b9vti5n8pbn1cn2gr35vlgq8s3uq7mm1j2d79ih0u1jjb4hkd3m'; //'k7f89803rmgu8n93ppr3e2honuguo064ga8co4oqgml8k0tdrbp';//\n\nconst httpAgent = new http.Agent({\n  keepAlive: true\n});\nconst httpsAgent = new https.Agent({\n  keepAlive: true\n}); //apply base url for axios\n\nconst API_URL = \"\";\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n  httpAgent,\n  httpsAgent,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"userId\": userId,\n    \"channelId\": channelId\n  }\n});\n/*\r\naxiosApi.interceptors.response.use(\r\n  response => response,\r\n  error => Promise.reject(error)\r\n)\r\n*/\n\naxiosApi.interceptors.request.use(config => {\n  const token = TokenService.getLocalAccessToken();\n\n  if (token) {\n    config.headers[\"Authorization\"] = 'Bearer ' + token.access_token; //config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n  } // console.log('config: ',config);\n\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxiosApi.interceptors.response.use(res => {\n  return res;\n}, async err => {\n  //return Promise.reject(err);\n  console.log('err: ', err);\n  const originalConfig = err.config; // console.log('originalConfig: ',originalConfig);\n\n  if (originalConfig.url === url.URL_CORE_TOKENGEN) {\n    return Promise.reject(err);\n  }\n\n  var token = TokenService.getLocalAccessToken(); //si existe Token chequear la validez de tiempo\n\n  if (token) {\n    //calculamos que el expiration time est√© correcto\n    var elapsed = new Date().getTime() - token.tokenexpiration;\n\n    if (elapsed < 0) {\n      return Promise.reject(err);\n    }\n  }\n\n  TokenService.removeLocalAccessToken();\n  originalConfig._retry = true;\n\n  try {\n    const data = qs.stringify({\n      grant_type: 'client_credentials'\n    });\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\n    };\n    var rs = await axiosApi.post(url.URL_CORE_TOKENGEN, data, {\n      headers: headers\n    });\n    var responsetokenJson = rs.data;\n    var tokenexpiration = new Date();\n    tokenexpiration.setSeconds(new Date().getSeconds() + parseInt(responsetokenJson.expires_in));\n    responsetokenJson.tokenexpiration = tokenexpiration.getTime();\n    TokenService.updateLocalAccessToken(responsetokenJson);\n    originalConfig.headers[\"Authorization\"] = 'Bearer ' + responsetokenJson.access_token;\n    return axiosApi(originalConfig);\n  } catch (_error) {\n    return Promise.reject(_error);\n  }\n  /*\r\n  //originalConfig.url !== \"/auth/signin\" &&\r\n  if (err.response) {\r\n    // Access Token was expired\r\n    if (err.response.status === 401 && !originalConfig._retry) {\r\n      originalConfig._retry = true;\r\n        try {\r\n          const data = qs.stringify({\r\n          grant_type: 'client_credentials'\r\n        });\r\n        const headers = {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\r\n        };\r\n          const rs = await axiosApi.post(url_TokenGeneration,\r\n          data,headers\r\n        );\r\n          console.log(rs.data);\r\n        TokenService.updateLocalAccessToken(rs.data);\r\n          //const { accessToken } = rs.data;\r\n        return axiosApi(originalConfig);\r\n        }\r\n      catch (_error) {\r\n        return Promise.reject(_error);\r\n      }\r\n    }\r\n  }\r\n    return Promise.reject(err);\r\n    */\n\n});\nexport default class ApiServiceCore {\n  async get(url, config = {}) {\n    return await axiosApi.get(url, { ...config\n    }).then(response => {\n      var _response$data, _response$data$Status, _response$data2, _response$data2$Statu, _response$data3, _response$data3$Statu;\n\n      if ((response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$Status = _response$data.Status) === null || _response$data$Status === void 0 ? void 0 : _response$data$Status.StatusCode) !== OPTs.ResponseT24_STATUSOK && (response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$Statu = _response$data2.Status) === null || _response$data2$Statu === void 0 ? void 0 : _response$data2$Statu.StatusCode) !== OPTs.ResponseT24_STATUSOK1 && (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$Statu = _response$data3.Status) === null || _response$data3$Statu === void 0 ? void 0 : _response$data3$Statu.StatusCode) !== OPTs.ResponseT24_STATUSOK2) {\n        var _response$data4;\n\n        if (response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.catalog) {} else {\n          var _response$StatusCode, _response$data$Status2, _response$data5, _response$data5$Statu;\n\n          //errorDispacherHelper.dispatch({ status: response?.data?.Status?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"GET\" });\n          errorDispacherHelper.dispatch({\n            status: (_response$StatusCode = response === null || response === void 0 ? void 0 : response.StatusCode) !== null && _response$StatusCode !== void 0 ? _response$StatusCode : \"500\",\n            error: (_response$data$Status2 = response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$Statu = _response$data5.Status) === null || _response$data5$Statu === void 0 ? void 0 : _response$data5$Statu.StatusDesc) !== null && _response$data$Status2 !== void 0 ? _response$data$Status2 : \"NO DATA ERROR\",\n            url: url,\n            type: \"GET\"\n          });\n        }\n      }\n\n      return response.data;\n    }).catch(err => {\n      var _err$response$status, _err$response, _err$response$data, _err$response2;\n\n      console.error(\"ApiServiceCore\", err);\n      errorDispacherHelper.dispatch({\n        status: (_err$response$status = err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) !== null && _err$response$status !== void 0 ? _err$response$status : \"500\",\n        error: (_err$response$data = err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) !== null && _err$response$data !== void 0 ? _err$response$data : \"NO DATA ERROR\",\n        url: url,\n        type: \"GET\"\n      });\n    });\n  }\n\n  async post(url, data, config = {}) {\n    return axiosApi.post(url, { ...data\n    }, { ...config\n    }).then(response => {\n      var _response$data6, _response$data6$Statu, _response$data7, _response$data7$Statu, _response$data8, _response$data8$Statu;\n\n      if ((response === null || response === void 0 ? void 0 : (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : (_response$data6$Statu = _response$data6.Status) === null || _response$data6$Statu === void 0 ? void 0 : _response$data6$Statu.StatusCode) !== OPTs.ResponseT24_STATUSOK && (response === null || response === void 0 ? void 0 : (_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : (_response$data7$Statu = _response$data7.Status) === null || _response$data7$Statu === void 0 ? void 0 : _response$data7$Statu.StatusCode) !== OPTs.ResponseT24_STATUSOK1 && (response === null || response === void 0 ? void 0 : (_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : (_response$data8$Statu = _response$data8.Status) === null || _response$data8$Statu === void 0 ? void 0 : _response$data8$Statu.StatusCode) !== OPTs.ResponseT24_STATUSOK2) {\n        var _response$data9;\n\n        if (response === null || response === void 0 ? void 0 : (_response$data9 = response.data) === null || _response$data9 === void 0 ? void 0 : _response$data9.catalog) {} else {\n          var _response$data$Status3, _response$data10, _response$data10$Stat, _response$data$Status4, _response$data11, _response$data11$Stat;\n\n          errorDispacherHelper.dispatch({\n            status: (_response$data$Status3 = response === null || response === void 0 ? void 0 : (_response$data10 = response.data) === null || _response$data10 === void 0 ? void 0 : (_response$data10$Stat = _response$data10.Status) === null || _response$data10$Stat === void 0 ? void 0 : _response$data10$Stat.StatusCode) !== null && _response$data$Status3 !== void 0 ? _response$data$Status3 : \"500\",\n            error: (_response$data$Status4 = response === null || response === void 0 ? void 0 : (_response$data11 = response.data) === null || _response$data11 === void 0 ? void 0 : (_response$data11$Stat = _response$data11.Status) === null || _response$data11$Stat === void 0 ? void 0 : _response$data11$Stat.StatusDesc) !== null && _response$data$Status4 !== void 0 ? _response$data$Status4 : \"NO DATA ERROR\",\n            url: url,\n            type: \"POST\"\n          });\n        }\n      }\n\n      return response.data;\n    }).catch(err => {\n      var _err$response$status2, _err$response3, _err$response$data2, _err$response4, _err$response$status3, _err$response5, _err$response$data3, _err$response6;\n\n      console.error(\"ApiServiceCore\", err);\n      errorDispacherHelper.dispatch({\n        status: (_err$response$status2 = err === null || err === void 0 ? void 0 : (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) !== null && _err$response$status2 !== void 0 ? _err$response$status2 : \"500\",\n        error: (_err$response$data2 = err === null || err === void 0 ? void 0 : (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) !== null && _err$response$data2 !== void 0 ? _err$response$data2 : \"NO DATA ERROR\",\n        url: url,\n        type: \"POST\"\n      });\n      return {\n        url: url,\n        status: (_err$response$status3 = err === null || err === void 0 ? void 0 : (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status) !== null && _err$response$status3 !== void 0 ? _err$response$status3 : \"500\",\n        error: (_err$response$data3 = err === null || err === void 0 ? void 0 : (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data) !== null && _err$response$data3 !== void 0 ? _err$response$data3 : \"\"\n      };\n    });\n  }\n\n  async put(url, data, config = {}) {\n    return axiosApi.put(url, { ...data\n    }, { ...config\n    }).then(response => {\n      var _response$data12, _response$data12$Stat, _response$data13, _response$data13$Stat, _response$data14, _response$data14$Stat;\n\n      if ((response === null || response === void 0 ? void 0 : (_response$data12 = response.data) === null || _response$data12 === void 0 ? void 0 : (_response$data12$Stat = _response$data12.Status) === null || _response$data12$Stat === void 0 ? void 0 : _response$data12$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK && (response === null || response === void 0 ? void 0 : (_response$data13 = response.data) === null || _response$data13 === void 0 ? void 0 : (_response$data13$Stat = _response$data13.Status) === null || _response$data13$Stat === void 0 ? void 0 : _response$data13$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK1 && (response === null || response === void 0 ? void 0 : (_response$data14 = response.data) === null || _response$data14 === void 0 ? void 0 : (_response$data14$Stat = _response$data14.Status) === null || _response$data14$Stat === void 0 ? void 0 : _response$data14$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK2) {\n        var _response$data15;\n\n        if (response === null || response === void 0 ? void 0 : (_response$data15 = response.data) === null || _response$data15 === void 0 ? void 0 : _response$data15.catalog) {} else {\n          var _response$data$Status5, _response$data16, _response$data16$Stat, _response$data$Status6, _response$data17, _response$data17$Stat;\n\n          errorDispacherHelper.dispatch({\n            status: (_response$data$Status5 = response === null || response === void 0 ? void 0 : (_response$data16 = response.data) === null || _response$data16 === void 0 ? void 0 : (_response$data16$Stat = _response$data16.Status) === null || _response$data16$Stat === void 0 ? void 0 : _response$data16$Stat.StatusCode) !== null && _response$data$Status5 !== void 0 ? _response$data$Status5 : \"500\",\n            error: (_response$data$Status6 = response === null || response === void 0 ? void 0 : (_response$data17 = response.data) === null || _response$data17 === void 0 ? void 0 : (_response$data17$Stat = _response$data17.Status) === null || _response$data17$Stat === void 0 ? void 0 : _response$data17$Stat.StatusDesc) !== null && _response$data$Status6 !== void 0 ? _response$data$Status6 : \"NO DATA ERROR\",\n            url: url,\n            type: \"PUT\"\n          });\n        }\n      }\n\n      return response.data;\n    }).catch(err => {\n      var _err$response$status4, _err$response7, _err$response$data4, _err$response8, _err$response$status5, _err$response9, _err$response$data5, _err$response10;\n\n      console.error(\"ApiServiceCore\", err);\n      errorDispacherHelper.dispatch({\n        status: (_err$response$status4 = err === null || err === void 0 ? void 0 : (_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.status) !== null && _err$response$status4 !== void 0 ? _err$response$status4 : \"500\",\n        error: (_err$response$data4 = err === null || err === void 0 ? void 0 : (_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : _err$response8.data) !== null && _err$response$data4 !== void 0 ? _err$response$data4 : \"NO DATA ERROR\",\n        url: url,\n        type: \"PUT\"\n      });\n      return {\n        url: url,\n        status: (_err$response$status5 = err === null || err === void 0 ? void 0 : (_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : _err$response9.status) !== null && _err$response$status5 !== void 0 ? _err$response$status5 : \"500\",\n        error: (_err$response$data5 = err === null || err === void 0 ? void 0 : (_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : _err$response10.data) !== null && _err$response$data5 !== void 0 ? _err$response$data5 : \"\"\n      };\n    });\n  }\n\n  async del(url, config = {}) {\n    return await axiosApi.delete(url, { ...config\n    }).then(response => {\n      var _response$data18, _response$data18$Stat, _response$data19, _response$data19$Stat, _response$data20, _response$data20$Stat;\n\n      if ((response === null || response === void 0 ? void 0 : (_response$data18 = response.data) === null || _response$data18 === void 0 ? void 0 : (_response$data18$Stat = _response$data18.Status) === null || _response$data18$Stat === void 0 ? void 0 : _response$data18$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK && (response === null || response === void 0 ? void 0 : (_response$data19 = response.data) === null || _response$data19 === void 0 ? void 0 : (_response$data19$Stat = _response$data19.Status) === null || _response$data19$Stat === void 0 ? void 0 : _response$data19$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK1 && (response === null || response === void 0 ? void 0 : (_response$data20 = response.data) === null || _response$data20 === void 0 ? void 0 : (_response$data20$Stat = _response$data20.Status) === null || _response$data20$Stat === void 0 ? void 0 : _response$data20$Stat.StatusCode) !== OPTs.ResponseT24_STATUSOK2) {\n        var _response$data21;\n\n        if (response === null || response === void 0 ? void 0 : (_response$data21 = response.data) === null || _response$data21 === void 0 ? void 0 : _response$data21.catalog) {} else {\n          var _response$data$Status7, _response$data22, _response$data22$Stat, _response$data$Status8, _response$data23, _response$data23$Stat;\n\n          errorDispacherHelper.dispatch({\n            status: (_response$data$Status7 = response === null || response === void 0 ? void 0 : (_response$data22 = response.data) === null || _response$data22 === void 0 ? void 0 : (_response$data22$Stat = _response$data22.Status) === null || _response$data22$Stat === void 0 ? void 0 : _response$data22$Stat.StatusCode) !== null && _response$data$Status7 !== void 0 ? _response$data$Status7 : \"500\",\n            error: (_response$data$Status8 = response === null || response === void 0 ? void 0 : (_response$data23 = response.data) === null || _response$data23 === void 0 ? void 0 : (_response$data23$Stat = _response$data23.Status) === null || _response$data23$Stat === void 0 ? void 0 : _response$data23$Stat.StatusDesc) !== null && _response$data$Status8 !== void 0 ? _response$data$Status8 : \"NO DATA ERROR\",\n            url: url,\n            type: \"DELETE\"\n          });\n        }\n      }\n\n      return response.data;\n    }).catch(err => {\n      var _err$response$status6, _err$response11, _err$response$data6, _err$response12, _err$response$status7, _err$response13, _err$response$data7, _err$response14;\n\n      console.error(\"ApiServiceCore\", err);\n      errorDispacherHelper.dispatch({\n        status: (_err$response$status6 = err === null || err === void 0 ? void 0 : (_err$response11 = err.response) === null || _err$response11 === void 0 ? void 0 : _err$response11.status) !== null && _err$response$status6 !== void 0 ? _err$response$status6 : \"500\",\n        error: (_err$response$data6 = err === null || err === void 0 ? void 0 : (_err$response12 = err.response) === null || _err$response12 === void 0 ? void 0 : _err$response12.data) !== null && _err$response$data6 !== void 0 ? _err$response$data6 : \"NO DATA ERROR\",\n        url: url,\n        type: \"DELETE\"\n      });\n      return {\n        url: url,\n        status: (_err$response$status7 = err === null || err === void 0 ? void 0 : (_err$response13 = err.response) === null || _err$response13 === void 0 ? void 0 : _err$response13.status) !== null && _err$response$status7 !== void 0 ? _err$response$status7 : \"500\",\n        error: (_err$response$data7 = err === null || err === void 0 ? void 0 : (_err$response14 = err.response) === null || _err$response14 === void 0 ? void 0 : _err$response14.data) !== null && _err$response$data7 !== void 0 ? _err$response$data7 : \"\"\n      };\n    });\n  } //////////////////////////////\n  //////////////////////////////\n\n  /*\r\n  fetch = function() {\r\n  let self = this;\r\n  let args = arguments;\r\n  return originalFetch.apply(self, args).then(async function(data) {\r\n  if (data.status === 200)\r\n    console.log(\"---------Status 200----------\");\r\n  if (data.status === 401) {\r\n    // request for token with original fetch if status is 401\r\n    console.log('failed');\r\n    let response = await originalFetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    // if status is 401 from token api return empty response to close recursion\r\n    console.log(\"==========401 UnAuthorize.=============\");\r\n    console.log(response);\r\n    if (response.status === 401) {\r\n      return {};\r\n    }\r\n    // else set token\r\n    // recall old fetch\r\n    // here i used 200 because 401 or 404 old response will cause it to rerun\r\n    // return fetch(...args); <- change to this for real scenarios\r\n    // return fetch(args[0], args[1]); <- or to this for real sceaerios\r\n    return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n  }\r\n  // condition will be tested again after 401 condition and will be ran with old args\r\n  if (data.status === 404) {\r\n    console.log(\"==========404 Not Found.=============\");\r\n    // here i used 200 because 401 or 404 old response will cause it to rerun\r\n    // return fetch(...args); <- change to this for real scenarios\r\n    // return fetch(args[0], args[1]); <- or to this for real scenarios\r\n    return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    //scenaerios\r\n  }\r\n  else {\r\n    return data;\r\n  }\r\n  });\r\n  };\r\n  */\n\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/ApiServiceCore.js"],"names":["axios","TokenService","url","qs","http","https","BackendServices","errorDispacherHelper","OPTs","userId","channelId","client_id","client_secret","httpAgent","Agent","keepAlive","httpsAgent","API_URL","axiosApi","create","baseURL","headers","interceptors","request","use","config","token","getLocalAccessToken","access_token","error","Promise","reject","response","res","err","console","log","originalConfig","URL_CORE_TOKENGEN","elapsed","Date","getTime","tokenexpiration","removeLocalAccessToken","_retry","data","stringify","grant_type","btoa","rs","post","responsetokenJson","setSeconds","getSeconds","parseInt","expires_in","updateLocalAccessToken","_error","ApiServiceCore","get","then","Status","StatusCode","ResponseT24_STATUSOK","ResponseT24_STATUSOK1","ResponseT24_STATUSOK2","catalog","dispatch","status","StatusDesc","type","catch","put","del","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport TokenService from \"./TokenService\";\r\nimport * as url from \"../helpers/url_helper\"\r\nimport qs from 'qs';\r\nimport http from \"http\";\r\nimport https from \"https\";\r\nimport { BackendServices } from \"../services\";\r\nimport errorDispacherHelper from \"../helpers/errorDispacherHelper\";\r\nimport * as OPTs from \"../helpers/options_helper\"\r\n\r\nconst userId = \"ARICO1\";\r\nconst channelId = \"CreditosComerciales\"\r\nconst client_id = '6cbk7drlvbc88vdgvgo1tg1r3o'; //'rrcmi5fefq56q4bc9pri0mfa0';//\r\nconst client_secret = 'b9vti5n8pbn1cn2gr35vlgq8s3uq7mm1j2d79ih0u1jjb4hkd3m'//'k7f89803rmgu8n93ppr3e2honuguo064ga8co4oqgml8k0tdrbp';//\r\n\r\nconst httpAgent = new http.Agent({ keepAlive: true })\r\nconst httpsAgent = new https.Agent({ keepAlive: true })\r\n\r\n//apply base url for axios\r\nconst API_URL = \"\"\r\n\r\nconst axiosApi = axios.create({\r\n  baseURL: API_URL,\r\n  httpAgent,\r\n  httpsAgent,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"userId\": userId,\r\n    \"channelId\": channelId\r\n  },\r\n})\r\n\r\n/*\r\naxiosApi.interceptors.response.use(\r\n  response => response,\r\n  error => Promise.reject(error)\r\n)\r\n*/\r\n\r\naxiosApi.interceptors.request.use(\r\n  (config) => {\r\n    const token = TokenService.getLocalAccessToken();\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = 'Bearer ' + token.access_token;\r\n      //config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\r\n    }\r\n\r\n    // console.log('config: ',config);\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\naxiosApi.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (err) => {\r\n    //return Promise.reject(err);\r\n\r\n    console.log('err: ', err);\r\n    const originalConfig = err.config;\r\n\r\n    // console.log('originalConfig: ',originalConfig);\r\n    if (originalConfig.url === url.URL_CORE_TOKENGEN) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    var token = TokenService.getLocalAccessToken();\r\n\r\n    //si existe Token chequear la validez de tiempo\r\n    if (token) {\r\n      //calculamos que el expiration time est√© correcto\r\n      var elapsed = (new Date()).getTime() - token.tokenexpiration;\r\n\r\n      if (elapsed < 0) {\r\n        return Promise.reject(err);\r\n      }\r\n    }\r\n\r\n    TokenService.removeLocalAccessToken();\r\n\r\n    originalConfig._retry = true;\r\n    try {\r\n\r\n      const data = qs.stringify({ grant_type: 'client_credentials' });\r\n      const headers = {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\r\n      };\r\n\r\n      var rs = await axiosApi.post(url.URL_CORE_TOKENGEN, data, {\r\n        headers: headers\r\n      });\r\n\r\n      var responsetokenJson = rs.data;\r\n\r\n      var tokenexpiration = new Date();\r\n      tokenexpiration.setSeconds(new Date().getSeconds() + parseInt(responsetokenJson.expires_in))\r\n      responsetokenJson.tokenexpiration = tokenexpiration.getTime();\r\n\r\n      TokenService.updateLocalAccessToken(responsetokenJson);\r\n\r\n      originalConfig.headers[\"Authorization\"] = 'Bearer ' + responsetokenJson.access_token;\r\n      return axiosApi(originalConfig);\r\n\r\n    }\r\n    catch (_error) {\r\n      return Promise.reject(_error);\r\n    }\r\n\r\n    /*\r\n    //originalConfig.url !== \"/auth/signin\" &&\r\n    if (err.response) {\r\n      // Access Token was expired\r\n      if (err.response.status === 401 && !originalConfig._retry) {\r\n        originalConfig._retry = true;\r\n\r\n        try {\r\n\r\n          const data = qs.stringify({\r\n            grant_type: 'client_credentials'\r\n          });\r\n          const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\r\n          };\r\n\r\n          const rs = await axiosApi.post(url_TokenGeneration,\r\n            data,headers\r\n          );\r\n\r\n          console.log(rs.data);\r\n          TokenService.updateLocalAccessToken(rs.data);\r\n\r\n          //const { accessToken } = rs.data;\r\n          return axiosApi(originalConfig);\r\n\r\n        }\r\n        catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n      }\r\n    }\r\n\r\n    return Promise.reject(err);\r\n\r\n    */\r\n  }\r\n);\r\n\r\n\r\nexport default class ApiServiceCore {\r\n\r\n  async get(url, config = {}) {\r\n\r\n    return await axiosApi\r\n      .get(url, { ...config })\r\n      .then(response => {\r\n        if (response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK1 && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK2) {\r\n          if (response?.data?.catalog) {\r\n          } else {\r\n            //errorDispacherHelper.dispatch({ status: response?.data?.Status?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"GET\" });\r\n            errorDispacherHelper.dispatch({ status: response?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"GET\" });\r\n          }\r\n        }\r\n        return response.data\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"ApiServiceCore\", err);\r\n        errorDispacherHelper.dispatch({ status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"NO DATA ERROR\", url: url, type: \"GET\" });\r\n      })\r\n  }\r\n\r\n  async post(url, data, config = {}) {\r\n    return axiosApi\r\n      .post(url, { ...data }, { ...config })\r\n      .then(response => {\r\n        if (response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK1 && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK2) {\r\n          if (response?.data?.catalog) {\r\n          } else {\r\n            errorDispacherHelper.dispatch({ status: response?.data?.Status?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"POST\" });\r\n          }\r\n        }\r\n        return response.data\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"ApiServiceCore\", err);\r\n        errorDispacherHelper.dispatch({ status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"NO DATA ERROR\", url: url, type: \"POST\" });\r\n        return { url: url, status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"\" };\r\n      })\r\n  }\r\n\r\n  async put(url, data, config = {}) {\r\n    return axiosApi\r\n      .put(url, { ...data }, { ...config })\r\n      .then(response => {\r\n        if (response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK1 && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK2) {\r\n          if (response?.data?.catalog) {\r\n          } else {\r\n            errorDispacherHelper.dispatch({ status: response?.data?.Status?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"PUT\" });\r\n          }\r\n        }\r\n        return response.data\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"ApiServiceCore\", err);\r\n        errorDispacherHelper.dispatch({ status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"NO DATA ERROR\", url: url, type: \"PUT\" });\r\n        return { url: url, status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"\" };\r\n      })\r\n  }\r\n\r\n  async del(url, config = {}) {\r\n    return await axiosApi\r\n      .delete(url, { ...config })\r\n      .then(response => {\r\n        if (response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK1 && response?.data?.Status?.StatusCode !== OPTs.ResponseT24_STATUSOK2) {\r\n          if (response?.data?.catalog) {\r\n          } else {\r\n            errorDispacherHelper.dispatch({ status: response?.data?.Status?.StatusCode ?? \"500\", error: response?.data?.Status?.StatusDesc ?? \"NO DATA ERROR\", url: url, type: \"DELETE\" });\r\n          }\r\n        }\r\n        return response.data\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"ApiServiceCore\", err);\r\n        errorDispacherHelper.dispatch({ status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"NO DATA ERROR\", url: url, type: \"DELETE\" });\r\n        return { url: url, status: err?.response?.status ?? \"500\", error: err?.response?.data ?? \"\" };\r\n      })\r\n  }\r\n\r\n  //////////////////////////////\r\n  //////////////////////////////\r\n\r\n  /*\r\n\r\nfetch = function() {\r\nlet self = this;\r\nlet args = arguments;\r\nreturn originalFetch.apply(self, args).then(async function(data) {\r\n  if (data.status === 200)\r\n    console.log(\"---------Status 200----------\");\r\n  if (data.status === 401) {\r\n    // request for token with original fetch if status is 401\r\n    console.log('failed');\r\n    let response = await originalFetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    // if status is 401 from token api return empty response to close recursion\r\n    console.log(\"==========401 UnAuthorize.=============\");\r\n    console.log(response);\r\n    if (response.status === 401) {\r\n      return {};\r\n    }\r\n    // else set token\r\n    // recall old fetch\r\n    // here i used 200 because 401 or 404 old response will cause it to rerun\r\n    // return fetch(...args); <- change to this for real scenarios\r\n    // return fetch(args[0], args[1]); <- or to this for real sceaerios\r\n    return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n  }\r\n  // condition will be tested again after 401 condition and will be ran with old args\r\n  if (data.status === 404) {\r\n    console.log(\"==========404 Not Found.=============\");\r\n    // here i used 200 because 401 or 404 old response will cause it to rerun\r\n    // return fetch(...args); <- change to this for real scenarios\r\n    // return fetch(args[0], args[1]); <- or to this for real scenarios\r\n    return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    //scenaerios\r\n  }\r\n  else {\r\n    return data;\r\n  }\r\n});\r\n};\r\n*/\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}