{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\GeneralesEmpresa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { Row, Col, Card, CardBody, Button, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { CoreServices } from \"../../../../../services\";\nimport Select from \"react-select\";\nimport Switch from \"react-switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\nconst GeneralesEmpresa = /*#__PURE__*/React.forwardRef(_c3 = _s((props, ref) => {\n  var _props$datosEmpresa$c, _props$datosEmpresa, _props$datosEmpresa$c2, _props$datosEmpresa$p, _props$datosEmpresa2, _props$datosEmpresa$m, _props$datosEmpresa3;\n\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [paises, setPaises] = useState([]);\n  const [paisesSelected, setPaisesSelected] = useState(undefined);\n  const [codigoPais, setCodigoPais] = useState(null);\n  const [switch1, setswitch1] = useState(false);\n  const [switch2, setswitch2] = useState(false);\n  const [provincias, setProvincias] = useState([]);\n  const [provinciasSelected, setProvinciasSelected] = useState(undefined);\n  const [codigoProvincia, setCodigoProvincia] = useState(null);\n  const [distrito, setDistrito] = useState([]);\n  const [distritoSelected, setDistritoSelected] = useState(undefined);\n  const [codigoDistrito, setCodigoDistrito] = useState(null);\n  const [corregimiento, setCorregimiento] = useState([]);\n  const [corregimientoSelected, setCorregimientoSelected] = useState(undefined);\n  const [codigoCorregimiento, setCodigoCorregimiento] = useState(null);\n  const [clienteSostenibleSelect, setclienteSostenibleSelect] = useState(undefined);\n  const [listaExclusionSelect, setlistaExclusionSelect] = useState(undefined);\n  const [sectorSelect, setsectorSelect] = useState(undefined);\n  const [ciudad, setCiudad] = useState([]);\n  const [ciudadSelected, setCiudadSelected] = useState(undefined);\n  const [codigoCiudad, setCodigoCiudad] = useState(null);\n  const [dataReturn, setDataReturn] = useState(props.datosEmpresa);\n  const [sectorList, setSectorList] = useState([]);\n  const [subsectorList, setSubsectorList] = useState([]);\n  const [formValid, setFormValid] = useState(false);\n  const [SectorEconomico, setSectorEconomico] = useState([]);\n  const [codigoSector, setcodigoSector] = useState({\n    label: \"\",\n    value: \"\"\n  });\n  const [campoRequeridoSector, setcampoRequeridoSector] = useState(false);\n  const [validacionCiudad, setvalidacionCiudad] = useState(false);\n  const [campoRequeridoSostenible, setcampoRequeridoSostenible] = useState(false);\n  const [campoRequeridoExclusion, setcampoRequeridoExclusion] = useState(false);\n  const listaExclusion = [{\n    label: \"No\",\n    value: 1\n  }, {\n    label: \"Si\",\n    value: 2\n  }];\n  const clienteSostenible = [{\n    label: \"No\",\n    value: 1\n  }, {\n    label: \"Si\",\n    value: 2\n  }];\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmGeneralesEmpresa');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  React.useEffect(() => {\n    // Read Api Service data\n    console.log(\"generales de empresa\", props);\n    setTimeout(() => {\n      loadCountry();\n      loadSectorEconomic();\n      setDataReturn(props.datosEmpresa);\n      loadProvinces(props.datosEmpresa.country.code);\n      loadDistric(props.datosEmpresa.province.code);\n      loadCorregiment(props.datosEmpresa.district.code);\n      loadCity(props.datosEmpresa.township.code);\n      setswitch1(props.datosEmpresa.exclusion);\n      setswitch2(props.datosEmpresa.sustainable);\n    }, 1500);\n  }, [props.activeTab == 2]);\n  React.useEffect(() => {\n    // Read Api Service data\n    loadDefaultValue();\n  }, [paises, provincias, distrito, corregimiento]); // cargar secto economico\n\n  function loadSectorEconomic() {\n    const api = new CoreServices(); // getSectorEconomicoCatalogo\n\n    api.getSectorEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setSectorEconomico(json);\n    });\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"countryIdentification\") {\n      dataReturn.country.name = e.label;\n      dataReturn.country.code = e.value;\n    }\n\n    if (tipo == \"provinceIdentification\") {\n      dataReturn.province.name = e.label;\n      dataReturn.province.code = e.value;\n    }\n\n    if (tipo == \"districtIdentification\") {\n      dataReturn.district.name = e.label;\n      dataReturn.district.code = e.value;\n    }\n\n    if (tipo == \"townshipIdentification\") {\n      dataReturn.township.name = e.label;\n      dataReturn.township.code = e.value;\n    }\n\n    if (tipo == \"cityIdentification\") {\n      dataReturn.city.name = e.label;\n      dataReturn.city.code = e.value;\n    }\n\n    if (tipo == \"cityChangueManual\") {\n      dataReturn.city.name = e.target.value;\n      dataReturn.city.code = e.target.value;\n      ;\n    }\n\n    if (tipo == \"referencePoint\") {\n      dataReturn.referencePoint = e.target.value;\n    }\n\n    if (tipo == \"residency\") {\n      dataReturn.residency = e.target.value;\n    }\n\n    if (tipo == \"houseNumber\") {\n      dataReturn.houseNumber = e.target.value;\n    }\n\n    if (tipo == \"phoneNumber\") {\n      dataReturn.phoneNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"mobileNumber\") {\n      dataReturn.mobileNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"workNumber\") {\n      dataReturn.workNumber = Number(e.target.value);\n    }\n\n    if (tipo == \"email\") {\n      dataReturn.email = e.target.value;\n    }\n\n    if (tipo == \"sectorIdentification\") {\n      dataReturn.sector.name = e.label;\n      dataReturn.sector.code = e.value;\n    }\n\n    if (tipo == \"subSectorIdentification\") {\n      dataReturn.subSector.code = e.target.value;\n      dataReturn.subSector.name = e.target.selectedOptions[0].innerHTML;\n    }\n\n    if (tipo == \"exclusion\") {\n      dataReturn.exclusion = switch1;\n      setswitch1(!switch1);\n    }\n\n    if (tipo == \"sustainable\") {\n      dataReturn.sustainable = !switch2;\n      setswitch2(!switch2);\n    }\n\n    if (tipo == \"apto\") {\n      dataReturn.apto = e.target.value;\n    }\n\n    setDataReturn(dataReturn);\n  }\n\n  function loadDefaultValue() {\n    try {\n      var defaultVal = null; //console.log(\"provincia props\", props.datosEmpresa);\n      //console.log(\"provincia 1\", provincias);\n\n      if (provincias.length > 0 && props.datosEmpresa.province !== null && provinciasSelected === undefined) {\n        console.log(\"provincia\", provincias);\n        defaultVal = provincias.find(x => x.value === props.datosEmpresa.province.code);\n\n        if (defaultVal !== undefined) {\n          setProvinciasSelected(defaultVal);\n        }\n      }\n\n      if (distrito.length > 0 && props.datosEmpresa.district !== null && distritoSelected === undefined) {\n        defaultVal = distrito.find(x => x.value === props.datosEmpresa.district.code);\n\n        if (defaultVal !== undefined) {\n          setDistritoSelected(defaultVal);\n        }\n      }\n\n      if (corregimiento.length > 0 && props.datosEmpresa.township !== null && corregimientoSelected === undefined) {\n        defaultVal = corregimiento.find(x => x.value === props.datosEmpresa.township.code);\n\n        if (defaultVal !== undefined) {\n          setCorregimientoSelected(defaultVal);\n        }\n      }\n\n      if (ciudad.length > 0 && props.datosEmpresa.city !== null && ciudadSelected === undefined) {\n        defaultVal = ciudad.find(x => x.value === props.datosEmpresa.city.code);\n\n        if (defaultVal !== undefined) {\n          setCiudadSelected(defaultVal);\n        }\n      }\n\n      if (SectorEconomico.length > 0 && props.datosEmpresa.sector !== null && sectorSelect === undefined) {\n        defaultVal = SectorEconomico.find(x => x.value === props.datosEmpresa.sector.code);\n\n        if (defaultVal !== undefined) {\n          setsectorSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  } // Cargar paises\n\n\n  function loadCountry() {\n    const api = new CoreServices(); // getPaisesCatalogo\n\n    api.getPaisesCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setPaises(json);\n\n      try {\n        var defaultVal = null;\n\n        if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\n          defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\n\n          if (defaultVal !== undefined) {\n            setPaisesSelected(defaultVal);\n          }\n        }\n      } catch (err) {}\n    });\n  } // cargarProvincias\n\n\n  function loadProvinces(pais) {\n    const api = new CoreServices(); // getProvinciasCatalogo\n\n    api.getProvinciasCatalogo(pais).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setProvincias(json);\n      loadDefaultValue();\n    });\n  } // cargarDistrito\n\n\n  function loadDistric(provincia) {\n    const api = new CoreServices(); // getDistritoCatalogo\n\n    api.getDistritoCatalogo(provincia).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setDistrito(json);\n      loadDefaultValue();\n    });\n  } // cargarCorregimiento\n\n\n  function loadCorregiment(distrito) {\n    const api = new CoreServices(); // getCorregimientoCatalogo\n\n    api.getCorregimientoCatalogo(distrito).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setCorregimiento(json);\n    });\n  } // cargarCiudad\n\n\n  function loadCity(provincia) {\n    const api = new CoreServices(); // getCiudadCatalogo\n\n    api.getCiudadCatalogo(provincia).then(response => {\n      console.log(response);\n\n      if (response === null || response === undefined) {\n        setvalidacionCiudad(false);\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < (response === null || response === void 0 ? void 0 : response.Records.length); i++) {\n        json.push({\n          label: response === null || response === void 0 ? void 0 : response.Records[i][\"Description\"],\n          value: response === null || response === void 0 ? void 0 : response.Records[i][\"Code\"]\n        });\n      }\n\n      setvalidacionCiudad(true);\n      setCiudad(json);\n    });\n  }\n\n  function changeCountry(event) {\n    setDistrito([]);\n    setCorregimiento([]);\n    setCiudad([]);\n    setProvincias([]);\n    setCodigoPais(event.value);\n    loadProvinces(event.value);\n    changeAll(event, \"countryIdentification\");\n    dataReturn.province = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.district = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.city = {\n      code: \"\",\n      name: \"\"\n    };\n  }\n\n  function changeProvince(event) {\n    setCorregimiento([]);\n    setDistrito([]);\n    setCiudad([]);\n    loadCity(event.value);\n    setCodigoProvincia(event.value);\n    loadDistric(event.value);\n    changeAll(event, \"provinceIdentification\");\n    dataReturn.district = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n    dataReturn.city = {\n      code: \"\",\n      name: \"\"\n    };\n    setCorregimientoSelected(undefined);\n    setDistritoSelected(undefined);\n  }\n\n  function changeDisitric(event) {\n    setCorregimiento([]);\n    setCodigoDistrito(event.value);\n    loadCorregiment(event.value);\n    changeAll(event, \"districtIdentification\");\n    dataReturn.townshipIdentification = 0;\n    dataReturn.township = {\n      code: \"\",\n      name: \"\"\n    };\n  }\n\n  function changeCorregiment(event) {\n    setCodigoCorregimiento(event.value);\n    changeAll(event, \"townshipIdentification\");\n  }\n\n  function changeCity(event) {\n    setCodigoCiudad(event.value);\n    changeAll(event, \"cityIdentification\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    var _dataReturn$mobileNum, _dataReturn$workNumbe;\n\n    dataReturn.exclusion = switch1;\n    dataReturn.sustainable = switch2;\n    dataReturn.mobileNumber = Number((_dataReturn$mobileNum = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.mobileNumber) !== null && _dataReturn$mobileNum !== void 0 ? _dataReturn$mobileNum : 0);\n    dataReturn.workNumber = Number((_dataReturn$workNumbe = dataReturn === null || dataReturn === void 0 ? void 0 : dataReturn.workNumber) !== null && _dataReturn$workNumbe !== void 0 ? _dataReturn$workNumbe : 0);\n    dataReturn.province.code = provinciasSelected.value;\n    dataReturn.province.name = provinciasSelected.label;\n    dataReturn.district.code = distritoSelected.value;\n    dataReturn.district.name = distritoSelected.label;\n    dataReturn.township.code = corregimientoSelected.value;\n    dataReturn.township.name = corregimientoSelected.label;\n    setDataReturn(dataReturn);\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      dataReturn.formValid = false;\n      setDataReturn(dataReturn);\n      return;\n    }\n\n    dataReturn.formValid = true;\n    setDataReturn(dataReturn);\n    setFormValid(true);\n  } //On Mounting (componentDidMount)\n\n\n  React.useEffect(() => {\n    // Read Api Service data\n    loadInitialData();\n  }, []);\n\n  function loadInitialData() {\n    const api = new ApiServicesCommon(); // getSectorList\n\n    api.getSectorList().then(data => {\n      setSectorList(data);\n    }); // getSubSectorList\n\n    api.getSubSectorList().then(data => {\n      setSubsectorList(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"General of the Company\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmGeneralesEmpresa\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Country\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setPaisesSelected(paises.find(x => x.value === e.value));\n                changeCountry(e);\n              },\n              options: paises,\n              id: \"paises\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: paisesSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Province\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setProvinciasSelected(provincias.find(x => x.value === e.value));\n                changeProvince(e);\n              },\n              options: provincias,\n              id: \"provincias\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: provinciasSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"District\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setDistritoSelected(distrito.find(x => x.value === e.value));\n                changeDisitric(e);\n              },\n              options: distrito,\n              id: \"distrito\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: distritoSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Township\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setCorregimientoSelected(corregimiento.find(x => x.value === e.value));\n                changeCorregiment(e);\n              },\n              options: corregimiento,\n              id: \"corregimiento\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: corregimientoSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"City\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), validacionCiudad ? /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setCiudad(ciudad.find(x => x.value === e.value));\n                changeCity(e);\n              },\n              options: ciudad,\n              id: \"ciudad\",\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"toselect\"),\n              value: ciudadSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"cityChangueManual\");\n              },\n              className: \"form-control\",\n              name: \"ciudadManual\",\n              type: \"text\",\n              id: \"ciudadManual\",\n              placeholder: t(\"City\"),\n              value: (_props$datosEmpresa$c = props === null || props === void 0 ? void 0 : (_props$datosEmpresa = props.datosEmpresa) === null || _props$datosEmpresa === void 0 ? void 0 : (_props$datosEmpresa$c2 = _props$datosEmpresa.city) === null || _props$datosEmpresa$c2 === void 0 ? void 0 : _props$datosEmpresa$c2.name) !== null && _props$datosEmpresa$c !== void 0 ? _props$datosEmpresa$c : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"buildingResidence\",\n              children: t(\"Building/Residence\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"residency\");\n              },\n              className: \"form-control\",\n              name: \"buildingResidence\",\n              type: \"text\",\n              id: \"buildingResidence\",\n              value: props.datosEmpresa.residency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"apto\",\n              children: t(\"Apto\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"houseNumber\");\n              },\n              className: \"form-control\",\n              name: \"houseNumber\",\n              type: \"text\",\n              id: \"houseNumber\",\n              value: props.datosEmpresa.houseNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumber\",\n              children: t(\"Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"phoneNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumber\",\n              type: \"number\",\n              min: \"0\",\n              id: \"phoneNumber\",\n              value: (_props$datosEmpresa$p = props === null || props === void 0 ? void 0 : (_props$datosEmpresa2 = props.datosEmpresa) === null || _props$datosEmpresa2 === void 0 ? void 0 : _props$datosEmpresa2.phoneNumber) !== null && _props$datosEmpresa$p !== void 0 ? _props$datosEmpresa$p : 0,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumberMobile\",\n              children: t(\"Mobile Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"mobileNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumberMobile\",\n              type: \"number\",\n              id: \"phoneNumberMobile\",\n              min: \"0\",\n              value: (_props$datosEmpresa$m = props === null || props === void 0 ? void 0 : (_props$datosEmpresa3 = props.datosEmpresa) === null || _props$datosEmpresa3 === void 0 ? void 0 : _props$datosEmpresa3.mobileNumber) !== null && _props$datosEmpresa$m !== void 0 ? _props$datosEmpresa$m : 0,\n              validate: {\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"phoneNumberOffice\",\n              children: t(\"Office Phone Number\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"workNumber\");\n              },\n              className: \"form-control\",\n              name: \"phoneNumberOffice\",\n              type: \"number\",\n              id: \"phoneNumberOffice\",\n              value: props.datosEmpresa.workNumber,\n              validate: {\n                number: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"email\",\n              children: t(\"Email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                changeAll(e, \"email\");\n              },\n              className: \"form-control\",\n              name: \"email\",\n              type: \"email\",\n              id: \"email\",\n              value: props.datosEmpresa.email,\n              validate: {\n                required: {\n                  value: true,\n                  errorMessage: t(\"Required Field\")\n                },\n                email: {\n                  value: true,\n                  errorMessage: t(\"InvalidField\")\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"SustainableCustomer\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n              check: true,\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                name: \"theProjectInvolvePhysicalEconomicResettlement\",\n                uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 34\n                }, this),\n                checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 32\n                }, this),\n                onColor: \"#007943\",\n                className: \"form-label\",\n                onChange: () => {\n                  changeAll(\"e\", \"sustainable\");\n                },\n                checked: switch2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n}, \"SehPA+QLHIHTMnC+WaHyXxeg69o=\", false, function () {\n  return [useTranslation, React.useImperativeHandle];\n}));\n_c4 = GeneralesEmpresa;\nGeneralesEmpresa.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default GeneralesEmpresa;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"GeneralesEmpresa$React.forwardRef\");\n$RefreshReg$(_c4, \"GeneralesEmpresa\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/GeneralesEmpresa.js"],"names":["React","useState","PropTypes","useTranslation","Row","Col","Card","CardBody","Button","Label","AvForm","AvField","AvGroup","ApiServicesCommon","CoreServices","Select","Switch","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","GeneralesEmpresa","forwardRef","props","ref","t","i18n","paises","setPaises","paisesSelected","setPaisesSelected","undefined","codigoPais","setCodigoPais","switch1","setswitch1","switch2","setswitch2","provincias","setProvincias","provinciasSelected","setProvinciasSelected","codigoProvincia","setCodigoProvincia","distrito","setDistrito","distritoSelected","setDistritoSelected","codigoDistrito","setCodigoDistrito","corregimiento","setCorregimiento","corregimientoSelected","setCorregimientoSelected","codigoCorregimiento","setCodigoCorregimiento","clienteSostenibleSelect","setclienteSostenibleSelect","listaExclusionSelect","setlistaExclusionSelect","sectorSelect","setsectorSelect","ciudad","setCiudad","ciudadSelected","setCiudadSelected","codigoCiudad","setCodigoCiudad","dataReturn","setDataReturn","datosEmpresa","sectorList","setSectorList","subsectorList","setSubsectorList","formValid","setFormValid","SectorEconomico","setSectorEconomico","codigoSector","setcodigoSector","label","value","campoRequeridoSector","setcampoRequeridoSector","validacionCiudad","setvalidacionCiudad","campoRequeridoSostenible","setcampoRequeridoSostenible","campoRequeridoExclusion","setcampoRequeridoExclusion","listaExclusion","clienteSostenible","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","useEffect","console","log","setTimeout","loadCountry","loadSectorEconomic","loadProvinces","country","code","loadDistric","province","loadCorregiment","district","loadCity","township","exclusion","sustainable","activeTab","loadDefaultValue","api","getSectorEconomicoCatalogo","then","response","json","i","Records","length","push","changeAll","e","tipo","name","city","target","referencePoint","residency","houseNumber","phoneNumber","Number","mobileNumber","workNumber","email","sector","subSector","selectedOptions","innerHTML","apto","defaultVal","find","x","err","getPaisesCatalogo","pais","getProvinciasCatalogo","provincia","getDistritoCatalogo","getCorregimientoCatalogo","getCiudadCatalogo","changeCountry","event","changeProvince","changeDisitric","townshipIdentification","changeCorregiment","changeCity","handleSubmit","errors","values","preventDefault","loadInitialData","getSectorList","data","getSubSectorList","required","errorMessage","number","propTypes","onSubmit","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { CoreServices } from \"../../../../../services\";\r\nimport Select from \"react-select\";\r\nimport Switch from \"react-switch\";\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\nconst GeneralesEmpresa = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [paises, setPaises] = useState([]);\r\n  const [paisesSelected, setPaisesSelected] = useState(undefined);\r\n  const [codigoPais, setCodigoPais] = useState(null);\r\n  const [switch1, setswitch1] = useState(false);\r\n  const [switch2, setswitch2] = useState(false);\r\n  const [provincias, setProvincias] = useState([]);\r\n  const [provinciasSelected, setProvinciasSelected] = useState(undefined);\r\n  const [codigoProvincia, setCodigoProvincia] = useState(null);\r\n  const [distrito, setDistrito] = useState([]);\r\n  const [distritoSelected, setDistritoSelected] = useState(undefined);\r\n  const [codigoDistrito, setCodigoDistrito] = useState(null);\r\n  const [corregimiento, setCorregimiento] = useState([]);\r\n  const [corregimientoSelected, setCorregimientoSelected] = useState(undefined);\r\n  const [codigoCorregimiento, setCodigoCorregimiento] = useState(null);\r\n  const [clienteSostenibleSelect, setclienteSostenibleSelect] = useState(undefined);\r\n  const [listaExclusionSelect, setlistaExclusionSelect] = useState(undefined);\r\n  const [sectorSelect, setsectorSelect] = useState(undefined);\r\n  const [ciudad, setCiudad] = useState([]);\r\n  const [ciudadSelected, setCiudadSelected] = useState(undefined);\r\n  const [codigoCiudad, setCodigoCiudad] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState(props.datosEmpresa);\r\n  const [sectorList, setSectorList] = useState([]);\r\n  const [subsectorList, setSubsectorList] = useState([]);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [SectorEconomico, setSectorEconomico] = useState([]);\r\n  const [codigoSector, setcodigoSector] = useState({ label: \"\", value: \"\" });\r\n  const [campoRequeridoSector, setcampoRequeridoSector] = useState(false);\r\n  const [validacionCiudad, setvalidacionCiudad] = useState(false);\r\n  const [campoRequeridoSostenible, setcampoRequeridoSostenible] = useState(false);\r\n  const [campoRequeridoExclusion, setcampoRequeridoExclusion] = useState(false);\r\n  const listaExclusion = [{ label: \"No\", value: 1 }, { label: \"Si\", value: 2 }]\r\n  const clienteSostenible = [{ label: \"No\", value: 1 }, { label: \"Si\", value: 2 }]\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmGeneralesEmpresa');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }));\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    console.log(\"generales de empresa\", props);\r\n    setTimeout(() => {\r\n      loadCountry();\r\n      loadSectorEconomic();\r\n      setDataReturn(props.datosEmpresa)\r\n      loadProvinces(props.datosEmpresa.country.code);\r\n      loadDistric(props.datosEmpresa.province.code);\r\n      loadCorregiment(props.datosEmpresa.district.code);\r\n      loadCity(props.datosEmpresa.township.code);\r\n      setswitch1(props.datosEmpresa.exclusion);\r\n      setswitch2(props.datosEmpresa.sustainable);\r\n    }, 1500);\r\n\r\n  }, [props.activeTab == 2]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    loadDefaultValue()\r\n  }, [paises, provincias, distrito, corregimiento]);\r\n  // cargar secto economico\r\n  function loadSectorEconomic() {\r\n    const api = new CoreServices();\r\n    // getSectorEconomicoCatalogo\r\n    api.getSectorEconomicoCatalogo().then(response => {\r\n      if (response === null) { return; }\r\n      let json = [];\r\n      for (let i = 0; i < response?.Records.length; i++) {\r\n        json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n      }\r\n      setSectorEconomico(json);\r\n    })\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"countryIdentification\") {\r\n      dataReturn.country.name = e.label;\r\n      dataReturn.country.code = e.value;\r\n    }\r\n    if (tipo == \"provinceIdentification\") {\r\n      dataReturn.province.name = e.label;\r\n      dataReturn.province.code = e.value;\r\n    }\r\n    if (tipo == \"districtIdentification\") {\r\n      dataReturn.district.name = e.label;\r\n      dataReturn.district.code = e.value;\r\n    }\r\n    if (tipo == \"townshipIdentification\") {\r\n      dataReturn.township.name = e.label;\r\n      dataReturn.township.code = e.value;\r\n    }\r\n    if (tipo == \"cityIdentification\") {\r\n      dataReturn.city.name = e.label;\r\n      dataReturn.city.code = e.value;\r\n    }\r\n    if (tipo == \"cityChangueManual\") {\r\n      dataReturn.city.name = e.target.value;\r\n      dataReturn.city.code = e.target.value;;\r\n    }\r\n    if (tipo == \"referencePoint\") {\r\n      dataReturn.referencePoint = e.target.value;\r\n    }\r\n    if (tipo == \"residency\") {\r\n      dataReturn.residency = e.target.value;\r\n    }\r\n    if (tipo == \"houseNumber\") {\r\n      dataReturn.houseNumber = e.target.value;\r\n    }\r\n    if (tipo == \"phoneNumber\") {\r\n      dataReturn.phoneNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"mobileNumber\") {\r\n      dataReturn.mobileNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"workNumber\") {\r\n      dataReturn.workNumber = Number(e.target.value);\r\n    }\r\n    if (tipo == \"email\") {\r\n      dataReturn.email = e.target.value;\r\n    }\r\n    if (tipo == \"sectorIdentification\") {\r\n      dataReturn.sector.name = e.label;\r\n      dataReturn.sector.code = e.value;\r\n    }\r\n    if (tipo == \"subSectorIdentification\") {\r\n      dataReturn.subSector.code = e.target.value;\r\n      dataReturn.subSector.name = e.target.selectedOptions[0].innerHTML;\r\n    }\r\n    if (tipo == \"exclusion\") {\r\n      dataReturn.exclusion = switch1;\r\n      setswitch1(!switch1);\r\n    }\r\n    if (tipo == \"sustainable\") {\r\n      dataReturn.sustainable = !switch2;\r\n      setswitch2(!switch2);\r\n    }\r\n    if (tipo == \"apto\") {\r\n      dataReturn.apto = e.target.value;\r\n    }\r\n    setDataReturn(dataReturn)\r\n\r\n  }\r\n  function loadDefaultValue() {\r\n    try {\r\n      var defaultVal = null;\r\n      //console.log(\"provincia props\", props.datosEmpresa);\r\n      //console.log(\"provincia 1\", provincias);\r\n      if (provincias.length > 0 && props.datosEmpresa.province !== null && provinciasSelected === undefined) {\r\n        console.log(\"provincia\", provincias);\r\n        defaultVal = provincias.find(x => x.value === props.datosEmpresa.province.code);\r\n        if (defaultVal !== undefined) {\r\n          setProvinciasSelected(defaultVal);\r\n        }\r\n      }\r\n      if (distrito.length > 0 && props.datosEmpresa.district !== null && distritoSelected === undefined) {\r\n        defaultVal = distrito.find(x => x.value === props.datosEmpresa.district.code);\r\n        if (defaultVal !== undefined) {\r\n          setDistritoSelected(defaultVal);\r\n        }\r\n      }\r\n      if (corregimiento.length > 0 && props.datosEmpresa.township !== null && corregimientoSelected === undefined) {\r\n        defaultVal = corregimiento.find(x => x.value === props.datosEmpresa.township.code);\r\n        if (defaultVal !== undefined) {\r\n          setCorregimientoSelected(defaultVal);\r\n        }\r\n      }\r\n      if (ciudad.length > 0 && props.datosEmpresa.city !== null && ciudadSelected === undefined) {\r\n        defaultVal = ciudad.find(x => x.value === props.datosEmpresa.city.code);\r\n        if (defaultVal !== undefined) {\r\n          setCiudadSelected(defaultVal);\r\n        }\r\n      }\r\n      if (SectorEconomico.length > 0 && props.datosEmpresa.sector !== null && sectorSelect === undefined) {\r\n        defaultVal = SectorEconomico.find(x => x.value === props.datosEmpresa.sector.code);\r\n        if (defaultVal !== undefined) {\r\n          setsectorSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }\r\n  // Cargar paises\r\n  function loadCountry() {\r\n\r\n    const api = new CoreServices();\r\n    // getPaisesCatalogo\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        setPaises(json);\r\n        try {\r\n          var defaultVal = null;\r\n          if (json.length > 0 && props.datosEmpresa.country !== null && paisesSelected === undefined) {\r\n            defaultVal = json.find(x => x.value === props.datosEmpresa.country.code);\r\n            if (defaultVal !== undefined) {\r\n              setPaisesSelected(defaultVal);\r\n            }\r\n          }\r\n        }\r\n        catch (err) { }\r\n      });\r\n  }\r\n  // cargarProvincias\r\n  function loadProvinces(pais) {\r\n    const api = new CoreServices();\r\n    // getProvinciasCatalogo\r\n    api.getProvinciasCatalogo(pais)\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        setProvincias(json);\r\n        loadDefaultValue()\r\n      });\r\n  }\r\n  // cargarDistrito\r\n  function loadDistric(provincia) {\r\n    const api = new CoreServices();\r\n    // getDistritoCatalogo\r\n    api.getDistritoCatalogo(provincia)\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        setDistrito(json);\r\n        loadDefaultValue()\r\n      });\r\n  }\r\n  // cargarCorregimiento\r\n  function loadCorregiment(distrito) {\r\n    const api = new CoreServices();\r\n    // getCorregimientoCatalogo\r\n    api.getCorregimientoCatalogo(distrito)\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        setCorregimiento(json);\r\n      });\r\n  }\r\n  // cargarCiudad\r\n  function loadCity(provincia) {\r\n    const api = new CoreServices();\r\n    // getCiudadCatalogo\r\n    api.getCiudadCatalogo(provincia)\r\n      .then(response => {\r\n        console.log(response);\r\n        if (response === null || response === undefined) { setvalidacionCiudad(false); return; }\r\n        let json = [];\r\n        for (let i = 0; i < response?.Records.length; i++) {\r\n          json.push({ label: response?.Records[i][\"Description\"], value: response?.Records[i][\"Code\"] })\r\n        }\r\n        setvalidacionCiudad(true);\r\n        setCiudad(json);\r\n      });\r\n  }\r\n\r\n  function changeCountry(event) {\r\n    setDistrito([]);\r\n    setCorregimiento([]);\r\n    setCiudad([]);\r\n    setProvincias([]);\r\n    setCodigoPais(event.value);\r\n    loadProvinces(event.value);\r\n    changeAll(event, \"countryIdentification\")\r\n    dataReturn.province = { code: \"\", name: \"\" };\r\n    dataReturn.district = { code: \"\", name: \"\" };\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n    dataReturn.city = { code: \"\", name: \"\" };\r\n  }\r\n  function changeProvince(event) {\r\n    setCorregimiento([]);\r\n    setDistrito([]);\r\n    setCiudad([]);\r\n    loadCity(event.value);\r\n    setCodigoProvincia(event.value);\r\n    loadDistric(event.value);\r\n    changeAll(event, \"provinceIdentification\")\r\n    dataReturn.district = { code: \"\", name: \"\" };\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n    dataReturn.city = { code: \"\", name: \"\" };\r\n    setCorregimientoSelected(undefined)\r\n    setDistritoSelected(undefined)\r\n  }\r\n  function changeDisitric(event) {\r\n    setCorregimiento([]);\r\n    setCodigoDistrito(event.value);\r\n    loadCorregiment(event.value);\r\n    changeAll(event, \"districtIdentification\")\r\n\r\n    dataReturn.townshipIdentification = 0;\r\n    dataReturn.township = { code: \"\", name: \"\" };\r\n  }\r\n  function changeCorregiment(event) {\r\n    setCodigoCorregimiento(event.value);\r\n    changeAll(event, \"townshipIdentification\")\r\n  }\r\n  function changeCity(event) {\r\n    setCodigoCiudad(event.value);\r\n    changeAll(event, \"cityIdentification\")\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    dataReturn.exclusion = switch1;\r\n    dataReturn.sustainable = switch2;\r\n    dataReturn.mobileNumber = Number(dataReturn?.mobileNumber ?? 0);\r\n    dataReturn.workNumber = Number(dataReturn?.workNumber ?? 0);\r\n    dataReturn.province.code = provinciasSelected.value;\r\n    dataReturn.province.name = provinciasSelected.label;\r\n\r\n    dataReturn.district.code = distritoSelected.value;\r\n    dataReturn.district.name = distritoSelected.label;\r\n\r\n    dataReturn.township.code = corregimientoSelected.value;\r\n    dataReturn.township.name = corregimientoSelected.label;\r\n    setDataReturn(dataReturn)\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      dataReturn.formValid = false;\r\n      setDataReturn(dataReturn)\r\n      return;\r\n    }\r\n    dataReturn.formValid = true;\r\n    setDataReturn(dataReturn)\r\n    setFormValid(true);\r\n  }\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    loadInitialData();\r\n  }, []);\r\n  function loadInitialData() {\r\n    const api = new ApiServicesCommon()\r\n    // getSectorList\r\n    api.getSectorList().then((data) => { setSectorList(data); })\r\n    // getSubSectorList\r\n    api.getSubSectorList().then((data) => { setSubsectorList(data); })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"General of the Company\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmGeneralesEmpresa\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Country\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setPaisesSelected(paises.find(x => x.value === e.value))\r\n                  changeCountry(e);\r\n                }}\r\n                options={paises}\r\n                id=\"paises\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={paisesSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Province\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setProvinciasSelected(provincias.find(x => x.value === e.value))\r\n                  changeProvince(e);\r\n                }}\r\n                options={provincias}\r\n                id=\"provincias\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={provinciasSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"District\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setDistritoSelected(distrito.find(x => x.value === e.value))\r\n                  changeDisitric(e);\r\n                }}\r\n                options={distrito}\r\n                id=\"distrito\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={distritoSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Township\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setCorregimientoSelected(corregimiento.find(x => x.value === e.value))\r\n                  changeCorregiment(e);\r\n                }}\r\n                options={corregimiento}\r\n                id=\"corregimiento\"\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"toselect\")}\r\n                value={corregimientoSelected}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"City\")}</Label>\r\n              {validacionCiudad ?\r\n                <Select\r\n                  onChange={(e) => {\r\n                    setCiudad(ciudad.find(x => x.value === e.value))\r\n                    changeCity(e);\r\n                  }}\r\n                  options={ciudad}\r\n                  id=\"ciudad\"\r\n                  classNamePrefix=\"select2-selection\"\r\n                  placeholder={t(\"toselect\")}\r\n                  value={ciudadSelected}\r\n                />\r\n                : <AvField onChange={(e) => { changeAll(e, \"cityChangueManual\") }}\r\n                  className=\"form-control\"\r\n                  name=\"ciudadManual\"\r\n                  type=\"text\"\r\n                  id=\"ciudadManual\"\r\n                  placeholder={t(\"City\")}\r\n                  value={props?.datosEmpresa?.city?.name ?? \"\"}\r\n                />\r\n              }\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"buildingResidence\">{t(\"Building/Residence\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"residency\") }}\r\n                className=\"form-control\"\r\n                name=\"buildingResidence\"\r\n                type=\"text\"\r\n                id=\"buildingResidence\"\r\n                value={props.datosEmpresa.residency}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"apto\">{t(\"Apto\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"houseNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"houseNumber\"\r\n                type=\"text\"\r\n                id=\"houseNumber\"\r\n                value={props.datosEmpresa.houseNumber}\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n\r\n        </Row>\r\n\r\n        <Row>\r\n         \r\n        </Row>\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumber\">{t(\"Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"phoneNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumber\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                id=\"phoneNumber\"\r\n                value={props?.datosEmpresa?.phoneNumber ?? 0}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumberMobile\">{t(\"Mobile Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"mobileNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumberMobile\"\r\n                type=\"number\"\r\n                id=\"phoneNumberMobile\"\r\n                min=\"0\"\r\n                value={props?.datosEmpresa?.mobileNumber ?? 0}\r\n                validate={{\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"phoneNumberOffice\">{t(\"Office Phone Number\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"workNumber\") }}\r\n                className=\"form-control\"\r\n                name=\"phoneNumberOffice\"\r\n                type=\"number\"\r\n                id=\"phoneNumberOffice\"\r\n                value={props.datosEmpresa.workNumber}\r\n                validate={{\r\n                  number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n              <AvField onChange={(e) => { changeAll(e, \"email\") }}\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={props.datosEmpresa.email}\r\n                validate={{\r\n                  required: { value: true, errorMessage: t(\"Required Field\") },\r\n                  email: { value: true, errorMessage: t(\"InvalidField\") },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {/* <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"Apply for Exclusion List\")}</Label>\r\n              <AvGroup check className=\"mb-3\">\r\n                <Switch name=\"theProjectInvolvePhysicalEconomicResettlement\"\r\n                  uncheckedIcon={<Offsymbol />}\r\n                  checkedIcon={<OnSymbol />}\r\n                  onColor=\"#007943\"\r\n                  className=\"form-label\"\r\n                  onChange={() => {\r\n                    changeAll(\"e\", \"exclusion\");\r\n                  }}\r\n                  checked={switch1}\r\n                />\r\n              </AvGroup>\r\n            </div>\r\n          </Col> */}\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"SustainableCustomer\")}</Label>\r\n              <AvGroup check className=\"mb-3\">\r\n                <Switch name=\"theProjectInvolvePhysicalEconomicResettlement\"\r\n                  uncheckedIcon={<Offsymbol />}\r\n                  checkedIcon={<OnSymbol />}\r\n                  onColor=\"#007943\"\r\n                  className=\"form-label\"\r\n                  onChange={() => {\r\n                    changeAll(\"e\", \"sustainable\")\r\n                  }}\r\n                  checked={switch2}\r\n                />\r\n              </AvGroup>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n    </React.Fragment>);\r\n\r\n})\r\n\r\nGeneralesEmpresa.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default GeneralesEmpresa;"]},"metadata":{},"sourceType":"module"}