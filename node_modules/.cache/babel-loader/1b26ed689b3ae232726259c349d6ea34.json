{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\sales-analytics.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { BackendServices } from \"../../services\";\nimport * as moment from 'moment';\nimport { translationHelpers } from '../../helpers/translation-helper';\nimport { Button, Label, Input, CardHeader, CardTitle, InputGroup, Table, CardFooter } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [t] = translationHelpers('translation');\n\nclass SalesAnalytics extends Component {\n  constructor(props) {\n    super(props);\n    this.backendServices = new BackendServices();\n    this.inicialize();\n    this.state = {\n      series: [],\n      options: {\n        labels: [],\n        plotOptions: {\n          pie: {\n            donut: {\n              size: '75%'\n            }\n          }\n        },\n        legend: {\n          show: false\n        },\n        colors: ['#3b5de7', '#45cb85', '#eeb902'],\n        events: {\n          dataPointSelection: (event, chartContext, config) => {\n            console.log(config.w.config.labels[config.dataPointIndex]);\n          }\n        },\n        chart: {\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              let options = config.w.config.labels[config.dataPointIndex];\n              let statistic = this.state.statistics.filter(statistic => statistic.activityBpmName === options);\n              let dataRows = statistic.map(statistic => [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: statistic.transactId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: statistic.processBpmName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: statistic.activityBpmName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.formatDate(statistic.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this)]\n              }, statistic.transactId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 18\n              }, this)]);\n              this.setState({ ...this.state,\n                detailStatistic: statistic,\n                dataRows\n              });\n            }\n          },\n          toolbar: {\n            show: true,\n            offsetX: 0,\n            offsetY: 0,\n            tools: {\n              download: true,\n              selection: true,\n              zoom: true,\n              zoomin: true,\n              zoomout: true,\n              pan: true,\n              reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\n              customIcons: []\n            }\n          }\n        },\n        statistics: [],\n        detailStatistic: null,\n        dataRows: null\n      }\n    };\n  }\n\n  inicialize() {\n    this.backendServices.getBpmStatistics().then(resp => {\n      console.log(resp);\n      let processBpmId = this.groupBy(resp, \"activityBpmName\");\n      let labels = processBpmId.map(process => process.at(0).activityBpmName);\n      let series = processBpmId.map(process => process.length);\n      this.setState({ ...this.state,\n        series,\n        options: { ...this.state.options,\n          labels\n        },\n        statistics: resp\n      });\n    }).catch(err => {});\n  }\n  /**\r\n   * groupBy, agrupa los items de un JSON\r\n   * @param {Array} collection array JSON\r\n   * @param {string} property clave a agrupar\r\n   * @returns {Array}\r\n   */\n\n\n  groupBy(collection, property) {\n    var i = 0,\n        val,\n        index,\n        values = [],\n        result = [];\n\n    for (; i < collection.length; i++) {\n      val = collection[i][property];\n      index = values.indexOf(val);\n      if (index > -1) result[index].push(collection[i]);else {\n        values.push(val);\n        result.push([collection[i]]);\n      }\n    }\n\n    return result;\n  }\n\n  formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-4\",\n            children: \"Estad\\xEDsticas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n                options: this.state.options,\n                series: this.state.series,\n                type: \"donut\",\n                height: 245,\n                onClick: e => {},\n                className: \"apex-charts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), this.state.detailStatistic && /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive styled-table-div\",\n                    style: {\n                      maxHeight: '300px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      className: \"table table-striped table-hover styled-table table\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Procedure\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 156,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Process\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 157,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Activity\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 158,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Date\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: this.state.dataRows\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SalesAnalytics;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/sales-analytics.js"],"names":["React","Component","Row","Col","Card","CardBody","ReactApexChart","BackendServices","moment","translationHelpers","Button","Label","Input","CardHeader","CardTitle","InputGroup","Table","CardFooter","t","SalesAnalytics","constructor","props","backendServices","inicialize","state","series","options","labels","plotOptions","pie","donut","size","legend","show","colors","events","dataPointSelection","event","chartContext","config","console","log","w","dataPointIndex","chart","statistic","statistics","filter","activityBpmName","dataRows","map","transactId","processBpmName","formatDate","date","setState","detailStatistic","toolbar","offsetX","offsetY","tools","download","selection","zoom","zoomin","zoomout","pan","reset","customIcons","getBpmStatistics","then","resp","processBpmId","groupBy","process","at","length","catch","err","collection","property","i","val","index","values","result","indexOf","push","format","render","e","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Row, Col, Card, CardBody } from \"reactstrap\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { BackendServices } from \"../../services\";\r\nimport * as moment from 'moment';\r\nimport { translationHelpers } from '../../helpers/translation-helper';\r\nimport {\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  CardTitle,\r\n  InputGroup,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nconst [t] = translationHelpers('translation');\r\n\r\nclass SalesAnalytics extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.backendServices = new BackendServices();\r\n    this.inicialize();\r\n\r\n    this.state = {\r\n      series: [],\r\n      options: {\r\n        labels: [],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              size: '75%'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n        colors: ['#3b5de7', '#45cb85', '#eeb902'],\r\n        events: {\r\n          dataPointSelection: (event, chartContext, config) => {\r\n            console.log(config.w.config.labels[config.dataPointIndex])\r\n          }\r\n        },\r\n        chart: {\r\n          events: {\r\n            dataPointSelection: (event, chartContext, config) => {\r\n              let options = config.w.config.labels[config.dataPointIndex];\r\n              let statistic = this.state.statistics.filter(statistic => statistic.activityBpmName === options);\r\n              let dataRows = statistic.map(statistic => (\r\n                [<tr key={statistic.transactId}>\r\n                  <td>\r\n                    {statistic.transactId}\r\n                  </td>\r\n                  <td>\r\n                    {statistic.processBpmName}\r\n                  </td>\r\n                  <td>\r\n                    {statistic.activityBpmName}\r\n                  </td>\r\n                  <td>\r\n                    {this.formatDate(statistic.date)}\r\n                  </td>\r\n                </tr>]\r\n              ));\r\n              this.setState({ ...this.state, detailStatistic: statistic, dataRows });\r\n            }\r\n          },\r\n          toolbar: {\r\n            show: true,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            tools: {\r\n              download: true,\r\n              selection: true,\r\n              zoom: true,\r\n              zoomin: true,\r\n              zoomout: true,\r\n              pan: true,\r\n              reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n              customIcons: []\r\n            },\r\n          }\r\n        },\r\n        statistics: [],\r\n        detailStatistic: null,\r\n        dataRows: null\r\n      }\r\n    }\r\n  }\r\n\r\n  inicialize() {\r\n    this.backendServices.getBpmStatistics().then(resp => {\r\n      console.log(resp);\r\n      let processBpmId = this.groupBy(resp, \"activityBpmName\");\r\n      let labels = processBpmId.map(process => process.at(0).activityBpmName);\r\n      let series = processBpmId.map(process => process.length);\r\n      this.setState({ ...this.state, series, options: { ...this.state.options, labels }, statistics: resp });\r\n    }).catch(err => { })\r\n  }\r\n\r\n  /**\r\n   * groupBy, agrupa los items de un JSON\r\n   * @param {Array} collection array JSON\r\n   * @param {string} property clave a agrupar\r\n   * @returns {Array}\r\n   */\r\n  groupBy(collection, property) {\r\n    var i = 0, val, index,\r\n      values = [], result = [];\r\n    for (; i < collection.length; i++) {\r\n      val = collection[i][property];\r\n      index = values.indexOf(val);\r\n      if (index > -1)\r\n        result[index].push(collection[i]);\r\n      else {\r\n        values.push(val);\r\n        result.push([collection[i]]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardBody>\r\n            <h4 className=\"card-title mb-4\">Estadísticas</h4>\r\n\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <ReactApexChart\r\n                  options={this.state.options}\r\n                  series={this.state.series}\r\n                  type=\"donut\"\r\n                  height={245}\r\n                  onClick={(e) => { }}\r\n                  className=\"apex-charts\"\r\n\r\n                />\r\n              </Col>\r\n              {this.state.detailStatistic && <Col sm={12}>\r\n                <div>\r\n                  <Row>\r\n                    <div className=\"table-responsive styled-table-div\" style={{ maxHeight: '300px' }}>\r\n                      <Table className=\"table table-striped table-hover styled-table table\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Procedure\")}</th>\r\n                            <th>{t(\"Process\")}</th>\r\n                            <th>{t(\"Activity\")}</th>\r\n                            <th>{t(\"Date\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {this.state.dataRows}\r\n                        </tbody>\r\n                      </Table>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              </Col>}\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SalesAnalytics\r\n"]},"metadata":{},"sourceType":"module"}