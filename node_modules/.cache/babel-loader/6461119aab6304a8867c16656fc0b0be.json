{"ast":null,"code":"import axios from \"axios\";\nimport * as url from \"../helpers/url_helper\";\nimport * as opt from \"../helpers/options_helper\";\nimport qs from 'qs';\nimport LocalStorageHelper from \"../helpers/LocalStorageHelper\";\nconst localStorageHelper = new LocalStorageHelper(); //apply base url for axios\n\nconst API_URL = \"\";\nconst axiosApi = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\naxiosApi.interceptors.request.use(config => {\n  var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);\n  console.log(credentials);\n  config.headers[\"Authorization\"] = \"Basic \" + btoa(credentials.usr + \":\" + credentials.psw);\n  return config;\n}, error => {\n  console.log(\"request error: \", error);\n  return Promise.reject(error);\n});\nexport default class ApiServiceCore {\n  setDataError(err) {\n    /*let jsonError = {\r\n      code: err.response.status,\r\n      error: true,\r\n      message: err.response.data,\r\n      method: err.response.config.method,\r\n      serviceType: \"bk\",\r\n      url: err.response.config.url,\r\n    }\r\n      localStorage.setItem(\"jsonError\", JSON.stringify(jsonError))\r\n    const event = new CustomEvent('errorSoaint', jsonError);\r\n    event.initEvent(\"errorSoaint\", true, true);\r\n    window.dispatchEvent(event);\r\n    */\n  }\n\n  async get(url, config = {}) {\n    return await axiosApi.get(url, { ...config\n    }).then(response => response.data).catch(err => {\n      this.setDataError(err);\n    });\n  }\n\n  async post(url, data, config = {}) {\n    return axiosApi.post(url, { ...data\n    }, { ...config\n    }).then(response => response.data).catch(err => {\n      this.setDataError(err);\n    });\n  }\n\n  async put(url, data, config = {}) {\n    return axiosApi.put(url, { ...data\n    }, { ...config\n    }).then(response => response.data).catch(err => {\n      this.setDataError(err);\n    });\n  }\n\n  async del(url, data, config = {}) {\n    return await axiosApi.delete(url, {\n      data: data\n    }, { ...config\n    }).then(response => response.data).catch(err => {\n      this.setDataError(err);\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/ApiServiceBpm.js"],"names":["axios","url","opt","qs","LocalStorageHelper","localStorageHelper","API_URL","axiosApi","create","baseURL","headers","interceptors","request","use","config","credentials","get","VARNAME_USRCREDENTIAL","console","log","btoa","usr","psw","error","Promise","reject","ApiServiceCore","setDataError","err","then","response","data","catch","post","put","del","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport * as url from \"../helpers/url_helper\"\r\nimport * as opt from \"../helpers/options_helper\"\r\nimport qs from 'qs';\r\n\r\nimport LocalStorageHelper from \"../helpers/LocalStorageHelper\";\r\n    \r\n    const localStorageHelper = new LocalStorageHelper();\r\n    //apply base url for axios\r\n    const API_URL = \"\"\r\n    \r\n    const axiosApi = axios.create({\r\n      baseURL: API_URL,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n    \r\n    axiosApi.interceptors.request.use(\r\n      (config) => {  \r\n        var credentials = localStorageHelper.get(opt.VARNAME_USRCREDENTIAL);  \r\n        console.log(credentials);\r\n        config.headers[\"Authorization\"] = \"Basic \" + btoa(credentials.usr + \":\" + credentials.psw);\r\n        return config;\r\n      },\r\n      (error) => {\r\n        console.log(\"request error: \", error)\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    \r\nexport default class ApiServiceCore {\r\n\r\n  setDataError(err) {\r\n\r\n    /*let jsonError = {\r\n      code: err.response.status,\r\n      error: true,\r\n      message: err.response.data,\r\n      method: err.response.config.method,\r\n      serviceType: \"bk\",\r\n      url: err.response.config.url,\r\n    }\r\n\r\n    localStorage.setItem(\"jsonError\", JSON.stringify(jsonError))\r\n    const event = new CustomEvent('errorSoaint', jsonError);\r\n    event.initEvent(\"errorSoaint\", true, true);\r\n    window.dispatchEvent(event);\r\n    */\r\n  }\r\n\r\n    async get(url, config = {}) {\r\n      return await axiosApi\r\n      .get(url, { ...config })\r\n      .then(response => response.data).catch(err => {\r\n        this.setDataError(err);\r\n      });\r\n\r\n    } \r\n\r\n    async post(url, data,config = {}) {\r\n      return axiosApi\r\n        .post(url, { ...data },{ ...config })\r\n        .then(response => response.data).catch(err => {\r\n          this.setDataError(err);\r\n        });\r\n    }\r\n\r\n    async put(url, data, config = {}) {\r\n      return axiosApi\r\n        .put(url, { ...data }, { ...config })\r\n        .then(response => response.data).catch(err => {\r\n          this.setDataError(err);\r\n        });\r\n    }\r\n\r\n    async del(url,data, config = {}) {\r\n      return await axiosApi\r\n        .delete(url,{ data: data}, { ...config })\r\n        .then(response => response.data).catch(err => {\r\n          this.setDataError(err);\r\n        });\r\n    }\r\n}\r\n  \r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module"}