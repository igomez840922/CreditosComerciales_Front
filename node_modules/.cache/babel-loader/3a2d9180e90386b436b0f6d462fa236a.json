{"ast":null,"code":"import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import TokenService from\"./TokenService\";import*as url from\"../helpers/url_helper\";import qs from'qs';import http from\"http\";import https from\"https\";var client_id='6cbk7drlvbc88vdgvgo1tg1r3o';//'rrcmi5fefq56q4bc9pri0mfa0';//\nvar client_secret='b9vti5n8pbn1cn2gr35vlgq8s3uq7mm1j2d79ih0u1jjb4hkd3m';//'k7f89803rmgu8n93ppr3e2honuguo064ga8co4oqgml8k0tdrbp';//\nvar httpAgent=new http.Agent({keepAlive:true});var httpsAgent=new https.Agent({keepAlive:true});//apply base url for axios\nvar API_URL=\"\";var axiosApi=axios.create({baseURL:API_URL,httpAgent:httpAgent,httpsAgent:httpsAgent,headers:{\"Content-Type\":\"application/json\"}});/*\r\n    axiosApi.interceptors.response.use(\r\n      response => response,\r\n      error => Promise.reject(error)\r\n    )\r\n    */axiosApi.interceptors.request.use(function(config){var token=TokenService.getLocalAccessToken();if(token){config.headers[\"Authorization\"]='Bearer '+token.access_token;//config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n}// console.log('config: ',config);\nreturn config;},function(error){return Promise.reject(error);});axiosApi.interceptors.response.use(function(res){return res;},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err){var originalConfig,token,elapsed,data,headers,rs,responsetokenJson,tokenexpiration;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://return Promise.reject(err);\nconsole.log('err: ',err);originalConfig=err.config;// console.log('originalConfig: ',originalConfig);\nif(!(originalConfig.url===url.URL_CORE_TOKENGEN)){_context.next=4;break;}return _context.abrupt(\"return\",Promise.reject(err));case 4:token=TokenService.getLocalAccessToken();//si existe Token chequear la validez de tiempo\nif(!token){_context.next=9;break;}//calculamos que el expiration time est√© correcto\nelapsed=new Date().getTime()-token.tokenexpiration;if(!(elapsed<0)){_context.next=9;break;}return _context.abrupt(\"return\",Promise.reject(err));case 9:TokenService.removeLocalAccessToken();originalConfig._retry=true;_context.prev=11;data=qs.stringify({grant_type:'client_credentials'});headers={'Content-Type':'application/x-www-form-urlencoded','Authorization':\"Basic \"+btoa(client_id+\":\"+client_secret)};_context.next=16;return axiosApi.post(url.URL_CORE_TOKENGEN,data,{headers:headers});case 16:rs=_context.sent;responsetokenJson=rs.data;tokenexpiration=new Date();tokenexpiration.setSeconds(new Date().getSeconds()+parseInt(responsetokenJson.expires_in));responsetokenJson.tokenexpiration=tokenexpiration.getTime();TokenService.updateLocalAccessToken(responsetokenJson);originalConfig.headers[\"Authorization\"]='Bearer '+responsetokenJson.access_token;return _context.abrupt(\"return\",axiosApi(originalConfig));case 26:_context.prev=26;_context.t0=_context[\"catch\"](11);return _context.abrupt(\"return\",Promise.reject(_context.t0));case 29:case\"end\":return _context.stop();}}},_callee,null,[[11,26]]);}));return function(_x){return _ref.apply(this,arguments);};}());var ApiServiceCore=/*#__PURE__*/function(){function ApiServiceCore(){_classCallCheck(this,ApiServiceCore);}_createClass(ApiServiceCore,[{key:\"get\",value:function(){var _get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url){var config,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config=_args2.length>1&&_args2[1]!==undefined?_args2[1]:{};_context2.next=3;return axiosApi.get(url,_objectSpread({},config)).then(function(response){return response.data;});case 3:return _context2.abrupt(\"return\",_context2.sent);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function get(_x2){return _get.apply(this,arguments);}return get;}()},{key:\"post\",value:function(){var _post=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url,data){var config,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config=_args3.length>2&&_args3[2]!==undefined?_args3[2]:{};return _context3.abrupt(\"return\",axiosApi.post(url,_objectSpread({},data),_objectSpread({},config)).then(function(response){return response.data;}));case 2:case\"end\":return _context3.stop();}}},_callee3);}));function post(_x3,_x4){return _post.apply(this,arguments);}return post;}()},{key:\"put\",value:function(){var _put=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url,data){var config,_args4=arguments;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:config=_args4.length>2&&_args4[2]!==undefined?_args4[2]:{};return _context4.abrupt(\"return\",axiosApi.put(url,_objectSpread({},data),_objectSpread({},config)).then(function(response){return response.data;}));case 2:case\"end\":return _context4.stop();}}},_callee4);}));function put(_x5,_x6){return _put.apply(this,arguments);}return put;}()},{key:\"del\",value:function(){var _del=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url){var config,_args5=arguments;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:config=_args5.length>1&&_args5[1]!==undefined?_args5[1]:{};_context5.next=3;return axiosApi.delete(url,_objectSpread({},config)).then(function(response){return response.data;});case 3:return _context5.abrupt(\"return\",_context5.sent);case 4:case\"end\":return _context5.stop();}}},_callee5);}));function del(_x7){return _del.apply(this,arguments);}return del;}()//////////////////////////////\n//////////////////////////////\n/*\r\n\r\nfetch = function() {\r\n  let self = this;\r\n  let args = arguments;\r\n  return originalFetch.apply(self, args).then(async function(data) {\r\n    if (data.status === 200)\r\n      console.log(\"---------Status 200----------\");\r\n    if (data.status === 401) {\r\n      // request for token with original fetch if status is 401\r\n      console.log('failed');\r\n      let response = await originalFetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n      // if status is 401 from token api return empty response to close recursion\r\n      console.log(\"==========401 UnAuthorize.=============\");\r\n      console.log(response);\r\n      if (response.status === 401) {\r\n        return {};\r\n      }\r\n      // else set token\r\n      // recall old fetch\r\n      // here i used 200 because 401 or 404 old response will cause it to rerun\r\n      // return fetch(...args); <- change to this for real scenarios\r\n      // return fetch(args[0], args[1]); <- or to this for real sceaerios\r\n      return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    }\r\n    // condition will be tested again after 401 condition and will be ran with old args\r\n    if (data.status === 404) {\r\n      console.log(\"==========404 Not Found.=============\");\r\n      // here i used 200 because 401 or 404 old response will cause it to rerun\r\n      // return fetch(...args); <- change to this for real scenarios\r\n      // return fetch(args[0], args[1]); <- or to this for real scenarios\r\n      return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n      //scenaerios\r\n    }\r\n    else {\r\n      return data;\r\n    }\r\n  });\r\n};\r\n*/}]);return ApiServiceCore;}();export{ApiServiceCore as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/ApiServiceCore.js"],"names":["axios","TokenService","url","qs","http","https","client_id","client_secret","httpAgent","Agent","keepAlive","httpsAgent","API_URL","axiosApi","create","baseURL","headers","interceptors","request","use","config","token","getLocalAccessToken","access_token","error","Promise","reject","response","res","err","console","log","originalConfig","URL_CORE_TOKENGEN","elapsed","Date","getTime","tokenexpiration","removeLocalAccessToken","_retry","data","stringify","grant_type","btoa","post","rs","responsetokenJson","setSeconds","getSeconds","parseInt","expires_in","updateLocalAccessToken","ApiServiceCore","get","then","put","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport TokenService from \"./TokenService\";\r\nimport * as url from \"../helpers/url_helper\"\r\nimport qs from 'qs';\r\nimport http from \"http\";\r\nimport https from \"https\";\r\n\r\nconst client_id = '6cbk7drlvbc88vdgvgo1tg1r3o'; //'rrcmi5fefq56q4bc9pri0mfa0';//\r\nconst client_secret = 'b9vti5n8pbn1cn2gr35vlgq8s3uq7mm1j2d79ih0u1jjb4hkd3m'//'k7f89803rmgu8n93ppr3e2honuguo064ga8co4oqgml8k0tdrbp';//\r\n\r\nconst httpAgent = new http.Agent({ keepAlive: true })\r\nconst httpsAgent = new https.Agent({ keepAlive: true })\r\n\r\n    //apply base url for axios\r\n    const API_URL = \"\"\r\n\r\n    const axiosApi = axios.create({\r\n      baseURL: API_URL,\r\n      httpAgent,\r\n      httpsAgent,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n    })\r\n\r\n    /*\r\n    axiosApi.interceptors.response.use(\r\n      response => response,\r\n      error => Promise.reject(error)\r\n    )\r\n    */\r\n\r\n    axiosApi.interceptors.request.use(\r\n      (config) => {\r\n        const token = TokenService.getLocalAccessToken();\r\n        if (token) {\r\n          config.headers[\"Authorization\"] = 'Bearer ' + token.access_token;\r\n          //config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\r\n        }\r\n\r\n        // console.log('config: ',config);\r\n\r\n        return config;\r\n      },\r\n      (error) => {\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n\r\n    axiosApi.interceptors.response.use(\r\n      (res) => {\r\n        return res;\r\n      },\r\n      async (err) => {\r\n        //return Promise.reject(err);\r\n\r\n        console.log('err: ',err);\r\n        const originalConfig = err.config;\r\n\r\n        // console.log('originalConfig: ',originalConfig);\r\n        if(originalConfig.url === url.URL_CORE_TOKENGEN)\r\n        {\r\n          return Promise.reject(err);\r\n        }\r\n\r\n        var token = TokenService.getLocalAccessToken();\r\n\r\n        //si existe Token chequear la validez de tiempo\r\n        if(token)\r\n        {\r\n          //calculamos que el expiration time est√© correcto\r\n          var elapsed = (new Date()).getTime() - token.tokenexpiration;\r\n\r\n          if(elapsed < 0){\r\n            return Promise.reject(err);\r\n          }\r\n        }\r\n\r\n        TokenService.removeLocalAccessToken();\r\n\r\n        originalConfig._retry = true;\r\n        try {\r\n\r\n          const data = qs.stringify({grant_type: 'client_credentials'});\r\n          const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\r\n          };\r\n\r\n          var rs = await axiosApi.post(url.URL_CORE_TOKENGEN, data, {\r\n            headers: headers\r\n          });\r\n\r\n          var responsetokenJson = rs.data;\r\n\r\n          var tokenexpiration= new Date();\r\n          tokenexpiration.setSeconds(new Date().getSeconds() + parseInt(responsetokenJson.expires_in))\r\n          responsetokenJson.tokenexpiration = tokenexpiration.getTime();\r\n\r\n          TokenService.updateLocalAccessToken(responsetokenJson);\r\n\r\n          originalConfig.headers[\"Authorization\"] = 'Bearer ' + responsetokenJson.access_token;\r\n          return axiosApi(originalConfig);\r\n\r\n        }\r\n        catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n\r\n        /*\r\n        //originalConfig.url !== \"/auth/signin\" &&\r\n        if (err.response) {\r\n          // Access Token was expired\r\n          if (err.response.status === 401 && !originalConfig._retry) {\r\n            originalConfig._retry = true;\r\n\r\n            try {\r\n\r\n              const data = qs.stringify({\r\n                grant_type: 'client_credentials'\r\n              });\r\n              const headers = {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': \"Basic \" + btoa(client_id + \":\" + client_secret)\r\n              };\r\n\r\n              const rs = await axiosApi.post(url_TokenGeneration,\r\n                data,headers\r\n              );\r\n\r\n              console.log(rs.data);\r\n              TokenService.updateLocalAccessToken(rs.data);\r\n\r\n              //const { accessToken } = rs.data;\r\n              return axiosApi(originalConfig);\r\n\r\n            }\r\n            catch (_error) {\r\n              return Promise.reject(_error);\r\n            }\r\n          }\r\n        }\r\n\r\n        return Promise.reject(err);\r\n\r\n        */\r\n      }\r\n    );\r\n\r\n\r\nexport default class ApiServiceCore {\r\n\r\n    async get(url, config = {}) {\r\n      return await axiosApi\r\n      .get(url, { ...config })\r\n      .then(response => response.data)\r\n    }\r\n\r\n    async post(url, data,config = {}) {\r\n      return axiosApi\r\n        .post(url, { ...data },{...config})\r\n        .then(response => response.data)\r\n    }\r\n\r\n    async put(url, data, config = {}) {\r\n      return axiosApi\r\n        .put(url, { ...data }, { ...config })\r\n        .then(response => response.data)\r\n    }\r\n\r\n    async del(url, config = {}) {\r\n      return await axiosApi\r\n        .delete(url, { ...config })\r\n        .then(response => response.data)\r\n    }\r\n\r\n    //////////////////////////////\r\n    //////////////////////////////\r\n\r\n    /*\r\n\r\nfetch = function() {\r\n  let self = this;\r\n  let args = arguments;\r\n  return originalFetch.apply(self, args).then(async function(data) {\r\n    if (data.status === 200)\r\n      console.log(\"---------Status 200----------\");\r\n    if (data.status === 401) {\r\n      // request for token with original fetch if status is 401\r\n      console.log('failed');\r\n      let response = await originalFetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n      // if status is 401 from token api return empty response to close recursion\r\n      console.log(\"==========401 UnAuthorize.=============\");\r\n      console.log(response);\r\n      if (response.status === 401) {\r\n        return {};\r\n      }\r\n      // else set token\r\n      // recall old fetch\r\n      // here i used 200 because 401 or 404 old response will cause it to rerun\r\n      // return fetch(...args); <- change to this for real scenarios\r\n      // return fetch(args[0], args[1]); <- or to this for real sceaerios\r\n      return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n    }\r\n    // condition will be tested again after 401 condition and will be ran with old args\r\n    if (data.status === 404) {\r\n      console.log(\"==========404 Not Found.=============\");\r\n      // here i used 200 because 401 or 404 old response will cause it to rerun\r\n      // return fetch(...args); <- change to this for real scenarios\r\n      // return fetch(args[0], args[1]); <- or to this for real scenarios\r\n      return fetch(TEMP_API['200'].url, TEMP_API['200'].args);\r\n      //scenaerios\r\n    }\r\n    else {\r\n      return data;\r\n    }\r\n  });\r\n};\r\n*/\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}