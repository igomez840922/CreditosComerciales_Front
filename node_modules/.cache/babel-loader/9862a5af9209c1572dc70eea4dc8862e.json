{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\BlackListForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types'; //i18n\n\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table, Alert, UncontrolledAlert, Modal } from \"reactstrap\";\nimport Switch from \"react-switch\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport LoadingOverlay from 'react-loading-overlay';\nimport watchlist from \" ../../../models/Core/WatchListModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlackListForm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [selectClient, setselectClient] = useState(props.clientSelected);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined); //Lista de resultados de BlackList\n\n  const [dataBlackListResult, setdataBlackListResult] = useState([]);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [showLoading, setshowLoading] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    fetchData();\n  }, []); //Caraga Inicial de datos\n\n  function fetchData() {\n    loadIdentificationTypes();\n    loadPersonTypes();\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n        setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n        setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.personType) : json[0]);\n      }\n    }).catch(error => {});\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormBlackList(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson[e.target.name] = e.target.value;\n    setselectClient(clientPerson); //si la persona es juridica auto seleccionamos RUC\n\n    if (clientPerson.personType === 2) {\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\n    }\n  } //Guardar el Cliente\n\n\n  function handleSubmitFormBlackList(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } //retornar los datos recolectados \n\n\n    const form = document.getElementById('frmSearch');\n    let dataModel = watchlist.getRequestModel();\n\n    switch (form.identificationType.value) {\n      case \"RUC\":\n        {\n          dataModel.pTypeId = 'JURIDICA';\n          dataModel.pCustomerId = form.customerDocumentId.value;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: form.firstName.value\n          });\n          break;\n        }\n\n      case \"CED\":\n        {\n          dataModel.pTypeId = 'CEDULA';\n          dataModel.pCustomerId = form.customerDocumentId.value;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: form.firstName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: form.secondName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: form.firstLastName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: form.secondLastName.value\n          });\n          break;\n        }\n\n      default:\n        {\n          dataModel.pTypeId = 'PASAPORTE';\n          dataModel.pCustomerId = form.customerDocumentId.value;\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: form.firstName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_NOMBRE\",\n            _x003C_Value_x003E_k__BackingField: form.secondName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"PRIMER_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: form.firstLastName.value\n          });\n          dataModel.pCustomerListParams.KeyValueParam.push({\n            _x003C_Key_x003E_k__BackingField: \"SEGUNDO_APELLIDO\",\n            _x003C_Value_x003E_k__BackingField: form.secondLastName.value\n          });\n          break;\n        }\n    }\n  } //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\n\n\n  function getClientDataFormByPersonType(personType) {\n    if (personType === undefined) {\n      return null;\n    }\n\n    switch (personType.value) {\n      case 1:\n        {\n          //Natural\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"FirstName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"name\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.name : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.secondName : '' //errorMessage={t(\"Required Field\")}\n                  //validate={{ required: { value: true } }} \n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.lastName : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondSurname\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondSurname\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormBlackList,\n                  value: selectClient !== undefined ? selectClient.secondSurname : '' //errorMessage={t(\"Required Field\")}\n                  //validate={{ required: { value: true } }} \n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 18\n          }, this);\n        }\n\n      case 2:\n        {\n          //Juridica\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"name\",\n                type: \"text\",\n                onChange: handleChangeInputFormBlackList,\n                value: selectClient !== undefined ? selectClient.name : '',\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this);\n        }\n    }\n\n    return null;\n  } //Show Message \n\n\n  function showMessage(message, isError = false) {\n    msgData.show = false;\n    setmsgData(msgData);\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } //realizar busqueda en listas de vigilancias\n\n\n  function searchOnWatchListCheck() {\n    setshowLoading(true);\n    apiCoreServices.postWhatchList().then(data => {\n      if (data.status === 200) {\n        if (data.result.length > 0) {\n          setdataBlackListResult(data.result);\n        } else {\n          showMessage(t('NoResults'));\n        }\n      } else {\n        showMessage(t('ErrorCode') + \": \" + data.error.errorCode + \"  \" + props.t('ErrorMsg') + \": \" + data.error.errorCode, true);\n      }\n    }).catch(error => {\n      console.error(error);\n    }).finally(() => {\n      setshowLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"WatchListCheck\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        minHeight: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: showLoading,\n        spinner: true,\n        text: t(\"WaitingPlease\"),\n        children: /*#__PURE__*/_jsxDEV(AvForm, {\n          id: \"frmBlackList\",\n          className: \"needs-validation\",\n          onSubmit: handleSubmitFormBlackList,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      htmlFor: \"personType\",\n                      children: t(\"PersonType\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      onChange: e => {\n                        setpersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                        handleChangeInputFormBlackList({\n                          target: {\n                            name: 'personType',\n                            value: e.value\n                          }\n                        });\n                      },\n                      options: personTypeList,\n                      classNamePrefix: \"select2-selection\",\n                      value: personTypeSelected,\n                      name: \"personType\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"success\",\n                    type: \"button\",\n                    onClick: searchOnWatchListCheck,\n                    style: {\n                      margin: '5px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-file-find mdi-12px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 120\n                    }, this), \" \", t(\"Consult\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: getClientDataFormByPersonType(personTypeSelected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"IdType\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      onChange: e => {\n                        setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                        handleChangeInputFormBlackList({\n                          target: {\n                            name: 'idType',\n                            value: e.value\n                          }\n                        });\n                      },\n                      options: identificationTypeList,\n                      classNamePrefix: \"select2-selection\",\n                      value: identificationTypeSelected,\n                      name: \"idType\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      htmlFor: \"idnumber\",\n                      children: t(\"IdNumber\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                      onChange: handleChangeInputFormBlackList,\n                      className: \"form-control\",\n                      name: \"clientDocumentId\",\n                      type: \"text\",\n                      validate: {\n                        required: {\n                          value: true,\n                          errorMessage: t(\"Required Field\")\n                        }\n                      },\n                      value: selectClient !== undefined ? selectClient.clientDocumentId : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), msgData.show ? /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(UncontrolledAlert, {\n                    color: \"danger\",\n                    role: msgData.isError ? \"alert\" : \"success\",\n                    dismissible: true,\n                    onClose: () => {\n                      msgData.show = false;\n                      setmsgData(msgData);\n                    },\n                    children: msgData.msg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 13\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: dataBlackListResult !== undefined && dataBlackListResult.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(Label, {\n                      children: t(\"Results\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"table-responsive\",\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        className: \"table mb-0\",\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          className: \"table-light\",\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"#\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 350,\n                              columnNumber: 18\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"FullName\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 351,\n                              columnNumber: 18\n                            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: t(\"Evaluation\")\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 352,\n                              columnNumber: 18\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 349,\n                            columnNumber: 16\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 348,\n                          columnNumber: 14\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: dataBlackListResult.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.id\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 358,\n                              columnNumber: 20\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.name\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 359,\n                              columnNumber: 20\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: item.evaluation\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 360,\n                              columnNumber: 20\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 357,\n                            columnNumber: 18\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 14\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 347,\n                        columnNumber: 10\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 24\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 24\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              style: {\n                textAlign: \"right\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"dark\",\n                type: \"button\",\n                style: {\n                  margin: '5px'\n                },\n                onClick: props.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi mdi-cancel mid-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), \" \", t(\"Cancel\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                type: \"submit\",\n                style: {\n                  margin: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-content-save mdi-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 83\n                }, this), \" \", t(\"Save\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlackListForm, \"vHRAmxqzXeZMV0853Fx7AeuuQXI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = BlackListForm;\nBlackListForm.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onCancel: PropTypes.func,\n  clientSelected: PropTypes.any\n};\nexport default BlackListForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlackListForm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/BlackListForm.js"],"names":["React","useState","PropTypes","useTranslation","useLocation","useHistory","OPTs","url","moment","Select","Link","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","Alert","UncontrolledAlert","Modal","Switch","BackendServices","CoreServices","BpmServices","AvForm","AvField","AvGroup","AvInput","AvCheckbox","PersonModel","LoadingOverlay","watchlist","BlackListForm","props","t","i18n","selectClient","setselectClient","clientSelected","identificationTypeList","setidentificationTypeList","identificationTypeSelected","setidentificationTypeSelected","undefined","personTypeList","setpersonTypeList","personTypeSelected","setpersonTypeSelected","dataBlackListResult","setdataBlackListResult","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","msgData","setmsgData","show","msg","isError","showLoading","setshowLoading","useEffect","fetchData","loadIdentificationTypes","loadPersonTypes","consultarCatalogoTipoIdentificacion","then","data","json","i","length","push","label","value","find","x","idType","catch","error","consultarCatalogoTipoPersona","personType","handleChangeInputFormBlackList","e","clientPerson","target","name","handleSubmitFormBlackList","event","errors","values","preventDefault","form","document","getElementById","dataModel","getRequestModel","identificationType","pTypeId","pCustomerId","customerDocumentId","pCustomerListParams","KeyValueParam","_x003C_Key_x003E_k__BackingField","_x003C_Value_x003E_k__BackingField","firstName","secondName","firstLastName","secondLastName","getClientDataFormByPersonType","required","lastName","secondSurname","showMessage","message","searchOnWatchListCheck","postWhatchList","status","result","errorCode","console","finally","isOpen","toggle","minHeight","textAlign","margin","errorMessage","clientDocumentId","map","item","index","id","evaluation","propTypes","bool","func","onCancel","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation,useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Alert,  \r\n  UncontrolledAlert,\r\n  Modal,\r\n} from \"reactstrap\"\r\n\r\nimport Switch from \"react-switch\";\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../services\";\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox} from \"availity-reactstrap-validation\";\r\nimport {PersonModel} from '../../../models/Common/PersonModel';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport watchlist from \" ../../../models/Core/WatchListModel\";\r\n\r\n\r\nconst BlackListForm = props => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n  \r\n    const [selectClient, setselectClient] = useState(props.clientSelected);\r\n\r\n    const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n    const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\r\n\r\n    const [personTypeList, setpersonTypeList] = useState([]);\r\n    const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\r\n\r\n    //Lista de resultados de BlackList\r\n    const [dataBlackListResult, setdataBlackListResult ] = useState([]);\r\n      \r\n    const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n    const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n    \r\n    const [msgData, setmsgData] = useState({show:false,msg:\"\",isError:false});\r\n    const [showLoading, setshowLoading] = useState(false);  \r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {    \r\n    fetchData();\r\n  }, []);\r\n\r\n  //Caraga Inicial de datos\r\n  function fetchData() {\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n  } \r\n\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes(){\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n                }\r\n                setidentificationTypeList(json)\r\n                setidentificationTypeSelected(selectClient!==undefined?json.find(x => x.value === selectClient.idType):json[0]);\r\n            }          \r\n      }).catch((error) => { });    \r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes(){\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                setpersonTypeList(json);                \r\n                setpersonTypeSelected(selectClient!==undefined?json.find(x => x.value === selectClient.personType):json[0]);\r\n            }          \r\n      }).catch((error) => { });    \r\n  }\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormBlackList(e) {\r\n\r\n    var clientPerson = selectClient!==undefined?selectClient:new PersonModel();\r\n        \r\n    clientPerson[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n\r\n    //si la persona es juridica auto seleccionamos RUC\r\n    if(clientPerson.personType === 2){\r\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));          \r\n    }\r\n  }\r\n  //Guardar el Cliente\r\n  function handleSubmitFormBlackList(event, errors, values){\r\n    \r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n   //retornar los datos recolectados \r\n   const form = document.getElementById('frmSearch');    \r\n    let dataModel = watchlist.getRequestModel();\r\n    switch (form.identificationType.value) {\r\n      case \"RUC\": {\r\n        dataModel.pTypeId = 'JURIDICA';\r\n        dataModel.pCustomerId = form.customerDocumentId.value;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"NOMBRE\",_x003C_Value_x003E_k__BackingField:form.firstName.value});\r\n        break;\r\n      }\r\n      case \"CED\": {\r\n        dataModel.pTypeId = 'CEDULA';\r\n        dataModel.pCustomerId = form.customerDocumentId.value;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"NOMBRE\",_x003C_Value_x003E_k__BackingField:form.firstName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"SEGUNDO_NOMBRE\",_x003C_Value_x003E_k__BackingField:form.secondName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"PRIMER_APELLIDO\",_x003C_Value_x003E_k__BackingField:form.firstLastName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"SEGUNDO_APELLIDO\",_x003C_Value_x003E_k__BackingField:form.secondLastName.value});\r\n        break;\r\n      }      \r\n      default: {\r\n        dataModel.pTypeId = 'PASAPORTE';\r\n        dataModel.pCustomerId = form.customerDocumentId.value;\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"NOMBRE\",_x003C_Value_x003E_k__BackingField:form.firstName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"SEGUNDO_NOMBRE\",_x003C_Value_x003E_k__BackingField:form.secondName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"PRIMER_APELLIDO\",_x003C_Value_x003E_k__BackingField:form.firstLastName.value});\r\n        dataModel.pCustomerListParams.KeyValueParam.push({_x003C_Key_x003E_k__BackingField:\"SEGUNDO_APELLIDO\",_x003C_Value_x003E_k__BackingField:form.secondLastName.value});\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n  //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\r\n  function getClientDataFormByPersonType(personType){\r\n    if(personType === undefined){\r\n      return null;\r\n    }\r\n\r\n    switch(personType.value){\r\n        case 1:{//Natural\r\n         return( <React.Fragment>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"FirstName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                  value={selectClient !== undefined?selectClient.name:''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} \r\n                  />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondName\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined?selectClient.secondName:''}\r\n                //errorMessage={t(\"Required Field\")}\r\n                //validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"lastName\">{t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined?selectClient.lastName:''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondSurname\">{t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondSurname\"\r\n                type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                value={selectClient !== undefined?selectClient.secondSurname:''}\r\n                //errorMessage={t(\"Required Field\")}\r\n                //validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n         \r\n        </React.Fragment>)\r\n        } \r\n        case 2:{//Juridica\r\n          return(\r\n          <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  type=\"text\" onChange={handleChangeInputFormBlackList}\r\n                  value={selectClient !== undefined?selectClient.name:''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            )\r\n        } \r\n    }\r\n\r\n    return null;\r\n  }  \r\n  //Show Message \r\n  function showMessage(message,isError=false){\r\n    \r\n    msgData.show=false;\r\n\r\n    setmsgData(msgData);   \r\n   \r\n    setmsgData({show:true,msg:message,isError:isError});\r\n  }  \r\n  //realizar busqueda en listas de vigilancias\r\n  function searchOnWatchListCheck(){\r\n    setshowLoading(true);\r\n    apiCoreServices.postWhatchList()\r\n    .then((data) => {\r\n      if(data.status === 200){\r\n        if(data.result.length > 0){\r\n            setdataBlackListResult(data.result);            \r\n        }\r\n        else{showMessage(t('NoResults'));}\r\n      }\r\n      else{\r\n        showMessage(t('ErrorCode')+\": \" + data.error.errorCode + \"  \" +props.t('ErrorMsg')+\": \" + data.error.errorCode,true);\r\n      }\r\n    })\r\n    .catch((error) => {console.error(error);})\r\n    .finally (() => {setshowLoading(false);})\r\n  }\r\n\r\n  return (\r\n   \r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={ props.isOpen }\r\n      toggle={ props.toggle }\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"WatchListCheck\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ props.toggle }\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ minHeight: '500px' }}>\r\n      <LoadingOverlay active={showLoading} spinner text={t(\"WaitingPlease\")}>\r\n      <AvForm id=\"frmBlackList\" className=\"needs-validation\" onSubmit={handleSubmitFormBlackList}>\r\n        <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setpersonTypeSelected(personTypeList.find(x => x.value === e.value)); handleChangeInputFormBlackList({target: { name:'personType', value: e.value }}) }}\r\n                          options={personTypeList}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          value={personTypeSelected}\r\n                          name=\"personType\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\" style={{ textAlign: \"right\" }}>\r\n                      <Button color=\"success\" type=\"button\" onClick={searchOnWatchListCheck} style={{ margin: '5px' }}><i className=\"mdi mdi-file-find mdi-12px\"></i>\r\n                        {\" \"}{t(\"Consult\")}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    {getClientDataFormByPersonType(personTypeSelected)}                      \r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"IdType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value)); handleChangeInputFormBlackList({target: { name:'idType', value: e.value }}) }}\r\n                          options={identificationTypeList}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          value={identificationTypeSelected}\r\n                          name=\"idType\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                        <AvField onChange={handleChangeInputFormBlackList} className=\"form-control\"\r\n                          name=\"clientDocumentId\" type=\"text\"\r\n                          validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                          value={selectClient !== undefined?selectClient.clientDocumentId:''}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>                  \r\n                  \r\n                  {msgData.show ? (\r\n            <Row>\r\n            <Col md=\"12\">\r\n            <UncontrolledAlert color=\"danger\" role={msgData.isError?\"alert\":\"success\"} dismissible onClose={() =>{ msgData.show=false; setmsgData(msgData)}}>\r\n              {msgData.msg}\r\n            </UncontrolledAlert>\r\n            </Col>   \r\n             </Row>\r\n          ) : null}     \r\n\r\n                </CardBody>\r\n                <CardBody>\r\n                    <Row>\r\n                    <Col md=\"12\">\r\n                       {dataBlackListResult!==undefined && dataBlackListResult.length > 0?\r\n                       <div className=\"mb-3\">\r\n                       <Label>{t(\"Results\")}</Label>\r\n                       <div className=\"table-responsive\">\r\n         <Table className=\"table mb-0\">\r\n             <thead className=\"table-light\">\r\n               <tr>\r\n                 <th>{t(\"#\")}</th>\r\n                 <th>{t(\"FullName\")}</th>\r\n                 <th>{t(\"Evaluation\")}</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n             {dataBlackListResult.map((item, index) => (\r\n                 <tr>\r\n                   <td>{item.id}</td>\r\n                   <td>{item.name }</td>\r\n                   <td>{item.evaluation}</td>                 \r\n                 </tr>                   \r\n                 ))}\r\n             </tbody>\r\n           </Table>\r\n         </div>\r\n                     </div>\r\n                       :null} \r\n                    </Col>\r\n                    </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle}>\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                    {\" \"}{t(\"Save\")}\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n      </AvForm>\r\n      </LoadingOverlay> \r\n      </div>\r\n    </Modal>\r\n\r\n    \r\n\r\n       );\r\n};\r\n\r\nBlackListForm.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  clientSelected:PropTypes.any\r\n}\r\n\r\nexport default BlackListForm;\r\n"]},"metadata":{},"sourceType":"module"}