{"ast":null,"code":"import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{PropuestaCredito}from\"../../models\";import ApiService from\"../ApiService\";import BackendServices from\"../BackendServices/Services\";import BpmServices from\"../BpmServices/Services\";var ServicioPropuestaCredito=/*#__PURE__*/function(_ApiService){_inherits(ServicioPropuestaCredito,_ApiService);var _super=_createSuper(ServicioPropuestaCredito);function ServicioPropuestaCredito(){var _this;_classCallCheck(this,ServicioPropuestaCredito);_this=_super.call(this);_this.backend=new BackendServices();_this.bpm=new BpmServices();return _this;}_createClass(ServicioPropuestaCredito,[{key:\"guardarDatosGenerales\",value:function guardarDatosGenerales(instanceId,requestId,values){var _this2=this;values.transactId=Number(values.transactId);console.log('guardarDatosGenerales()',values);if(!requestId){console.log('nuevoDatosGeneralesPropCred');return this.backend.nuevoDatosGeneralesPropCred(values).then(function(result){if(result.status&&result.status.statusCode===\"200\"){// Actualizar Variable en BPM de requestId\n_this2.bpm.updatevariables(instanceId,{requestId:result.requestId});}return result;});}else{console.log('actualizarDatosGeneralesPropCred',requestId);values.requestId=requestId;return this.backend.actualizarDatosGeneralesPropCred(values);}}},{key:\"actualizarDatosGenerales\",value:function actualizarDatosGenerales(transactId,values){console.log('actualizarDatosGenerales()',transactId);return this.backend.actualizarDatosGeneralesPropCred(values);}},{key:\"consultarDatosGenerales\",value:function(){var _consultarDatosGenerales=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestId){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.backend.consultarDatosGeneralesPropCred(requestId);case 2:data=_context.sent;console.log('consultarDatosGenerales()',data);if(!(data!==undefined)){_context.next=10;break;}if(!requestId){_context.next=9;break;}return _context.abrupt(\"return\",data.find(function(record){return record.requestId===requestId;}));case 9:return _context.abrupt(\"return\",data[data.length-1]);case 10:case\"end\":return _context.stop();}}},_callee,this);}));function consultarDatosGenerales(_x){return _consultarDatosGenerales.apply(this,arguments);}return consultarDatosGenerales;}()},{key:\"consultarDocumentosPropuestaCredito\",value:function consultarDocumentosPropuestaCredito(criteria){return this.sendCoreRequest('propuestacredito/documentos','POST',criteria).then(function(data){// parse results\nreturn PropuestaCredito.fromJsonArray(data);});}}]);return ServicioPropuestaCredito;}(ApiService);export{ServicioPropuestaCredito as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/PropuestaCredito/PropuestaCredito.js"],"names":["PropuestaCredito","ApiService","BackendServices","BpmServices","ServicioPropuestaCredito","backend","bpm","instanceId","requestId","values","transactId","Number","console","log","nuevoDatosGeneralesPropCred","then","result","status","statusCode","updatevariables","actualizarDatosGeneralesPropCred","consultarDatosGeneralesPropCred","data","undefined","find","record","length","criteria","sendCoreRequest","fromJsonArray"],"mappings":"ugCAAA,OAASA,gBAAT,KAAiC,cAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,eAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,6BAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,C,GAGqBC,CAAAA,wB,sIAEnB,mCAAc,0DACZ,wBACA,MAAKC,OAAL,CAAe,GAAIH,CAAAA,eAAJ,EAAf,CACA,MAAKI,GAAL,CAAW,GAAIH,CAAAA,WAAJ,EAAX,CAHY,aAIb,C,0EAED,+BAAsBI,UAAtB,CAAkCC,SAAlC,CAA6CC,MAA7C,CAAqD,iBACnDA,MAAM,CAACC,UAAP,CAAkBC,MAAM,CAACF,MAAM,CAACC,UAAR,CAAxB,CACAE,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAuCJ,MAAvC,EACA,GAAI,CAACD,SAAL,CAAiB,CACfI,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACA,MAAO,MAAKR,OAAL,CAAaS,2BAAb,CAAyCL,MAAzC,EACJM,IADI,CACC,SAACC,MAAD,CAAY,CAChB,GAAIA,MAAM,CAACC,MAAP,EAAiBD,MAAM,CAACC,MAAP,CAAcC,UAAd,GAA6B,KAAlD,CAAyD,CACvD;AACA,MAAI,CAACZ,GAAL,CAASa,eAAT,CAAyBZ,UAAzB,CAAqC,CACnCC,SAAS,CAAEQ,MAAM,CAACR,SADiB,CAArC,EAGD,CACD,MAAOQ,CAAAA,MAAP,CACD,CATI,CAAP,CAUD,CAZD,IAaK,CACHJ,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgDL,SAAhD,EACAC,MAAM,CAACD,SAAP,CAAmBA,SAAnB,CACA,MAAO,MAAKH,OAAL,CAAae,gCAAb,CAA8CX,MAA9C,CAAP,CACD,CACF,C,wCAED,kCAAyBC,UAAzB,CAAqCD,MAArC,CAA6C,CAC3CG,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA0CH,UAA1C,EACA,MAAO,MAAKL,OAAL,CAAae,gCAAb,CAA8CX,MAA9C,CAAP,CACD,C,uIAED,iBAA8BD,SAA9B,iJACqB,MAAKH,OAAL,CAAagB,+BAAb,CAA6Cb,SAA7C,CADrB,QACQc,IADR,eAEEV,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCS,IAAzC,EAFF,KAGKA,IAAI,GAAGC,SAHZ,+BAIQf,SAJR,yDAKac,IAAI,CAACE,IAAL,CAAU,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACjB,SAAP,GAAqBA,SAAzB,EAAhB,CALb,yCASac,IAAI,CAACA,IAAI,CAACI,MAAL,CAAY,CAAb,CATjB,8D,oLAgBA,6CAAoCC,QAApC,CAA8C,CAC5C,MAAO,MAAKC,eAAL,CAAqB,6BAArB,CAAoD,MAApD,CAA4DD,QAA5D,EACJZ,IADI,CACC,SAACO,IAAD,CAAU,CACd;AACA,MAAOtB,CAAAA,gBAAgB,CAAC6B,aAAjB,CAA+BP,IAA/B,CAAP,CACD,CAJI,CAAP,CAKD,C,sCA1DmDrB,U,SAAjCG,wB","sourcesContent":["import { PropuestaCredito } from \"../../models\";\r\nimport ApiService from \"../ApiService\";\r\nimport BackendServices from \"../BackendServices/Services\";\r\nimport BpmServices from \"../BpmServices/Services\";\r\n\r\n\r\nexport default class ServicioPropuestaCredito extends ApiService {\r\n\r\n  constructor() {\r\n    super();\r\n    this.backend = new BackendServices();\r\n    this.bpm = new BpmServices();\r\n  }\r\n\r\n  guardarDatosGenerales(instanceId, requestId, values) {\r\n    values.transactId=Number(values.transactId);\r\n    console.log('guardarDatosGenerales()', values);\r\n    if( !requestId ) {\r\n      console.log('nuevoDatosGeneralesPropCred');\r\n      return this.backend.nuevoDatosGeneralesPropCred(values)\r\n        .then((result) => {\r\n          if (result.status && result.status.statusCode === \"200\") {\r\n            // Actualizar Variable en BPM de requestId\r\n            this.bpm.updatevariables(instanceId, {\r\n              requestId: result.requestId\r\n            });\r\n          }\r\n          return result;\r\n        });\r\n    }\r\n    else {\r\n      console.log('actualizarDatosGeneralesPropCred', requestId);\r\n      values.requestId = requestId;\r\n      return this.backend.actualizarDatosGeneralesPropCred(values);\r\n    }\r\n  }\r\n\r\n  actualizarDatosGenerales(transactId, values) {\r\n    console.log('actualizarDatosGenerales()', transactId);\r\n    return this.backend.actualizarDatosGeneralesPropCred(values);\r\n  }\r\n\r\n  async consultarDatosGenerales(requestId) {\r\n    const data = await this.backend.consultarDatosGeneralesPropCred(requestId);\r\n    console.log('consultarDatosGenerales()', data);\r\n    if(data!==undefined){\r\n      if( requestId ) {\r\n        return data.find(record => record.requestId === requestId);\r\n      }\r\n      else {\r\n        // return last array element\r\n        return data[data.length-1];\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  consultarDocumentosPropuestaCredito(criteria) {\r\n    return this.sendCoreRequest('propuestacredito/documentos', 'POST', criteria)\r\n      .then((data) => {\r\n        // parse results\r\n        return PropuestaCredito.fromJsonArray(data);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}