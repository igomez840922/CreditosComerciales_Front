{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Forms\\\\FormValidations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, CardSubtitle, Label, Input } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidations = () => {\n  _s();\n\n  const [fnm, setfnm] = useState(false);\n  const [lnm, setlnm] = useState(false);\n  const [unm, setunm] = useState(false);\n  const [city, setcity] = useState(false);\n  const [stateV, setstateV] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var fnm = document.getElementById(\"validationTooltip01\").value;\n    var lnm = document.getElementById(\"validationTooltip02\").value;\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\n    var city = document.getElementById(\"validationTooltip03\").value;\n    var stateV = document.getElementById(\"validationTooltip04\").value;\n\n    if (fnm === \"\") {\n      setfnm(false);\n    } else {\n      setfnm(true);\n    }\n\n    if (lnm === \"\") {\n      setlnm(false);\n    } else {\n      setlnm(true);\n    }\n\n    if (unm === \"\") {\n      setunm(false);\n    } else {\n      setunm(true);\n    }\n\n    if (city === \"\") {\n      setcity(false);\n    } else {\n      setcity(true);\n    }\n\n    if (stateV === \"\") {\n      setstateV(false);\n    } else {\n      setstateV(true);\n    }\n\n    var d1 = document.getElementsByName(\"validate\");\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\");\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\";\n    }\n  } //for change tooltip display propery\n\n\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\") document.getElementById(eleId).style.display = \"none\";else document.getElementById(eleId).style.display = \"block\";\n  }\n\n  function check(e) {\n    let tecla = document.all ? e.keyCode : e.which; //Tecla de retroceso para borrar, siempre la permite\n\n    if (tecla === 45) {\n      e.preventDefault();\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Form\",\n        breadcrumbItem: \"Form Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \"React Validation - Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                className: \"needs-validation\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom01\",\n                        children: \"First name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        placeholder: \"First name\",\n                        type: \"text\",\n                        errorMessage: \"Enter First Name\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom02\",\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"lastname\",\n                        placeholder: \"Last name\",\n                        type: \"text\",\n                        errorMessage: \"Enter Last name\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom02\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom03\",\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"city\",\n                        placeholder: \"City\",\n                        type: \"text\",\n                        errorMessage: \" Please provide a valid city.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom03\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom04\",\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"state\",\n                        placeholder: \"State\",\n                        type: \"text\",\n                        errorMessage: \"Please provide a valid state.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom04\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom05\",\n                        children: \"Zip\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"zip\",\n                        placeholder: \"Zip Code\",\n                        type: \"text\",\n                        errorMessage: \" Please provide a valid zip.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom05\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    value: \"\",\n                    id: \"invalidCheck\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"invalidCheck\",\n                    children: \"Agree to terms and conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: \"You must agree before submitting.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Submit form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \"Bootstrap Validation (Tooltips)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: [\"If your form layout allows it, you can swap the\", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\".\", \"{valid | invalid-}\", \"feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), \" classes for\", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\".\", \"{valid | invalid-}\", \"-tooltip\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), \" classes to display validation feedback in a styled tooltip.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"needs-validation\",\n                method: \"post\",\n                id: \"tooltipForm\",\n                onSubmit: e => {\n                  handleSubmit(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip01\",\n                        children: \"First name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip01\",\n                        placeholder: \"First name\",\n                        onChange: event => changeHandeler(event, \"validate1\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate1\",\n                        children: fnm === true ? \"Looks good!\" : \"Please Enter Valid First Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip02\",\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip02\",\n                        placeholder: \"Last name\",\n                        onChange: event => changeHandeler(event, \"validate2\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate2\",\n                        children: lnm === true ? \"Looks good!\" : \"Please Enter Valid Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltipUsername\",\n                        children: \"Username\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 277,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group-prepend\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"input-group-text\",\n                            id: \"validationTooltipUsernamePrepend\",\n                            children: \"@\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 282,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 281,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltipUsername\",\n                          placeholder: \"Username\",\n                          onChange: event => changeHandeler(event, \"validate3\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 289,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: unm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate3\",\n                          children: unm === true ? \"Looks good!\" : \"Please choose a unique and valid username.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 280,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip03\",\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip03\",\n                        placeholder: \"City\",\n                        onChange: event => changeHandeler(event, \"validate4\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: city === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate4\",\n                        children: city === true ? \"Looks good!\" : \"Please choose a unique and valid username.Please provide a valid city.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 328,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip04\",\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip04\",\n                        placeholder: \"State\",\n                        onChange: event => changeHandeler(event, \"validate5\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: stateV === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate5\",\n                        children: stateV === true ? \"Looks good!\" : \"Please provide a valid state.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 355,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Submit form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Validation type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                className: \"mb-3\",\n                children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"username\",\n                  label: \"Required  \",\n                  placeholder: \"Type Something\",\n                  type: \"text\",\n                  errorMessage: \"Enter Name\",\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  children: \"Equal To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  errorMessage: \"Enter password\",\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mt-2 mb-3\",\n                  name: \"password1\",\n                  type: \"password\",\n                  placeholder: \"Re-type Password\",\n                  errorMessage: \"Enter Re-password\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    match: {\n                      value: \"password\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"email\",\n                  label: \"E-Mail  \",\n                  placeholder: \"Enter Valid Email\",\n                  type: \"email\",\n                  errorMessage: \"Invalid Email\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    email: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"digits\",\n                  label: \"Digits  \",\n                  placeholder: \"Enter Only Digits\",\n                  min: 0,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Enter Only Digits\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9]+$\",\n                      errorMessage: \"Only Digits\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"number\",\n                  label: \"Number  \",\n                  placeholder: \"Enter Only number\",\n                  min: 0,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Enter Only Number\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9]+$\",\n                      errorMessage: \"Only Numbers\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"alphanumeric\",\n                  label: \"Alphanumeric  \",\n                  placeholder: \"Enter Only alphanumeric value\",\n                  type: \"text\",\n                  errorMessage: \"Enter Only Alphanumeric\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9a-zA-Z]+$\",\n                      errorMessage: \"Only Alphanumeric\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  type: \"textarea\",\n                  label: \"Textarea \",\n                  rows: \"5\",\n                  name: \"address\",\n                  id: \"address\",\n                  placeholder: \"Address\",\n                  errorMessage: \"This value is required.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9a-zA-Z]+$\",\n                      errorMessage: \"Only Alphanumeric\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"ms-1\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Range validation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                className: \"mb-3\",\n                children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Min_Length\",\n                  label: \"Min Length  \",\n                  placeholder: \"Min 6 chars\",\n                  type: \"number\",\n                  errorMessage: \"Min 6 chars.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 6,\n                      errorMessage: \"Min 6 chars.\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Max_Length\",\n                  label: \"Max Length  \",\n                  placeholder: \"Max 6 chars\",\n                  min: 0,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Max 6 chars.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    maxLength: {\n                      value: 6,\n                      errorMessage: \"Max 6 chars.\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Range_Length\",\n                  label: \"Range Length\",\n                  placeholder: \"Text between 5 - 10 chars length\",\n                  min: 0,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"range between 5 to 10\",\n                  validate: {\n                    pattern: {\n                      value: '^[5,10]'\n                    },\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 5\n                    },\n                    maxLength: {\n                      value: 10\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Min_Value\",\n                  label: \"Min Value  \",\n                  placeholder: \"Min 6 Chars\",\n                  min: 6,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Min Value 6\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    min: {\n                      value: 6\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Max_Value\",\n                  label: \"Max Value  \",\n                  placeholder: \"max 5 Chars\",\n                  max: 6,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Max Value 6\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    max: {\n                      value: 6\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Range_Value\",\n                  label: \"Range Value\",\n                  placeholder: \"Number between 6 - 100\",\n                  min: 0,\n                  type: \"number\",\n                  errorMessage: \"range between 6 - 100\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 6\n                    },\n                    maxLength: {\n                      value: 100\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Regular_Exp\",\n                  label: \"Regular Exp  \",\n                  placeholder: \"Hex. Color\",\n                  min: 0,\n                  type: \"number\",\n                  onKeyPress: e => {\n                    return check(e);\n                  },\n                  errorMessage: \"Hex Value\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[#0-9]+$\",\n                      errorMessage: \"Only Hex Value\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"ms-1\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidations, \"fpY+BgW3dPzGUWxPymsWLv1PfMA=\");\n\n_c = FormValidations;\nexport default FormValidations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidations\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Forms/FormValidations.js"],"names":["React","useState","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","CardSubtitle","Label","Input","AvForm","AvField","Breadcrumbs","FormValidations","fnm","setfnm","lnm","setlnm","unm","setunm","city","setcity","stateV","setstateV","handleSubmit","e","preventDefault","document","getElementById","value","d1","getElementsByName","classList","add","i","length","style","display","changeHandeler","event","eleId","target","check","tecla","all","keyCode","which","required","match","email","pattern","errorMessage","minLength","maxLength","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Button,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\r\n\r\nconst FormValidations = () => {\r\n  const [fnm, setfnm] = useState(false)\r\n  const [lnm, setlnm] = useState(false)\r\n  const [unm, setunm] = useState(false)\r\n  const [city, setcity] = useState(false)\r\n  const [stateV, setstateV] = useState(false)\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    var fnm = document.getElementById(\"validationTooltip01\").value\r\n    var lnm = document.getElementById(\"validationTooltip02\").value\r\n    var unm = document.getElementById(\"validationTooltipUsername\").value\r\n    var city = document.getElementById(\"validationTooltip03\").value\r\n    var stateV = document.getElementById(\"validationTooltip04\").value\r\n\r\n    if (fnm === \"\") {\r\n      setfnm(false)\r\n    } else {\r\n      setfnm(true)\r\n    }\r\n\r\n    if (lnm === \"\") {\r\n      setlnm(false)\r\n    } else {\r\n      setlnm(true)\r\n    }\r\n\r\n    if (unm === \"\") {\r\n      setunm(false)\r\n    } else {\r\n      setunm(true)\r\n    }\r\n\r\n    if (city === \"\") {\r\n      setcity(false)\r\n    } else {\r\n      setcity(true)\r\n    }\r\n\r\n    if (stateV === \"\") {\r\n      setstateV(false)\r\n    } else {\r\n      setstateV(true)\r\n    }\r\n\r\n    var d1 = document.getElementsByName(\"validate\")\r\n\r\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\")\r\n\r\n    for (var i = 0; i < d1.length; i++) {\r\n      d1[i].style.display = \"block\"\r\n    }\r\n  }\r\n\r\n  //for change tooltip display propery\r\n  function changeHandeler(event, eleId) {\r\n    if (event.target.value !== \"\")\r\n      document.getElementById(eleId).style.display = \"none\"\r\n    else document.getElementById(eleId).style.display = \"block\"\r\n  }\r\n\r\n  function check(e) {\r\n    let tecla = (document.all) ? e.keyCode : e.which;\r\n    //Tecla de retroceso para borrar, siempre la permite\r\n    if (tecla === 45) {\r\n      e.preventDefault();\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title=\"Form\" breadcrumbItem=\"Form Validation\" />\r\n        <Row>\r\n          <Col xl=\"6\">\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"card-title\">React Validation - Normal</h4>\r\n                <p className=\"card-title-desc\">\r\n                  Provide valuable, actionable feedback to your users with\r\n                  HTML5 form validation–available in all our supported\r\n                  browsers.\r\n                </p>\r\n                <AvForm className=\"needs-validation\">\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom01\">First name</Label>\r\n                        <AvField\r\n                          name=\"firstname\"\r\n                          placeholder=\"First name\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter First Name\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom01\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom02\">Last name</Label>\r\n                        <AvField\r\n                          name=\"lastname\"\r\n                          placeholder=\"Last name\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Enter Last name\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom02\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom03\">City</Label>\r\n                        <AvField\r\n                          name=\"city\"\r\n                          placeholder=\"City\"\r\n                          type=\"text\"\r\n                          errorMessage=\" Please provide a valid city.\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom03\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom04\">State</Label>\r\n                        <AvField\r\n                          name=\"state\"\r\n                          placeholder=\"State\"\r\n                          type=\"text\"\r\n                          errorMessage=\"Please provide a valid state.\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom04\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"validationCustom05\">Zip</Label>\r\n                        <AvField\r\n                          name=\"zip\"\r\n                          placeholder=\"Zip Code\"\r\n                          type=\"text\"\r\n                          errorMessage=\" Please provide a valid zip.\"\r\n                          className=\"form-control\"\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"validationCustom05\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <div className=\"form-check mb-3\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\"\r\n                      required />{\" \"}\r\n                    <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\r\n                      Agree to terms and conditions\r\n                    </label>\r\n                    <div className=\"invalid-feedback\">\r\n                      You must agree before submitting.\r\n                    </div>\r\n                  </div>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit form\r\n                  </Button>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xl=\"6\">\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"card-title\">\r\n                  Bootstrap Validation (Tooltips)\r\n                </h4>\r\n                <p className=\"card-title-desc\">\r\n                  If your form layout allows it, you can swap the\r\n                  <code>.{\"{valid | invalid-}\"}feedback</code> classes for\r\n                  <code>.{\"{valid | invalid-}\"}-tooltip</code> classes to display validation feedback in a\r\n                  styled tooltip.\r\n                </p>\r\n                <form\r\n                  className=\"needs-validation\"\r\n                  method=\"post\"\r\n                  id=\"tooltipForm\"\r\n                  onSubmit={e => {\r\n                    handleSubmit(e)\r\n                  }}\r\n                >\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3 position-relative\">\r\n                        <Label htmlFor=\"validationTooltip01\">\r\n                          First name\r\n                        </Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"validationTooltip01\"\r\n                          placeholder=\"First name\"\r\n                          onChange={event =>\r\n                            changeHandeler(event, \"validate1\")\r\n                          }\r\n                        />\r\n\r\n                        <div\r\n                          className={\r\n                            fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\r\n                          }\r\n                          name=\"validate\"\r\n                          id=\"validate1\"\r\n                        >\r\n                          {fnm === true\r\n                            ? \"Looks good!\"\r\n                            : \"Please Enter Valid First Name\"}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3 position-relative\">\r\n                        <Label htmlFor=\"validationTooltip02\">Last name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"validationTooltip02\"\r\n                          placeholder=\"Last name\"\r\n                          onChange={event =>\r\n                            changeHandeler(event, \"validate2\")\r\n                          }\r\n                        />\r\n                        <div\r\n                          className={\r\n                            lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\r\n                          }\r\n                          name=\"validate\"\r\n                          id=\"validate2\"\r\n                        >\r\n                          {lnm === true\r\n                            ? \"Looks good!\"\r\n                            : \"Please Enter Valid Last Name\"}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3 position-relative\">\r\n                        <Label htmlFor=\"validationTooltipUsername\">\r\n                          Username\r\n                        </Label>\r\n                        <div className=\"input-group\">\r\n                          <div className=\"input-group-prepend\">\r\n                            <span\r\n                              className=\"input-group-text\"\r\n                              id=\"validationTooltipUsernamePrepend\"\r\n                            >\r\n                              @\r\n                            </span>\r\n                          </div>\r\n                          <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"validationTooltipUsername\"\r\n                            placeholder=\"Username\"\r\n                            onChange={event =>\r\n                              changeHandeler(event, \"validate3\")\r\n                            }\r\n                          />\r\n                          <div\r\n                            className={\r\n                              unm === true\r\n                                ? \"valid-tooltip\"\r\n                                : \"invalid-tooltip\"\r\n                            }\r\n                            name=\"validate\"\r\n                            id=\"validate3\"\r\n                          >\r\n                            {unm === true\r\n                              ? \"Looks good!\"\r\n                              : \"Please choose a unique and valid username.\"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3 position-relative\">\r\n                        <Label htmlFor=\"validationTooltip03\">City</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"validationTooltip03\"\r\n                          placeholder=\"City\"\r\n                          onChange={event =>\r\n                            changeHandeler(event, \"validate4\")\r\n                          }\r\n                        />\r\n                        <div\r\n                          className={\r\n                            city === true\r\n                              ? \"valid-tooltip\"\r\n                              : \"invalid-tooltip\"\r\n                          }\r\n                          name=\"validate\"\r\n                          id=\"validate4\"\r\n                        >\r\n                          {city === true\r\n                            ? \"Looks good!\"\r\n                            : \"Please choose a unique and valid username.Please provide a valid city.\"}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3 position-relative\">\r\n                        <Label htmlFor=\"validationTooltip04\">State</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          id=\"validationTooltip04\"\r\n                          placeholder=\"State\"\r\n                          onChange={event =>\r\n                            changeHandeler(event, \"validate5\")\r\n                          }\r\n                        />\r\n                        <div\r\n                          className={\r\n                            stateV === true\r\n                              ? \"valid-tooltip\"\r\n                              : \"invalid-tooltip\"\r\n                          }\r\n                          name=\"validate\"\r\n                          id=\"validate5\"\r\n                        >\r\n                          {stateV === true\r\n                            ? \"Looks good!\"\r\n                            : \"Please provide a valid state.\"}\r\n                        </div>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Button color=\"primary\" type=\"submit\">\r\n                    Submit form\r\n                  </Button>\r\n                </form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>Validation type</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">\r\n                  Parsley is a availity reactstrap validation. It helps you\r\n                  provide your users with feedback on their form submission\r\n                  before sending it to your server.\r\n                </CardSubtitle>\r\n\r\n                <AvForm>\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"username\"\r\n                    label=\"Required  \"\r\n                    placeholder=\"Type Something\"\r\n                    type=\"text\"\r\n                    errorMessage=\"Enter Name\"\r\n                    validate={{ required: { value: true } }}\r\n                  />\r\n                  <Label>Equal To</Label>\r\n                  <AvField\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    errorMessage=\"Enter password\"\r\n                    validate={{ required: { value: true } }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mt-2 mb-3\"\r\n                    name=\"password1\"\r\n                    type=\"password\"\r\n                    placeholder=\"Re-type Password\"\r\n                    errorMessage=\"Enter Re-password\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      match: { value: \"password\" },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"email\"\r\n                    label=\"E-Mail  \"\r\n                    placeholder=\"Enter Valid Email\"\r\n                    type=\"email\"\r\n                    errorMessage=\"Invalid Email\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      email: { value: true },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"digits\"\r\n                    label=\"Digits  \"\r\n                    placeholder=\"Enter Only Digits\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Enter Only Digits\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      pattern: {\r\n                        value: \"^[0-9]+$\",\r\n                        errorMessage: \"Only Digits\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"number\"\r\n                    label=\"Number  \"\r\n                    placeholder=\"Enter Only number\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Enter Only Number\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      pattern: {\r\n                        value: \"^[0-9]+$\",\r\n                        errorMessage: \"Only Numbers\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"alphanumeric\"\r\n                    label=\"Alphanumeric  \"\r\n                    placeholder=\"Enter Only alphanumeric value\"\r\n                    type=\"text\"\r\n                    errorMessage=\"Enter Only Alphanumeric\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      pattern: {\r\n                        value: \"^[0-9a-zA-Z]+$\",\r\n                        errorMessage: \"Only Alphanumeric\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    type=\"textarea\"\r\n                    label=\"Textarea \"\r\n                    rows=\"5\"\r\n                    name=\"address\"\r\n                    id=\"address\"\r\n                    placeholder=\"Address\"\r\n                    errorMessage=\"This value is required.\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      pattern: {\r\n                        value: \"^[0-9a-zA-Z]+$\",\r\n                        errorMessage: \"Only Alphanumeric\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <FormGroup className=\"mb-0\">\r\n                    <div>\r\n                      <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                        Submit\r\n                      </Button>{\" \"}\r\n                      <Button type=\"reset\" color=\"secondary\">\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col lg={6}>\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>Range validation</CardTitle>\r\n                <CardSubtitle className=\"mb-3\">\r\n                  Parsley is a availity reactstrap validation. It helps you\r\n                  provide your users with feedback on their form submission\r\n                  before sending it to your server.\r\n                </CardSubtitle>\r\n\r\n                <AvForm>\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Min_Length\"\r\n                    label=\"Min Length  \"\r\n                    placeholder=\"Min 6 chars\"\r\n                    type=\"number\"\r\n                    errorMessage=\"Min 6 chars.\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      minLength: { value: 6, errorMessage: \"Min 6 chars.\" },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Max_Length\"\r\n                    label=\"Max Length  \"\r\n                    placeholder=\"Max 6 chars\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Max 6 chars.\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      maxLength: { value: 6, errorMessage: \"Max 6 chars.\" },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Range_Length\"\r\n                    label=\"Range Length\"\r\n                    placeholder=\"Text between 5 - 10 chars length\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"range between 5 to 10\"\r\n\r\n                    validate={{\r\n                      pattern: { value: '^[5,10]' },\r\n                      required: { value: true },\r\n                      minLength: { value: 5 },\r\n                      maxLength: { value: 10 },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Min_Value\"\r\n                    label=\"Min Value  \"\r\n                    placeholder=\"Min 6 Chars\"\r\n                    min={6}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Min Value 6\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      min: { value: 6 },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Max_Value\"\r\n                    label=\"Max Value  \"\r\n                    placeholder=\"max 5 Chars\"\r\n                    max={6}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Max Value 6\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      max: { value: 6 },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Range_Value\"\r\n                    label=\"Range Value\"\r\n                    placeholder=\"Number between 6 - 100\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    errorMessage=\"range between 6 - 100\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      minLength: { value: 6 },\r\n                      maxLength: { value: 100 },\r\n                    }}\r\n                  />\r\n                  <AvField\r\n                    className=\"mb-3\"\r\n                    name=\"Regular_Exp\"\r\n                    label=\"Regular Exp  \"\r\n                    placeholder=\"Hex. Color\"\r\n                    min={0}\r\n                    type=\"number\"\r\n                    onKeyPress={(e) => { return check(e) }}\r\n                    errorMessage=\"Hex Value\"\r\n                    validate={{\r\n                      required: { value: true },\r\n                      pattern: {\r\n                        value: \"^[#0-9]+$\",\r\n                        errorMessage: \"Only Hex Value\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <FormGroup className=\"mb-0\">\r\n                    <div>\r\n                      <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\r\n                        Submit\r\n                      </Button>{\" \"}\r\n                      <Button type=\"reset\" color=\"secondary\">\r\n                        Cancel\r\n                      </Button>\r\n                    </div>\r\n                  </FormGroup>\r\n                </AvForm>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default FormValidations\r\n"]},"metadata":{},"sourceType":"module"}