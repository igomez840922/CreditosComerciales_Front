{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\sales-analytics.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, CardBody } from \"reactstrap\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { BackendServices } from \"../../services\";\nimport * as moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SalesAnalytics extends Component {\n  constructor(props) {\n    super(props);\n    this.backendServices = new BackendServices();\n    this.inicialize();\n    this.state = {\n      series: [],\n      options: {\n        labels: [],\n        plotOptions: {\n          pie: {\n            donut: {\n              size: '75%'\n            }\n          }\n        },\n        legend: {\n          show: false\n        },\n        colors: ['#3b5de7', '#45cb85', '#eeb902']\n      }\n    };\n  }\n\n  inicialize() {\n    this.backendServices.getBpmStatistics().then(resp => {\n      let processBpmId = this.groupBy(resp, \"activityBpmName\");\n      let labels = processBpmId.map(process => process.at(0).activityBpmName);\n      let series = processBpmId.map(process => process.length);\n      this.setState({ ...this.state,\n        series,\n        options: { ...this.state.options,\n          labels\n        }\n      });\n    }).catch(err => {});\n  }\n  /**\r\n   * groupBy, agrupa los items de un JSON\r\n   * @param {Array} collection \r\n   * @param {string} property \r\n   * @returns {Array}\r\n   */\n\n\n  groupBy(collection, property) {\n    var i = 0,\n        val,\n        index,\n        values = [],\n        result = [];\n\n    for (; i < collection.length; i++) {\n      val = collection[i][property];\n      index = values.indexOf(val);\n      if (index > -1) result[index].push(collection[i]);else {\n        values.push(val);\n        result.push([collection[i]]);\n      }\n    }\n\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title mb-4\",\n            children: \"Estad\\xEDsticas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n                options: this.state.options,\n                series: this.state.series,\n                type: \"donut\",\n                height: 245,\n                className: \"apex-charts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SalesAnalytics;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/sales-analytics.js"],"names":["React","Component","Row","Col","Card","CardBody","ReactApexChart","BackendServices","moment","SalesAnalytics","constructor","props","backendServices","inicialize","state","series","options","labels","plotOptions","pie","donut","size","legend","show","colors","getBpmStatistics","then","resp","processBpmId","groupBy","map","process","at","activityBpmName","length","setState","catch","err","collection","property","i","val","index","values","result","indexOf","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport { Row, Col, Card, CardBody } from \"reactstrap\"\r\nimport ReactApexChart from \"react-apexcharts\"\r\nimport { BackendServices } from \"../../services\";\r\nimport * as moment from 'moment';\r\n\r\nclass SalesAnalytics extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.backendServices = new BackendServices();\r\n    this.inicialize();\r\n\r\n    this.state = {\r\n      series: [],\r\n      options: {\r\n        labels: [],\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n              size: '75%'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n        colors: ['#3b5de7', '#45cb85', '#eeb902'],\r\n      },\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  inicialize() {\r\n    this.backendServices.getBpmStatistics().then(resp => {\r\n      let processBpmId = this.groupBy(resp, \"activityBpmName\");\r\n      let labels = processBpmId.map(process => process.at(0).activityBpmName);\r\n      let series = processBpmId.map(process => process.length);\r\n      this.setState({ ...this.state, series, options: { ...this.state.options, labels } });\r\n    }).catch(err => { })\r\n  }\r\n\r\n  /**\r\n   * groupBy, agrupa los items de un JSON\r\n   * @param {Array} collection \r\n   * @param {string} property \r\n   * @returns {Array}\r\n   */\r\n  groupBy(collection, property) {\r\n    var i = 0, val, index,\r\n      values = [], result = [];\r\n    for (; i < collection.length; i++) {\r\n      val = collection[i][property];\r\n      index = values.indexOf(val);\r\n      if (index > -1)\r\n        result[index].push(collection[i]);\r\n      else {\r\n        values.push(val);\r\n        result.push([collection[i]]);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardBody>\r\n            <h4 className=\"card-title mb-4\">Estad√≠sticas</h4>\r\n\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                <ReactApexChart\r\n                  options={this.state.options}\r\n                  series={this.state.series}\r\n                  type=\"donut\"\r\n                  height={245}\r\n                  className=\"apex-charts\"\r\n                />\r\n              </Col>\r\n              {/* <Col sm={6}>\r\n                <div>\r\n                  <Row>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"py-3\">\r\n                        <p className=\"mb-1 text-truncate\"><i\r\n                          className=\"mdi mdi-circle text-primary me-1\"></i>{\" \"}Analisis\r\n                        </p>\r\n                        <h5>$ 2,652</h5>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"py-3\">\r\n                        <p className=\"mb-1 text-truncate\"><i\r\n                          className=\"mdi mdi-circle text-success me-1\"></i>{\" \"}Desembolso</p>\r\n                        <h5>$ 2,284</h5>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <div className=\"py-3\">\r\n                        <p className=\"mb-1 text-truncate\"><i\r\n                          className=\"mdi mdi-circle text-warning me-1\"></i>{\" \"}Propuesta</p>\r\n                        <h5>$ 1,753</h5>\r\n                      </div>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              </Col> */}\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SalesAnalytics\r\n"]},"metadata":{},"sourceType":"module"}