{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\AccountMovementsHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Row, Col, Card, CardBody, Button, Label, Table, Pagination, PaginationItem, PaginationLink, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport { CoreServices, BackendServices } from '../../services';\nimport Currency from '../../helpers/currency';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\n\nconst AccountMovementsHistory = props => {\n  _s();\n\n  const currencyData = new Currency();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [dataRows, setDataRows] = useState([]);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices()); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    fetchData();\n  }, []);\n\n  function fetchData() {\n    loadData();\n  } //cargar lista de facilidades\n\n\n  function loadData() {\n    apiCoreServices.getAccountMovements(props.customerNumberT24).then(data => {\n      console.log(\"getAccountMovements\", data);\n\n      if (data !== null && data !== undefined) {\n        var rows = data.map((dataRow, index) => dataRow.dataByYear.map((dataByYear, index2) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [dataByYear.dataresult.map((dataresult, index3) => {\n            var _dataresult$amount, _dataresult$deposits;\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: index2 === 0 && index3 === 0 ? dataRow.AcctId : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dataByYear.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: t(dataresult.month)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", currencyData.format(((_dataresult$amount = dataresult === null || dataresult === void 0 ? void 0 : dataresult.amount) !== null && _dataresult$amount !== void 0 ? _dataresult$amount : 0).toFixed(2))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", currencyData.format((_dataresult$deposits = dataresult === null || dataresult === void 0 ? void 0 : dataresult.deposits) !== null && _dataresult$deposits !== void 0 ? _dataresult$deposits : 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, index2 + index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Total\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"$\", currencyData.format(dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount), 0).toFixed(2))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"$\", currencyData.format(dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.deposits), 0).toFixed(2))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: t(\"Average\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"$\", currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount), 0) / dataByYear.dataresult.length).toFixed(2))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [\"$\", currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.deposits), 0) / dataByYear.dataresult.length).toFixed(2))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)));\n        setDataRows(rows);\n      }\n    }).catch(error => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n    active: isActiveLoading,\n    spinner: true,\n    text: t(\"WaitingPlease\"),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-sub-title\",\n            children: t(\"AccountMovementsHistory\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            className: \"table-responsive styled-table-div\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table table-striped table-hover styled-table table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Account\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Year\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Month\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"AverageAmount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Deposits\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dataRows.length > 0 ? dataRows : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountMovementsHistory, \"ix2MYKL7FgNQWHUOW5DGIAfSMlQ=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AccountMovementsHistory;\nAccountMovementsHistory.propTypes = {\n  customerNumberT24: PropTypes.string\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default AccountMovementsHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountMovementsHistory\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/AccountMovementsHistory.js"],"names":["React","useState","PropTypes","useTranslation","Select","useLocation","useHistory","LoadingOverlay","Row","Col","Card","CardBody","Button","Label","Table","Pagination","PaginationItem","PaginationLink","CardFooter","AvForm","AvField","Link","CoreServices","BackendServices","Currency","AccountMovementsHistory","props","currencyData","t","i18n","dataRows","setDataRows","isActiveLoading","setIsActiveLoading","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","useEffect","fetchData","loadData","getAccountMovements","customerNumberT24","then","data","console","log","undefined","rows","map","dataRow","index","dataByYear","index2","dataresult","index3","AcctId","year","month","format","amount","toFixed","deposits","reduce","total","currentValue","Number","length","catch","error","propTypes","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,kBAAxC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,MALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,UARF,EASEC,cATF,EAUEC,cAVF,EAWEC,UAXF,QAYO,YAZP;AAcA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,gCAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,gBAA9C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAA8C;;AAE9C,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AACzC,QAAMC,YAAY,GAAG,IAAIH,QAAJ,EAArB;AACA,QAAM;AAAEI,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAc1B,cAAc,EAAlC;AAEA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC+B,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAAC,KAAD,CAAtD;AAEA,QAAM,CAACiC,iBAAD,EAAoBC,oBAApB,IAA4ClC,QAAQ,CAAC,IAAIsB,eAAJ,EAAD,CAA1D;AACA,QAAM,CAACa,eAAD,EAAkBC,eAAlB,IAAqCpC,QAAQ,CAAC,IAAIqB,YAAJ,EAAD,CAAnD,CARyC,CAUzC;;AACAtB,EAAAA,KAAK,CAACsC,SAAN,CAAgB,MAAM;AACpBC,IAAAA,SAAS;AACV,GAFD,EAEG,EAFH;;AAIA,WAASA,SAAT,GAAqB;AACnBC,IAAAA,QAAQ;AACT,GAjBwC,CAmBzC;;;AACA,WAASA,QAAT,GAAoB;AAClBJ,IAAAA,eAAe,CAACK,mBAAhB,CAAoCf,KAAK,CAACgB,iBAA1C,EACGC,IADH,CACSC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,IAAlC;;AACA,UAAIA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKG,SAA9B,EAAyC;AACvC,YAAIC,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAAS,CAACC,OAAD,EAAUC,KAAV,KAClBD,OAAO,CAACE,UAAR,CAAmBH,GAAnB,CAAuB,CAACG,UAAD,EAAaC,MAAb,kBACrB;AAAA,qBACCD,UAAU,CAACE,UAAX,CAAsBL,GAAtB,CAA0B,CAACK,UAAD,EAAaC,MAAb;AAAA;;AAAA,gCAC3B;AAAA,sCACE;AAAA,0BAAKF,MAAM,KAAK,CAAX,IAAgBE,MAAM,KAAK,CAA3B,GAA6BL,OAAO,CAACM,MAArC,GAA4C;AAAjD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKJ,UAAU,CAACK;AAAhB;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,0BAAK7B,CAAC,CAAC0B,UAAU,CAACI,KAAZ;AAAN;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,gCAAM/B,YAAY,CAACgC,MAAb,CAAoB,uBAACL,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEM,MAAb,mEAAuB,CAAvB,EAA0BC,OAA1B,CAAkC,CAAlC,CAApB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAA,gCAAMlC,YAAY,CAACgC,MAAb,yBAAoBL,UAApB,aAAoBA,UAApB,uBAAoBA,UAAU,CAAEQ,QAAhC,uEAA4C,CAA5C,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA,eAAST,MAAM,GAAGE,MAAlB;AAAA;AAAA;AAAA;AAAA,oBAD2B;AAAA,WAA1B,CADD,eAUA;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAK3B,CAAC,CAAC,OAAD;AAAN;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,8BAAMD,YAAY,CAACgC,MAAb,CAAqBP,UAAU,CAACE,UAAX,CAAsBS,MAAtB,CAA6B,CAACC,KAAD,EAAQC,YAAR,KAAyBD,KAAK,GAAGE,MAAM,CAACD,YAAY,CAACL,MAAd,CAApE,EAA0F,CAA1F,CAAD,CAA+FC,OAA/F,CAAuG,CAAvG,CAApB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA,8BAAMlC,YAAY,CAACgC,MAAb,CAAqBP,UAAU,CAACE,UAAX,CAAsBS,MAAtB,CAA6B,CAACC,KAAD,EAAQC,YAAR,KAAyBD,KAAK,GAAGE,MAAM,CAACD,YAAY,CAACH,QAAd,CAApE,EAA4F,CAA5F,CAAD,CAAiGD,OAAjG,CAAyG,CAAzG,CAApB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVA,eAiBF;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKjC,CAAC,CAAC,SAAD;AAAN;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,8BAAMD,YAAY,CAACgC,MAAb,CAAoB,CAACP,UAAU,CAACE,UAAX,CAAsBS,MAAtB,CAA6B,CAACC,KAAD,EAAQC,YAAR,KAAyBD,KAAK,GAAGE,MAAM,CAACD,YAAY,CAACL,MAAd,CAApE,EAA0F,CAA1F,IAA6FR,UAAU,CAACE,UAAX,CAAsBa,MAApH,EAA4HN,OAA5H,CAAoI,CAApI,CAApB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,8BAAMlC,YAAY,CAACgC,MAAb,CAAoB,CAACP,UAAU,CAACE,UAAX,CAAsBS,MAAtB,CAA6B,CAACC,KAAD,EAAQC,YAAR,KAAyBD,KAAK,GAAGE,MAAM,CAACD,YAAY,CAACH,QAAd,CAApE,EAA4F,CAA5F,IAA+FV,UAAU,CAACE,UAAX,CAAsBa,MAAtH,EAA8HN,OAA9H,CAAsI,CAAtI,CAApB,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBE;AAAA,wBADF,CADS,CAAX;AA8BA9B,QAAAA,WAAW,CAACiB,IAAD,CAAX;AACD;AACF,KApCH,EAoCKoB,KApCL,CAoCYC,KAAD,IAAW,CAAG,CApCzB;AAqCD;;AAED,sBAEE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAErC,eAAxB;AAAyC,IAAA,OAAO,MAAhD;AAAiD,IAAA,IAAI,EAAEJ,CAAC,CAAC,eAAD,CAAxD;AAAA,2BAEE,QAAC,IAAD;AAAA,8BAEE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,GAAR;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,gBAAd;AAAA,sBAAgCA,CAAC,CAAC,yBAAD;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,QAAD;AAAA,+BAEE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC,IAAR;AAAa,YAAA,SAAS,EAAC,mCAAvB;AAAA,mCACE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,oDAAjB;AAAA,sCACE;AAAA,uCACE;AAAA,0CACE;AAAA,8BAAKA,CAAC,CAAC,SAAD;AAAN;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA,8BAAKA,CAAC,CAAC,MAAD;AAAN;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE;AAAA,8BAAKA,CAAC,CAAC,OAAD;AAAN;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA,8BAAKA,CAAC,CAAC,eAAD;AAAN;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA,8BAAKA,CAAC,CAAC,UAAD;AAAN;AAAA;AAAA;AAAA;AAAA,0BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE;AAAA,0BACGE,QAAQ,CAACqC,MAAT,GAAkB,CAAlB,GAAsBrC,QAAtB,GAAiC;AADpC;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAFF;AAsCD,CAlGD;;GAAML,uB;UAEgBtB,c;;;KAFhBsB,uB;AAoGNA,uBAAuB,CAAC6C,SAAxB,GAAoC;AAClC5B,EAAAA,iBAAiB,EAAExC,SAAS,CAACqE;AADK,CAApC,C,CAIA;;AACA,eAAe9C,uBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { CoreServices, BackendServices } from '../../services';\r\nimport Currency from '../../helpers/currency';;\r\n\r\nconst AccountMovementsHistory = (props) => {\r\n  const currencyData = new Currency();\r\n  const { t, i18n } = useTranslation();\r\n\r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function fetchData() {\r\n    loadData();\r\n  }\r\n\r\n  //cargar lista de facilidades\r\n  function loadData() {\r\n    apiCoreServices.getAccountMovements(props.customerNumberT24)\r\n      .then((data) => {\r\n        console.log(\"getAccountMovements\",data);\r\n        if (data !== null && data !== undefined) {\r\n          var rows = data.map((dataRow, index) => (\r\n            dataRow.dataByYear.map((dataByYear, index2) => (\r\n              <>              \r\n              {dataByYear.dataresult.map((dataresult, index3) => (\r\n              <tr key={index2 + index3}>\r\n                <th>{index2 === 0 && index3 === 0?dataRow.AcctId:\"\"}</th>\r\n                <td>{dataByYear.year}</td>\r\n                <td>{t(dataresult.month)}</td>\r\n                <td>${currencyData.format((dataresult?.amount ?? 0).toFixed(2))}</td>\r\n                <td>${currencyData.format(dataresult?.deposits ?? 0)}</td>\r\n              </tr>\r\n              ))}\r\n              <tr>\r\n              <th></th>\r\n              <th>{t(\"Total\")}</th>\r\n              <th></th>\r\n              <th>${currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount),0)).toFixed(2))}</th>\r\n              <th>${currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.deposits),0)).toFixed(2))}</th>\r\n            </tr>\r\n            <tr>\r\n              <th></th>\r\n              <th>{t(\"Average\")}</th>\r\n              <th></th>\r\n              <th>${currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.amount),0)/dataByYear.dataresult.length).toFixed(2))}</th>\r\n              <th>${currencyData.format((dataByYear.dataresult.reduce((total, currentValue) => total + Number(currentValue.deposits),0)/dataByYear.dataresult.length).toFixed(2))}</th>\r\n            </tr>\r\n            </>                          \r\n            ))\r\n            )\r\n          );\r\n          setDataRows(rows);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n\r\n  return (\r\n\r\n    <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n\r\n      <Card>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <h5 className=\"card-sub-title\">{t(\"AccountMovementsHistory\")}</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <CardBody>\r\n\r\n          <Row>\r\n            <Col md=\"12\" className=\"table-responsive styled-table-div\">\r\n              <Table className=\"table table-striped table-hover styled-table table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>{t(\"Account\")}</th>\r\n                    <th>{t(\"Year\")}</th>\r\n                    <th>{t(\"Month\")}</th>\r\n                    <th>{t(\"AverageAmount\")}</th>                    \r\n                    <th>{t(\"Deposits\")}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataRows.length > 0 ? dataRows : null}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </LoadingOverlay>\r\n\r\n  )\r\n}\r\n\r\nAccountMovementsHistory.propTypes = {\r\n  customerNumberT24: PropTypes.string\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default AccountMovementsHistory;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}