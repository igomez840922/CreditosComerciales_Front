{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\InformeFinanciero\\\\CreditPolicyReview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from '../../helpers/translation-helper';\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, CardTitle, InputGroup, Table, CardFooter } from \"reactstrap\";\nimport AvField from 'availity-reactstrap-validation/lib/AvField';\nimport AvForm from 'availity-reactstrap-validation/lib/AvForm';\nimport { Link } from \"react-router-dom\";\nimport ModalPolicy from \"../Attachments/ModalPolicy\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../services\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport HeaderSections from \"../Common/HeaderSections\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as url from \"../../helpers/url_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreditPolicyReview = props => {\n  _s();\n\n  const location = useLocation();\n  const [displayModal, setDisplayModal] = useState(false);\n  const [actions, setActions] = useState('');\n  const [SusscessDialog, setSusscessDialog] = useState(false);\n  const [dataRows, setdataRows] = useState(null);\n  const [DataSend, setDataSend] = useState(null);\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [dataLocation, setData] = useState(location.data);\n  const [dataDelete, setDataDelete] = useState([]);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const history = useHistory();\n  const [locationData, setLocationData] = useState(null);\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  let dataStorage;\n  React.useEffect(() => {\n    // Read Api Service data\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n        return;\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataStorage = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataStorage = result;\n      }\n    }\n\n    LoadData(dataStorage);\n  }, []);\n\n  if (!props.policies) {\n    return null;\n  }\n\n  function LoadData(dataLocation) {\n    var _dataLocation$transac;\n\n    const backendServices = new BackendServices();\n    backendServices.consultarPoliticaCredito((_dataLocation$transac = dataLocation === null || dataLocation === void 0 ? void 0 : dataLocation.transactionId) !== null && _dataLocation$transac !== void 0 ? _dataLocation$transac : 0).then(resp => {\n      setdataRows(resp.map((policy, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: policy.parameter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.condition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.comply ? 'Si' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.observations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), !props.preview && /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                editarSowActual(policy);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 124\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                eliminarSowActual(policy);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 126\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 32\n          }, this)]\n        }, 'row-' + policy.id + '-' + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this);\n      }));\n    });\n  } // setdataRows(props.policies.map((policy) => {\n  //   return policy.conditions.map((condition, index) => (\n  //     <tr key={'row-' + policy.id + '-' + index}>\n  //       <th>{index === 0 ? policy.parameter : ''}</th>\n  //       <td>{condition.title}</td>\n  //       <td>\n  //         <AvField\n  //           className=\"form-control\"\n  //           name={\"comply[\" + index + \"]\"}\n  //           type=\"select\"\n  //           id={\"comply-\" + index}\n  //           value=\"N/A\">\n  //           <option>{c(\"Yes\")}</option>\n  //           <option>{c(\"No\")}</option>\n  //           <option>{c(\"N/A\")}</option>\n  //         </AvField>\n  //       </td>\n  //       <td>{condition.observations[0]}</td>\n  //     </tr>\n  //   )\n  //   )\n  // }\n  // ));\n\n\n  function toggleModal() {\n    setDisplayModal(!displayModal);\n  }\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } // props.onSubmit(values);\n\n  }\n\n  function DataUpdate(values) {\n    setIsActiveLoading(true);\n    let datos = { ...values,\n      transactId: locationData.transactionId\n    };\n    const backendServices = new BackendServices();\n    backendServices.actualizarPoliticaCredito(datos).then(resp => {\n      if (resp.statusCode == \"200\") {\n        setSusscessDialog(true);\n      } else {\n        seterror_dlg(true);\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n      }\n\n      setIsActiveLoading(false);\n    }).catch(err => {\n      seterror_dlg(true);\n      setIsActiveLoading(false);\n    });\n  }\n\n  function DataInsert(values) {\n    setIsActiveLoading(true);\n    let datos = { ...values,\n      transactId: +locationData.transactionId,\n      debtorId: props.debtorId\n    };\n    const backendServices = new BackendServices();\n    backendServices.nuevoPoliticaCredito(datos).then(resp => {\n      if (resp.statusCode == \"200\") {\n        setSusscessDialog(true); // LoadData();\n      } else {\n        seterror_dlg(true);\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n      }\n\n      setIsActiveLoading(false);\n    }).catch(err => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  function editarSowActual(data) {\n    toggleModal();\n    setActions('edit');\n    setDataSend(data);\n  }\n\n  function eliminarSowActual(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function InsertShowCurrent() {\n    setActions('new');\n    setDataSend(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      children: /*#__PURE__*/_jsxDEV(HeaderSections, {\n        title: \"Credit Policy Review\",\n        t: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isActiveLoading,\n        spinner: true,\n        text: t(\"WaitingPlease\"),\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-responsive\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                className: \"table mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"table-light\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t(\"Parameters\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t(\"Conditions\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t(\"Comply\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: t(\"Observations\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 23\n                    }, this), !props.preview && /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: \"#\",\n                        className: \"float-end\",\n                        onClick: () => {\n                          toggleModal();\n                          InsertShowCurrent();\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 27\n                        }, this), t(\"\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 42\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: dataRows\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this) : null, displayModal && /*#__PURE__*/_jsxDEV(ModalPolicy, {\n      isOpen: displayModal,\n      toggle: toggleModal,\n      DataUpdate: DataUpdate,\n      DataInsert: DataInsert,\n      actions: actions,\n      DataSend: DataSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), SusscessDialog ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setSusscessDialog(false);\n        LoadData(locationData);\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        setIsActiveLoading(true);\n        const backendServices = new BackendServices();\n        backendServices.eliminarPoliticaCredit(locationData.transactionId, dataDelete.debtorId, dataDelete.itemId).then(resp => {\n          setIsActiveLoading(false);\n\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setSusscessDialog(true);\n          }\n        }).catch(error => {\n          setIsActiveLoading(false);\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CreditPolicyReview, \"Ux1A8S5Cnnx9gV49pAICfFLLVNo=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = CreditPolicyReview;\nCreditPolicyReview.propTypes = {\n  policies: PropTypes.array\n};\nexport default CreditPolicyReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditPolicyReview\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/InformeFinanciero/CreditPolicyReview.js"],"names":["React","useEffect","useState","PropTypes","translationHelpers","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","CardTitle","InputGroup","Table","CardFooter","AvField","AvForm","Link","ModalPolicy","SweetAlert","BackendServices","CoreServices","BpmServices","LoadingOverlay","HeaderSections","useLocation","useHistory","url","CreditPolicyReview","props","location","displayModal","setDisplayModal","actions","setActions","SusscessDialog","setSusscessDialog","dataRows","setdataRows","DataSend","setDataSend","confirm_alert","setconfirm_alert","dataLocation","setData","data","dataDelete","setDataDelete","error_dlg","seterror_dlg","error_msg","seterror_msg","isActiveLoading","setIsActiveLoading","history","locationData","setLocationData","t","c","dataStorage","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","LoadData","policies","backendServices","consultarPoliticaCredito","then","resp","map","policy","index","parameter","condition","comply","observations","preview","textAlign","editarSowActual","eliminarSowActual","id","toggleModal","handleSubmit","event","errors","values","preventDefault","DataUpdate","datos","transactId","actualizarPoliticaCredito","statusCode","catch","err","DataInsert","debtorId","nuevoPoliticaCredito","InsertShowCurrent","eliminarPoliticaCredit","itemId","error","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelpers } from '../../helpers/translation-helper';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  CardTitle,\r\n  InputGroup,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport AvField from 'availity-reactstrap-validation/lib/AvField';\r\nimport AvForm from 'availity-reactstrap-validation/lib/AvForm';\r\nimport { Link } from \"react-router-dom\";\r\nimport ModalPolicy from \"../Attachments/ModalPolicy\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../services\";\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport HeaderSections from \"../Common/HeaderSections\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as url from \"../../helpers/url_helper\"\r\n\r\nconst CreditPolicyReview = (props) => {\r\n\r\n  const location = useLocation()\r\n\r\n  const [displayModal, setDisplayModal] = useState(false);\r\n  const [actions, setActions] = useState('');\r\n  const [SusscessDialog, setSusscessDialog] = useState(false);\r\n  const [dataRows, setdataRows] = useState(null);\r\n  const [DataSend, setDataSend] = useState(null);\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const [locationData, setLocationData] = useState(null);\r\n\r\n  const [t, c] = translationHelpers('commercial_credit', 'common');\r\n\r\n  let dataStorage;\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n        return;\r\n      } else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataStorage = location.data;\r\n      }\r\n    } else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataStorage = result;\r\n      }\r\n    }\r\n\r\n    LoadData(dataStorage);\r\n  }, []);\r\n\r\n\r\n  if (!props.policies) {\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  function LoadData(dataLocation) {\r\n    const backendServices = new BackendServices();\r\n    backendServices.consultarPoliticaCredito(dataLocation?.transactionId ?? 0).then(resp => {\r\n      setdataRows(resp.map((policy, index) => {\r\n        return (\r\n          <tr key={'row-' + policy.id + '-' + index}>\r\n            <th>{policy.parameter}</th>\r\n            <td>{policy.condition}</td>\r\n            <td>\r\n              {policy.comply ? 'Si' : 'No'}\r\n            </td>\r\n            <td>{policy.observations}</td>\r\n            {!props.preview && <td style={{ textAlign: \"right\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { editarSowActual(policy) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { eliminarSowActual(policy) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n            </td>}\r\n          </tr>\r\n\r\n        )\r\n      }\r\n      ));\r\n    });\r\n\r\n  }\r\n\r\n  // setdataRows(props.policies.map((policy) => {\r\n  //   return policy.conditions.map((condition, index) => (\r\n  //     <tr key={'row-' + policy.id + '-' + index}>\r\n  //       <th>{index === 0 ? policy.parameter : ''}</th>\r\n  //       <td>{condition.title}</td>\r\n  //       <td>\r\n  //         <AvField\r\n  //           className=\"form-control\"\r\n  //           name={\"comply[\" + index + \"]\"}\r\n  //           type=\"select\"\r\n  //           id={\"comply-\" + index}\r\n  //           value=\"N/A\">\r\n  //           <option>{c(\"Yes\")}</option>\r\n  //           <option>{c(\"No\")}</option>\r\n  //           <option>{c(\"N/A\")}</option>\r\n  //         </AvField>\r\n  //       </td>\r\n  //       <td>{condition.observations[0]}</td>\r\n  //     </tr>\r\n  //   )\r\n  //   )\r\n  // }\r\n  // ));\r\n\r\n  function toggleModal() {\r\n    setDisplayModal(!displayModal);\r\n  }\r\n\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    // props.onSubmit(values);\r\n  }\r\n\r\n  function DataUpdate(values) {\r\n    setIsActiveLoading(true);\r\n    let datos = { ...values, transactId: locationData.transactionId };\r\n    const backendServices = new BackendServices();\r\n\r\n    backendServices.actualizarPoliticaCredito(datos).then(resp => {\r\n      if (resp.statusCode == \"200\") {\r\n        setSusscessDialog(true);\r\n      } else {\r\n        seterror_dlg(true)\r\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n      }\r\n      setIsActiveLoading(false);\r\n    }).catch(err => {\r\n      seterror_dlg(true)\r\n      setIsActiveLoading(false);\r\n    });\r\n  }\r\n\r\n  function DataInsert(values) {\r\n    setIsActiveLoading(true);\r\n    let datos = { ...values, transactId: +locationData.transactionId, debtorId: props.debtorId };\r\n    const backendServices = new BackendServices();\r\n\r\n    backendServices.nuevoPoliticaCredito(datos).then(resp => {\r\n      if (resp.statusCode == \"200\") {\r\n        setSusscessDialog(true);\r\n        // LoadData();\r\n      } else {\r\n        seterror_dlg(true);\r\n        seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n      }\r\n      setIsActiveLoading(false);\r\n    }).catch(err => {\r\n      setIsActiveLoading(false);\r\n    });\r\n  }\r\n\r\n  function editarSowActual(data) {\r\n    toggleModal();\r\n    setActions('edit');\r\n    setDataSend(data);\r\n  }\r\n\r\n  function eliminarSowActual(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n\r\n  function InsertShowCurrent() {\r\n    setActions('new');\r\n    setDataSend(null);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Card> */}\r\n      {/* <CardBody> */}\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {/* <h4 className=\"card-title\">{t(\"Credit Policy Review\")}</h4> */}\r\n        <HeaderSections title=\"Credit Policy Review\" t={t}></HeaderSections>\r\n\r\n      </div>\r\n      {/* <p className=\"card-title-desc\"></p> */}\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <div className=\"table-responsive\">\r\n                <Table className=\"table mb-0\">\r\n                  <thead className=\"table-light\">\r\n                    <tr>\r\n                      <th>{t(\"Parameters\")}</th>\r\n                      <th>{t(\"Conditions\")}</th>\r\n                      <th>{t(\"Comply\")}</th>\r\n                      <th>{t(\"Observations\")}</th>\r\n                      {!props.preview && <th>\r\n                        <Link to=\"#\" className=\"float-end\" onClick={() => { toggleModal(); InsertShowCurrent() }}>\r\n                          <i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i>{t(\"\")}\r\n                        </Link>\r\n                      </th>}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {dataRows}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </LoadingOverlay>\r\n      </AvForm>\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {/* </CardBody> */}\r\n      {displayModal &&\r\n        <ModalPolicy\r\n          isOpen={displayModal}\r\n          toggle={toggleModal}\r\n          DataUpdate={DataUpdate}\r\n          DataInsert={DataInsert}\r\n          actions={actions}\r\n          DataSend={DataSend}\r\n        />}\r\n\r\n      {\r\n        SusscessDialog ? (\r\n          <SweetAlert\r\n            success\r\n            title={t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setSusscessDialog(false)\r\n              LoadData(locationData);\r\n            }}\r\n          >\r\n            {t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null\r\n      }\r\n\r\n      {\r\n        confirm_alert ? (\r\n          <SweetAlert\r\n            title={t(\"Areyousure\")}\r\n            warning\r\n            showCancel\r\n            confirmButtonText={t(\"Yesdeleteit\")}\r\n            confirmBtnBsStyle=\"success\"\r\n            cancelBtnBsStyle=\"danger\"\r\n            onConfirm={() => {\r\n              setIsActiveLoading(true);\r\n              const backendServices = new BackendServices();\r\n              backendServices.eliminarPoliticaCredit(locationData.transactionId, dataDelete.debtorId, dataDelete.itemId).then(resp => {\r\n                setIsActiveLoading(false);\r\n                if (resp.statusCode == \"500\") {\r\n                  setconfirm_alert(false)\r\n                  seterror_dlg(true)\r\n                } else {\r\n                  setconfirm_alert(false)\r\n                  setSusscessDialog(true)\r\n                }\r\n              }).catch(error => {\r\n                setIsActiveLoading(false);\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              })\r\n            }}\r\n            onCancel={() => setconfirm_alert(false)}\r\n          >\r\n            {t(\"Youwontbeabletorevertthis\")}\r\n          </SweetAlert>\r\n        ) : null\r\n      }\r\n      {/* </Card> */}\r\n    </>\r\n  );\r\n};\r\n\r\nCreditPolicyReview.propTypes = {\r\n  policies: PropTypes.array\r\n};\r\n\r\nexport default CreditPolicyReview;\r\n"]},"metadata":{},"sourceType":"module"}