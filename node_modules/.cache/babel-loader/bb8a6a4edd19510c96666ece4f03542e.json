{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\ModalRelevoGeneracional.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport Select from \"react-select\";\nimport { Row, Col, Button, Label, Input, Modal, Card, CardBody, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CoreServices } from \"../../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalRelevoGeneracional = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [campoRequeridoCargo, setcampoRequeridoCargo] = useState(false);\n  const [cargo, setCargo] = useState(null);\n  const [CargosSelect, setCargosSelect] = useState(undefined);\n  const [Cargoset, setCargoset] = useState(null);\n  const [Cargos, setCargos] = useState(null);\n  const [Relacion, setRelacion] = useState([]);\n  const [codigoRelacion, setcodigoRelacion] = useState(null);\n  const [relacionSelect, setrelacionSelect] = useState(undefined);\n  const [campoRequeridoRelacion, setcampoRequeridoRelacion] = useState(undefined);\n  const [cargoSelect, setcargoSelect] = useState(undefined); // Submitimos formulario para busqueda de clientes\n\n  const cargos = [{\n    label: \"Gerente\",\n    value: \"1\"\n  }, {\n    label: \"Jefe RH\",\n    value: \"2\"\n  }, {\n    label: \"Operario\",\n    value: \"3\"\n  }];\n\n  function handleSubmit(event, errors, values) {\n    if (CargosSelect == undefined) {\n      setcampoRequeridoCargo(true);\n      return;\n    } else {\n      setcampoRequeridoCargo(false);\n    }\n\n    if (relacionSelect == undefined) {\n      setcampoRequeridoRelacion(true);\n      return;\n    } else {\n      setcampoRequeridoRelacion(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values.position = Cargoset;\n    values.relationship = codigoRelacion;\n    props.addRelevo(values);\n  }\n\n  function cambio(e) {\n    setCargo(e.value);\n  }\n\n  React.useEffect(() => {\n    // Read Api Service data\n    cargarCargos();\n    cargarRelacion();\n    setcampoRequeridoCargo(false);\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data\n    var defaultVal = null;\n    console.log(props.jsonRelevo);\n    setrelacionSelect(undefined);\n    setCargosSelect(undefined);\n\n    try {\n      if (Relacion.length > 0 && props.jsonRelevo.relationship !== null && relacionSelect === undefined) {\n        defaultVal = Relacion.find(x => x.label === props.jsonRelevo.relationship);\n\n        if (defaultVal !== undefined) {\n          setrelacionSelect(defaultVal);\n        }\n      }\n\n      if (Cargos.length > 0 && props.jsonRelevo.position !== null && CargosSelect === undefined) {\n        defaultVal = Cargos.find(x => x.label === props.jsonRelevo.position);\n\n        if (defaultVal !== undefined) {\n          setCargosSelect(defaultVal);\n        }\n      } // if (cargos.length > 0 && props.jsonRelevo.relationship !== null && cargoSelect === undefined) {\n      //   defaultVal = cargos.find(x => x.value === props.jsonRelevo.relationship);\n      //   if (defaultVal !== undefined) {\n      //     setcargoSelect(defaultVal);\n      //   }\n      // }\n\n    } catch (err) {}\n  }, [props, Relacion, Cargos]);\n\n  function cargarCargos() {\n    const api = new CoreServices();\n    api.getCargosCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setCargos(json);\n    });\n  }\n\n  function cargarRelacion() {\n    const api = new CoreServices();\n    api.getRelacionCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      const optionGroup1 = [{\n        label: t(\"Relation\"),\n        options: json\n      }];\n      setRelacion(json);\n    });\n  }\n\n  function changeAll(e, tipo) {}\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"ManagementRelays\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        \"data-dismiss\": \"modal\",\n        className: \"close\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      style: {\n        backgroundColor: \"#f3f5f7\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"12\",\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            id: \"frmSearch\",\n            className: \"needs-validation\",\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardBody, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"8\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"name\",\n                        children: t(\"FullName\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        type: \"text\",\n                        name: \"name\",\n                        id: \"name\",\n                        value: props.jsonRelevo.name,\n                        errorMessage: t(\"Required Field\"),\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"position\",\n                        children: t(\"Charge\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setCargosSelect(Cargos.find(x => x.label === e.label));\n                          setCargoset(e.label);\n                        },\n                        options: Cargos,\n                        id: \"paises\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"toselect\"),\n                        value: CargosSelect\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 25\n                      }, this), campoRequeridoCargo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"birthDate\",\n                        children: t(\"DBO\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        className: \"form-control\",\n                        name: \"birthDate\",\n                        type: \"date\",\n                        value: props.jsonRelevo.birthDate,\n                        errorMessage: t(\"Required Field\"),\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"birthDate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"3\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"relationship\",\n                        children: t(\"Relation\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Select, {\n                        onChange: e => {\n                          setrelacionSelect(Relacion.find(x => x.value === e.value));\n                          setcodigoRelacion(e.label);\n                        },\n                        options: Relacion,\n                        id: \"relationship\",\n                        classNamePrefix: \"select2-selection\",\n                        placeholder: t(\"Relation\"),\n                        value: relacionSelect\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 25\n                      }, this), campoRequeridoRelacion ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"message-error-parrafo\",\n                        children: t(\"Required Field\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 27\n                      }, this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n                style: {\n                  textAlign: \"right\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnNew\",\n                  color: \"dark\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: props.toggle,\n                  \"data-dismiss\": \"modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n                  id: \"btnSearch\",\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this), \" \", t(\"Save\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalRelevoGeneracional, \"NwVfzUFJg1RPpYqTTvaAv0aXwNk=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModalRelevoGeneracional;\nModalRelevoGeneracional.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func\n};\nexport default ModalRelevoGeneracional;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalRelevoGeneracional\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/ModalRelevoGeneracional.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Select","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","AvForm","AvField","AvGroup","CoreServices","ModalRelevoGeneracional","props","t","i18n","campoRequeridoCargo","setcampoRequeridoCargo","cargo","setCargo","CargosSelect","setCargosSelect","undefined","Cargoset","setCargoset","Cargos","setCargos","Relacion","setRelacion","codigoRelacion","setcodigoRelacion","relacionSelect","setrelacionSelect","campoRequeridoRelacion","setcampoRequeridoRelacion","cargoSelect","setcargoSelect","cargos","label","value","handleSubmit","event","errors","values","preventDefault","length","position","relationship","addRelevo","cambio","e","useEffect","cargarCargos","cargarRelacion","defaultVal","console","log","jsonRelevo","find","x","err","api","getCargosCatalogo","then","response","json","i","Records","push","getRelacionCatalogo","optionGroup1","options","changeAll","tipo","isOpen","toggle","backgroundColor","name","required","birthDate","textAlign","margin","botones","propTypes","bool","func"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { CoreServices } from \"../../../../../services\";\r\n\r\nconst ModalRelevoGeneracional = (props) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [campoRequeridoCargo, setcampoRequeridoCargo] = useState(false);\r\n  const [cargo, setCargo] = useState(null);\r\n  const [CargosSelect, setCargosSelect] = useState(undefined);\r\n  const [Cargoset, setCargoset] = useState(null);\r\n  const [Cargos, setCargos] = useState(null);\r\n  const [Relacion, setRelacion] = useState([]);\r\n  const [codigoRelacion, setcodigoRelacion] = useState(null);\r\n  const [relacionSelect, setrelacionSelect] = useState(undefined);\r\n  const [campoRequeridoRelacion, setcampoRequeridoRelacion] = useState(undefined);\r\n  const [cargoSelect, setcargoSelect] = useState(undefined);\r\n  // Submitimos formulario para busqueda de clientes\r\n  const cargos = [{ label: \"Gerente\", value: \"1\" }, { label: \"Jefe RH\", value: \"2\" }, { label: \"Operario\", value: \"3\" }]\r\n  function handleSubmit(event, errors, values) {\r\n    if (CargosSelect == undefined) {\r\n      setcampoRequeridoCargo(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoCargo(false);\r\n    }\r\n    if (relacionSelect == undefined) {\r\n      setcampoRequeridoRelacion(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoRelacion(false);\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.position = Cargoset;\r\n    values.relationship = codigoRelacion;\r\n    props.addRelevo(values);\r\n\r\n  }\r\n  function cambio(e) {\r\n    setCargo(e.value)\r\n  }\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    cargarCargos()\r\n    cargarRelacion() \r\n    setcampoRequeridoCargo(false);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    console.log(props.jsonRelevo);\r\n    setrelacionSelect(undefined)\r\n    setCargosSelect(undefined)\r\n    try {\r\n      if (Relacion.length > 0 && props.jsonRelevo.relationship !== null && relacionSelect === undefined) {\r\n        defaultVal = Relacion.find(x => x.label === (props.jsonRelevo.relationship));\r\n        if (defaultVal !== undefined) {\r\n          setrelacionSelect(defaultVal);\r\n        }\r\n      }\r\n      if (Cargos.length > 0 && props.jsonRelevo.position !== null && CargosSelect === undefined) {\r\n        defaultVal = Cargos.find(x => x.label === props.jsonRelevo.position);\r\n        if (defaultVal !== undefined) {\r\n          setCargosSelect(defaultVal);\r\n        }\r\n      }\r\n      // if (cargos.length > 0 && props.jsonRelevo.relationship !== null && cargoSelect === undefined) {\r\n      //   defaultVal = cargos.find(x => x.value === props.jsonRelevo.relationship);\r\n      //   if (defaultVal !== undefined) {\r\n      //     setcargoSelect(defaultVal);\r\n      //   }\r\n      // }\r\n    }\r\n    catch (err) { }\r\n  }, [props, Relacion,Cargos]);\r\n  function cargarCargos() {\r\n    const api = new CoreServices();\r\n    api.getCargosCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        setCargos(json);\r\n      });\r\n  }\r\n  function cargarRelacion() {\r\n    const api = new CoreServices();\r\n    api.getRelacionCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"Relation\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        setRelacion(json);\r\n      });\r\n  }\r\n  function changeAll(e, tipo) {\r\n\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{t(\"ManagementRelays\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"8\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"name\">{t(\"FullName\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          type=\"text\"\r\n                          name=\"name\"\r\n                          id=\"name\"\r\n                          value={props.jsonRelevo.name}\r\n                          errorMessage={t(\"Required Field\")}\r\n                          validate={{ required: { value: true } }}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"position\">{t(\"Charge\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => {\r\n                            setCargosSelect(Cargos.find(x => x.label === e.label));\r\n                            setCargoset(e.label);\r\n                          }}\r\n                          options={Cargos}\r\n                          id=\"paises\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"toselect\")}\r\n                          value={CargosSelect}\r\n                        />\r\n                        {campoRequeridoCargo ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <AvGroup className=\"mb-3\">\r\n                        <Label htmlFor=\"birthDate\">{t(\"DBO\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"birthDate\"\r\n                          type=\"date\"\r\n                          value={props.jsonRelevo.birthDate}\r\n                          errorMessage={t(\"Required Field\")}\r\n                          validate={{ required: { value: true } }}\r\n                          id=\"birthDate\" />\r\n                      </AvGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"relationship\">{t(\"Relation\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setrelacionSelect(Relacion.find(x => x.value === e.value)); setcodigoRelacion(e.label) }}\r\n                          options={Relacion}\r\n                          id=\"relationship\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"Relation\")}\r\n                          value={relacionSelect}\r\n                        />\r\n                        {campoRequeridoRelacion ?\r\n                          <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}>\r\n                      <i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"}{t(\"Save\")}\r\n                    </Button>\r\n                    : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalRelevoGeneracional.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n};\r\n\r\nexport default ModalRelevoGeneracional;\r\n"]},"metadata":{},"sourceType":"module"}