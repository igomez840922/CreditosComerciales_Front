{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\3_Cumplimiento\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as opt from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../components/LogProcess/index\";\nimport ModalBitacora from \"../../../components/Common/ModalBitacora\";\nimport AttachmentFileCore from '../../../components/Common/AttachmentFileCore';\nimport { AttachmentFileInputModel } from \"../../../models/Common/AttachmentFileInputModel\";\nimport { saveLogProcess } from \"../../../helpers/logs_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Compliance = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false); //Datos de la Tabla de Clientes\n\n  const [dataClientList, setdataClientList] = useState([]); //Cliente seleccionado\n\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]); //mostrar el modal para la opciÃ³n de finalizar proceso\n\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\n  const [displayModalBitacora, setdisplayModalBitacora] = useState(false);\n  const [optionSelected, setoptionSelected] = useState(null);\n  const [mainDebtor, setmainDebtor] = useState(null); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n    loadMainDebtor(locationData.transactionId);\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar deudor principal\n\n\n  async function loadMainDebtor(transactionId) {\n    var result = await backendServices.consultPrincipalDebtor(transactionId);\n\n    if (result !== undefined && result !== null) {\n      setmainDebtor(result);\n    }\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n\n        if (data.length <= 0) {\n          setselectedClient(new PersonModel());\n          onOpenNewClient();\n        }\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    return identificationTypeList.find(x => x.value === idType);\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalBitacora(show = true) {\n    setdisplayModalBitacora(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  async function onSaveProcess(option) {\n    switch (option) {\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          //chequear si existe algun deudor para poder continuar\n          if (mainDebtor !== null && mainDebtor !== undefined) {\n            saveJBPMProcess(option);\n          } else {\n            //Mensaje ERROR\n            showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n            await loadMainDebtor(locationData.transactionId);\n          }\n\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          if (dataClientList.length > 0) {\n            saveJBPMProcess(option);\n            break;\n          } else {\n            showMessage(t(\"Youmustenteratleastoneclient\"), true);\n            return;\n          }\n        }\n\n      default:\n        {\n          saveJBPMProcess(option);\n          break;\n        }\n    }\n  }\n\n  async function saveJBPMProcess(option) {\n    console.log(\"saveJBPMProcess\", option);\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n\n    switch (option) {\n      case opt.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(infoBpmModel.instanceId).then(data => {\n            if (data !== undefined) {\n              saveAutoLog(opt.APPLICATION_STATUS_CANC, \"\");\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId\n          };\n          bpmServices.updatevariables(infoBpmModel.instanceId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_REFUSED:\n        {\n          infoBpmModel.processId = opt.PROCESS_REFUSED;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_REFUSED.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"no\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              saveAutoLog(opt.APPLICATION_STATUS_RECH, \"\");\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              saveAutoLog();\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  }\n\n  async function saveAutoLog(APPLICATION_STATUS = null, observations = null) {\n    var _mainDebtor$personId, _APPLICATION_STATUS$i, _APPLICATION_STATUS$n;\n\n    var mainDebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var log = new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, opt.BPM_ACTIVITY_02);\n    log.clientId = (_mainDebtor$personId = mainDebtor === null || mainDebtor === void 0 ? void 0 : mainDebtor.personId) !== null && _mainDebtor$personId !== void 0 ? _mainDebtor$personId : log.clientId;\n    log.observations = observations !== null ? t(\"ActivityHasBeenFinishedSuccessfully\") : observations;\n    log.requestId = (_APPLICATION_STATUS$i = APPLICATION_STATUS === null || APPLICATION_STATUS === void 0 ? void 0 : APPLICATION_STATUS.id) !== null && _APPLICATION_STATUS$i !== void 0 ? _APPLICATION_STATUS$i : 0;\n    log.statusDescription = (_APPLICATION_STATUS$n = APPLICATION_STATUS === null || APPLICATION_STATUS === void 0 ? void 0 : APPLICATION_STATUS.name) !== null && _APPLICATION_STATUS$n !== void 0 ? _APPLICATION_STATUS$n : \"\";\n    saveLogProcess(log);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"Compliance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: [!openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: msgData.show,\n              variant: msgData.isError ? \"danger\" : \"success\",\n              dismissible: true,\n              onClose: () => {\n                console.log(\"onClose\");\n                setmsgData({\n                  show: false,\n                  msg: \"\",\n                  isError: false\n                });\n              },\n              children: msgData.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"3\",\n            style: {\n              textAlign: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                setoptionSelected(opt.PROCESS_CANCELPROCESS);\n                showModalBitacora();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 170\n              }, this), \" \", t(\"Cancel\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"9\",\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                setoptionSelected(opt.PROCESS_REFUSED);\n                showModalBitacora();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 162\n              }, this), \" \", t(\"NotRecommend\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                onSaveProcess(opt.PROCESS_CUMPLIMIENTO);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 143\n              }, this), \" \", t(\"Exit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"button\",\n              onClick: () => {\n                setoptionSelected(opt.PROCESS_LISTAEXCLUSION);\n                showModalBitacora();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 143\n              }, this), \" \", t(\"Recommend\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"Compliance\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [mainDebtor != null ? mainDebtor.typePerson === \"1\" ? mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2 : mainDebtor.name : \"\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 9\n        }, this), openNewClient ? /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(ClientForm, {\n            transactId: locationData.transactionId,\n            clientSelected: selectedClient,\n            onCancel: () => {\n              onOpenNewClient(false);\n              getProcessClients(locationData.transactionId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-sub-title\",\n                  children: t(\"ParticipantsList\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive styled-table-div\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table table-striped table-hover styled-table\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 409,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 410,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 411,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 412,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 413,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 414,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 407,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.length > 0 ? dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 424,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 425,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 426,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 427,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined && item.blacklist.length > 0 ? item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\" : \"No Aplica\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 433,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 422,\n                        columnNumber: 33\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"td\", {\n                        colspan: \"7\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"alert alert-info\",\n                          style: {\n                            textAlign: \"center\"\n                          },\n                          children: t(\"NoData\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 47\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this), locationData ? /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(AttachmentFileCore, {\n              attachmentFileInputModel: new AttachmentFileInputModel(locationData.transactionId, opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 11\n          }, this) : null]\n        }, void 0, true), !openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: msgData.show,\n              variant: msgData.isError ? \"danger\" : \"success\",\n              dismissible: true,\n              onClose: () => {\n                console.log(\"onClose\");\n                setmsgData({\n                  show: false,\n                  msg: \"\",\n                  isError: false\n                });\n              },\n              children: msgData.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 14\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, opt.BPM_ACTIVITY_02)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 9\n    }, this) : null, !openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"3\",\n          style: {\n            textAlign: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              setoptionSelected(opt.PROCESS_CANCELPROCESS);\n              showModalBitacora();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 170\n            }, this), \" \", t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"9\",\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              setoptionSelected(opt.PROCESS_REFUSED);\n              showModalBitacora();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 162\n            }, this), \" \", t(\"NotRecommend\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(opt.PROCESS_CUMPLIMIENTO);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 143\n            }, this), \" \", t(\"Exit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            onClick: () => {\n              setoptionSelected(opt.PROCESS_LISTAEXCLUSION);\n              showModalBitacora();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 143\n            }, this), \" \", t(\"Recommend\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this) : null, locationData && displayModalBitacora ? /*#__PURE__*/_jsxDEV(ModalBitacora, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, opt.BPM_ACTIVITY_02),\n      successSaved: () => {\n        onSaveProcess(optionSelected);\n      },\n      isOpen: displayModalBitacora,\n      toggle: () => {\n        showModalBitacora(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Compliance, \"GGZVNhvF/OQKmbrTm1KCi7WpWlQ=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = Compliance;\nexport default Compliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compliance\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/3_Cumplimiento/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","opt","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","AvForm","AvField","Link","Breadcrumbs","useTranslation","LoadingOverlay","ClientForm","SweetAlert","ModalEndProcess","PersonModel","InfoBpmModel","BackendServices","CoreServices","BpmServices","LogProcessModel","LogProcess","ModalBitacora","AttachmentFileCore","AttachmentFileInputModel","saveLogProcess","Compliance","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","setbackendServices","bpmServices","setbpmServices","displayModalBitacora","setdisplayModalBitacora","optionSelected","setoptionSelected","mainDebtor","setmainDebtor","useEffect","data","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","loadIdentificationTypes","loadPersonTypes","getProcessClients","loadMainDebtor","consultarCatalogoTipoIdentificacion","json","i","label","value","catch","error","consultarCatalogoTipoPersona","consultPrincipalDebtor","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","transactId","getPersnoType","pType","find","x","getIdentificationType","idType","showMessage","message","showModalBitacora","onSaveProcess","option","PROCESS_LISTAEXCLUSION","saveJBPMProcess","PROCESS_CUMPLIMIENTO","console","log","maindebtor","infoBpmModel","instanceId","ACT_NONE","personId","personName","name","name2","lastName","lastName2","PROCESS_CANCELPROCESS","abortProcess","saveAutoLog","APPLICATION_STATUS_CANC","processId","activityId","values","toString","updatevariables","PROCESS_REFUSED","completedStatusTask","taskId","APPLICATION_STATUS_RECH","APPLICATION_STATUS","observations","BPM_ACTIVITY_02","clientId","requestId","id","statusDescription","textAlign","margin","typePerson","map","item","index","Number","personType","secondName","secondSurname","clientDocumentId","roles","rol","roleDescription","blacklist","blackList","PROCESS_BUSQUEDADESCARTE"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as opt from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\n\r\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../components/LogProcess/index\";\r\nimport ModalBitacora from \"../../../components/Common/ModalBitacora\";\r\n\r\nimport AttachmentFileCore from '../../../components/Common/AttachmentFileCore';\r\nimport { AttachmentFileInputModel } from \"../../../models/Common/AttachmentFileInputModel\"\r\nimport { saveLogProcess } from \"../../../helpers/logs_helper\";\r\n\r\nconst Compliance = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  //Datos de la Tabla de Clientes\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  //Cliente seleccionado\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  //mostrar el modal para la opciÃ³n de finalizar proceso\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n\r\n  const [displayModalBitacora, setdisplayModalBitacora] = useState(false);\r\n  const [optionSelected, setoptionSelected] = useState(null);\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n    loadMainDebtor(locationData.transactionId)\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar deudor principal\r\n  async function loadMainDebtor(transactionId) {\r\n    var result = await backendServices.consultPrincipalDebtor(transactionId)\r\n    if(result!==undefined && result !== null){\r\n      setmainDebtor(result);\r\n    }    \r\n  }\r\n  \r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    return identificationTypeList.find(x => x.value === idType);\r\n  }\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  \r\n  function showModalBitacora(show = true){\r\n    setdisplayModalBitacora(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  async function onSaveProcess(option) {\r\n    switch (option) {\r\n      case opt.PROCESS_LISTAEXCLUSION:{\r\n        //chequear si existe algun deudor para poder continuar\r\n        if (mainDebtor !== null && mainDebtor !== undefined) {\r\n          saveJBPMProcess(option);\r\n        }\r\n        else {\r\n          //Mensaje ERROR\r\n          showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n          await loadMainDebtor(locationData.transactionId)\r\n        }\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO:{\r\n        if(dataClientList.length>0){\r\n          saveJBPMProcess(option);\r\n          break;\r\n        }\r\n        else{          \r\n          showMessage(t(\"Youmustenteratleastoneclient\"), true);\r\n          return;\r\n        }\r\n      }\r\n      default: {\r\n        saveJBPMProcess(option);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  async function saveJBPMProcess(option) {\r\n\r\n    console.log(\"saveJBPMProcess\",option);\r\n\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n\r\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId,locationData.transactionId,\r\n      opt.PROCESS_CUMPLIMIENTO,opt.ACT_NONE,\r\n      maindebtor?.personId\r\n    );\r\n    infoBpmModel.personName=maindebtor!==undefined?(maindebtor.name + \" \" +maindebtor.name2 + \" \" +maindebtor.lastName + \" \" +maindebtor.lastName2 ):\"\";\r\n    \r\n    switch (option) {\r\n      case opt.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(infoBpmModel.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              \r\n              saveAutoLog(opt.APPLICATION_STATUS_CANC,\"\");\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        infoBpmModel.processId=opt.PROCESS_CUMPLIMIENTO;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId\r\n        };\r\n        bpmServices.updatevariables(infoBpmModel.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_REFUSED: {\r\n        infoBpmModel.processId=opt.PROCESS_REFUSED;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_REFUSED.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"no\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog(opt.APPLICATION_STATUS_RECH,\"\");\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_LISTAEXCLUSION: {\r\n        infoBpmModel.processId=opt.PROCESS_LISTAEXCLUSION;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              saveAutoLog();\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  async function saveAutoLog(APPLICATION_STATUS=null,observations=null) {\r\n    var mainDebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\r\n    var log = new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, opt.BPM_ACTIVITY_02)\r\n    log.clientId = mainDebtor?.personId ?? log.clientId;\r\n    log.observations = observations!==null? t(\"ActivityHasBeenFinishedSuccessfully\"):observations;\r\n    log.requestId = APPLICATION_STATUS?.id ?? 0;\r\n    log.statusDescription = APPLICATION_STATUS?.name ?? \"\";\r\n    saveLogProcess(log);\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"Compliance\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n\r\n      {!openNewClient ?\r\n            <React.Fragment>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md=\"3\" style={{ textAlign: \"left\" }}>\r\n                    <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { setoptionSelected(opt.PROCESS_CANCELPROCESS); showModalBitacora() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  </Col>\r\n                  <Col md=\"9\" style={{ textAlign: \"right\" }}>\r\n                  <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { setoptionSelected(opt.PROCESS_REFUSED); showModalBitacora() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"NotRecommend\")}</Button>\r\n                  <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_CUMPLIMIENTO) }}><i className=\"mdi mdi-content-save-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n                  <Button color=\"success\" type=\"button\" onClick={() => { setoptionSelected(opt.PROCESS_LISTAEXCLUSION); showModalBitacora()}}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Recommend\")}</Button>\r\n                  </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n            : null\r\n          }\r\n\r\n        <Card>\r\n        <CardHeader>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h4 className=\"card-title\">{t(\"Compliance\")}</h4>\r\n                  <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Row>\r\n                    <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                      <h5 className=\"card-title\">{mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? (mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2) : (mainDebtor.name)) : \"\"} </h5>\r\n                    </Col>\r\n                    <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                      <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>                     \r\n            </CardHeader>          \r\n          \r\n              \r\n            {openNewClient ?\r\n            <CardBody>\r\n              <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n            </CardBody>\r\n              :\r\n              <>\r\n              <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <h5 className=\"card-sub-title\">{t(\"ParticipantsList\")}</h5>\r\n                    </Col>\r\n                    {/*<Col md={6} style={{ textAlign: \"right\", }}>\r\n                      <h5 className=\"card-sub-title\">\r\n                        <Link to=\"#\" onClick={() => { showSearchClient() }} title={t(\"Search\")}><i className=\"mdi mdi-account-search-outline mdi-24px\"></i>{\" \"}</Link>\r\n                        &nbsp;&nbsp;\r\n                        <Link to=\"#\" onClick={() => { setselectedClient(undefined); onOpenNewClient() }} title={t(\"AddNew\")}><i className=\"mdi mdi-account-plus-outline mdi-24px\"></i>{\" \"}</Link>\r\n                      </h5>\r\n\r\n          </Col>*/}\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                    <div className=\"table-responsive styled-table-div\">\r\n                      <Table className=\"table table-striped table-hover styled-table\">\r\n                        <thead>\r\n                          <tr>\r\n                              <th>{t(\"PersonType\")}</th>\r\n                              <th>{t(\"FullName\")}</th>\r\n                              <th>{t(\"IdentificationType\")}</th>\r\n                              <th>{t(\"IdentificationNumber\")}</th>\r\n                              <th>{t(\"Roles\")}</th>\r\n                              <th>{t(\"WatchList\")}</th>\r\n                              {/* <th></th> */}\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n\r\n                            {dataClientList.length > 0 ?\r\n                              dataClientList.map((item, index) => (\r\n                                <tr>\r\n                                  <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                                  <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                                  <td>{getIdentificationType(item.idType).label}</td>\r\n                                  <td>{item.clientDocumentId}</td>\r\n                                  <td>\r\n                                    {item.roles !== undefined ?\r\n                                      item.roles.map((rol, index) => (\r\n                                        rol.roleDescription + \" - \"\r\n                                      )) : null}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.blacklist !== undefined && item.blacklist.length > 0 ?\r\n                                      (item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"}\r\n                                  </td>\r\n                                  {/* <td style={{ textAlign: \"right\" }}>\r\n                                    <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                    <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                                  </td> */}\r\n                                </tr>\r\n                              )) :\r\n                              <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td>\r\n                            }\r\n                          </tbody>\r\n                        </Table>\r\n                      </div>\r\n\r\n                    </Col>\r\n                  </Row>                  \r\n              </CardBody>\r\n\r\n              {locationData?\r\n          <CardBody>\r\n            <AttachmentFileCore attachmentFileInputModel={new AttachmentFileInputModel(locationData.transactionId, opt.PROCESS_BUSQUEDADESCARTE, opt.ACT_NONE)} />\r\n          </CardBody>\r\n          :null}      \r\n              </>\r\n            }\r\n             {!openNewClient ?\r\n             <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>:null}\r\n\r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      {locationData?\r\n        <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId,locationData.transactionId,0,\"\",\"\",opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, opt.BPM_ACTIVITY_02)}/>\r\n      :null}\r\n\r\n{!openNewClient ?\r\n            <React.Fragment>\r\n                \r\n                <Row>\r\n                  <Col md=\"3\" style={{ textAlign: \"left\" }}>\r\n                    <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { setoptionSelected(opt.PROCESS_CANCELPROCESS); showModalBitacora() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  </Col>\r\n                  <Col md=\"9\" style={{ textAlign: \"right\" }}>\r\n                  <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { setoptionSelected(opt.PROCESS_REFUSED); showModalBitacora() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"NotRecommend\")}</Button>\r\n                  <Button color=\"primary\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_CUMPLIMIENTO) }}><i className=\"mdi mdi-content-save-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n                  <Button color=\"success\" type=\"button\" onClick={() => { setoptionSelected(opt.PROCESS_LISTAEXCLUSION); showModalBitacora()}}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Recommend\")}</Button>\r\n                  </Col>\r\n                </Row>\r\n            </React.Fragment>\r\n            : null\r\n          }\r\n      \r\n      {locationData && displayModalBitacora?\r\n      <ModalBitacora logProcessModel={new LogProcessModel(locationData.instanceId,locationData.transactionId,0,\"\",\"\",opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE,opt.BPM_ACTIVITY_02)}\r\n        successSaved={() => { onSaveProcess(optionSelected); }} \r\n        isOpen={displayModalBitacora} toggle={() => { showModalBitacora(false) }} />\r\n        :null}\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default Compliance"]},"metadata":{},"sourceType":"module"}