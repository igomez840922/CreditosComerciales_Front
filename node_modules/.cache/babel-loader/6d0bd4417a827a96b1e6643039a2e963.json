{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\api\\\\plugins_soaint\\\\maskNumber.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Row, Col, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MaskSoaint = props => {\n  _s();\n\n  var _props$name, _props$id;\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [valueSet, setvalueSet] = useState(0); // React.useEffect(()=>{\n  //     setnumberExpresion(props.maskNumber)\n  // }, []);\n\n  function convertToNotation(numero) {\n    let length = numero.length;\n    let notation = ['', 'K', 'M', 'B', '-'];\n    numero = numero.split('');\n    let reducer = length <= 3 ? 0 : length > 3 && length <= 6 ? 0 : length > 6 && length <= 12 ? 3 : length > 12 && length <= 16 ? 9 : 15;\n    numero.length = length <= 16 ? numero.length - reducer : 4;\n    length > 3 && numero.splice(-3, 0, ',');\n    numero = numero.join('') + notation[length <= 3 ? 0 : reducer === 0 ? 1 : reducer === 3 ? 2 : reducer >= 6 && reducer <= 9 ? 3 : 4];\n    return numero;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AvField, {\n      type: \"text\",\n      name: (_props$name = props === null || props === void 0 ? void 0 : props.name) !== null && _props$name !== void 0 ? _props$name : \"mask\",\n      id: (_props$id = props === null || props === void 0 ? void 0 : props.id) !== null && _props$id !== void 0 ? _props$id : \"mask\",\n      placeholder: \"Ingrese su mascara en (K,M,B)\",\n      onChange: e => {\n        props.setnumberExpresion(convertToNotation(e.target.value));\n      },\n      value: props.numberExpresion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MaskSoaint, \"I+Nf/IrzIc8BLh0nd9JU9oH/W+c=\", false, function () {\n  return [useTranslation];\n});\n\n_c = MaskSoaint;\nMaskSoaint.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default MaskSoaint;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaskSoaint\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/api/plugins_soaint/maskNumber.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Row","Col","Label","AvForm","AvField","AvGroup","MaskSoaint","props","t","i18n","valueSet","setvalueSet","convertToNotation","numero","length","notation","split","reducer","splice","join","name","id","e","setnumberExpresion","target","value","numberExpresion","propTypes","onSubmit","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,eAAhD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,GADJ,EAEIC,GAFJ,EAGIC,KAHJ,QAIO,YAJP;AAKA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,gCAAzC;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcZ,cAAc,EAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,CAAD,CAAxC,CAF0B,CAK1B;AACA;AACA;;AAEA,WAASgB,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,QAAIC,MAAM,GAAGD,MAAM,CAACC,MAApB;AACA,QAAIC,QAAQ,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,CAAf;AACAF,IAAAA,MAAM,GAAGA,MAAM,CAACG,KAAP,CAAa,EAAb,CAAT;AACA,QAAIC,OAAO,GAAGH,MAAM,IAAI,CAAV,GAAc,CAAd,GAAmBA,MAAM,GAAG,CAAT,IAAcA,MAAM,IAAI,CAAxB,GAA4B,CAA5B,GAAiCA,MAAM,GAAG,CAAT,IAAcA,MAAM,IAAI,EAAxB,GAA6B,CAA7B,GAAkCA,MAAM,GAAG,EAAT,IAAeA,MAAM,IAAI,EAAzB,GAA8B,CAA9B,GAAkC,EAAtI;AACAD,IAAAA,MAAM,CAACC,MAAP,GAAgBA,MAAM,IAAI,EAAV,GAAeD,MAAM,CAACC,MAAP,GAAgBG,OAA/B,GAAyC,CAAzD;AACAH,IAAAA,MAAM,GAAG,CAAT,IAAcD,MAAM,CAACK,MAAP,CAAc,CAAC,CAAf,EAAkB,CAAlB,EAAqB,GAArB,CAAd;AACAL,IAAAA,MAAM,GAAGA,MAAM,CAACM,IAAP,CAAY,EAAZ,IAAkBJ,QAAQ,CAAED,MAAM,IAAI,CAAV,GAAc,CAAd,GAAmBG,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAqBA,OAAO,KAAK,CAAZ,GAAgB,CAAhB,GAAqBA,OAAO,IAAI,CAAX,IAAgBA,OAAO,IAAI,CAA3B,GAA+B,CAA/B,GAAmC,CAAlG,CAAnC;AACD,WAAOJ,MAAP;AACF;;AACD,sBACI;AAAA,2BACI,QAAC,OAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,iBAAEN,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEa,IAAT,qDAAiB,MAFzB;AAGI,MAAA,EAAE,eAAEb,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEc,EAAT,iDAAe,MAHrB;AAII,MAAA,WAAW,EAAC,+BAJhB;AAKI,MAAA,QAAQ,EAAGC,CAAD,IAAO;AAAEf,QAAAA,KAAK,CAACgB,kBAAN,CAAyBX,iBAAiB,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAA1C;AAA6D,OALpF;AAMI,MAAA,KAAK,EAAElB,KAAK,CAACmB;AANjB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CA/BD;;GAAMpB,U;UACkBT,c;;;KADlBS,U;AAgCNA,UAAU,CAACqB,SAAX,GAAuB;AACnBC,EAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,IAAV,CAAeC;AADN,CAAvB;AAGA,eAAexB,UAAf","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Label,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nconst MaskSoaint = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [valueSet, setvalueSet] = useState(0);\r\n\r\n\r\n    // React.useEffect(()=>{\r\n    //     setnumberExpresion(props.maskNumber)\r\n    // }, []);\r\n\r\n    function convertToNotation(numero) {\r\n        let length = numero.length;\r\n        let notation = ['', 'K', 'M', 'B', '-'];\r\n        numero = numero.split('');\r\n        let reducer = length <= 3 ? 0 : (length > 3 && length <= 6 ? 0 : (length > 6 && length <= 12 ? 3 : (length > 12 && length <= 16 ? 9 : 15)));\r\n        numero.length = length <= 16 ? numero.length - reducer : 4;\r\n        length > 3 && numero.splice(-3, 0, ',');\r\n        numero = numero.join('') + notation[(length <= 3 ? 0 : (reducer === 0 ? 1 : (reducer === 3 ? 2 : (reducer >= 6 && reducer <= 9 ? 3 : 4))))];\r\n       return numero;\r\n    }\r\n    return (\r\n        <>\r\n            <AvField\r\n                type=\"text\"\r\n                name={props?.name ?? \"mask\"}\r\n                id={props?.id ?? \"mask\"}\r\n                placeholder=\"Ingrese su mascara en (K,M,B)\"\r\n                onChange={(e) => { props.setnumberExpresion(convertToNotation(e.target.value)) }}\r\n                value={props.numberExpresion}\r\n            />\r\n        </>\r\n    );\r\n};\r\nMaskSoaint.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}\r\nexport default MaskSoaint;\r\n"]},"metadata":{},"sourceType":"module"}