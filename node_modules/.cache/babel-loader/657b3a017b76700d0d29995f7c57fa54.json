{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Attachments\\\\ModalPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from \"../../helpers\";\nimport { Row, Col, Button, Label, Input, Modal } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalPolicy = props => {\n  _s();\n\n  const [comply, setcomply] = useState(undefined);\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\n  const [t, c] = translationHelpers(\"translation\", \"common\");\n  const dataPropiedad = [{\n    label: \"N/A\",\n    value: \"N/A\"\n  }, {\n    label: \"Si\",\n    value: \"Si\"\n  }, {\n    label: \"No\",\n    value: \"No\"\n  }];\n\n  function handleSubmit(event, errors, values) {\n    if (comply == undefined) {\n      setcampoRequeridoTipo(true);\n      return;\n    } else {\n      setcampoRequeridoTipo(false);\n    }\n\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    if (props.actions == 'new') {\n      props.DataInsert({ ...values,\n        comply: comply.value\n      });\n    } else if (props.actions === 'edit') {\n      props.DataUpdate({ ...values,\n        comply: comply.value,\n        debtorId: props.DataSend.debtorId,\n        itemId: props.DataSend.itemId\n      });\n    }\n\n    props.toggle();\n  }\n\n  React.useEffect(() => {\n    // Read Api Service data     \n    var defaultVal = null;\n    setcomply(undefined);\n\n    try {\n      if (dataPropiedad.length > 0 && props.DataSend.compy !== null && comply === undefined) {\n        defaultVal = dataPropiedad.find(x => x.value == props.DataSend.comply);\n\n        if (defaultVal !== undefined) {\n          setcomply(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"xl\",\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: t(\"add new policy\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        autocomplete: \"off\",\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"parameter\",\n                children: t(\"Parameters\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"parameter\",\n                type: \"text\",\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                },\n                value: props.DataSend ? props.DataSend.parameter : null,\n                id: \"parameter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"condition\",\n                children: t(\"Terms\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"condition\",\n                type: \"text\",\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                },\n                value: props.DataSend ? props.DataSend.condition : null,\n                id: \"condition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"comply\",\n                children: t(\"Comply\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                noOptionsMessage: () => \"\",\n                onChange: e => {\n                  setcomply(dataPropiedad.find(x => x.label === e.label));\n                },\n                options: dataPropiedad,\n                id: \"comply\",\n                classNamePrefix: \"select2-selection\",\n                placeholder: t(\"toselect\"),\n                value: comply\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), campoRequeridoTipo ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-error-parrafo\",\n                children: t(\"Required Field\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"observations\",\n                children: t(\"Observations\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"observations\",\n                type: \"textarea\",\n                errorMessage: t(\"Required Field\"),\n                value: props.DataSend ? props.DataSend.observations : null,\n                id: \"observations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: \"12\",\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: props.toggle,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi mdi-cancel mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), \" \", c(\"Cancel\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"submit\",\n              style: {\n                margin: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save mdi-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 93\n              }, this), \" \", c(\"Save\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalPolicy, \"g2wBDlqVDFWW7zmg7OwtLAMDHGs=\");\n\n_c = ModalPolicy;\nModalPolicy.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onAttach: PropTypes.func\n};\nexport default ModalPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalPolicy\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Attachments/ModalPolicy.js"],"names":["React","useState","PropTypes","translationHelpers","Row","Col","Button","Label","Input","Modal","AvForm","AvField","Select","ModalPolicy","props","comply","setcomply","undefined","campoRequeridoTipo","setcampoRequeridoTipo","t","c","dataPropiedad","label","value","handleSubmit","event","errors","values","preventDefault","length","actions","DataInsert","DataUpdate","debtorId","DataSend","itemId","toggle","useEffect","defaultVal","compy","find","x","err","isOpen","required","parameter","condition","e","observations","textAlign","margin","propTypes","bool","func","onAttach"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelpers } from \"../../helpers\";\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport Select from \"react-select\";\r\n\r\nconst ModalPolicy = (props) => {\r\n    const [comply, setcomply] = useState(undefined);\r\n    const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\r\n\r\n    const [t, c] = translationHelpers(\"translation\", \"common\");\r\n\r\n    const dataPropiedad = [{ label: \"N/A\", value: \"N/A\" }, { label: \"Si\", value: \"Si\" }, { label: \"No\", value: \"No\" }];\r\n\r\n    function handleSubmit(event, errors, values) {\r\n        if (comply == undefined) {\r\n            setcampoRequeridoTipo(true);\r\n            return;\r\n        } else {\r\n            setcampoRequeridoTipo(false);\r\n        }\r\n        event.preventDefault();\r\n        if (errors.length > 0) {\r\n            return;\r\n        }\r\n        if (props.actions == 'new') {\r\n            props.DataInsert({ ...values, comply: comply.value })\r\n        } else if (props.actions === 'edit') {\r\n            props.DataUpdate({ ...values, comply: comply.value, debtorId: props.DataSend.debtorId, itemId: props.DataSend.itemId })\r\n        }\r\n        props.toggle();\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        // Read Api Service data     \r\n        var defaultVal = null;\r\n        setcomply(undefined)\r\n        try {\r\n            if (dataPropiedad.length > 0 && props.DataSend.compy !== null && comply === undefined) {\r\n                defaultVal = dataPropiedad.find(x => x.value == props.DataSend.comply);\r\n                if (defaultVal !== undefined) {\r\n                    setcomply(defaultVal);\r\n                }\r\n            }\r\n\r\n        }\r\n        catch (err) { }\r\n    }, [props]);\r\n\r\n    return (\r\n        <Modal\r\n            size=\"xl\"\r\n            isOpen={props.isOpen}\r\n            toggle={props.toggle}\r\n            centered={true}>\r\n            <div className=\"modal-header\">\r\n                <h5 className=\"modal-title mt-0\">{t(\"add new policy\")}</h5>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={props.toggle}\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <AvForm autocomplete=\"off\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"parameter\">{t(\"Parameters\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"parameter\"\r\n                                    type=\"text\"\r\n                                    errorMessage={t(\"Required Field\")}\r\n                                    validate={{ required: { value: true } }}\r\n                                    value={props.DataSend ? props.DataSend.parameter : null}\r\n                                    id=\"parameter\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md=\"6\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"condition\">{t(\"Terms\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"condition\"\r\n                                    type=\"text\"\r\n                                    errorMessage={t(\"Required Field\")}\r\n                                    validate={{ required: { value: true } }}\r\n                                    value={props.DataSend ? props.DataSend.condition : null}\r\n                                    id=\"condition\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"comply\">{t(\"Comply\")}</Label>\r\n                                <Select noOptionsMessage={() => \"\"} \r\n                                    onChange={(e) => { setcomply(dataPropiedad.find(x => x.label === e.label)); }}\r\n                                    options={dataPropiedad}\r\n                                    id=\"comply\"\r\n                                    classNamePrefix=\"select2-selection\"\r\n                                    placeholder={t(\"toselect\")}\r\n                                    value={comply}\r\n                                />\r\n                                {campoRequeridoTipo ?\r\n                                    <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                                    : null}\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                            <div className=\"mb-3\">\r\n                                <Label htmlFor=\"observations\">{t(\"Observations\")}</Label>\r\n                                <AvField\r\n                                    className=\"form-control\"\r\n                                    name=\"observations\"\r\n                                    type=\"textarea\"\r\n                                    errorMessage={t(\"Required Field\")}\r\n                                    value={props.DataSend ? props.DataSend.observations : null}\r\n                                    id=\"observations\" />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col lg=\"12\" style={{ textAlign: \"right\" }}>\r\n                            <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle}>\r\n                                <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{c(\"Cancel\")}\r\n                            </Button>\r\n                            <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                                {\" \"}{c(\"Save\")}\r\n                            </Button>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </AvForm>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nModalPolicy.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    toggle: PropTypes.func,\r\n    onAttach: PropTypes.func\r\n};\r\n\r\nexport default ModalPolicy;\r\n"]},"metadata":{},"sourceType":"module"}