{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{useTranslation}from'react-i18next';import{Card,Row,Col,Form,Container}from\"react-bootstrap\";import Select from'react-select';import FormContainerQuoter from'./FormContainerQuoter';import FormQuoterTypeNatural from'./FormQuoterTypeNatural';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormQuoterScreen=function FormQuoterScreen(){// hooks\nvar _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;var _useState=useState({value:'1',label:'Natural'}),_useState2=_slicedToArray(_useState,2),typePerson=_useState2[0],setTypePerson=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),personTypeSelected=_useState4[0],setPersonTypeSelected=_useState4[1];var options=[{value:'1',label:'Natural'},{value:'2',label:'Jurídica'}];var optionsIdType=[{value:'1',label:'RUC'},{value:'2',label:'RIF'},{value:'3',label:'Cédula'}];var handleChangeTypePerson=function handleChangeTypePerson(personSelected){console.log(personSelected.label);setPersonTypeSelected(personSelected.label);console.log(\"Handle type person\",personSelected.value);};return/*#__PURE__*/_jsx(FormContainerQuoter,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:t(\"ClientData\")}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:6,lg:4,children:[console.log(\"personTypeSelected:\",personTypeSelected),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"personType\",children:t(\"PersonType\")}),/*#__PURE__*/_jsx(Select,{defaultValue:{label:\"Natural\",value:\"1\"},options:options,name:\"personType\",onChange:handleChangeTypePerson})]})]}),/*#__PURE__*/_jsx(Col,{md:6,lg:4,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"idType\",children:t(\"IdType\")}),/*#__PURE__*/_jsx(Select,{options:optionsIdType})]})}),/*#__PURE__*/_jsx(Col,{md:12,lg:4,children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{htmlFor:\"idnumber\",children:t(\"IdNumber\")}),/*#__PURE__*/_jsx(Form.Control,{})]})}),/*#__PURE__*/_jsx(FormQuoterTypeNatural,{})]})]})})});};export default FormQuoterScreen;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/FormQuoterScreen.js"],"names":["useState","useTranslation","Card","Row","Col","Form","Container","Select","FormContainerQuoter","FormQuoterTypeNatural","FormQuoterScreen","t","i18n","value","label","typePerson","setTypePerson","personTypeSelected","setPersonTypeSelected","options","optionsIdType","handleChangeTypePerson","personSelected","console","log"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport { useTranslation } from 'react-i18next'\r\nimport {\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Container\r\n} from \"react-bootstrap\";\r\nimport Select from 'react-select'\r\n\r\nimport FormContainerQuoter from './FormContainerQuoter'\r\nimport FormQuoterTypeNatural from './FormQuoterTypeNatural';\r\n\r\nconst FormQuoterScreen = () => {\r\n    // hooks\r\n    const { t, i18n } = useTranslation();\r\n    const [typePerson, setTypePerson] = useState({\r\n        value: '1', label: 'Natural'\r\n     })\r\n    const [personTypeSelected, setPersonTypeSelected] = useState(\"\")\r\n\r\n    const options = [\r\n        { value: '1', label: 'Natural' },\r\n        { value: '2', label: 'Jurídica' }\r\n    ]\r\n    const optionsIdType = [\r\n        { value: '1', label: 'RUC' },\r\n        { value: '2', label: 'RIF' },\r\n        { value: '3', label: 'Cédula' },\r\n    ]\r\n\r\n    const handleChangeTypePerson = (personSelected) => {\r\n        console.log(personSelected.label);\r\n        setPersonTypeSelected(personSelected.label)\r\n        console.log(\"Handle type person\", personSelected.value);\r\n    }\r\n\r\n    return (\r\n        <FormContainerQuoter>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {t(\"ClientData\")}\r\n                    </Card.Title>\r\n                    <Row>\r\n                        <Col md={6} lg={4}>\r\n                            {console.log(\"personTypeSelected:\", personTypeSelected)}\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"personType\">{t(\"PersonType\")}</Form.Label>\r\n                                <Select\r\n                                    defaultValue={{ label: \"Natural\", value: \"1\" }}\r\n                                    options={options}\r\n                                    name=\"personType\"\r\n                                    onChange={handleChangeTypePerson}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={6} lg={4}>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"idType\">{t(\"IdType\")}</Form.Label>\r\n                                <Select options={optionsIdType} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={12} lg={4}>\r\n                            <div className=\"mb-3\">\r\n                                <Form.Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Form.Label>\r\n                                <Form.Control></Form.Control>\r\n                            </div>\r\n                        </Col>\r\n                        <FormQuoterTypeNatural />\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        </FormContainerQuoter>\r\n    )\r\n}\r\n\r\nexport default FormQuoterScreen"]},"metadata":{},"sourceType":"module"}