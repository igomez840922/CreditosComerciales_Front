{"ast":null,"code":"import axios from \"axios\";\nimport * as url from \"../helpers/url_helper\";\nimport qs from 'qs';\nlet API_URL = \"\";\nlet axiosApi = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nclass ApiServiceCore {\n  SetParams(usr, psw) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Asignamos los headers a la peticion                              */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    axiosApi.interceptors.response.use(config => {\n      config.headers[\"Authorization\"] = \"Basic \" + (usr + \":\" + psw);\n      return config;\n    }, error => {\n      console.log(\"request error: \", error);\n    });\n    axiosApi.interceptors.request.use(config => {\n      config.headers[\"Authorization\"] = \"Basic \" + (usr + \":\" + psw);\n      return config;\n    }, error => {\n      console.log(\"request error: \", error);\n    });\n  }\n\n  async get(url, config = {}) {\n    return await axiosApi.get(url, { ...config\n    }).then(response => response.data);\n  }\n\n  async post(url, data, config = {}, auth) {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*        Retornamos la respuesta y le montamos el header con el token de las credenciales        */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    console.log(\"post\", axiosApi);\n    return await axiosApi.post(url, { ...data\n    }, {\n      headers: {\n        'Authorization': 'Basic ' + btoa(auth.headers.username + ':' + auth.headers.password)\n      }\n    }).then(response => response);\n  }\n\n  async put(url, data, config = {}) {\n    return axiosApi.put(url, { ...data\n    }, { ...config\n    }).then(response => response.data);\n  }\n\n  async del(url, config = {}) {\n    return await axiosApi.delete(url, { ...config\n    }).then(response => response.data);\n  }\n\n}\n\nexport default ApiServiceCore;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/services/ApiServiceAuth.js"],"names":["axios","url","qs","API_URL","axiosApi","create","baseURL","headers","ApiServiceCore","SetParams","usr","psw","interceptors","response","use","config","error","console","log","request","get","then","data","post","auth","btoa","username","password","put","del","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,uBAArB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,QAAQ,GAAIJ,KAAK,CAACK,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEH,OADgB;AAEzBI,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AAFgB,CAAb,CAAhB;;AAQA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,SAAS,CAACC,GAAD,EAAKC,GAAL,EAAS;AACd;;AACA;;AACA;AACAP,IAAAA,QAAQ,CAACQ,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CACKC,MAAD,IAAY;AACRA,MAAAA,MAAM,CAACR,OAAP,CAAe,eAAf,IAAkC,YAAYG,GAAG,GAAG,GAAN,GAAYC,GAAxB,CAAlC;AACA,aAAOI,MAAP;AACH,KAJL,EAKKC,KAAD,IAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACH,KAPL;AAUAZ,IAAAA,QAAQ,CAACQ,YAAT,CAAsBO,OAAtB,CAA8BL,GAA9B,CACKC,MAAD,IAAY;AACRA,MAAAA,MAAM,CAACR,OAAP,CAAe,eAAf,IAAkC,YAAYG,GAAG,GAAG,GAAN,GAAYC,GAAxB,CAAlC;AACA,aAAOI,MAAP;AACH,KAJL,EAKKC,KAAD,IAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B;AACH,KAPL;AASH;;AAEQ,QAAHI,GAAG,CAACnB,GAAD,EAAMc,MAAM,GAAG,EAAf,EAAmB;AACxB,WAAO,MAAMX,QAAQ,CAChBgB,GADQ,CACJnB,GADI,EACC,EAAE,GAAGc;AAAL,KADD,EAERM,IAFQ,CAEHR,QAAQ,IAAIA,QAAQ,CAACS,IAFlB,CAAb;AAGH;;AAES,QAAJC,IAAI,CAACtB,GAAD,EAAMqB,IAAN,EAAYP,MAAM,GAAG,EAArB,EAAwBS,IAAxB,EAA8B;AACpC;;AACA;;AACA;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBd,QAAnB;AAEC,WAAO,MAAMA,QAAQ,CACjBmB,IADS,CACJtB,GADI,EACC,EAAE,GAAGqB;AAAL,KADD,EACc;AACpBf,MAAAA,OAAO,EAAE;AACP,yBAAiB,WAASkB,IAAI,CAACD,IAAI,CAACjB,OAAL,CAAamB,QAAb,GAAsB,GAAtB,GAA0BF,IAAI,CAACjB,OAAL,CAAaoB,QAAxC;AADvB;AADW,KADd,EAMTN,IANS,CAMJR,QAAQ,IAAGA,QANP,CAAb;AAQJ;;AAEQ,QAAHe,GAAG,CAAC3B,GAAD,EAAMqB,IAAN,EAAYP,MAAM,GAAG,EAArB,EAAyB;AAC9B,WAAOX,QAAQ,CACVwB,GADE,CACE3B,GADF,EACO,EAAE,GAAGqB;AAAL,KADP,EACoB,EAAE,GAAGP;AAAL,KADpB,EAEFM,IAFE,CAEGR,QAAQ,IAAIA,QAAQ,CAACS,IAFxB,CAAP;AAGH;;AAEQ,QAAHO,GAAG,CAAC5B,GAAD,EAAMc,MAAM,GAAG,EAAf,EAAmB;AACxB,WAAO,MAAMX,QAAQ,CAChB0B,MADQ,CACD7B,GADC,EACI,EAAE,GAAGc;AAAL,KADJ,EAERM,IAFQ,CAEHR,QAAQ,IAAIA,QAAQ,CAACS,IAFlB,CAAb;AAGH;;AA1DgB;;AA8DrB,eAAgBd,cAAhB","sourcesContent":["import axios from \"axios\"\r\nimport * as url from \"../helpers/url_helper\"\r\nimport qs from 'qs';\r\nlet API_URL = \"\"\r\nlet axiosApi =  axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n})\r\n\r\n\r\nclass ApiServiceCore {\r\n    SetParams(usr,psw){\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                               Asignamos los headers a la peticion                              */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        axiosApi.interceptors.response.use(\r\n            (config) => {\r\n                config.headers[\"Authorization\"] = \"Basic \" + (usr + \":\" + psw);\r\n                return config;\r\n            },\r\n            (error) => {\r\n                console.log(\"request error: \", error)\r\n            }\r\n        ); \r\n\r\n        axiosApi.interceptors.request.use(\r\n            (config) => {\r\n                config.headers[\"Authorization\"] = \"Basic \" + (usr + \":\" + psw);\r\n                return config;\r\n            },\r\n            (error) => {\r\n                console.log(\"request error: \", error)\r\n            }\r\n        ); \r\n    }\r\n\r\n    async get(url, config = {}) {\r\n        return await axiosApi\r\n            .get(url, { ...config })\r\n            .then(response => response.data)\r\n    }\r\n\r\n    async post(url, data, config = {},auth) {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*        Retornamos la respuesta y le montamos el header con el token de las credenciales        */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        console.log(\"post\",axiosApi);\r\n\r\n         return await axiosApi\r\n            .post(url, { ...data }, {\r\n                headers: {\r\n                  'Authorization': 'Basic '+btoa(auth.headers.username+':'+auth.headers.password)\r\n                }\r\n              })\r\n            .then(response =>response)\r\n        \r\n    }\r\n\r\n    async put(url, data, config = {}) {\r\n        return axiosApi\r\n            .put(url, { ...data }, { ...config })\r\n            .then(response => response.data)\r\n    }\r\n\r\n    async del(url, config = {}) {\r\n        return await axiosApi\r\n            .delete(url, { ...config })\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport default  ApiServiceCore\r\n"]},"metadata":{},"sourceType":"module"}