{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\11_DocumentacionLegal\\\\PantallaDetalle\\\\ResultadosBusquedaPrendaria.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Card, CardBody, Pagination, PaginationItem, PaginationLink, CardFooter, Button, Row, Col } from \"reactstrap\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport moment from \"moment\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { translationHelpers } from \"../../../../helpers\";\nimport { uniqueId } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultadosBusquedaPrendaria = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [comment, setcomment] = useState(null);\n  const [dataRows, setdataRows] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [LegalDocsFunction, setLegalDocsFunction] = useState(null);\n  const [LegalDocumentation, setLegalDocumentation] = useState(null);\n  const [t, c, tr] = translationHelpers('translation', 'common', 'translation');\n  const apiServiceBackend = new BackendServices();\n  let dataSession;\n  const DATA_FAKE = [\"Acta de la empresa deudora que autoriza el crédito\", \"Acta de la empresa garante que autoriza la garantía prendaria\", \"Acta de la empresa deudaora y garante que autoriza el crédito y la garantia prendaria\", \"Pagaré Prendario\", \"Contrato de Prenda Mercantil Persona Judírica\", \"Contrato de Prenda Mercantil Persona Natural\", \"Contrato de Prenda Mercantil Fundación de interés Privado\", \"Contrato de Prenda Mercantil Persona Judírica Sociedad Extranjera\", \"Contrato de Prenda Mercantil Persona Natural Extrankera\"];\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        dataSession = location.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        dataSession = result;\n      }\n    }\n\n    locationData && loadLegalDocs(dataSession);\n  }, [!locationData]);\n\n  function capitalizarPrimeraLetra(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  function loadLegalDocs(dataSession) {\n    Promise.allSettled([apiServiceBackend.getLegalDocsFunction(), apiServiceBackend.getLegalDocumentation(dataSession.transactionId)]).then(resp => {\n      const [{\n        value: LegalDocsFunction\n      }, {\n        value: LegalDocumentation\n      }] = resp;\n      setLegalDocsFunction(LegalDocsFunction);\n      setLegalDocumentation(LegalDocumentation);\n      setdataRows(drawRows(DATA_FAKE));\n\n      for (const iterator of LegalDocsFunction) {\n        var _LegalDocumentation$f, _LegalDocumentation$f2;\n\n        document.getElementById(iterator.id).checked = (_LegalDocumentation$f = (_LegalDocumentation$f2 = LegalDocumentation.find(legal => legal.legalDocumentId == iterator.id)) === null || _LegalDocumentation$f2 === void 0 ? void 0 : _LegalDocumentation$f2.status) !== null && _LegalDocumentation$f !== void 0 ? _LegalDocumentation$f : false;\n      }\n    }).catch(err => {});\n  }\n\n  async function SenData(status, data, legal) {\n    legal && (data = legal);\n    !legal && (data = {\n      transactId: dataSession.transactionId,\n      legalDocumentId: data.id,\n      processDocumentId: 0,\n      legalDocumentDescription: data.documentName,\n      status: true,\n      received: true,\n      physical: true,\n      date: moment().format(\"YYYY-MM-DD\"),\n      comments: \" \"\n    });\n    status && (await apiServiceBackend.saveLegalDocumentation(data));\n    !status && (await apiServiceBackend.deleteLegalDocumentation(data));\n  }\n\n  function drawRows(LegalPrendaria) {\n    return LegalPrendaria === null || LegalPrendaria === void 0 ? void 0 : LegalPrendaria.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        scope: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: capitalizarPrimeraLetra(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, uniqueId() + index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultadosBusquedaPrendaria, \"/+l+wheXCA00zGwK/47/chUoXpw=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = ResultadosBusquedaPrendaria;\nResultadosBusquedaPrendaria.propTypes = {// results: PropTypes.array.isRequired, //Resultado de la busqueda\n};\nexport default withTranslation()(ResultadosBusquedaPrendaria);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultadosBusquedaPrendaria\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/11_DocumentacionLegal/PantallaDetalle/ResultadosBusquedaPrendaria.js"],"names":["PropTypes","React","useEffect","useState","withTranslation","Link","Table","Card","CardBody","Pagination","PaginationItem","PaginationLink","CardFooter","Button","Row","Col","BackendServices","CoreServices","BpmServices","moment","url","useLocation","useHistory","LoadingOverlay","translationHelpers","uniqueId","ResultadosBusquedaPrendaria","props","history","location","locationData","setLocationData","data","comment","setcomment","dataRows","setdataRows","isActiveLoading","setIsActiveLoading","LegalDocsFunction","setLegalDocsFunction","LegalDocumentation","setLegalDocumentation","t","c","tr","apiServiceBackend","dataSession","DATA_FAKE","undefined","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","result","getItem","parse","loadLegalDocs","capitalizarPrimeraLetra","str","charAt","toUpperCase","slice","Promise","allSettled","getLegalDocsFunction","getLegalDocumentation","then","resp","value","drawRows","iterator","document","getElementById","id","checked","find","legal","legalDocumentId","status","catch","err","SenData","transactId","processDocumentId","legalDocumentDescription","documentName","received","physical","date","format","comments","saveLegalDocumentation","deleteLegalDocumentation","LegalPrendaria","map","index","propTypes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { withTranslation } from \"react-i18next\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\"\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../../services\";\r\nimport moment from \"moment\";\r\nimport * as url from \"../../../../helpers/url_helper\"\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { translationHelpers } from \"../../../../helpers\"\r\nimport { uniqueId } from 'lodash';\r\n\r\n\r\nconst ResultadosBusquedaPrendaria = (props) => {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  const [locationData, setLocationData] = useState(location.data);\r\n\r\n  const [comment, setcomment] = useState(null);\r\n  const [dataRows, setdataRows] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [LegalDocsFunction, setLegalDocsFunction] = useState(null);\r\n  const [LegalDocumentation, setLegalDocumentation] = useState(null);\r\n\r\n  const [t, c, tr] = translationHelpers('translation', 'common', 'translation');\r\n\r\n  const apiServiceBackend = new BackendServices();\r\n\r\n  let dataSession;\r\n\r\n  const DATA_FAKE = [\r\n    \"Acta de la empresa deudora que autoriza el crédito\",\r\n    \"Acta de la empresa garante que autoriza la garantía prendaria\",\r\n    \"Acta de la empresa deudaora y garante que autoriza el crédito y la garantia prendaria\",\r\n    \"Pagaré Prendario\",\r\n    \"Contrato de Prenda Mercantil Persona Judírica\",\r\n    \"Contrato de Prenda Mercantil Persona Natural\",\r\n    \"Contrato de Prenda Mercantil Fundación de interés Privado\",\r\n    \"Contrato de Prenda Mercantil Persona Judírica Sociedad Extranjera\",\r\n    \"Contrato de Prenda Mercantil Persona Natural Extrankera\",\r\n  ]\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      } else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        dataSession = location.data;\r\n      }\r\n    } else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        dataSession = result;\r\n      }\r\n    }\r\n\r\n    locationData && loadLegalDocs(dataSession);\r\n\r\n  }, [!locationData]);\r\n\r\n  function capitalizarPrimeraLetra(str) {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n  }\r\n\r\n  function loadLegalDocs(dataSession) {\r\n    Promise.allSettled([\r\n      apiServiceBackend.getLegalDocsFunction(),\r\n      apiServiceBackend.getLegalDocumentation(dataSession.transactionId),\r\n    ]).then(resp => {\r\n      const [{ value: LegalDocsFunction }, { value: LegalDocumentation }] = resp;\r\n\r\n      setLegalDocsFunction(LegalDocsFunction);\r\n      setLegalDocumentation(LegalDocumentation);\r\n\r\n\r\n      setdataRows(drawRows(DATA_FAKE));\r\n\r\n      for (const iterator of LegalDocsFunction) {\r\n        document.getElementById(iterator.id).checked = LegalDocumentation.find(legal => legal.legalDocumentId == iterator.id)?.status ?? false\r\n      }\r\n    }).catch(err => {\r\n\r\n    });\r\n  }\r\n\r\n  async function SenData(status, data, legal) {\r\n\r\n    legal && (data = legal)\r\n\r\n    !legal && (data = {\r\n      transactId: dataSession.transactionId,\r\n      legalDocumentId: data.id,\r\n      processDocumentId: 0,\r\n      legalDocumentDescription: data.documentName,\r\n      status: true,\r\n      received: true,\r\n      physical: true,\r\n      date: moment().format(\"YYYY-MM-DD\"),\r\n      comments: \" \"\r\n    })\r\n\r\n    status && await apiServiceBackend.saveLegalDocumentation(data)\r\n    !status && await apiServiceBackend.deleteLegalDocumentation(data)\r\n\r\n  }\r\n\r\n  function drawRows(LegalPrendaria) {\r\n    return LegalPrendaria?.map((data, index) => (\r\n      <tr key={uniqueId() + index}>\r\n        <th scope=\"row\"><input type=\"checkbox\" /></th>\r\n        <td>{/*JSONCompare[index]*/}{capitalizarPrimeraLetra(data)}</td>\r\n      </tr>)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}></LoadingOverlay>\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <div className=\"table-responsive\">\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n              </thead>\r\n              <tbody>\r\n                {dataRows}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nResultadosBusquedaPrendaria.propTypes = {\r\n  // results: PropTypes.array.isRequired, //Resultado de la busqueda\r\n}\r\n\r\nexport default (withTranslation()(ResultadosBusquedaPrendaria));\r\n"]},"metadata":{},"sourceType":"module"}