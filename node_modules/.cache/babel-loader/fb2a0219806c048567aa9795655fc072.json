{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { BackendServices } from \"../../../../services/\";\nimport Currency from \"../../../../helpers/currency\";\nimport { optionsPersonType } from \"../dummy/optionsSelect\";\nimport { LoadAsyncSelects } from \"../searchDataSelects\";\nconst services = new BackendServices();\nconst currencyValidation = new Currency();\nexport const useFormQuoter = initialForm => {\n  _s();\n\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const [typePerson, setTypePerson] = useState(true);\n  const [selectionFields, setselectionFields] = useState(optionsPersonType);\n  const [disableFeci, setDisableFeci] = useState(true);\n  const [disableDefinedFee, setDisableDefinedFee] = useState(true);\n  const [disableTerm, setDisableTerm] = useState(false);\n  const [disableGracePeriod, setDisableGracePeriod] = useState(true);\n  const [optionsIdTypes, setOptionsIdTypes] = useState([]);\n  const [optionsCountries, setOptionsCountries] = useState([]);\n  const [optionsBanks, setOptionsBanks] = useState([]);\n  useEffect(async () => {\n    const {\n      idTypesList,\n      countriesList,\n      banksList\n    } = await LoadAsyncSelects();\n    setOptionsIdTypes(idTypesList);\n    setOptionsCountries(countriesList.Records);\n    setOptionsBanks(banksList.Records);\n    return async () => {\n      await LoadAsyncSelects();\n    };\n  }, []);\n\n  const hdlOnChange = (evt, selectField) => {\n    const name = (evt === null || evt === void 0 ? void 0 : evt.target) ? evt.target.name : selectField.name;\n    let value = (evt === null || evt === void 0 ? void 0 : evt.target) ? evt.target.value : evt.value;\n\n    if (name === \"amountDebt\" || name === \"customerDefinedPayment\") {\n      // value = Number(currencyValidation.getRealValue(evt.target.value)).toFixed(2)\n      value = currencyValidation.getRealValue(evt.target.value);\n      console.info(\"value\", value);\n    }\n\n    if (name === \"anualRate\" || name === \"feciRate\") {\n      value = currencyValidation.getRealPercent(evt.target.value);\n      console.info(\"value\", value);\n    }\n\n    if (selectField === null || selectField === void 0 ? void 0 : selectField.name) {\n      auxSelectFields(selectField.name, value);\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n  };\n\n  const handleChangeInput = evt => {\n    const regexOnlyNum = new RegExp(/^[0-9]+$/);\n    const regexOnlyNum2 = evt.target.value.replace(/[^0-9,.]/g, \"\");\n    const valueAmountDebt = regexOnlyNum2;\n  };\n\n  const handleKeyOnlyNum = evt => {\n    const keyPress = evt.key;\n    const regexOnlyNum = /^[0-9,.]+$/;\n    if (!regexOnlyNum.test(keyPress)) return; // console.log('here!');\n  };\n\n  const hdlOnKeyUpRealNumber = e => {\n    let input = currencyValidation.getRealValue(e.target.value);\n    e.target.value = currencyValidation.format(input);\n    console.info(\"real number decimal:\", Number(input).toFixed(2));\n  };\n\n  const hdlOnKeyUpPercentageNumber = e => {\n    let input = currencyValidation.getRealPercent(e.target.value);\n    e.target.value = currencyValidation.formatPercent(input);\n    console.info(\"percentage number:\", input);\n  };\n\n  const hdlOnSubmit = evt => {\n    console.group(\"FORM SUBMIT\");\n    console.info(\"evt:\", evt);\n    console.groupEnd();\n  };\n\n  const hdlOnValidSubmit = async () => {\n    console.group(\"VALID FORM\");\n    console.info(\"Data submitted!\", form);\n    setLoading(true);\n    const resp = await services.getQuoterPaymentPlan(form.loanType, form.amountDebt, form.anualRate, form.feciRate, form.term, form.paymentPeriod, form.gracePeriod, form.gracePeriodType, form.customerDefinedPayment);\n    setLoading(false);\n    console.info(\"Service response\", resp);\n    setResponse(resp.payments);\n    setForm(initialForm);\n    console.groupEnd();\n  };\n\n  const hdlOnInvalidSubmit = (evt, errors, values) => {\n    console.group(\"INVALID FORM\");\n    console.info(\"Not working!\");\n    console.groupEnd();\n  };\n\n  const hdlTest = evt => {\n    console.group(\"HANDLE TEST\");\n    console.info(\"\", evt);\n    console.groupEnd();\n  };\n\n  const auxSelectFields = (selectFieldName, selectedValue) => {\n    switch (selectFieldName) {\n      case \"feciSelect\":\n        const disableFeci = selectedValue === \"Si\" ? false : true;\n        setDisableFeci(disableFeci);\n        return;\n\n      case \"personType\":\n        const type = selectedValue === \"Natural\" ? \"Natural\" : \"Juridica\";\n        setForm({\n          personType: type\n        });\n        return;\n\n      case \"definedPayment\":\n        const definedFee = selectedValue === \"Si\" ? false : true;\n        setDisableDefinedFee(definedFee);\n        setDisableTerm(!definedFee);\n        return;\n\n      case \"gracePeriodSelect\":\n        const disableGracePeriod = selectedValue === \"Si\" ? false : true;\n        setDisableGracePeriod(disableGracePeriod);\n        return;\n\n      default:\n        break;\n    }\n  };\n\n  const changeSelectOptions = (valueCheck, option) => {\n    const activateOption = valueCheck === option ? false : true;\n    return activateOption;\n  };\n\n  return {\n    form,\n    errors,\n    loading,\n    response,\n    hdlTest,\n    hdlOnKeyUpRealNumber,\n    hdlOnKeyUpPercentageNumber,\n    hdlOnChange,\n    hdlOnSubmit,\n    hdlOnInvalidSubmit,\n    hdlOnValidSubmit,\n    disableFeci,\n    disableDefinedFee,\n    disableTerm,\n    disableGracePeriod,\n    optionsIdTypes,\n    optionsCountries,\n    optionsBanks\n  };\n};\n\n_s(useFormQuoter, \"rmFarjAMi/DlcfZQ2FrSRbtLqbc=\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/20_Cotizador/Hooks/useFormQuoter.js"],"names":["useEffect","useRef","useState","BackendServices","Currency","optionsPersonType","LoadAsyncSelects","services","currencyValidation","useFormQuoter","initialForm","form","setForm","errors","setErrors","loading","setLoading","response","setResponse","typePerson","setTypePerson","selectionFields","setselectionFields","disableFeci","setDisableFeci","disableDefinedFee","setDisableDefinedFee","disableTerm","setDisableTerm","disableGracePeriod","setDisableGracePeriod","optionsIdTypes","setOptionsIdTypes","optionsCountries","setOptionsCountries","optionsBanks","setOptionsBanks","idTypesList","countriesList","banksList","Records","hdlOnChange","evt","selectField","name","target","value","getRealValue","console","info","getRealPercent","auxSelectFields","handleChangeInput","regexOnlyNum","RegExp","regexOnlyNum2","replace","valueAmountDebt","handleKeyOnlyNum","keyPress","key","test","hdlOnKeyUpRealNumber","e","input","format","Number","toFixed","hdlOnKeyUpPercentageNumber","formatPercent","hdlOnSubmit","group","groupEnd","hdlOnValidSubmit","resp","getQuoterPaymentPlan","loanType","amountDebt","anualRate","feciRate","term","paymentPeriod","gracePeriod","gracePeriodType","customerDefinedPayment","payments","hdlOnInvalidSubmit","values","hdlTest","selectFieldName","selectedValue","type","personType","definedFee","changeSelectOptions","valueCheck","option","activateOption"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { BackendServices } from \"../../../../services/\";\r\nimport Currency from \"../../../../helpers/currency\";\r\nimport { optionsPersonType } from \"../dummy/optionsSelect\";\r\nimport { LoadAsyncSelects } from \"../searchDataSelects\";\r\n\r\nconst services = new BackendServices();\r\nconst currencyValidation = new Currency();\r\n\r\nexport const useFormQuoter = (initialForm) => {\r\n  const [form, setForm] = useState(initialForm);\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  const [typePerson, setTypePerson] = useState(true);\r\n  const [selectionFields, setselectionFields] = useState(optionsPersonType);\r\n  const [disableFeci, setDisableFeci] = useState(true);\r\n  const [disableDefinedFee, setDisableDefinedFee] = useState(true);\r\n  const [disableTerm, setDisableTerm] = useState(false);\r\n  const [disableGracePeriod, setDisableGracePeriod] = useState(true);\r\n  const [optionsIdTypes, setOptionsIdTypes] = useState([]);\r\n  const [optionsCountries, setOptionsCountries] = useState([]);\r\n  const [optionsBanks, setOptionsBanks] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const { idTypesList, countriesList, banksList } = await LoadAsyncSelects();\r\n    setOptionsIdTypes(idTypesList);\r\n    setOptionsCountries(countriesList.Records);\r\n    setOptionsBanks(banksList.Records);\r\n\r\n    return async () => {\r\n      await LoadAsyncSelects();\r\n    };\r\n  }, []);\r\n\r\n  const hdlOnChange = (evt, selectField) => {\r\n    const name = evt?.target ? evt.target.name : selectField.name;\r\n\r\n    let value = evt?.target ? evt.target.value : evt.value;\r\n\r\n    if (name === \"amountDebt\" || name === \"customerDefinedPayment\") {\r\n      // value = Number(currencyValidation.getRealValue(evt.target.value)).toFixed(2)\r\n      value = currencyValidation.getRealValue(evt.target.value);\r\n      console.info(\"value\", value);\r\n    }\r\n\r\n    if (name === \"anualRate\" || name === \"feciRate\") {\r\n      value = currencyValidation.getRealPercent(evt.target.value);\r\n      console.info(\"value\", value);\r\n    }\r\n\r\n    if (selectField?.name) {\r\n      auxSelectFields(selectField.name, value);\r\n    }\r\n\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleChangeInput = (evt) => {\r\n    const regexOnlyNum = new RegExp(/^[0-9]+$/);\r\n    const regexOnlyNum2 = evt.target.value.replace(/[^0-9,.]/g, \"\");\r\n    const valueAmountDebt = regexOnlyNum2;\r\n  };\r\n\r\n  const handleKeyOnlyNum = (evt) => {\r\n    const keyPress = evt.key;\r\n    const regexOnlyNum = /^[0-9,.]+$/;\r\n\r\n    if (!regexOnlyNum.test(keyPress)) return;\r\n    // console.log('here!');\r\n  };\r\n\r\n  const hdlOnKeyUpRealNumber = (e) => {\r\n    let input = currencyValidation.getRealValue(e.target.value);\r\n    e.target.value = currencyValidation.format(input);\r\n    console.info(\"real number decimal:\", Number(input).toFixed(2));\r\n  };\r\n\r\n  const hdlOnKeyUpPercentageNumber = (e) => {\r\n    let input = currencyValidation.getRealPercent(e.target.value);\r\n    e.target.value = currencyValidation.formatPercent(input);\r\n    console.info(\"percentage number:\", input);\r\n  };\r\n\r\n  const hdlOnSubmit = (evt) => {\r\n    console.group(\"FORM SUBMIT\");\r\n    console.info(\"evt:\", evt);\r\n    console.groupEnd();\r\n  };\r\n\r\n  const hdlOnValidSubmit = async () => {\r\n    console.group(\"VALID FORM\");\r\n    console.info(\"Data submitted!\", form);\r\n\r\n    setLoading(true);\r\n    const resp = await services.getQuoterPaymentPlan(\r\n      form.loanType,\r\n      form.amountDebt,\r\n      form.anualRate,\r\n      form.feciRate,\r\n      form.term,\r\n      form.paymentPeriod,\r\n      form.gracePeriod,\r\n      form.gracePeriodType,\r\n      form.customerDefinedPayment\r\n    );\r\n    setLoading(false);\r\n\r\n    console.info(\"Service response\", resp);\r\n\r\n    setResponse(resp.payments);\r\n    setForm(initialForm);\r\n\r\n    console.groupEnd();\r\n  };\r\n\r\n  const hdlOnInvalidSubmit = (evt, errors, values) => {\r\n    console.group(\"INVALID FORM\");\r\n    console.info(\"Not working!\");\r\n    console.groupEnd();\r\n  };\r\n\r\n  const hdlTest = (evt) => {\r\n    console.group(\"HANDLE TEST\");\r\n    console.info(\"\", evt);\r\n    console.groupEnd();\r\n  };\r\n\r\n  const auxSelectFields = (selectFieldName, selectedValue) => {\r\n    switch (selectFieldName) {\r\n      case \"feciSelect\":\r\n        const disableFeci = selectedValue === \"Si\" ? false : true;\r\n        setDisableFeci(disableFeci);\r\n        return;\r\n      case \"personType\":\r\n        const type = selectedValue === \"Natural\" ? \"Natural\" : \"Juridica\";\r\n        setForm({\r\n          personType: type,\r\n        });\r\n        return;\r\n      case \"definedPayment\":\r\n        const definedFee = selectedValue === \"Si\" ? false : true;\r\n        setDisableDefinedFee(definedFee);\r\n        setDisableTerm(!definedFee);\r\n        return;\r\n      case \"gracePeriodSelect\":\r\n        const disableGracePeriod = selectedValue === \"Si\" ? false : true;\r\n        setDisableGracePeriod(disableGracePeriod);\r\n        return;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const changeSelectOptions = (valueCheck, option) => {\r\n    const activateOption = valueCheck === option ? false : true;\r\n\r\n    return activateOption;\r\n  };\r\n\r\n  return {\r\n    form,\r\n    errors,\r\n    loading,\r\n    response,\r\n    hdlTest,\r\n    hdlOnKeyUpRealNumber,\r\n    hdlOnKeyUpPercentageNumber,\r\n    hdlOnChange,\r\n    hdlOnSubmit,\r\n    hdlOnInvalidSubmit,\r\n    hdlOnValidSubmit,\r\n    disableFeci,\r\n    disableDefinedFee,\r\n    disableTerm,\r\n    disableGracePeriod,\r\n    optionsIdTypes,\r\n    optionsCountries,\r\n    optionsBanks,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}