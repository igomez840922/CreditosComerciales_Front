{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"./ClientForm\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false);\n  const [dataClientList, setdataClientList] = useState([]);\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const backendServices = new BackendServices();\n  const bpmServices = new BpmServices(); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        location.data.transactionId = 0;\n        checkAndCreateProcedure(location.data);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    }); //checkAndCreateProcedure(locationData);\n\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\n\n\n  function checkAndCreateProcedure(locationData) {\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, OPTs.PROCESS_BUSQUEDADESCARTE, OPTs.PROCESS_BUSQUEDADESCARTE, \"admin\", \"0\").then(data => {\n      if (data !== null && data !== undefined) {\n        locationData.transactionId = data.transactId;\n        sessionStorage.setItem('locationData', JSON.stringify(locationData));\n        setLocationData(locationData);\n        fetchData(locationData); //Actualizamos Variables\n\n        var values = {\n          \"transactionId\": locationData.transactionId\n        };\n        bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n          if (data !== undefined) {}\n        });\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n\n        if (data.length <= 0) {\n          setselectedClient(new PersonModel());\n          onOpenNewClient();\n        }\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    console.log(\"getIdentificationType\");\n\n    if (idType !== undefined && idType !== null && idType.length > 0) {\n      return identificationTypeList.find(x => x.value === idType);\n    }\n\n    return \"\";\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\n      showModalEndProcess();\n      return;\n    }\n\n    var person = null;\n\n    for (var i = 0; i < dataClientList.length; i++) {\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\n        person = dataClientList[i];\n        break;\n      }\n    }\n\n    if (person !== null && option === OPTs.OPT_LISTAEXCLUSION) {\n      option = OPTs.OPT_ENVIARCUMPLIMIENTO;\n    }\n\n    switch (option) {\n      case OPTs.OPT_LISTAEXCLUSION:\n      case OPTs.OPT_ENVIARCUMPLIMIENTO:\n        {\n          //chequear si existe algun deudor para poder continuar\n          backendServices.consultPrincipalDebtor(locationData.transactionId).then(data => {\n            if (data !== null && data !== undefined) {\n              saveJBPMProcess(option);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\n            }\n          }).catch(error => {});\n          break;\n        }\n\n      default:\n        {\n          saveJBPMProcess(option);\n          break;\n        }\n    }\n  }\n\n  function saveJBPMProcess(option) {\n    switch (option) {\n      case OPTs.OPT_FINALIZARPROCESO:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_SALVAPARCIAL:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_BUSQUEDADESCARTE.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_ENVIARCUMPLIMIENTO:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_LISTAEXCLUSION:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"no\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: [t(\"PreRequest\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 58\n            }, this), \" \", t(\"Process\") + \": #\" + (locationData === null || locationData === void 0 ? void 0 : locationData.instanceId)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\",\n            children: t(\"This form is official and must be filled out correctly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(ClientForm, {\n                transactId: locationData.transactionId,\n                clientSelected: selectedClient,\n                onCancel: () => {\n                  onOpenNewClient(false);\n                  getProcessClients(locationData.transactionId);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(SearchClientCore, {\n                  onClientSelect: loadClientDataT24,\n                  onNewClientSelect: () => {\n                    setselectedClient(undefined);\n                    onOpenNewClient();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"table-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 347,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 348,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 350,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 351,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 353,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 359,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 360,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 361,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 363,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined ? item.blacklist.map((black, index) => black.backList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 369,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onEditClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-border-color mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 374,\n                              columnNumber: 86\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 374,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onDeleteClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-trash-can-outline mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 375,\n                              columnNumber: 88\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 375,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              showModalEndProcess();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 120\n            }, this), \" \", t(\"Exit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(OPTs.OPT_LISTAEXCLUSION);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 138\n            }, this), \" \", t(\"Advance\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PreRequest, \"QldCys2uoHjkU0J1stXzrwdeYS4=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","Link","Breadcrumbs","useTranslation","LoadingOverlay","ClientForm","ModalEndProcess","BackendServices","CoreServices","BpmServices","PersonModel","SearchClientCore","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","bpmServices","useEffect","data","transactionId","length","checkAndCreateProcedure","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","push","URL_DASHBOARD","loadIdentificationTypes","loadPersonTypes","getProcessClients","nuevoTramite","instanceId","PROCESS_BUSQUEDADESCARTE","transactId","values","updatevariables","catch","error","consultarCatalogoTipoIdentificacion","json","i","label","value","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","getPersnoType","pType","find","x","getIdentificationType","idType","console","log","loadClientDataT24","dataClientT24","clientPerson","customerNumberT24","id","clientDocumentId","idnumber","name","firstname","secondName","secondname","lastName","lastname","secondSurname","secondlastname","personType","Number","partyType","idtype","showMessage","message","showModalEndProcess","onSaveProcess","option","OPT_PREFINALIZARPROCESO","person","blacklist","blackList","OPT_LISTAEXCLUSION","OPT_ENVIARCUMPLIMIENTO","consultPrincipalDebtor","saveJBPMProcess","OPT_FINALIZARPROCESO","abortProcess","OPT_SALVAPARCIAL","toString","ACT_NONE","PROCESS_CUMPLIMIENTO","completedStatusTask","taskId","PROCESS_LISTAEXCLUSION","onSaveEndProcess","map","item","index","roles","rol","roleDescription","black","backList","textAlign","e","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"./ClientForm\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\r\n\r\nconst PreRequest = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  const backendServices = new BackendServices();\r\n  const bpmServices = new BpmServices();\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        location.data.transactionId = 0;\r\n        checkAndCreateProcedure(location.data);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    //checkAndCreateProcedure(locationData);\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n  }\r\n  //CHEQUEAMOS Y GENERAMOS EL PROCESO EN BASE DE DATOS\r\n  function checkAndCreateProcedure(locationData) {\r\n    backendServices.nuevoTramite(locationData.transactionId, locationData.instanceId, OPTs.PROCESS_BUSQUEDADESCARTE, OPTs.PROCESS_BUSQUEDADESCARTE, \"admin\", \"0\")\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          locationData.transactionId = data.transactId;\r\n          sessionStorage.setItem('locationData', JSON.stringify(locationData));\r\n          setLocationData(locationData);\r\n          fetchData(locationData);\r\n          //Actualizamos Variables\r\n          var values = { \"transactionId\": locationData.transactionId };\r\n          bpmServices.updatevariables(locationData.instanceId, values)\r\n            .then((data) => {\r\n              if (data !== undefined) { }\r\n            });\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    console.log(\"getIdentificationType\",)\r\n    if (idType !== undefined && idType !== null && idType.length > 0) {\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n    return \"\";\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    var clientPerson = new PersonModel();\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    \r\n  }\r\n  \r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\r\n      showModalEndProcess();\r\n      return;\r\n    }\r\n    var person = null;\r\n    for (var i = 0; i < dataClientList.length; i++) {\r\n      if (dataClientList[i].blacklist[dataClientList[i].blacklist.length - 1].blackList === true) {\r\n        person = dataClientList[i];\r\n        break;\r\n      }\r\n    }\r\n    if (person !== null && option === OPTs.OPT_LISTAEXCLUSION) {\r\n      option = OPTs.OPT_ENVIARCUMPLIMIENTO;\r\n    }\r\n    switch (option) {\r\n      case OPTs.OPT_LISTAEXCLUSION:\r\n      case OPTs.OPT_ENVIARCUMPLIMIENTO: {\r\n        //chequear si existe algun deudor para poder continuar\r\n        backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              saveJBPMProcess(option);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"Youmustselectatleastonedebtor\"), true);\r\n            }\r\n          }).catch((error) => { });\r\n        break;\r\n      }\r\n      default: {\r\n        saveJBPMProcess(option);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function saveJBPMProcess(option) {\r\n    switch (option) {\r\n      case OPTs.OPT_FINALIZARPROCESO: {\r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.OPT_SALVAPARCIAL: {\r\n        var values = {\r\n          \"processId\": OPTs.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.OPT_ENVIARCUMPLIMIENTO: {\r\n        var values = {\r\n          \"processId\": OPTs.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.OPT_LISTAEXCLUSION: {\r\n        var values = {\r\n          \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"no\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\r\n  }\r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"PreRequest\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <Card>\r\n          <CardHeader>\r\n            <h4 className=\"card-title\">{t(\"PreRequest\")} <br /> {t(\"Process\") + \": #\" + locationData?.instanceId}</h4>\r\n            <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n          </CardHeader>\r\n          <CardBody>            \r\n\r\n            {openNewClient ?\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n                </Col>\r\n              </Row>\r\n              :\r\n              <React.Fragment>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <SearchClientCore onClientSelect={loadClientDataT24} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient() }}/>      \r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <div className=\"table-responsive\">\r\n                      <Table className=\"table mb-0\">\r\n                        <thead className=\"table-light\">\r\n                          <tr>\r\n                            <th>{t(\"PersonType\")}</th>\r\n                            <th>{t(\"FullName\")}</th>\r\n                            <th>{t(\"IdentificationType\")}</th>\r\n                            <th>{t(\"IdentificationNumber\")}</th>\r\n                            <th>{t(\"Roles\")}</th>\r\n                            <th>{t(\"WatchList\")}</th>\r\n                            <th></th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {dataClientList.map((item, index) => (\r\n                            <tr>\r\n                              <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                              <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                              <td>{getIdentificationType(item.idType).label}</td>\r\n                              <td>{item.clientDocumentId}</td>\r\n                              <td>\r\n                                {item.roles !== undefined ?\r\n                                  item.roles.map((rol, index) => (\r\n                                    rol.roleDescription + \" - \"\r\n                                  )) : null}\r\n                              </td>\r\n                              <td>\r\n                                {item.blacklist !== undefined ?\r\n                                  item.blacklist.map((black, index) => (black.backList === true ? \"Aplica\" : \"No Aplica\")) : \"No Aplica\"}\r\n                              </td>\r\n                              <td style={{ textAlign: \"right\" }}>\r\n                                <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </Table>\r\n                    </div>\r\n\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n              </React.Fragment>\r\n            }\r\n          </CardBody>\r\n\r\n          {!openNewClient ?\r\n            <CardFooter style={{ textAlign: \"right\" }}>\r\n              <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {t(\"Exit\")}</Button>\r\n              <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(OPTs.OPT_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n            </CardFooter>\r\n            : null}\r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}