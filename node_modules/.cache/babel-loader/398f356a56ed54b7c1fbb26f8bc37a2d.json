{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\3_Cumplimiento\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"; //i18n\n\nimport { useTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Search, ToolkitProvider } from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compliance = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false); //Datos de la Tabla de Clientes\n\n  const [dataClientList, setdataClientList] = useState([]); //Cliente seleccionado\n\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]); //mostrar el modal para la opciÃ³n de finalizar proceso\n\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const backendServices = new BackendServices();\n  const bpmServices = new BpmServices(); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId.length <= 0) {\n        location.data.transactionId = location.data.instanceId;\n      }\n\n      setLocationData(location.data);\n      fetchData(location.data);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    if (location.data.taskStatus === \"Ready\") {\n      //Iniciamos la nueva tarea en BPM   \n      bpmServices.startedStatusTask(location.data.taskId).then(iniresult => {\n        if (iniresult === undefined) {\n          history.push(url.URL_DASHBOARD);\n        }\n      });\n    }\n\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n\n        if (data.length <= 0) {\n          onOpenNewClient();\n        }\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    return identificationTypeList.find(x => x.value === idType);\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\n      showModalEndProcess();\n      return;\n    }\n\n    saveJBPMProcess(option);\n  }\n\n  function saveJBPMProcess(option) {\n    switch (option) {\n      case OPTs.OPT_FINALIZARPROCESO:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_SALVAPARCIAL:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_BUSQUEDADESCARTE.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_ENVIARCUMPLIMIENTO:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_LISTAEXCLUSION:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    //Salvar los comentarios en Bitacora    \n    //selectedData.endProcessComment = values.txtComment;\n    //UpdateDataModel(selectedData);\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"Compliance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: [t(\"Compliance\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 56\n            }, this), \" \", t(\"Process\") + \": #\" + (locationData === null || locationData === void 0 ? void 0 : locationData.instanceId)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-desc\",\n            children: t(\"This form is official and must be filled out correctly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(ClientForm, {\n                transactId: locationData.transactionId,\n                clientSelected: selectedClient,\n                onCancel: () => {\n                  onOpenNewClient(false);\n                  getProcessClients(locationData.transactionId);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"float-end\",\n                  onClick: () => {\n                    setselectedClient(undefined);\n                    onOpenNewClient();\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 107\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"table-responsive\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: \"table mb-0\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      className: \"table-light\",\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"PersonType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"FullName\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationType\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"IdentificationNumber\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 321,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"Roles\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 322,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: t(\"WatchList\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 19\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 324,\n                          columnNumber: 19\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getPersnoType(Number(item.personType)).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 331,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: getIdentificationType(item.idType).label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 332,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.clientDocumentId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 334,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.blacklist !== undefined ? item.blacklist.map((black, index) => black.backList === true ? \"Aplica\" : \"No Aplica\") : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 340,\n                          columnNumber: 21\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          style: {\n                            textAlign: \"right\"\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onEditClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-border-color mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 347,\n                              columnNumber: 76\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 347,\n                            columnNumber: 23\n                          }, this), /*#__PURE__*/_jsxDEV(Link, {\n                            to: \"#\",\n                            onClick: e => {\n                              onDeleteClient(item);\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"mdi mdi-trash-can-outline mdi-24px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 348,\n                              columnNumber: 78\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 348,\n                            columnNumber: 23\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 21\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 19\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              showModalEndProcess();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 124\n            }, this), \" \", t(\"Discard\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(OPTs.OPT_LISTAEXCLUSION);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 142\n            }, this), \" \", t(\"Advance\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 6\n  }, this);\n};\n\n_s(Compliance, \"1YluGa7YvFmD8lL2R0xmuxRNlug=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = Compliance;\nexport default Compliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compliance\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/3_Cumplimiento/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","AvForm","AvField","Link","Breadcrumbs","useTranslation","SweetAlert","Search","ToolkitProvider","BootstrapTable","paginationFactory","LoadingOverlay","AttachmentFileCore","ClientForm","ModalEndProcess","BackendServices","CoreServices","BpmServices","Compliance","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","bpmServices","useEffect","data","transactionId","length","instanceId","fetchData","taskStatus","startedStatusTask","taskId","then","iniresult","push","URL_DASHBOARD","loadIdentificationTypes","loadPersonTypes","getProcessClients","consultarCatalogoTipoIdentificacion","json","i","label","value","catch","error","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","transactId","getPersnoType","pType","find","x","getIdentificationType","idType","showMessage","message","showModalEndProcess","onSaveProcess","option","OPT_PREFINALIZARPROCESO","saveJBPMProcess","OPT_FINALIZARPROCESO","abortProcess","OPT_SALVAPARCIAL","values","PROCESS_BUSQUEDADESCARTE","toString","ACT_NONE","updatevariables","OPT_ENVIARCUMPLIMIENTO","PROCESS_CUMPLIMIENTO","completedStatusTask","OPT_LISTAEXCLUSION","PROCESS_LISTAEXCLUSION","onSaveEndProcess","map","item","index","Number","personType","name","secondName","lastName","secondSurname","clientDocumentId","roles","rol","roleDescription","blacklist","black","backList","textAlign","e","console","log","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation,useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { Search,ToolkitProvider } from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\r\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\n\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../services\";\r\n\r\nconst Compliance = props => {\r\n  \r\n  const { t, i18n } = useTranslation();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);     \r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n\r\n  //Datos de la Tabla de Clientes\r\n  const [dataClientList, setdataClientList ] = useState([]);\r\n  //Cliente seleccionado\r\n  const [selectedClient,setselectedClient]= useState(undefined);     \r\n\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);  \r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n\r\n  //mostrar el modal para la opciÃ³n de finalizar proceso\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n\r\n  const [msgData, setmsgData] = useState({show:false,msg:\"\",isError:false});\r\n        \r\n  //Servicios\r\n  const backendServices = new BackendServices();\r\n  const bpmServices = new BpmServices();\r\n    \r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if(location.data!==null && location.data!==undefined){\r\n      if(location.data.transactionId.length <= 0){\r\n        location.data.transactionId=location.data.instanceId;\r\n      }\r\n\r\n      setLocationData(location.data);\r\n      fetchData(location.data);    \r\n    }    \r\n  }, []);\r\n\r\n    //Caraga Inicial de datos\r\n    function fetchData(locationData) {\r\n\r\n      //chequear si la tarea no ha sido iniciada\r\n      if(location.data.taskStatus === \"Ready\"){        \r\n        //Iniciamos la nueva tarea en BPM   \r\n        bpmServices.startedStatusTask(location.data.taskId)\r\n        .then((iniresult) => {                       \r\n          if(iniresult===undefined){\r\n            history.push(url.URL_DASHBOARD);\r\n          }                \r\n        })\r\n      }\r\n      \r\n        loadIdentificationTypes();\r\n        loadPersonTypes();\r\n        getProcessClients(locationData.transactionId);\r\n    }   \r\n    \r\n    //cargar lista de tipo de identificacion\r\n    function loadIdentificationTypes(){\r\n      backendServices.consultarCatalogoTipoIdentificacion()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n                }\r\n                setidentificationTypeList(json);\r\n            }          \r\n      }).catch((error) => { });    \r\n    }\r\n    //cargar lista de tipo de personas\r\n    function loadPersonTypes(){\r\n      backendServices.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                setpersonTypeList(json);                \r\n            }          \r\n      }).catch((error) => { });    \r\n    } \r\n    //se buscan todos los clientes de este proceso \r\n    function getProcessClients(transactionId){      \r\n      backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n        .then((data) => {\r\n          if (data !== null && data !== undefined) {            \r\n            setdataClientList(data)\r\n\r\n            if(data.length<=0){\r\n              onOpenNewClient();\r\n            }\r\n          }         \r\n      }).catch((error) => { }); \r\n    }\r\n    //Abrir formulario Persona\r\n    function onOpenNewClient(show=true){\r\n      setopenNewClient(show)\r\n    }\r\n    //Editar Persona\r\n    function onEditClient(dataClient){\r\n      setselectedClient(dataClient)\r\n      onOpenNewClient();      \r\n    }\r\n    //Eliminar Persona\r\n    function onDeleteClient(dataClient){\r\n      //eliminarOrquestadoListaPersonaSolicitud\r\n      backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n        .then((data) => {\r\n          getProcessClients(dataClient.transactId);    \r\n      }).catch((error) => { }); \r\n    }    \r\n    //retorna el Tipo de Persona\r\n    function getPersnoType(pType){\r\n      return personTypeList.find(x => x.value === pType);\r\n    }\r\n    //retorna el Tipo de identificacion\r\n    function getIdentificationType(idType){\r\n      return identificationTypeList.find(x => x.value === idType);\r\n    }\r\n    //mostrar mensaje \r\n    function showMessage(message,isError=false){    \r\n     \r\n      setmsgData({show:true,msg:message,isError:isError})   \r\n    } \r\n\r\n    ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n    //Modal Para mostrar Comentario de Fin de Proceso\r\n    function showModalEndProcess(show=true) {\r\n      setdisplayModalEndProcess(show);\r\n    }  \r\n    //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n    function onSaveProcess(option){\r\n    \r\n    if(option === OPTs.OPT_PREFINALIZARPROCESO){\r\n      showModalEndProcess();\r\n      return;\r\n    }\r\n        \r\n    saveJBPMProcess(option);\r\n  }\r\n\r\n  function saveJBPMProcess(option){ \r\n    switch(option){\r\n      case OPTs.OPT_FINALIZARPROCESO: {        \r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if(data!==undefined){              \r\n              history.push(url.URL_DASHBOARD);          \r\n              }\r\n            else{\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"),true);\r\n            }\r\n        });\r\n        break;\r\n      }\r\n      case OPTs.OPT_SALVAPARCIAL: {\r\n        var values = {\r\n          \"processId\":OPTs.PROCESS_BUSQUEDADESCARTE.toString(),\r\n          \"activityId\":OPTs.ACT_NONE.toString(),                    \r\n          \"transactionId\":locationData.transactionId,\r\n          \"customerId\":\"\",                   \r\n          \"applicationNumber\":\"\",\r\n          \"procedureNumber\":\"\" ,\r\n          //\"decision\":\"no\"          \r\n      };\r\n      bpmServices.updatevariables(locationData.instanceId,values)\r\n          .then((data) => {\r\n            if(data!==undefined){              \r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"),true);\r\n            }\r\n        });\r\n        break;\r\n      }\r\n      case OPTs.OPT_ENVIARCUMPLIMIENTO: {\r\n        var values = {\r\n          \"processId\":OPTs.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\":OPTs.ACT_NONE.toString(),                    \r\n          \"transactionId\":locationData.transactionId,\r\n          \"customerId\":\"\",                      \r\n          \"applicationNumber\":\"\",\r\n          \"procedureNumber\":\"\" ,\r\n          \"decision\":\"si\"          \r\n      };\r\n      bpmServices.completedStatusTask(locationData.taskId,values)\r\n          .then((data) => {\r\n            if(data!==undefined){  \r\n              history.push(url.URL_DASHBOARD);              \r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"),true);\r\n            }\r\n        });\r\n        break;\r\n      }\r\n      case OPTs.OPT_LISTAEXCLUSION: {\r\n        var values = {\r\n          \"processId\":OPTs.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\":OPTs.ACT_NONE.toString(),                    \r\n          \"transactionId\":locationData.transactionId,\r\n          \"customerId\":\"\",                      \r\n          \"applicationNumber\":\"\",\r\n          \"procedureNumber\":\"\" ,\r\n          \"decision\":\"si\"          \r\n      };\r\n      bpmServices.completedStatusTask(locationData.taskId,values)\r\n          .then((data) => {\r\n            if(data!==undefined){  \r\n              history.push(url.URL_DASHBOARD);              \r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"),true);\r\n            }\r\n        });\r\n        break;\r\n      }      \r\n    }\r\n  }\r\n\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values){\r\n    \r\n    //Salvar los comentarios en Bitacora    \r\n    //selectedData.endProcessComment = values.txtComment;\r\n    //UpdateDataModel(selectedData);\r\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\r\n  }\r\n\r\n\r\n  return (\r\n     <div className=\"page-content\">\r\n        \r\n        <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"Compliance\")} />\r\n\r\n        <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        \r\n        <Card>\r\n          <CardHeader>\r\n          <h4 className=\"card-title\">{t(\"Compliance\")} <br/> {t(\"Process\") + \": #\" + locationData?.instanceId}</h4>\r\n            <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n            \r\n          </CardHeader>\r\n            <CardBody>\r\n            \r\n\r\n        {openNewClient?\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={()=>{onOpenNewClient(false);getProcessClients(locationData.transactionId)}}></ClientForm>\r\n\r\n          </Col>\r\n        </Row>\r\n        :\r\n        <React.Fragment>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Link className=\"float-end\" onClick={()=>{setselectedClient(undefined); onOpenNewClient()}}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n            </Col>\r\n              </Row>          \r\n            <Row>\r\n          <Col md=\"12\">\r\n          <div className=\"table-responsive\">\r\n          <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"PersonType\")}</th>\r\n                  <th>{t(\"FullName\")}</th>\r\n                  <th>{t(\"IdentificationType\")}</th>\r\n                  <th>{t(\"IdentificationNumber\")}</th>\r\n                  <th>{t(\"Roles\")}</th>\r\n                  <th>{t(\"WatchList\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {dataClientList.map((item, index) => (\r\n                  <tr>\r\n                    <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                    <td>{Number(item.personType)>1?(item.name):(item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                    <td>{getIdentificationType(item.idType).label}</td>\r\n                    <td>{item.clientDocumentId}</td>\r\n                    <td>\r\n                      {item.roles!==undefined?\r\n                      item.roles.map((rol, index) => (\r\n                        rol.roleDescription + \" - \"\r\n                      )):null}\r\n                    </td>\r\n                    <td>\r\n                      {item.blacklist!==undefined?\r\n                        item.blacklist.map((black, index) => (\r\n                          black.backList===true?\"Aplica\":\"No Aplica\"\r\n                      )):null}\r\n                    </td> \r\n                    <td style={{ textAlign: \"right\" }}>\r\n                      <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                      <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                    </td>                   \r\n                  </tr>                   \r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n           \r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md=\"12\">            \r\n            <Alert show={msgData.show} variant={msgData.isError?\"danger\":\"success\"} dismissible onClose={() =>{ console.log(\"onClose\"); setmsgData({show:false,msg:\"\",isError:false})}}>\r\n              {msgData.msg}\r\n            </Alert>\r\n            </Col>   \r\n             </Row>  \r\n        </React.Fragment>\r\n        }\r\n            </CardBody>\r\n\r\n            {!openNewClient?\r\n            <CardFooter style={{textAlign:\"right\"}}>  \r\n                  <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {t(\"Discard\")}</Button>\r\n                  <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(OPTs.OPT_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n              </CardFooter>\r\n            :null}\r\n        </Card>       \r\n      </LoadingOverlay>       \r\n\r\n      <ModalEndProcess onSaveEndProcess={ onSaveEndProcess } isOpen={ displayModalEndProcess } toggle={ () => { showModalEndProcess(false) } } />        \r\n\r\n      </div>      \r\n    \r\n  )\r\n}\r\n\r\nexport default Compliance\r\n"]},"metadata":{},"sourceType":"module"}