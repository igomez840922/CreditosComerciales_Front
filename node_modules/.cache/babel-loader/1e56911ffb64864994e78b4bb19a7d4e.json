{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\3_Cumplimiento\\\\BusquedaCoincidencia\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport * as OPTs from \"../../../../helpers/options_helper\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport FormBusqueda from \"./FormBusqueda\";\nimport FormResultados from \"./FormResultados\";\nimport FormObservaciones from \"./FormObservaciones\";\nimport FormGoogle from \"./FormGoogle\";\nimport ModalCloseOptions from \"./ModalCloseOptions\";\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\nimport LogProcess from \"../../../../components/LogProcess/index\";\nimport ModalEndProcess from \"../../../../components/EndProcess/ModalEndProcess\";\nimport AttachmentFileCore from \"../../../../components/Common/AttachmentFileCore\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport { BusquedaDescarteModel } from \"../../../../models\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BandejaEntrada = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(location.data); //Entidad Busqueda y Descarte\n\n  const [selectedData, setSelectedData] = useState(undefined); //Resultado de Lista Negra\n\n  const [dataList, setDataList] = useState([]);\n  const [displayModalGoogle, setDisplayModalGoogle] = useState(false);\n  const [searchGoogleTerms, setSearchGoogleTerms] = useState([]);\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\"); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    setLocationData(location.data);\n    initializeData(location.data);\n  }, []); //Caraga Inicial\n\n  function initializeData(InputData) {\n    if (InputData !== undefined && InputData !== null) {\n      //chequear si la tarea no ha sido iniciada\n      if (InputData.taskStatus === \"Ready\") {\n        const apiBpmServices = new BpmServices(); //Iniciamos la nueva tarea en BPM   \n\n        apiBpmServices.startedStatusTask(InputData.taskId).then(iniresult => {\n          if (iniresult === undefined) {\n            history.push(url.URL_DASHBOARD);\n          }\n        });\n      }\n\n      const apiBackendServices = new BackendServices(); // Buscar en BD los datos de esta actividad\n      //var parameters = {processId:InputData.instanceId,transactId:InputData.transactionId,activityId:InputData.activityId}   \n\n      apiBackendServices.consultarBusquedaDescarte(InputData.transactionId).then(data => {\n        if (data !== null && data !== undefined) {\n          UpdateDataModel(data);\n        } else {\n          //Nuevo Proceso            \n          data = BusquedaDescarteModel.getRequestModel();\n          UpdateDataModel(data);\n        }\n      }).catch(error => {\n        console.error('api error: ', error);\n      });\n    } else {\n      history.push(url.URL_DASHBOARD);\n    }\n  }\n\n  function searchWhatchList(values) {\n    setIsActiveLoading(true);\n    const apiCoreServices = new CoreServices();\n    apiCoreServices.postWhatchList(values).then(data => {\n      if (data.status === 200) {\n        if (data.result.length > 0) {\n          setDataList(data.result);\n        } else {\n          setinfo_msg(props.t('NoResults'));\n          setinfo_dlg(true);\n        }\n      } else {\n        seterror_msg(props.t('ErrorCode') + \": \" + data.error.errorCode + \"  \" + props.t('ErrorMsg') + \": \" + data.error.errorCode);\n        seterror_dlg(true);\n      }\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    }).finally(() => {\n      setIsActiveLoading(false);\n    });\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function onGoogleSearch(q) {\n    setSearchGoogleTerms(q);\n    setDisplayModalGoogle(!displayModalGoogle);\n    removeBodyCss();\n  }\n\n  function toggleGoogleModal() {\n    setDisplayModalGoogle(!displayModalGoogle);\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n  } //Modal Para mostrar las opciones al Avanzar\n\n\n  function toggleModalAdvanceOptions() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                             Aqui avanzamos al modal de descripcion                             */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\n  } //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function toggleModalEndProcess() {\n    setDisplayModalEndProcess(true);\n  } //////////////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////////////\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\n      toggleModalEndProcess();\n      return;\n    }\n\n    selectedData.instanceId = locationData.instanceId !== null && locationData.instanceId !== undefined ? locationData.instanceId : selectedData.instanceId;\n    selectedData.customerId = locationData.customerId !== null && locationData.customerId !== undefined ? locationData.customerId : selectedData.customerId;\n    selectedData.responsible = \"admin\";\n    const apiBackendServices = new BackendServices(); //Guardar el usuario prospecto    \n\n    apiBackendServices.guardarUsuarioProspecto(selectedData).then(userData => {\n      if (userData !== undefined) {\n        selectedData.transactId = userData.transactId !== null && userData.transactId !== undefined ? userData.transactId : selectedData.transactId;\n        selectedData.customerId = userData.customerId !== null && userData.customerId !== undefined ? userData.customerId : selectedData.customerId;\n        selectedData.compliance = option === OPTs.OPT_ENVIARCUMPLIMIENTO ? true : false;\n        UpdateDataModel(selectedData); //Guardar busqueda y descarte\n\n        apiBackendServices.guardarBusquedaDescarte(selectedData).then(descarteData => {\n          if (descarteData !== undefined) {\n            if (option === OPTs.OPT_LISTAEXCLUSION) {\n              //Guardar Cumplimiento\n              apiBackendServices.guardarCumplimiento(selectedData).then(descarteData => {\n                if (descarteData !== undefined) {\n                  saveJBPMProcess(option);\n                } else {\n                  //Mensaje ERROR\n                  seterror_msg(props.t(\"ErrorSaveMessage\"));\n                  seterror_dlg(true);\n                }\n              });\n            } else {\n              saveJBPMProcess(option);\n            }\n          } else {\n            //Mensaje ERROR\n            seterror_msg(props.t(\"ErrorSaveMessage\"));\n            seterror_dlg(true);\n          }\n        });\n      } else {\n        //Mensaje ERROR\n        seterror_msg(props.t(\"ErrorSaveMessage\"));\n        seterror_dlg(true);\n      }\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  }\n\n  function saveJBPMProcess(option) {\n    const apiBpmServices = new BpmServices();\n\n    switch (option) {\n      case OPTs.OPT_FINALIZARPROCESO:\n        {\n          apiBpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_SALVAPARCIAL:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": selectedData.transactId.toString(),\n            \"customerId\": selectedData.customerId.toString(),\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          apiBpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"ErrorSaveMessage\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_LISTAEXCLUSION:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": selectedData.transactId.toString(),\n            \"customerId\": selectedData.customerId.toString(),\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          console.log(\"saveJBPMProcess value\", values, locationData.taskId);\n          apiBpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"ErrorSaveMessage\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    //Salvar los comentarios en Bitacora    \n    selectedData.endProcessComment = values.txtComment;\n    UpdateDataModel(selectedData);\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\n  } //salvar comentario de end process\n\n\n  function onSaveAdvanceProcess(values) {\n    //Salvar los comentarios en Bitacora    \n    selectedData.observationsComp = values.txtComment;\n    UpdateDataModel(selectedData);\n    onSaveProcess(OPTs.OPT_LISTAEXCLUSION);\n  } //Actualizamos El Modelo de Datos segun va cambiando\n\n\n  function UpdateDataModel(data) {\n    setSelectedData(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"Compliance\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isActiveLoading,\n        spinner: true,\n        text: props.t(\"WaitingPlease\"),\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(FormBusqueda, {\n              onSubmit: searchWhatchList,\n              onGoogleSearch: onGoogleSearch,\n              selectedData: selectedData,\n              updateDataModel: UpdateDataModel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), dataList.length > 0 && /*#__PURE__*/_jsxDEV(FormResultados, {\n              results: dataList,\n              onScreenOption: props.onScreenOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormObservaciones, {\n              selectedData: selectedData,\n              updateDataModel: UpdateDataModel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this), locationData !== undefined ? /*#__PURE__*/_jsxDEV(AttachmentFileCore, {\n              locationData: {\n                instanceId: locationData.instanceId,\n                processId: OPTs.PROCESS_BUSQUEDADESCARTE,\n                activityId: OPTs.ACT_NONE\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 14\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                toggleModalCloseOptions();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 124\n              }, this), \" \", props.t(\"Exit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                toggleModalAdvanceOptions();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 127\n              }, this), \" \", props.t(\"Advance\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), locationData !== undefined && locationData.customerId !== null && locationData.customerId !== undefined && locationData.customerId.length > 0 ? /*#__PURE__*/_jsxDEV(LogProcess, {\n          locationData: {\n            instanceId: locationData.instanceId,\n            transactId: locationData.transactionId,\n            clientId: locationData.customerId,\n            customerName: \"admin\",\n            processId: OPTs.PROCESS_BUSQUEDADESCARTE,\n            activityId: OPTs.ACT_NONE\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 10\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGoogle, {\n        searchGoogleTerms: searchGoogleTerms,\n        isOpen: displayModalGoogle,\n        toggle: () => {\n          toggleGoogleModal();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalCloseOptions,\n        toggle: () => {\n          toggleModalCloseOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAdvanceOptions, {\n        onSaveAdvanceProcess: onSaveAdvanceProcess,\n        isOpen: displayModalAdvanceOptions,\n        toggle: () => {\n          toggleModalAdvanceOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n        onSaveEndProcess: onSaveEndProcess,\n        isOpen: displayModalEndProcess,\n        toggle: () => {\n          toggleModalEndProcess();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 5\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 5\n      }, this) : null, info_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        info: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setinfo_dlg(false);\n        },\n        children: info_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BandejaEntrada, \"8uIFMW0vmjfhJIF5JMe0EOEu1p4=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = BandejaEntrada;\nexport default withTranslation()(BandejaEntrada);\n\nvar _c;\n\n$RefreshReg$(_c, \"BandejaEntrada\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/3_Cumplimiento/BusquedaCoincidencia/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","LoadingOverlay","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","AvForm","AvField","Link","Breadcrumbs","withTranslation","SweetAlert","FormBusqueda","FormResultados","FormObservaciones","FormGoogle","ModalCloseOptions","ModalAdvanceOptions","LogProcess","ModalEndProcess","AttachmentFileCore","BackendServices","CoreServices","BpmServices","BusquedaDescarteModel","BandejaEntrada","props","history","location","locationData","setLocationData","data","selectedData","setSelectedData","undefined","dataList","setDataList","displayModalGoogle","setDisplayModalGoogle","searchGoogleTerms","setSearchGoogleTerms","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalAdvanceOptions","setDisplayModalAdvanceOptions","displayModalEndProcess","setDisplayModalEndProcess","isActiveLoading","setIsActiveLoading","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","useEffect","initializeData","InputData","taskStatus","apiBpmServices","startedStatusTask","taskId","then","iniresult","push","URL_DASHBOARD","apiBackendServices","consultarBusquedaDescarte","transactionId","UpdateDataModel","getRequestModel","catch","error","console","searchWhatchList","values","apiCoreServices","postWhatchList","status","result","length","t","errorCode","finally","removeBodyCss","document","body","classList","add","onGoogleSearch","q","toggleGoogleModal","toggleModalCloseOptions","toggleModalAdvanceOptions","toggleModalEndProcess","onSaveProcess","option","OPT_PREFINALIZARPROCESO","instanceId","customerId","responsible","guardarUsuarioProspecto","userData","transactId","compliance","OPT_ENVIARCUMPLIMIENTO","guardarBusquedaDescarte","descarteData","OPT_LISTAEXCLUSION","guardarCumplimiento","saveJBPMProcess","OPT_FINALIZARPROCESO","abortProcess","OPT_SALVAPARCIAL","PROCESS_CUMPLIMIENTO","toString","ACT_NONE","updatevariables","PROCESS_LISTAEXCLUSION","log","completedStatusTask","onSaveEndProcess","endProcessComment","txtComment","onSaveAdvanceProcess","observationsComp","onScreenOption","processId","PROCESS_BUSQUEDADESCARTE","activityId","textAlign","margin","clientId","customerName"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport * as OPTs from \"../../../../helpers/options_helper\"\r\nimport * as url from \"../../../../helpers/url_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\n\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nimport FormBusqueda from \"./FormBusqueda\"\r\nimport FormResultados from \"./FormResultados\"\r\nimport FormObservaciones from \"./FormObservaciones\"\r\nimport FormGoogle from \"./FormGoogle\"\r\nimport ModalCloseOptions from \"./ModalCloseOptions\"\r\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\"\r\nimport LogProcess from \"../../../../components/LogProcess/index\";\r\nimport ModalEndProcess from \"../../../../components/EndProcess/ModalEndProcess\";\r\nimport AttachmentFileCore from \"../../../../components/Common/AttachmentFileCore\";\r\n\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../../services\";\r\nimport { BusquedaDescarteModel } from \"../../../../models\";\r\n\r\nconst BandejaEntrada = props => {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(location.data);  \r\n  //Entidad Busqueda y Descarte\r\n  const [selectedData, setSelectedData] = useState(undefined);  \r\n  //Resultado de Lista Negra\r\n  const [dataList, setDataList] = useState([]);\r\n\r\n  const [displayModalGoogle, setDisplayModalGoogle] = useState(false);\r\n  const [searchGoogleTerms, setSearchGoogleTerms] = useState([]);\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\r\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);  \r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    setLocationData(location.data);\r\n\r\n    initializeData(location.data);    \r\n  }, []);\r\n\r\n  //Caraga Inicial\r\n  function initializeData(InputData) {            \r\n        \r\n    if(InputData!==undefined && InputData!== null){\r\n      \r\n      //chequear si la tarea no ha sido iniciada\r\n      if(InputData.taskStatus === \"Ready\"){        \r\n        const apiBpmServices = new BpmServices();\r\n        //Iniciamos la nueva tarea en BPM   \r\n        apiBpmServices.startedStatusTask(InputData.taskId)\r\n        .then((iniresult) => {                       \r\n          if(iniresult===undefined){\r\n            history.push(url.URL_DASHBOARD);\r\n          }                \r\n        })\r\n      }\r\n\r\n      const apiBackendServices = new BackendServices();\r\n      // Buscar en BD los datos de esta actividad\r\n      //var parameters = {processId:InputData.instanceId,transactId:InputData.transactionId,activityId:InputData.activityId}   \r\n      apiBackendServices.consultarBusquedaDescarte(InputData.transactionId)\r\n        .then((data) => {\r\n          if(data!== null && data !==undefined){\r\n            UpdateDataModel(data);\r\n          }\r\n          else{\r\n            //Nuevo Proceso            \r\n            data = BusquedaDescarteModel.getRequestModel();\r\n            UpdateDataModel(data);        \r\n          }\r\n      })\r\n      .catch((error) => {    \r\n        console.error('api error: ', error);\r\n      });\r\n    }    \r\n    else{      \r\n      history.push(url.URL_DASHBOARD);      \r\n    }\r\n  }\r\n\r\n  function searchWhatchList(values) {\r\n    \r\n    setIsActiveLoading(true);\r\n    const apiCoreServices = new CoreServices()\r\n    apiCoreServices.postWhatchList(values)\r\n      .then((data) => {\r\n\r\n        if(data.status === 200){\r\n\r\n          if(data.result.length > 0){\r\n            setDataList(data.result);            \r\n          }\r\n          else{\r\n            setinfo_msg(props.t('NoResults'));\r\n            setinfo_dlg(true)\r\n          }\r\n        }\r\n        else{\r\n          seterror_msg(props.t('ErrorCode')+\": \" + data.error.errorCode + \"  \" +props.t('ErrorMsg')+\": \" + data.error.errorCode);\r\n          seterror_dlg(true)\r\n        }\r\n\r\n      })\r\n      .catch((error) => {\r\n\r\n        console.error('Error fetching documents', error);\r\n\r\n      }).finally (() => {\r\n\r\n        setIsActiveLoading(false);\r\n\r\n      })\r\n  }\r\n  \r\n\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  function onGoogleSearch(q) {\r\n    setSearchGoogleTerms(q);\r\n    setDisplayModalGoogle(!displayModalGoogle);\r\n    removeBodyCss();\r\n  }\r\n\r\n  function toggleGoogleModal() {\r\n    setDisplayModalGoogle(!displayModalGoogle);\r\n  }\r\n\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n  }\r\n\r\n  //Modal Para mostrar las opciones al Avanzar\r\n  function toggleModalAdvanceOptions() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                             Aqui avanzamos al modal de descripcion                             */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\r\n  }\r\n\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function toggleModalEndProcess() {\r\n    setDisplayModalEndProcess(true);\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////\r\n  //////////////////////////////////////////////////////////////\r\n\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option){\r\n    \r\n    if(option === OPTs.OPT_PREFINALIZARPROCESO){\r\n      toggleModalEndProcess();\r\n      return;\r\n    }\r\n    \r\n    selectedData.instanceId = locationData.instanceId !== null && locationData.instanceId !== undefined? locationData.instanceId:selectedData.instanceId;\r\n    selectedData.customerId = locationData.customerId !== null && locationData.customerId !== undefined? locationData.customerId:selectedData.customerId;\r\n    selectedData.responsible = \"admin\";\r\n\r\n    const apiBackendServices = new BackendServices();        \r\n    //Guardar el usuario prospecto    \r\n    apiBackendServices.guardarUsuarioProspecto(selectedData)\r\n    .then((userData) => {\r\n      \r\n      if(userData!==undefined){\r\n        selectedData.transactId = userData.transactId !== null && userData.transactId !== undefined? userData.transactId:selectedData.transactId;\r\n        selectedData.customerId = userData.customerId !== null && userData.customerId !== undefined? userData.customerId:selectedData.customerId;\r\n        selectedData.compliance = option === OPTs.OPT_ENVIARCUMPLIMIENTO?true:false;\r\n\r\n        UpdateDataModel(selectedData);\r\n        \r\n        //Guardar busqueda y descarte\r\n        apiBackendServices.guardarBusquedaDescarte(selectedData)\r\n          .then((descarteData) => {\r\n            if(descarteData!==undefined){\r\n              \r\n              if(option === OPTs.OPT_LISTAEXCLUSION){\r\n                //Guardar Cumplimiento\r\n                apiBackendServices.guardarCumplimiento(selectedData)\r\n                  .then((descarteData) => {\r\n                    if(descarteData!==undefined){          \r\n                      saveJBPMProcess(option);\r\n                    }\r\n                    else{\r\n                      //Mensaje ERROR\r\n                      seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n                      seterror_dlg(true)\r\n                    }\r\n                  });\r\n                }\r\n                else{\r\n                  saveJBPMProcess(option);\r\n                }              \r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n              seterror_dlg(true)\r\n            }\r\n        });\r\n      }\r\n      else{\r\n        //Mensaje ERROR\r\n        seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n        seterror_dlg(true)\r\n      }\r\n    })\r\n    .catch((error) => {    \r\n      console.error('api error: ', error);\r\n    }); \r\n  }\r\n\r\n  function saveJBPMProcess(option){    \r\n    \r\n    const apiBpmServices = new BpmServices();\r\n\r\n    switch(option){\r\n      case OPTs.OPT_FINALIZARPROCESO: {\r\n        \r\n        apiBpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if(data!==undefined){              \r\n              history.push(url.URL_DASHBOARD);            }\r\n            else{\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n              seterror_dlg(true)\r\n            }\r\n        });\r\n        break;\r\n      }\r\n      case OPTs.OPT_SALVAPARCIAL: {\r\n        var values = {\r\n          \"processId\":OPTs.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\":OPTs.ACT_NONE.toString(),                    \r\n          \"transactionId\":selectedData.transactId.toString(),\r\n          \"customerId\":selectedData.customerId.toString(),                      \r\n          \"applicationNumber\":\"\",\r\n          \"procedureNumber\":\"\" ,\r\n          //\"decision\":\"no\"          \r\n      };\r\n        apiBpmServices.updatevariables(locationData.instanceId,values)\r\n          .then((data) => {\r\n            if(data!==undefined){              \r\n              setsuccessSave_dlg(true);    \r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n              seterror_dlg(true)\r\n            }\r\n        });\r\n\r\n        break;\r\n      }\r\n      case OPTs.OPT_LISTAEXCLUSION: {\r\n\r\n        var values = {\r\n          \"processId\":OPTs.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\":OPTs.ACT_NONE.toString(),                    \r\n          \"transactionId\":selectedData.transactId.toString(),\r\n          \"customerId\":selectedData.customerId.toString(),                      \r\n          \"applicationNumber\":\"\",\r\n          \"procedureNumber\":\"\" ,\r\n          \"decision\":\"si\"          \r\n      };\r\n      console.log(\"saveJBPMProcess value\",values,locationData.taskId);\r\n        apiBpmServices.completedStatusTask(locationData.taskId,values)\r\n          .then((data) => {\r\n            if(data!==undefined){              \r\n              setsuccessSave_dlg(true);    \r\n            }\r\n            else{\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n              seterror_dlg(true)\r\n            }\r\n        });\r\n        break;\r\n      }      \r\n    }\r\n  }\r\n\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values){\r\n    \r\n    //Salvar los comentarios en Bitacora    \r\n    selectedData.endProcessComment = values.txtComment;\r\n\r\n    UpdateDataModel(selectedData);\r\n\r\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\r\n  }\r\n\r\n  //salvar comentario de end process\r\n  function onSaveAdvanceProcess(values){\r\n    \r\n    //Salvar los comentarios en Bitacora    \r\n    selectedData.observationsComp = values.txtComment;\r\n\r\n    UpdateDataModel(selectedData);\r\n\r\n    onSaveProcess(OPTs.OPT_LISTAEXCLUSION);\r\n  }\r\n\r\n  //Actualizamos El Modelo de Datos segun va cambiando\r\n  function UpdateDataModel(data) {\r\n    setSelectedData(data);                  \r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"Compliance\")} />\r\n\r\n        <LoadingOverlay active={isActiveLoading} spinner text={props.t(\"WaitingPlease\")}>\r\n\r\n          <Card>\r\n            <CardBody>\r\n\r\n              <FormBusqueda onSubmit={searchWhatchList} onGoogleSearch={onGoogleSearch} selectedData={selectedData} updateDataModel={UpdateDataModel} />\r\n\r\n              {dataList.length > 0 && (\r\n                <FormResultados results={dataList} onScreenOption={props.onScreenOption} />\r\n              )}\r\n\r\n              <FormObservaciones selectedData={selectedData} updateDataModel={UpdateDataModel} />\r\n\r\n              { \r\n            (locationData!==undefined)?\r\n            (<AttachmentFileCore locationData={{instanceId:locationData.instanceId,processId:OPTs.PROCESS_BUSQUEDADESCARTE,activityId:OPTs.ACT_NONE}} />)\r\n            :null\r\n          }\r\n            </CardBody>\r\n\r\n            <CardFooter style={{ textAlign: \"right\" }}>\r\n              <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleModalCloseOptions() }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n              <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleModalAdvanceOptions() }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {props.t(\"Advance\")}</Button>\r\n            </CardFooter>\r\n\r\n          </Card>\r\n\r\n\r\n          { (locationData!==undefined && locationData.customerId!==null && locationData.customerId!==undefined && locationData.customerId.length > 0)?\r\n        (<LogProcess locationData={{instanceId:locationData.instanceId,transactId: locationData.transactionId,clientId: locationData.customerId,\r\n          customerName:\"admin\",processId:OPTs.PROCESS_BUSQUEDADESCARTE,activityId:OPTs.ACT_NONE}}/>)\r\n        :null}\r\n        \r\n        </LoadingOverlay>\r\n\r\n\r\n        <FormGoogle searchGoogleTerms={ searchGoogleTerms } isOpen={ displayModalGoogle } toggle={ () => { toggleGoogleModal() } } />\r\n\r\n        <ModalCloseOptions onSaveProcess={ onSaveProcess } isOpen={ displayModalCloseOptions } toggle={ () => { toggleModalCloseOptions() } } />\r\n\r\n        <ModalAdvanceOptions onSaveAdvanceProcess={ onSaveAdvanceProcess } isOpen={ displayModalAdvanceOptions } toggle={ () => { toggleModalAdvanceOptions() } } />\r\n\r\n        <ModalEndProcess onSaveEndProcess={ onSaveEndProcess } isOpen={ displayModalEndProcess } toggle={ () => { toggleModalEndProcess() } } />     \r\n\r\n\r\n\r\n{successSave_dlg ? (\r\n    <SweetAlert\r\n      success\r\n      title={props.t(\"SuccessDialog\")}\r\n      onConfirm={() => {\r\n        setsuccessSave_dlg(false)\r\n        \r\n        history.push(url.URL_DASHBOARD);\r\n      }}\r\n    >\r\n      {props.t(\"SuccessSaveMessage\")}\r\n    </SweetAlert>\r\n  ) : null}\r\n\r\n  {error_dlg ? (\r\n    <SweetAlert\r\n      error\r\n      title={props.t(\"ErrorDialog\")}\r\n      onConfirm={() => {\r\n        seterror_dlg(false)\r\n      }}\r\n    >\r\n      {error_msg}\r\n    </SweetAlert>\r\n  ) : null}\r\n\r\n\r\n{info_dlg ? (\r\n            <SweetAlert\r\n              info\r\n              title={props.t(\"SuccessDialog\")}\r\n              onConfirm={() => {\r\n                setinfo_dlg(false)\r\n              }}\r\n            >\r\n              {info_msg}\r\n            </SweetAlert>\r\n          ) : null}\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport default (withTranslation()(BandejaEntrada))\r\n"]},"metadata":{},"sourceType":"module"}