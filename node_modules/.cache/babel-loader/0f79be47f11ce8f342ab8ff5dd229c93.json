{"ast":null,"code":"import moment from 'moment';\nexport const getBuildDate = epoch => {\n  const buildDate = moment(epoch).format(\"DD-MM-YYY HH:MM\");\n  return buildDate;\n};\nexport function OnlyNumber(event) {\n  if (!/[0-9.]/.test(event.key)) {\n    event.preventDefault();\n  }\n}\n_c = OnlyNumber;\nexport function GetMontNumberByName(monthName) {\n  if (monthName.indexOf('ENERO') >= 0) {\n    return \"01\";\n  }\n\n  if (monthName.indexOf('FEBRERO') >= 0) {\n    return \"02\";\n  }\n\n  if (monthName.indexOf('MARZO') >= 0) {\n    return \"03\";\n  }\n\n  if (monthName.indexOf('ABRIL') >= 0) {\n    return \"04\";\n  }\n\n  if (monthName.indexOf('MAYO') >= 0) {\n    return \"05\";\n  }\n\n  if (monthName.indexOf('JUNIO') >= 0) {\n    return \"06\";\n  }\n\n  if (monthName.indexOf('JULIO') >= 0) {\n    return \"07\";\n  }\n\n  if (monthName.indexOf('AGOSTO') >= 0) {\n    return \"08\";\n  }\n\n  if (monthName.indexOf('SEPTIEMBRE') >= 0) {\n    return \"09\";\n  }\n\n  if (monthName.indexOf('OCTUBRE') >= 0) {\n    return \"10\";\n  }\n\n  if (monthName.indexOf('NOVIEMBRE') >= 0) {\n    return \"11\";\n  }\n\n  if (monthName.indexOf('DICIEMBRE') >= 0) {\n    return \"12\";\n  }\n\n  return 0;\n}\n_c2 = GetMontNumberByName;\nexport function GetMontNameByNumber(monthNumber) {\n  switch (Number(monthNumber)) {\n    case 1:\n      {\n        return \"ENERO\";\n      }\n\n    case 2:\n      {\n        return \"FEBRERO\";\n      }\n\n    case 3:\n      {\n        return \"MARZO\";\n      }\n\n    case 4:\n      {\n        return \"ABRIL\";\n      }\n\n    case 5:\n      {\n        return \"MAYO\";\n      }\n\n    case 6:\n      {\n        return \"JUNIO\";\n      }\n\n    case 7:\n      {\n        return \"JULIO\";\n      }\n\n    case 8:\n      {\n        return \"AGOSTO\";\n      }\n\n    case 9:\n      {\n        return \"SEPTIEMBRE\";\n      }\n\n    case 10:\n      {\n        return \"OCTUBRE\";\n      }\n\n    case 11:\n      {\n        return \"NOVIEMBRE\";\n      }\n\n    case 12:\n      {\n        return \"DICIEMBRE\";\n      }\n  }\n\n  return \"\";\n}\n_c3 = GetMontNameByNumber;\nexport function Capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n/**\r\n * *Transforma los values de un objecto a Mayúsculas\r\n * TODO: Altera el argumento de tipo Object directamente\r\n * @param {Object} dataObject \r\n * @return {Promise}\r\n */\n\n_c4 = Capitalize;\nexport function convertToUpperCasesData(dataObject) {\n  return new Promise(async resolve => {\n    for (let key in dataObject) {\n      typeof dataObject[key] === \"string\" && (dataObject[key] = dataObject[key].toUpperCase());\n      typeof dataObject[key] === \"object\" && (await convertToUpperCasesData(dataObject[key]));\n    }\n\n    resolve(dataObject);\n  });\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"OnlyNumber\");\n$RefreshReg$(_c2, \"GetMontNumberByName\");\n$RefreshReg$(_c3, \"GetMontNameByNumber\");\n$RefreshReg$(_c4, \"Capitalize\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/commons.js"],"names":["moment","getBuildDate","epoch","buildDate","format","OnlyNumber","event","test","key","preventDefault","GetMontNumberByName","monthName","indexOf","GetMontNameByNumber","monthNumber","Number","Capitalize","str","charAt","toUpperCase","slice","toLowerCase","convertToUpperCasesData","dataObject","Promise","resolve"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n\r\nexport const getBuildDate = (epoch) => {\r\n  const buildDate = moment(epoch).format(\"DD-MM-YYY HH:MM\");\r\n  return buildDate;\r\n};\r\n\r\nexport function OnlyNumber(event) {\r\n  if (!/[0-9.]/.test(event.key)) {\r\n    event.preventDefault();\r\n  }\r\n}\r\n\r\nexport function GetMontNumberByName(monthName) {\r\n  if (monthName.indexOf('ENERO') >= 0) {\r\n    return \"01\";\r\n  }\r\n  if (monthName.indexOf('FEBRERO') >= 0) {\r\n    return \"02\";\r\n  }\r\n  if (monthName.indexOf('MARZO') >= 0) {\r\n    return \"03\";\r\n  }\r\n  if (monthName.indexOf('ABRIL') >= 0) {\r\n    return \"04\";\r\n  }\r\n  if (monthName.indexOf('MAYO') >= 0) {\r\n    return \"05\";\r\n  }\r\n  if (monthName.indexOf('JUNIO') >= 0) {\r\n    return \"06\";\r\n  }\r\n  if (monthName.indexOf('JULIO') >= 0) {\r\n    return \"07\";\r\n  }\r\n  if (monthName.indexOf('AGOSTO') >= 0) {\r\n    return \"08\";\r\n  }\r\n  if (monthName.indexOf('SEPTIEMBRE') >= 0) {\r\n    return \"09\";\r\n  }\r\n  if (monthName.indexOf('OCTUBRE') >= 0) {\r\n    return \"10\";\r\n  }\r\n  if (monthName.indexOf('NOVIEMBRE') >= 0) {\r\n    return \"11\";\r\n  }\r\n  if (monthName.indexOf('DICIEMBRE') >= 0) {\r\n    return \"12\";\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function GetMontNameByNumber(monthNumber) {\r\n  switch (Number(monthNumber)) {\r\n    case 1: {\r\n      return \"ENERO\";\r\n    }\r\n    case 2: {\r\n      return \"FEBRERO\";\r\n    }\r\n    case 3: {\r\n      return \"MARZO\";\r\n    }\r\n    case 4: {\r\n      return \"ABRIL\";\r\n    }\r\n    case 5: {\r\n      return \"MAYO\";\r\n    }\r\n    case 6: {\r\n      return \"JUNIO\";\r\n    }\r\n    case 7: {\r\n      return \"JULIO\";\r\n    }\r\n    case 8: {\r\n      return \"AGOSTO\";\r\n    }\r\n    case 9: {\r\n      return \"SEPTIEMBRE\";\r\n    }\r\n    case 10: {\r\n      return \"OCTUBRE\";\r\n    }\r\n    case 11: {\r\n      return \"NOVIEMBRE\";\r\n    }\r\n    case 12: {\r\n      return \"DICIEMBRE\";\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function Capitalize(str) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\r\n}\r\n\r\n\r\n/**\r\n * *Transforma los values de un objecto a Mayúsculas\r\n * TODO: Altera el argumento de tipo Object directamente\r\n * @param {Object} dataObject \r\n * @return {Promise}\r\n */\r\nexport function convertToUpperCasesData(dataObject) {\r\n  return new Promise(async (resolve) => {\r\n    for (let key in dataObject) {\r\n      typeof dataObject[key] === \"string\" && (dataObject[key] = dataObject[key].toUpperCase());\r\n      typeof dataObject[key] === \"object\" && await convertToUpperCasesData(dataObject[key])\r\n    }\r\n    resolve(dataObject);\r\n  });\r\n}"]},"metadata":{},"sourceType":"module"}