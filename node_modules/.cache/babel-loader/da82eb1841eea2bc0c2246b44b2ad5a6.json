{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\DatosGenerales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport moment from \"moment\";\nimport { Row, Col, Label, Table } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\nimport { BackendServices, CoreServices } from '../../../../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DatosGenerales = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmDatosGenerales');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn2\n  }));\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [locationData, setLocationData] = useState(location.data);\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\n  const [banca, setBanca] = useState([]);\n  const [bancaSelected, setBancaSelected] = useState(undefined);\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\n  const [bancaDate, setDataBanca] = useState([]);\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\n  const [dataReturn, setDataReturn] = useState({\n    codigoTipoPersona: null,\n    codigoTipoIdentificacion: null,\n    numeroCliente: null,\n    primerNombre: null,\n    segundoNombre: null,\n    primerApellido: null,\n    segundoApellido: null,\n    numeroIdentificacion: null,\n    transactId: 0,\n    economicGroup: {\n      code: \"\",\n      name: \"\"\n    },\n    economicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    subeconomicActivity: {\n      code: \"\",\n      name: \"\"\n    },\n    bank: {\n      code: \"\",\n      name: \"\"\n    }\n  });\n  const [dataReturn2, setDataReturn2] = useState();\n  const [formValid, setFormValid] = useState(false);\n  const [cambio, setCambio] = useState(2);\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\n  const [dataDeudores, setdataDeudores] = useState(null); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    // Read Api Service data      \n    loadData();\n    loadInitialData();\n    loadListGroupEconomic();\n    loadBank();\n    loadActivityEconomic();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n\n    try {\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n        if (defaultVal !== undefined) {\n          setIdentificationTypeSelected(defaultVal);\n        }\n      }\n\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\n\n        if (defaultVal !== undefined) {\n          setGruposEconomicosSelected(defaultVal);\n        }\n      }\n\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\n\n        if (defaultVal !== undefined) {\n          setBancaSelected(defaultVal);\n        }\n      }\n\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setActividadEmpresaSelected(defaultVal);\n        }\n      }\n\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\n\n        if (defaultVal !== undefined) {\n          setSubActividadEmpresaSelected(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [cambio]);\n  React.useEffect(() => {\n    try {\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\n        loadClientSelectedData(props.selectedClient);\n      }\n    } catch (err) {}\n  }, [props.selectedClient]); ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\n  // cargar actividad economica\n\n  function loadActivityEconomic() {\n    const api = new CoreServices(); // getActividadEconomicaCatalogo\n\n    api.getActividadEconomicaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setActividadEmpresa(json);\n\n      if (dataReturn.economicActivity !== null) {\n        loadSubActivityEconomic(dataReturn.economicActivity.code);\n      }\n\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarSubActividadEconomica\n\n\n  function loadSubActivityEconomic(codActividad) {\n    const api = new CoreServices(); // getSubActividadEconomicaCatalogo\n\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setSubActividadEmpresa(json);\n\n      if (dataReturn.subeconomicActivity !== null) {\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\n      } else {\n        dataReturn.subeconomicActivity = {\n          code: json[0].value,\n          name: json[0].label\n        };\n        setSubActividadEmpresaSelected(json[0]);\n      }\n\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarListaGrupoEconomico\n\n\n  function loadListGroupEconomic() {\n    const api = new CoreServices(); // getGrupoEconomicoCatalogo\n\n    api.getGrupoEconomicoCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        if (response.Records[i][\"Code\"] == \"0003\") {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        } else {\n          json.push({\n            label: response.Records[i][\"Description\"],\n            value: response.Records[i][\"Code\"]\n          });\n        }\n      }\n\n      setGruposEconomicos(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  } // cargarBancas\n\n\n  function loadBank() {\n    const api = new CoreServices();\n    api.getBancaCatalogo().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.Records.length; i++) {\n        json.push({\n          label: response.Records[i][\"Description\"],\n          value: response.Records[i][\"Code\"]\n        });\n      }\n\n      setBanca(json);\n      setCambio(null);\n      setCambio(5);\n    });\n  } // consultarDatos\n\n\n  function loadData() {\n    const apiBack = new BackendServices(); //consultarDeudorPrincipal\n\n    apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\n      dataReturn.numeroCliente = resp.customerNumberT24;\n      dataReturn.primerNombre = resp.name;\n      dataReturn.segundoNombre = resp.name2;\n      dataReturn.primerApellido = resp.lastName;\n      dataReturn.segundoApellido = resp.lastName2;\n      dataReturn.numeroIdentificacion = resp.clientDocId;\n      dataReturn.nuevoDato = \"\";\n      setDataReturn(dataReturn);\n    }); // consultarDatosGeneralesIGR\n\n    apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\n      dataReturn.codigoTipoIdentificacion = resp.identificationType;\n      dataReturn.transactId = locationData.transactionId;\n      dataReturn.economicGroup.code = resp.economicGroup.code;\n      dataReturn.economicGroup.name = resp.economicGroup.name;\n      dataReturn.economicActivity.code = resp.economicActivity.code;\n      dataReturn.economicActivity.name = resp.economicActivity.name;\n      dataReturn.subeconomicActivity.code = resp.subeconomicActivity.code;\n      dataReturn.subeconomicActivity.name = resp.subeconomicActivity.name;\n      dataReturn.bank.code = resp.bank.code;\n      dataReturn.bank.name = resp.bank.name;\n      setDataReturn(dataReturn);\n      setCambio(null);\n      setCambio(5);\n    }).catch(error => {});\n  } // guardarDatosGenerales\n\n\n  function saveDataGeneral() {\n    const apiBack = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Actualizamos los datos del cliente                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    let dataGenerales = {\n      customerId: locationData.customerId,\n      transactId: Number(locationData.transactionId),\n      personType: dataReturn.codigoTipoPersona,\n      identificationType: dataReturn.codigoTipoIdentificacion,\n      customerDocumentId: dataReturn.numeroIdentificacion,\n      customerNumberT24: dataReturn.numeroCliente,\n      firstName: dataReturn.primerNombre,\n      secondName: dataReturn.segundoNombre,\n      firstLastName: dataReturn.primerApellido,\n      secondLastName: dataReturn.segundoApellido,\n      \"economicGroup\": {\n        \"code\": dataReturn.economicGroup.code,\n        \"name\": dataReturn.economicGroup.name\n      },\n      \"economicActivity\": {\n        \"code\": dataReturn.economicActivity.code,\n        \"name\": dataReturn.economicActivity.name\n      },\n      \"subeconomicActivity\": {\n        \"code\": dataReturn.subeconomicActivity.code,\n        \"name\": dataReturn.subeconomicActivity.name\n      },\n      \"bank\": {\n        \"code\": dataReturn.bank.code,\n        \"name\": dataReturn.bank.name\n      },\n      date: moment().format(\"YYYY-MM-DD\"),\n      status: true\n    }; // guardarDatosGeneralesIGR\n\n    apiBack.saveGeneralDataIGR(dataGenerales).then(resp => {\n      setFormValid(true);\n    });\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setDataReturn2(dataReturn);\n    setDataReturn(dataReturn);\n    saveDataGeneral();\n    setFormValid(true);\n  }\n\n  function loadInitialData() {\n    const apiServiceBackend = new ApiServiceBackend(); // consultarCatalogoTipoIdentificacion\n\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setIdentificationTypeList(json);\n      }\n    }); // consultarCatalogoTipoPersonaDescripcion\n\n    apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(\"\").then(resp2 => {\n      // consultarDeudores\n      apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\n        if (resp.length > 0) {\n          setdataDeudores(resp.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: resp2.find(x => x.code === Number(data.typePerson)).label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Number(data.typePerson) === 2 ? data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.idType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.clientDocId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, data.personId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)));\n        } else {\n          setdataDeudores( /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: t(\"NoData\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this));\n        }\n      }).catch(error => {});\n    });\n  }\n\n  function changeAll(e, tipo) {\n    if (tipo == \"tipoPersona\") {\n      dataReturn.codigoTipoPersona = e.value;\n    }\n\n    if (tipo == \"Tipo\") {\n      dataReturn.codigoTipoIdentificacion = e.value;\n    }\n\n    if (tipo == \"codigoGrupo\") {\n      dataReturn.economicGroup.code = e.value;\n      dataReturn.economicGroup.name = e.label;\n      setCodigoGrupo(e.value);\n      setCNombreGrupo(e.label);\n    }\n\n    if (tipo == \"codigoBanca\") {\n      dataReturn.bank.code = e.value;\n      dataReturn.bank.name = e.label;\n      setDataBanca(e);\n    }\n\n    if (tipo == \"numeroCliente\") {\n      dataReturn.numeroCliente = e.target.value;\n    }\n\n    if (tipo == \"primerNombre\") {\n      dataReturn.primerNombre = e.target.value;\n    }\n\n    if (tipo == \"segundoNombre\") {\n      dataReturn.segundoNombre = e.target.value;\n    }\n\n    if (tipo == \"primerApellido\") {\n      dataReturn.primerApellido = e.target.value;\n    }\n\n    if (tipo == \"segundoApellido\") {\n      dataReturn.segundoApellido = e.target.value;\n    }\n\n    if (tipo == \"numeroIdentificacion\") {\n      dataReturn.numeroIdentificacion = e.target.value;\n    }\n\n    if (tipo == \"actividadEconomica\") {\n      dataReturn.economicActivity.code = e.value;\n      dataReturn.economicActivity.name = e.label;\n      dataReturn.subeconomicActivity = null;\n      loadSubActivityEconomic(e.value);\n    }\n\n    if (tipo == \"subactividadEconomica\") {\n      dataReturn.subeconomicActivity.code = e.value;\n      dataReturn.subeconomicActivity.name = e.label;\n    }\n\n    setDataReturn(dataReturn);\n  } /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\n\n\n  function loadClientSelectedData(selectedClient) {\n    dataReturn.numeroCliente = selectedClient.id;\n    dataReturn.primerNombre = selectedClient.firstname;\n    dataReturn.segundoNombre = selectedClient.secondname;\n    dataReturn.primerApellido = selectedClient.lastname;\n    dataReturn.segundoApellido = selectedClient.secondlastname;\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\n    setDataReturn(dataReturn);\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\n\n    if (defaultVal !== undefined) {\n      setIdentificationTypeSelected(defaultVal);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"General Data\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmDatosGenerales\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: t(\"Debtors\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"FullName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"IdentificationType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"IdentificationNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataDeudores\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Economic Group\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value));\n                changeAll(e, \"codigoGrupo\");\n              },\n              options: gruposEconomicos,\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"SelectGroup\"),\n              value: gruposEconomicosSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), campoRequeridoGrupo ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Banking\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setBancaSelected(banca.find(x => x.value === e.value));\n                changeAll(e, \"codigoBanca\");\n              },\n              options: banca,\n              value: bancaSelected //defaultValue={props.datosGenerales.bank.code}\n              ,\n              classNamePrefix: \"select2-selection\",\n              placeholder: t(\"SelectBanking\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), campoRequeridoBanca ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: t(\"Economic Activity\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value));\n                changeAll(e, \"actividadEconomica\");\n              },\n              placeholder: t(\"Selectcompanyactivity\"),\n              options: actividadEmpresa,\n              classNamePrefix: \"select2-selection\",\n              value: actividadEmpresaSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), campoRequeridoActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              children: [\"Sub\", t(\"Economic Activity\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value));\n                changeAll(e, \"subactividadEconomica\");\n              },\n              placeholder: t(\"Selectcompanysubactivity\"),\n              options: subactividadEmpresa,\n              classNamePrefix: \"select2-selection\",\n              value: subactividadEmpresaSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), campoRequeridoSubActividad ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-error-parrafo\",\n              children: t(\"Required Field\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 401,\n    columnNumber: 5\n  }, this);\n}, \"vIPGoIyQ0s03cwwOwRwE1oFl488=\", false, function () {\n  return [React.useImperativeHandle, useTranslation, useLocation];\n}));\n_c2 = DatosGenerales;\nDatosGenerales.propTypes = {\n  onSubmit: PropTypes.func,\n  onOpenClientSelection: PropTypes.func\n};\nexport default DatosGenerales;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DatosGenerales$React.forwardRef\");\n$RefreshReg$(_c2, \"DatosGenerales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/DatosGenerales.js"],"names":["React","useState","withTranslation","PropTypes","useTranslation","Select","useLocation","useHistory","moment","Row","Col","Label","Table","AvForm","AvField","ApiServiceBackend","BackendServices","CoreServices","DatosGenerales","forwardRef","props","ref","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn2","t","i18n","location","locationData","setLocationData","data","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","undefined","gruposEconomicos","setGruposEconomicos","gruposEconomicosSelected","setGruposEconomicosSelected","banca","setBanca","bancaSelected","setBancaSelected","actividadEmpresa","setActividadEmpresa","actividadEmpresaSelected","setActividadEmpresaSelected","subactividadEmpresa","setSubActividadEmpresa","subactividadEmpresaSelected","setSubActividadEmpresaSelected","bancaDate","setDataBanca","codigoGrupo","setCodigoGrupo","nombreGrupo","setCNombreGrupo","dataReturn","setDataReturn","codigoTipoPersona","codigoTipoIdentificacion","numeroCliente","primerNombre","segundoNombre","primerApellido","segundoApellido","numeroIdentificacion","transactId","economicGroup","code","name","economicActivity","subeconomicActivity","bank","setDataReturn2","setFormValid","cambio","setCambio","campoRequeridoGrupo","setcampoRequeridoGrupo","campoRequeridoActividad","setcampoRequeridoActividad","campoRequeridoSubActividad","setcampoRequeridoSubActividad","campoRequeridoBanca","setcampoRequeridoBanca","dataDeudores","setdataDeudores","useEffect","loadData","loadInitialData","loadListGroupEconomic","loadBank","loadActivityEconomic","defaultVal","length","find","x","value","err","selectedClient","loadClientSelectedData","api","getActividadEconomicaCatalogo","then","response","json","i","Records","push","label","loadSubActivityEconomic","codActividad","getSubActividadEconomicaCatalogo","getGrupoEconomicoCatalogo","getBancaCatalogo","apiBack","consultPrincipalDebtor","transactionId","resp","customerNumberT24","name2","lastName","lastName2","clientDocId","nuevoDato","consultGeneralDataIGR","identificationType","catch","error","saveDataGeneral","dataGenerales","customerId","Number","personType","customerDocumentId","firstName","secondName","firstLastName","secondLastName","date","format","status","saveGeneralDataIGR","handleSubmit","event","errors","values","preventDefault","apiServiceBackend","consultarCatalogoTipoIdentificacion","consultarCatalogoTipoPersonaDescripcion","resp2","consultarDeudores","map","typePerson","idType","personId","textAlign","changeAll","e","tipo","target","id","firstname","secondname","lastname","secondlastname","idtype","idnumber","partyType","propTypes","onSubmit","func","onOpenClientSelection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport ApiServiceBackend from \"../../../../../services/BackendServices/Services\";\r\nimport { BackendServices, CoreServices } from '../../../../../services';\r\nconst DatosGenerales = React.forwardRef((props, ref) => {\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmDatosGenerales');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn2\r\n  }))\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  const [locationData, setLocationData] = useState(location.data);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [gruposEconomicos, setGruposEconomicos] = useState([]);\r\n  const [gruposEconomicosSelected, setGruposEconomicosSelected] = useState(undefined);\r\n  const [banca, setBanca] = useState([]);\r\n  const [bancaSelected, setBancaSelected] = useState(undefined);\r\n  const [actividadEmpresa, setActividadEmpresa] = useState([]);\r\n  const [actividadEmpresaSelected, setActividadEmpresaSelected] = useState(undefined);\r\n  const [subactividadEmpresa, setSubActividadEmpresa] = useState([]);\r\n  const [subactividadEmpresaSelected, setSubActividadEmpresaSelected] = useState(undefined);\r\n  const [bancaDate, setDataBanca] = useState([]);\r\n  const [codigoGrupo, setCodigoGrupo] = useState(null);\r\n  const [nombreGrupo, setCNombreGrupo] = useState(null);\r\n  const [dataReturn, setDataReturn] = useState({\r\n    codigoTipoPersona: null,\r\n    codigoTipoIdentificacion: null,\r\n    numeroCliente: null,\r\n    primerNombre: null,\r\n    segundoNombre: null,\r\n    primerApellido: null,\r\n    segundoApellido: null,\r\n    numeroIdentificacion: null,\r\n    transactId: 0,\r\n    economicGroup: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    economicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    subeconomicActivity: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    bank: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n  });\r\n  const [dataReturn2, setDataReturn2] = useState();\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [cambio, setCambio] = useState(2);\r\n  const [campoRequeridoGrupo, setcampoRequeridoGrupo] = useState(false);\r\n  const [campoRequeridoActividad, setcampoRequeridoActividad] = useState(false);\r\n  const [campoRequeridoSubActividad, setcampoRequeridoSubActividad] = useState(false);\r\n  const [campoRequeridoBanca, setcampoRequeridoBanca] = useState(false);\r\n  const [dataDeudores, setdataDeudores] = useState(null);\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    // Read Api Service data      \r\n    loadData();\r\n    loadInitialData();\r\n    loadListGroupEconomic();\r\n    loadBank();\r\n    loadActivityEconomic()\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    try {\r\n      if (identificationTypeList.length > 0 && dataReturn.codigoTipoIdentificacion !== null && identificationTypeSelected === undefined) {\r\n        defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n        if (defaultVal !== undefined) {\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n      if (gruposEconomicos.length > 0 && dataReturn.economicGroup !== null && gruposEconomicosSelected === undefined) {\r\n        defaultVal = gruposEconomicos.find(x => x.value === dataReturn.economicGroup.code);\r\n        if (defaultVal !== undefined) {\r\n          setGruposEconomicosSelected(defaultVal);\r\n        }\r\n      }\r\n      if (banca.length > 0 && dataReturn.bank !== null && bancaSelected === undefined) {\r\n        defaultVal = banca.find(x => x.value === dataReturn.bank.code);\r\n        if (defaultVal !== undefined) {\r\n          setBancaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (actividadEmpresa.length > 0 && dataReturn.economicActivity !== null && actividadEmpresaSelected === undefined) {\r\n        defaultVal = actividadEmpresa.find(x => x.value === dataReturn.economicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n      if (subactividadEmpresa.length > 0 && dataReturn.subeconomicActivity !== null && subactividadEmpresaSelected === undefined) {\r\n        defaultVal = subactividadEmpresa.find(x => x.value === dataReturn.subeconomicActivity.code);\r\n        if (defaultVal !== undefined) {\r\n          setSubActividadEmpresaSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [cambio]);\r\n  React.useEffect(() => {\r\n    try {\r\n      if (props.selectedClient !== null && props.selectedClient !== undefined) {\r\n        loadClientSelectedData(props.selectedClient);\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props.selectedClient]);\r\n  ///////////..... CHEQUEAMOS LA DATA PARA INICIALIZAR VALORES POR DEFECTO EN LOS SELECT2 .... ////////\r\n  // cargar actividad economica\r\n  function loadActivityEconomic() {\r\n    const api = new CoreServices();\r\n    // getActividadEconomicaCatalogo\r\n    api.getActividadEconomicaCatalogo().then(response => {\r\n      if (response === null) { return; }\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      setActividadEmpresa(json);\r\n      if (dataReturn.economicActivity !== null) {\r\n        loadSubActivityEconomic(dataReturn.economicActivity.code);\r\n      }\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  // cargarSubActividadEconomica\r\n  function loadSubActivityEconomic(codActividad) {\r\n    const api = new CoreServices();\r\n    // getSubActividadEconomicaCatalogo\r\n    api.getSubActividadEconomicaCatalogo(codActividad).then(response => {\r\n      if (response === null) { return; }\r\n      let json = [];\r\n      for (let i = 0; i < response.Records.length; i++) {\r\n        json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n      }\r\n      setSubActividadEmpresa(json);\r\n      if (dataReturn.subeconomicActivity !== null) {\r\n        setSubActividadEmpresaSelected(json.find(x => x.value === dataReturn.subeconomicActivity.code));\r\n      }\r\n      else {\r\n        dataReturn.subeconomicActivity = { code: json[0].value, name: json[0].label }\r\n        setSubActividadEmpresaSelected(json[0]);\r\n      }\r\n      setCambio(null);\r\n      setCambio(5);\r\n    })\r\n  }\r\n  // cargarListaGrupoEconomico\r\n  function loadListGroupEconomic() {\r\n    const api = new CoreServices();\r\n    // getGrupoEconomicoCatalogo\r\n    api.getGrupoEconomicoCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          if (response.Records[i][\"Code\"] == \"0003\") {\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n          } else {\r\n            json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n          }\r\n        }\r\n        setGruposEconomicos(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  // cargarBancas\r\n  function loadBank() {\r\n    const api = new CoreServices();\r\n    api.getBancaCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        setBanca(json);\r\n        setCambio(null);\r\n        setCambio(5);\r\n      });\r\n  }\r\n  // consultarDatos\r\n  function loadData() {\r\n    const apiBack = new BackendServices();\r\n    //consultarDeudorPrincipal\r\n    apiBack.consultPrincipalDebtor(locationData.transactionId).then(resp => {\r\n      dataReturn.numeroCliente = resp.customerNumberT24\r\n      dataReturn.primerNombre = resp.name\r\n      dataReturn.segundoNombre = resp.name2\r\n      dataReturn.primerApellido = resp.lastName\r\n      dataReturn.segundoApellido = resp.lastName2\r\n      dataReturn.numeroIdentificacion = resp.clientDocId\r\n      dataReturn.nuevoDato = \"\"\r\n      setDataReturn(dataReturn);\r\n    })\r\n    // consultarDatosGeneralesIGR\r\n    apiBack.consultGeneralDataIGR(locationData.transactionId).then(resp => {\r\n      dataReturn.codigoTipoIdentificacion = resp.identificationType\r\n      dataReturn.transactId = locationData.transactionId;\r\n      dataReturn.economicGroup.code = resp.economicGroup.code;\r\n      dataReturn.economicGroup.name = resp.economicGroup.name;\r\n      dataReturn.economicActivity.code = resp.economicActivity.code;\r\n      dataReturn.economicActivity.name = resp.economicActivity.name;\r\n      dataReturn.subeconomicActivity.code = resp.subeconomicActivity.code;\r\n      dataReturn.subeconomicActivity.name = resp.subeconomicActivity.name;\r\n      dataReturn.bank.code = resp.bank.code;\r\n      dataReturn.bank.name = resp.bank.name;\r\n      setDataReturn(dataReturn);\r\n      setCambio(null);\r\n      setCambio(5);\r\n    }).catch((error) => {\r\n\r\n    });\r\n  }\r\n  // guardarDatosGenerales\r\n  function saveDataGeneral() {\r\n    const apiBack = new BackendServices();\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Actualizamos los datos del cliente                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    let dataGenerales =\r\n    {\r\n      customerId: locationData.customerId,\r\n      transactId: Number(locationData.transactionId),\r\n      personType: dataReturn.codigoTipoPersona,\r\n      identificationType: dataReturn.codigoTipoIdentificacion,\r\n      customerDocumentId: dataReturn.numeroIdentificacion,\r\n      customerNumberT24: dataReturn.numeroCliente,\r\n      firstName: dataReturn.primerNombre,\r\n      secondName: dataReturn.segundoNombre,\r\n      firstLastName: dataReturn.primerApellido,\r\n      secondLastName: dataReturn.segundoApellido,\r\n      \"economicGroup\": {\r\n        \"code\": dataReturn.economicGroup.code,\r\n        \"name\": dataReturn.economicGroup.name\r\n      },\r\n      \"economicActivity\": {\r\n        \"code\": dataReturn.economicActivity.code,\r\n        \"name\": dataReturn.economicActivity.name\r\n      },\r\n      \"subeconomicActivity\": {\r\n        \"code\": dataReturn.subeconomicActivity.code,\r\n        \"name\": dataReturn.subeconomicActivity.name\r\n      },\r\n      \"bank\": {\r\n        \"code\": dataReturn.bank.code,\r\n        \"name\": dataReturn.bank.name\r\n      },\r\n      date: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n    }\r\n    // guardarDatosGeneralesIGR\r\n    apiBack.saveGeneralDataIGR(dataGenerales).then(resp => {\r\n      setFormValid(true);\r\n    })\r\n  }\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setDataReturn2(dataReturn)\r\n    setDataReturn(dataReturn)\r\n    saveDataGeneral();\r\n    setFormValid(true);\r\n  }\r\n  function loadInitialData() {\r\n    const apiServiceBackend = new ApiServiceBackend();\r\n    // consultarCatalogoTipoIdentificacion\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n    // consultarCatalogoTipoPersonaDescripcion\r\n    apiServiceBackend.consultarCatalogoTipoPersonaDescripcion(\"\").then(resp2 => {\r\n      // consultarDeudores\r\n      apiServiceBackend.consultarDeudores(locationData.transactionId).then(resp => {\r\n        if (resp.length > 0) {\r\n          setdataDeudores(resp.map((data) => (\r\n            <tr key={data.personId}>\r\n              <td>{resp2.find(x => x.code === Number(data.typePerson)).label}</td>\r\n              <td>{Number(data.typePerson) === 2 ? data.name : data.name + \" \" + data.name2 + \" \" + data.lastName + \" \" + data.lastName2}</td>\r\n              <td>{data.idType}</td>\r\n              <td>{data.clientDocId}</td>\r\n            </tr>)))\r\n        } else {\r\n          setdataDeudores(\r\n            <tr key={1}>\r\n              <td colSpan=\"4\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n            </tr>);\r\n        }\r\n\r\n      }).catch((error) => {\r\n\r\n      });\r\n    });\r\n  }\r\n  function changeAll(e, tipo) {\r\n    if (tipo == \"tipoPersona\") {\r\n      dataReturn.codigoTipoPersona = e.value\r\n    }\r\n    if (tipo == \"Tipo\") {\r\n      dataReturn.codigoTipoIdentificacion = e.value\r\n    }\r\n    if (tipo == \"codigoGrupo\") {\r\n      dataReturn.economicGroup.code = e.value;\r\n      dataReturn.economicGroup.name = e.label;\r\n      setCodigoGrupo(e.value)\r\n      setCNombreGrupo(e.label)\r\n    }\r\n    if (tipo == \"codigoBanca\") {\r\n      dataReturn.bank.code = e.value;\r\n      dataReturn.bank.name = e.label;\r\n      setDataBanca(e);\r\n    }\r\n    if (tipo == \"numeroCliente\") {\r\n      dataReturn.numeroCliente = e.target.value;\r\n    }\r\n    if (tipo == \"primerNombre\") {\r\n      dataReturn.primerNombre = e.target.value;\r\n    }\r\n    if (tipo == \"segundoNombre\") {\r\n      dataReturn.segundoNombre = e.target.value;\r\n    }\r\n    if (tipo == \"primerApellido\") {\r\n      dataReturn.primerApellido = e.target.value;\r\n    }\r\n    if (tipo == \"segundoApellido\") {\r\n      dataReturn.segundoApellido = e.target.value;\r\n    }\r\n    if (tipo == \"numeroIdentificacion\") {\r\n      dataReturn.numeroIdentificacion = e.target.value;\r\n    }\r\n    if (tipo == \"actividadEconomica\") {\r\n      dataReturn.economicActivity.code = e.value;\r\n      dataReturn.economicActivity.name = e.label;\r\n\r\n      dataReturn.subeconomicActivity = null;\r\n      loadSubActivityEconomic(e.value)\r\n    }\r\n    if (tipo == \"subactividadEconomica\") {\r\n      dataReturn.subeconomicActivity.code = e.value;\r\n      dataReturn.subeconomicActivity.name = e.label;\r\n    }\r\n    setDataReturn(dataReturn)\r\n\r\n  }\r\n\r\n  /////////////// CARGA LOS DATOS DEL CLIENTE SELECCIONADO DE T24 //////\r\n  function loadClientSelectedData(selectedClient) {\r\n    dataReturn.numeroCliente = selectedClient.id;\r\n    dataReturn.primerNombre = selectedClient.firstname;\r\n    dataReturn.segundoNombre = selectedClient.secondname;\r\n    dataReturn.primerApellido = selectedClient.lastname;\r\n    dataReturn.segundoApellido = selectedClient.secondlastname;\r\n    dataReturn.codigoTipoIdentificacion = selectedClient.idtype;\r\n    dataReturn.numeroIdentificacion = selectedClient.idnumber;\r\n    dataReturn.codigoTipoPersona = selectedClient.partyType;\r\n    setDataReturn(dataReturn);\r\n    var defaultVal = identificationTypeList.find(x => x.value === dataReturn.codigoTipoIdentificacion);\r\n    if (defaultVal !== undefined) {\r\n      setIdentificationTypeSelected(defaultVal);\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <h5>{t(\"General Data\")}</h5>\r\n      <p className=\"card-title-desc\">\r\n      </p>\r\n      <AvForm id=\"frmDatosGenerales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Label>{t(\"Debtors\")}</Label>\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"PersonType\")}</th>\r\n                  <th>{t(\"FullName\")}</th>\r\n                  <th>{t(\"IdentificationType\")}</th>\r\n                  <th>{t(\"IdentificationNumber\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataDeudores}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Economic Group\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setGruposEconomicosSelected(gruposEconomicos.find(x => x.value === e.value))\r\n                  changeAll(e, \"codigoGrupo\");\r\n                }}\r\n                options={gruposEconomicos}\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"SelectGroup\")}\r\n                value={gruposEconomicosSelected}\r\n              />\r\n              {campoRequeridoGrupo ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Banking\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setBancaSelected(banca.find(x => x.value === e.value))\r\n                  changeAll(e, \"codigoBanca\");\r\n                }}\r\n                options={banca}\r\n                value={bancaSelected}//defaultValue={props.datosGenerales.bank.code}\r\n                classNamePrefix=\"select2-selection\"\r\n                placeholder={t(\"SelectBanking\")}\r\n              />\r\n              {campoRequeridoBanca ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>{t(\"Economic Activity\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setActividadEmpresaSelected(actividadEmpresa.find(x => x.value === e.value))\r\n                  changeAll(e, \"actividadEconomica\")\r\n                }}\r\n                placeholder={t(\"Selectcompanyactivity\")}\r\n                options={actividadEmpresa}\r\n                classNamePrefix=\"select2-selection\"\r\n                value={actividadEmpresaSelected}\r\n              />\r\n              {campoRequeridoActividad ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-4\">\r\n              <Label>Sub{t(\"Economic Activity\")}</Label>\r\n              <Select\r\n                onChange={(e) => {\r\n                  setSubActividadEmpresaSelected(subactividadEmpresa.find(x => x.value === e.value))\r\n                  changeAll(e, \"subactividadEconomica\")\r\n                }}\r\n                placeholder={t(\"Selectcompanysubactivity\")}\r\n                options={subactividadEmpresa}\r\n                classNamePrefix=\"select2-selection\"\r\n                value={subactividadEmpresaSelected}\r\n              />\r\n              {campoRequeridoSubActividad ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                : null}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n    </React.Fragment>\r\n  )\r\n})\r\nDatosGenerales.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  onOpenClientSelection: PropTypes.func,\r\n}\r\nexport default DatosGenerales;\r\n"]},"metadata":{},"sourceType":"module"}