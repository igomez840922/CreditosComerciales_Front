{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\UI\\\\ModalCloseOptions.js\";\nimport React, { useState } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport * as OPTs from \"../../helpers/options_helper\";\nimport { Row, Col, Button, Modal } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalCloseOptions = props => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"modal-title mt-0\",\n        children: props.t(\"Exit\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.toggle,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": \"true\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-body\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-size-16\",\n        children: props.t(\"PleaseSelectOption\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-footer\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"negative\",\n        type: \"button\",\n        style: {\n          margin: '5px'\n        },\n        onClick: () => {\n          props.toggle();\n          props.onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\n        },\n        \"data-dismiss\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi mdi-cancel mid-12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), \" \", props.t(\"FinishProcess\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        type: \"button\",\n        style: {\n          margin: '5px'\n        },\n        onClick: () => {\n          props.toggle();\n          props.onSaveProcess(OPTs.OPT_SALVAPARCIAL);\n        },\n        \"data-dismiss\": \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"mdi mdi-content-save mid-12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), \" \", props.t(\"Save\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ModalCloseOptions;\nModalCloseOptions.propTypes = {\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  onSaveProcess: PropTypes.func\n};\nexport default withTranslation()(ModalCloseOptions);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalCloseOptions\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/UI/ModalCloseOptions.js"],"names":["React","useState","withTranslation","PropTypes","OPTs","Row","Col","Button","Modal","ModalCloseOptions","props","isOpen","toggle","t","margin","onSaveProcess","OPT_FINALIZARPROCESO","OPT_SALVAPARCIAL","propTypes","bool","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,IAAZ,MAAsB,8BAAtB;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,KAJF,QAKO,YALP;;;AAQA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAEnC,sBACE,QAAC,KAAD;AACE,IAAA,MAAM,EAAGA,KAAK,CAACC,MADjB;AAEE,IAAA,MAAM,EAAGD,KAAK,CAACE,MAFjB;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAAA,4BAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA,kBAAkCF,KAAK,CAACG,CAAN,CAAQ,MAAR;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAGH,KAAK,CAACE,MAFlB;AAGE,QAAA,SAAS,EAAC,OAHZ;AAIE,wBAAa,OAJf;AAKE,sBAAW,OALb;AAAA,+BAME;AAAM,yBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAeE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BAEA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BF,KAAK,CAACG,CAAN,CAAQ,oBAAR;AAA9B;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAfF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAA9C;AAAiE,QAAA,OAAO,EAAG,MAAM;AAAEJ,UAAAA,KAAK,CAACE,MAAN;AAAeF,UAAAA,KAAK,CAACK,aAAN,CAAoBX,IAAI,CAACY,oBAAzB;AAAgD,SAAlJ;AAAqJ,wBAAa,OAAlK;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,OACmDN,KAAK,CAACG,CAAN,CAAQ,eAAR,CADnD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAA7C;AAAiE,QAAA,OAAO,EAAG,MAAM;AAACJ,UAAAA,KAAK,CAACE,MAAN;AAAgBF,UAAAA,KAAK,CAACK,aAAN,CAAoBX,IAAI,CAACa,gBAAzB;AAA4C,SAA9I;AAAiJ,wBAAa,OAA9J;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,OACqDP,KAAK,CAACG,CAAN,CAAQ,MAAR,CADrD;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjCD;;KAAMJ,iB;AAmCNA,iBAAiB,CAACS,SAAlB,GAA8B;AAC5BP,EAAAA,MAAM,EAAER,SAAS,CAACgB,IADU;AAE5BP,EAAAA,MAAM,EAAET,SAAS,CAACiB,IAFU;AAG5BL,EAAAA,aAAa,EAAEZ,SAAS,CAACiB;AAHG,CAA9B;AAMA,eAAgBlB,eAAe,GAAGO,iBAAH,CAA/B","sourcesContent":["import React, { useState } from \"react\"\r\nimport { withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport * as OPTs from \"../../helpers/options_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n} from \"reactstrap\"\r\n\r\n\r\nconst ModalCloseOptions = (props) => {\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={ props.isOpen }\r\n      toggle={ props.toggle }\r\n      centered={true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{props.t(\"Exit\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ props.toggle }\r\n          className=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n\r\n      <h5 className=\"font-size-16\">{props.t(\"PleaseSelectOption\")}</h5>\r\n\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        <Button color=\"negative\" type=\"button\" style={{ margin: '5px' }} onClick={ () => { props.toggle();props.onSaveProcess(OPTs.OPT_FINALIZARPROCESO) } } data-dismiss=\"modal\">\r\n          <i className=\"mdi mdi mdi-cancel mid-12px\"></i> {props.t(\"FinishProcess\")}\r\n        </Button>\r\n        <Button color=\"success\" type=\"button\" style={{ margin: '5px' }}  onClick={ () => {props.toggle(); props.onSaveProcess(OPTs.OPT_SALVAPARCIAL) } } data-dismiss=\"modal\">\r\n          <i className=\"mdi mdi-content-save mid-12px\"></i> {props.t(\"Save\")}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalCloseOptions.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func,\r\n  onSaveProcess: PropTypes.func,\r\n};\r\n\r\nexport default (withTranslation()(ModalCloseOptions));\r\n"]},"metadata":{},"sourceType":"module"}