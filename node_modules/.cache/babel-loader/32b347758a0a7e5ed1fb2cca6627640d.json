{"ast":null,"code":"import _slicedToArray from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useTranslation,withTranslation}from\"react-i18next\";import Select from\"react-select\";import{Row,Col,Button,Label,Input,Modal,Card,CardBody,CardFooter,InputGroup}from\"reactstrap\";import checkNumber from\"../../../../helpers/checkNumber\";import{AvForm,AvField,AvGroup}from\"availity-reactstrap-validation\";import ApiServiceBackend from\"../../../../services/ApiServiceBackend\";import{CoreServices,BackendServices}from\"../../../../services\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ModalBeneficiosFideicomiso=function ModalBeneficiosFideicomiso(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),paises=_useState2[0],setPaises=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),codigoPais=_useState4[0],setCodigoPais=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),sumaParticipacion=_useState6[0],setsumaParticipacion=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),sumaParticipacionMessage=_useState8[0],setsumaParticipacionMessage=_useState8[1];var _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),identificationType=_useState10[0],setidentificationType=_useState10[1];//1-Juridico, 2-Persona\nvar _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),campoRequeridoTipo=_useState12[0],setcampoRequeridoTipo=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),campoRequeridoNacionalidad=_useState14[0],setcampoRequeridoNacionalidad=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),tipo=_useState16[0],setTipo=_useState16[1];var _useState17=useState(undefined),_useState18=_slicedToArray(_useState17,2),nacionalidadSelect=_useState18[0],setnacionalidadSelect=_useState18[1];var _useState19=useState(undefined),_useState20=_slicedToArray(_useState19,2),tipoPersona=_useState20[0],settipoPersona=_useState20[1];var _useState21=useState(props.jsonAccionistas),_useState22=_slicedToArray(_useState21,2),dataReturn=_useState22[0],setDataReturn=_useState22[1];var _useState23=useState(1),_useState24=_slicedToArray(_useState23,2),cambio=_useState24[0],setcambio=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),identificationTypeList=_useState26[0],setIdentificationTypeList=_useState26[1];var _useState27=useState(undefined),_useState28=_slicedToArray(_useState27,2),identificationTypeSelected=_useState28[0],setIdentificationTypeSelected=_useState28[1];var _useState29=useState(undefined),_useState30=_slicedToArray(_useState29,2),personTypeSelect=_useState30[0],setpersonTypeSelect=_useState30[1];var _useState31=useState(null),_useState32=_slicedToArray(_useState31,2),tipoIdentificacion=_useState32[0],settipoIdentificacion=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),campoRequeridoIdentificacion=_useState34[0],setcampoRequeridoIdentificacion=_useState34[1];// Submitimos formulario para busqueda de clientes\nvar _useState35=useState([]),_useState36=_slicedToArray(_useState35,2),Relacion=_useState36[0],setRelacion=_useState36[1];var _useState37=useState(undefined),_useState38=_slicedToArray(_useState37,2),relacionSelect=_useState38[0],setrelacionSelect=_useState38[1];var personTypeData=[{label:props.t(\"Legal\"),value:\"1\"},{label:props.t(\"Natural\"),value:\"2\"}];var _useTranslation=useTranslation(),t=_useTranslation.t,i18n=_useTranslation.i18n;React.useEffect(function(){// Read Api Service data\nconsole.log(props);cargarPaises();if(props.tipo!=\"guardar\"){setidentificationType(props.dataSet.personType);}},[props.isOpen]);React.useEffect(function(){// Read Api Service data\nvar defaultVal=null;setrelacionSelect(undefined);// setnacionalidadSelect(undefined)\n// setIdentificationTypeSelected(undefined)\n// setpersonTypeSelect(undefined)\ntry{if(Relacion.length>0&&props.dataSet.relationship!==null){defaultVal=Relacion.find(function(x){return x.label===props.dataSet.relationship;});if(defaultVal!==undefined){setrelacionSelect(defaultVal);// setcodigoRelacion(defaultVal.label);\n}}else{(Relacion===null||Relacion===void 0?void 0:Relacion.length)>0?setrelacionSelect(Relacion[0]):setrelacionSelect(undefined);// Relacion?.length > 0 ? setcodigoRelacion(Relacion[0].label) : setcodigoRelacion(null);\n// Cargos?.length > 0 ? setCargosSelect(Cargos[0]) : setCargosSelect(undefined);\n}if(paises.length>0&&props.dataSet.nationality!==null){defaultVal=paises.find(function(x){return x.value===props.dataSet.nationality;});if(defaultVal!==undefined){setCodigoPais(defaultVal);setnacionalidadSelect(defaultVal);}}if(personTypeData.length>0&&props.dataSet.personType!==null){defaultVal=personTypeData.find(function(x){return x.value===props.dataSet.personType;});if(defaultVal!==undefined){setTipo(defaultVal.label);setpersonTypeSelect(defaultVal);}}if(identificationTypeList.length>0&&props.dataSet.documentType!==null){defaultVal=identificationTypeList.find(function(x){return x.value===props.dataSet.documentType;});if(defaultVal!==undefined){setidentificationType(defaultVal.label);settipoIdentificacion(defaultVal.label);setIdentificationTypeSelected(defaultVal);}}}catch(err){}},[props.isOpen,paises,Relacion]);function changePais(event){setCodigoPais(event);}function changeTipo(event){setTipo(event);setidentificationType(event.value);}function cargarPaises(){var api=new CoreServices();api.getPaisesCatalogo().then(function(response){if(response===null){return;}var json=[];for(var i=0;i<response.Records.length;i++){json.push({label:response.Records[i][\"Description\"],value:response.Records[i][\"Code\"]});}var optionGroup1=[{label:t(\"Selectacountry\"),options:json}];setPaises(json);setcambio(null);setcambio(2);});var apiServiceBackend=new BackendServices();apiServiceBackend.consultarCatalogoTipoIdentificacion().then(function(data){if(data!==null&&data!==undefined){var json=[];for(var i=0;i<data.length;i++){json.push({label:t(data[i][\"description\"]),value:data[i][\"id\"]});}/*const optionGroup1 = [\r\n            {\r\n              label: t(\"ID Type\"),\r\n              options: json,\r\n            },\r\n          ];*/setIdentificationTypeList(json);}}).catch(function(error){console.error('api error: ',error);});// getRelacionCatalogo\napi.getRelacionCatalogo().then(function(response){if(response===null){return;}var json=[];json.push({label:\"N/A\",value:\"N/A\"});for(var i=0;i<response.Records.length;i++){json.push({label:response.Records[i][\"Description\"],value:response.Records[i][\"Code\"]});}// setrelacionSelect(json[0]);\nsetRelacion(json);});}// Submitimos formulario para busqueda de clientes\nfunction handleSubmit(event,errors,values){var _identificationTypeSe,_personTypeSelect$val,_relacionSelect$label;if(tipo==null){setcampoRequeridoTipo(true);return;}else{setcampoRequeridoTipo(false);}if(codigoPais==null){setcampoRequeridoNacionalidad(true);return;}else{setcampoRequeridoNacionalidad(false);}if(tipoIdentificacion==null){setcampoRequeridoIdentificacion(true);return;}else{setcampoRequeridoIdentificacion(false);}if(sumaParticipacionMessage){return;}event.preventDefault();if(errors.length>0){return;}values.codigoPais=codigoPais;values.documentType=(_identificationTypeSe=identificationTypeSelected===null||identificationTypeSelected===void 0?void 0:identificationTypeSelected.value)!==null&&_identificationTypeSe!==void 0?_identificationTypeSe:\"\";values.personType=(_personTypeSelect$val=personTypeSelect===null||personTypeSelect===void 0?void 0:personTypeSelect.value)!==null&&_personTypeSelect$val!==void 0?_personTypeSelect$val:\"\";values.relationship=(_relacionSelect$label=relacionSelect===null||relacionSelect===void 0?void 0:relacionSelect.label)!==null&&_relacionSelect$label!==void 0?_relacionSelect$label:\"\";props.gestionDatos(values,props.tipo);}function handleChangeInputfrmSearch(e){//selectedData[e.target.name] = e.target.value;\n//props.updateDataModel(selectedData);    \nswitch(e.target.name){case\"identificationType\":{setidentificationType(e.target.value);break;}}}function getSearchForm(tipo){console.log(tipo);if(tipo!=undefined){if((tipo===null||tipo===void 0?void 0:tipo.label)==\"Jur√≠dica\"){return/*#__PURE__*/_jsx(Col,{md:\"8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstName\",children:props.t(\"SocialReason\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"firstName\",type:\"text\",onChange:handleChangeInputfrmSearch,value:props.dataSet.firstName,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}}})]})});}else{return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstName\",children:props.t(\"First Name\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"firstName\",value:props.dataSet.firstName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}}})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"secondName\",children:props.t(\"SecondName\")}),/*#__PURE__*/_jsx(AvField,{name:\"secondName\",value:props.dataSet.secondName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}},className:\"form-control\"})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstLastName\",children:props.t(\"FirstLastName\")}),/*#__PURE__*/_jsx(AvField,{name:\"firstLastName\",value:props.dataSet.firstLastName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),className:\"form-control\",validate:{required:{value:true}}})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"secondLastName\",children:props.t(\"SecondLastName\")}),/*#__PURE__*/_jsx(AvField,{name:\"secondLastName\",value:props.dataSet.secondLastName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}},className:\"form-control\"})]})})]});}}else{return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstName\",children:props.t(\"First Name\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"firstName\",value:props.dataSet.firstName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}}})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"secondName\",children:props.t(\"SecondName\")}),/*#__PURE__*/_jsx(AvField,{name:\"secondName\",value:props.dataSet.secondName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}},className:\"form-control\"})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"firstLastName\",children:props.t(\"FirstLastName\")}),/*#__PURE__*/_jsx(AvField,{name:\"firstLastName\",value:props.dataSet.firstLastName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),className:\"form-control\",validate:{required:{value:true}}})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"secondLastName\",children:props.t(\"SecondLastName\")}),/*#__PURE__*/_jsx(AvField,{name:\"secondLastName\",value:props.dataSet.secondLastName,type:\"text\",onChange:handleChangeInputfrmSearch,errorMessage:props.t(\"Required Field\"),validate:{required:{value:true}},className:\"form-control\"})]})})]});}//segun tipo de identiicaci√≥n\n// if (tipo != undefined && tipo.value) {\n//   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\n//     if (identificationTypeSelected.value == \"RUC\" || tipo.value == \"1\") {\n//       return (\n//         <Col md=\"8\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n//             <AvField\n//               className=\"form-control\"\n//               name=\"firstName2\"\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               value={props.dataSet.firstName}\n//               errorMessage={props.t(\"Required Field\")}\n//               validate={{ required: { value: true } }} />\n//           </div>\n//         </Col>\n//       );\n//     } else {\n//       return (\n//         <React.Fragment>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n//               <AvField\n//                 className=\"form-control\"\n//                 name=\"firstName\"\n//                 value={props.dataSet.firstName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }} />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n//               <AvField\n//                 name=\"secondName\"\n//                 value={props.dataSet.secondName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }}\n//                 className=\"form-control\" />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n//               <AvField\n//                 name=\"firstLastName\"\n//                 value={props.dataSet.firstLastName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 className=\"form-control\"\n//                 validate={{ required: { value: true } }} />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n//               <AvField\n//                 name=\"secondLastName\"\n//                 value={props.dataSet.secondLastName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }}\n//                 className=\"form-control\" />\n//             </div>\n//           </Col>\n//         </React.Fragment>\n//       )\n//     }\n//   } else {\n//     return (\n//       <Col md=\"8\">\n//         <div className=\"mb-3\">\n//           <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n//           <AvField\n//             className=\"form-control\"\n//             name=\"firstName2\"\n//             type=\"text\" onChange={handleChangeInputfrmSearch}\n//             value={props.dataSet.firstName}\n//             errorMessage={props.t(\"Required Field\")}\n//             validate={{ required: { value: true } }} />\n//         </div>\n//       </Col>\n//     );\n//   }\n// } else {\n//   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\n//     if (identificationTypeSelected.value == \"RUC\") {\n//       return (\n//         <Col md=\"8\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\n//             <AvField\n//               className=\"form-control\"\n//               name=\"firstName2\"\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               value={props.dataSet.firstName}\n//               errorMessage={props.t(\"Required Field\")}\n//               validate={{ required: { value: true } }} />\n//           </div>\n//         </Col>\n//       );\n//     } else {\n//       return (\n//         <React.Fragment>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n//               <AvField\n//                 className=\"form-control\"\n//                 name=\"firstName\"\n//                 value={props.dataSet.firstName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }} />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n//               <AvField\n//                 name=\"secondName\"\n//                 value={props.dataSet.secondName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }}\n//                 className=\"form-control\" />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n//               <AvField\n//                 name=\"firstLastName\"\n//                 value={props.dataSet.firstLastName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 className=\"form-control\"\n//                 validate={{ required: { value: true } }} />\n//             </div>\n//           </Col>\n//           <Col md=\"4\">\n//             <div className=\"mb-3\">\n//               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n//               <AvField\n//                 name=\"secondLastName\"\n//                 value={props.dataSet.secondLastName}\n//                 type=\"text\" onChange={handleChangeInputfrmSearch}\n//                 errorMessage={props.t(\"Required Field\")}\n//                 validate={{ required: { value: true } }}\n//                 className=\"form-control\" />\n//             </div>\n//           </Col>\n//         </React.Fragment>\n//       )\n//     }\n//   } else {\n//     return (\n//       <React.Fragment>\n//         <Col md=\"4\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\n//             <AvField\n//               className=\"form-control\"\n//               name=\"firstName\"\n//               value={props.dataSet.firstName}\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               errorMessage={props.t(\"Required Field\")}\n//               validate={{ required: { value: true } }} />\n//           </div>\n//         </Col>\n//         <Col md=\"4\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\n//             <AvField\n//               name=\"secondName\"\n//               value={props.dataSet.secondName}\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               errorMessage={props.t(\"Required Field\")}\n//               validate={{ required: { value: true } }}\n//               className=\"form-control\" />\n//           </div>\n//         </Col>\n//         <Col md=\"4\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\n//             <AvField\n//               name=\"firstLastName\"\n//               value={props.dataSet.firstLastName}\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               errorMessage={props.t(\"Required Field\")}\n//               className=\"form-control\"\n//               validate={{ required: { value: true } }} />\n//           </div>\n//         </Col>\n//         <Col md=\"4\">\n//           <div className=\"mb-3\">\n//             <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\n//             <AvField\n//               name=\"secondLastName\"\n//               value={props.dataSet.secondLastName}\n//               type=\"text\" onChange={handleChangeInputfrmSearch}\n//               errorMessage={props.t(\"Required Field\")}\n//               validate={{ required: { value: true } }}\n//               className=\"form-control\" />\n//           </div>\n//         </Col>\n//         <Col md=\"4\">\n//           <AvGroup className=\"mb-3\">\n//             <Label htmlFor=\"startDate\">{props.t(\"DBO\")}</Label>\n//             <AvField\n//               className=\"form-control\"\n//               name=\"startDate\"\n//               type=\"date\"\n//               value={props.dataSet.birthDate}\n//               id=\"startDate\" />\n//           </AvGroup>\n//         </Col>\n//       </React.Fragment>\n//     )\n//   }\n// }\n}return/*#__PURE__*/_jsxs(Modal,{size:\"xl\",isOpen:props.isOpen,toggle:props.toggle,centered:props.true,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"modal-title mt-0\",children:props.t(\"SecondaryBeneficiary\")}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.toggle,\"data-dismiss\":\"modal\",className:\"close\",\"aria-label\":\"Close\",children:/*#__PURE__*/_jsx(\"span\",{\"aria-hidden\":\"true\",children:\"\\xD7\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",style:{backgroundColor:\"#f3f5f7\"},children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{xl:\"12\",children:/*#__PURE__*/_jsx(AvForm,{id:\"frmSearch\",className:\"needs-validation\",onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xl:\"6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{children:props.t(\"ID Type\")}),/*#__PURE__*/_jsx(Select,{noOptionsMessage:function noOptionsMessage(){return\"\";},onChange:function onChange(e){setIdentificationTypeSelected(identificationTypeList.find(function(x){return x.value===e.value;}));settipoIdentificacion(e.value);},options:identificationTypeList,placeholder:props.t(\"SelectType\"),value:identificationTypeSelected}),campoRequeridoIdentificacion?/*#__PURE__*/_jsx(\"p\",{className:\"message-error-parrafo\",children:props.t(\"Required Field\")}):null]})}),/*#__PURE__*/_jsx(Col,{xl:\"6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"idnumber\",children:props.t(\"ID Number\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"documentNumber\",type:\"text\",id:\"documentNumber\",validate:{required:{value:true,errorMessage:t(\"Required Field\")}// number: { value: true, errorMessage: t(\"InvalidField\") },\n},value:props.dataSet.documentNumber})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"identificationType\",children:props.t(\"PersonType\")}),/*#__PURE__*/_jsx(Select,{noOptionsMessage:function noOptionsMessage(){return\"\";},onChange:function onChange(e){setpersonTypeSelect(personTypeData.find(function(x){return x.value===e.value;}));changeTipo(e);},options:personTypeData,id:\"sustainableCustomer\",classNamePrefix:\"select2-selection\",placeholder:props.t(\"toselect\"),value:personTypeSelect// value={props.dataSet.shareholderName}\n}),campoRequeridoTipo?/*#__PURE__*/_jsx(\"p\",{className:\"message-error-parrafo\",children:props.t(\"Required Field\")}):null]})}),getSearchForm(personTypeSelect)]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:\"6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"nationality\",children:props.t(\"Nationality\")}),/*#__PURE__*/_jsx(Select,{noOptionsMessage:function noOptionsMessage(){return\"\";},onChange:function onChange(e){setnacionalidadSelect(paises.find(function(x){return x.value===e.value;}));changePais(e);},options:paises,id:\"paises\",name:\"paises\",classNamePrefix:\"select2-selection\",placeholder:props.t(\"toselect\"),value:nacionalidadSelect// value={props.dataSet.nationality}\n// defaultValue={props.datosEmpresa.countryIdentification}\n}),campoRequeridoNacionalidad?/*#__PURE__*/_jsx(\"p\",{className:\"message-error-parrafo\",children:props.t(\"Required Field\")}):null]})}),/*#__PURE__*/_jsx(Col,{md:\"6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"address\",children:props.t(\"Address\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"address\",type:\"text\",id:\"address\",value:props.dataSet.address})]})})]}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"telephone\",children:props.t(\"Phone\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"telephone\",type:\"text\",onKeyPress:function onKeyPress(e){return checkNumber(e);},id:\"telephone\",value:props.dataSet.telephone})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"relationship\",children:props.t(\"Relationship\")}),/*#__PURE__*/_jsx(Select,{noOptionsMessage:function noOptionsMessage(){return\"\";},onChange:function onChange(e){setrelacionSelect(Relacion.find(function(x){return x.label===e.label;}));},options:Relacion,id:\"relationship\",classNamePrefix:\"select2-selection\",placeholder:t(\"Relation\"),value:relacionSelect})]})}),/*#__PURE__*/_jsx(Col,{md:\"4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Label,{htmlFor:\"percentage\",children:props.t(\"Percent\")}),/*#__PURE__*/_jsx(AvField,{className:\"form-control\",name:\"percentage\",type:\"number\",max:100,validate:{number:{value:true,errorMessage:t(\"InvalidField\")}},id:\"percentage\",value:props.dataSet.percentage})]})})]})]}),/*#__PURE__*/_jsxs(CardFooter,{style:{textAlign:\"right\"},children:[/*#__PURE__*/_jsxs(Button,{id:\"btnNew\",color:\"danger\",type:\"button\",style:{margin:'5px'},onClick:props.toggle,\"data-dismiss\":\"modal\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi mdi-cancel mid-12px\"}),\" \",props.t(\"Cancel\")]}),props.botones?/*#__PURE__*/_jsxs(Button,{id:\"btnSearch\",color:\"success\",type:\"submit\",style:{margin:'5px'},children:[/*#__PURE__*/_jsx(\"i\",{className:\"mdi mdi-content-save mdi-12px\"}),\" \",\" \",props.tipo==\"guardar\"?t(\"Save\"):t(\"Save\")]}):null]})]})})})})})]});};export default withTranslation()(ModalBeneficiosFideicomiso);","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/AsignarNumeroFideicomiso/ModalBeneficiosFideicomiso.js"],"names":["React","useState","useTranslation","withTranslation","Select","Row","Col","Button","Label","Input","Modal","Card","CardBody","CardFooter","InputGroup","checkNumber","AvForm","AvField","AvGroup","ApiServiceBackend","CoreServices","BackendServices","ModalBeneficiosFideicomiso","props","paises","setPaises","codigoPais","setCodigoPais","sumaParticipacion","setsumaParticipacion","sumaParticipacionMessage","setsumaParticipacionMessage","identificationType","setidentificationType","campoRequeridoTipo","setcampoRequeridoTipo","campoRequeridoNacionalidad","setcampoRequeridoNacionalidad","tipo","setTipo","undefined","nacionalidadSelect","setnacionalidadSelect","tipoPersona","settipoPersona","jsonAccionistas","dataReturn","setDataReturn","cambio","setcambio","identificationTypeList","setIdentificationTypeList","identificationTypeSelected","setIdentificationTypeSelected","personTypeSelect","setpersonTypeSelect","tipoIdentificacion","settipoIdentificacion","campoRequeridoIdentificacion","setcampoRequeridoIdentificacion","Relacion","setRelacion","relacionSelect","setrelacionSelect","personTypeData","label","t","value","i18n","useEffect","console","log","cargarPaises","dataSet","personType","isOpen","defaultVal","length","relationship","find","x","nationality","documentType","err","changePais","event","changeTipo","api","getPaisesCatalogo","then","response","json","i","Records","push","optionGroup1","options","apiServiceBackend","consultarCatalogoTipoIdentificacion","data","catch","error","getRelacionCatalogo","handleSubmit","errors","values","preventDefault","gestionDatos","handleChangeInputfrmSearch","e","target","name","getSearchForm","firstName","required","secondName","firstLastName","secondLastName","toggle","true","backgroundColor","errorMessage","documentNumber","address","telephone","number","percentage","textAlign","margin","botones"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types';\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  Modal,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  InputGroup,\r\n} from \"reactstrap\"\r\nimport checkNumber from \"../../../../helpers/checkNumber\";\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport ApiServiceBackend from \"../../../../services/ApiServiceBackend\";\r\nimport { CoreServices, BackendServices } from \"../../../../services\";\r\nconst ModalBeneficiosFideicomiso = (props) => {\r\n  const [paises, setPaises] = useState([]);\r\n  const [codigoPais, setCodigoPais] = useState(null);\r\n  const [sumaParticipacion, setsumaParticipacion] = useState(0);\r\n  const [sumaParticipacionMessage, setsumaParticipacionMessage] = useState(false);\r\n  const [identificationType, setidentificationType] = useState(\"1\");//1-Juridico, 2-Persona\r\n  const [campoRequeridoTipo, setcampoRequeridoTipo] = useState(false);\r\n  const [campoRequeridoNacionalidad, setcampoRequeridoNacionalidad] = useState(false);\r\n  const [tipo, setTipo] = useState(null);\r\n  const [nacionalidadSelect, setnacionalidadSelect] = useState(undefined);\r\n  const [tipoPersona, settipoPersona] = useState(undefined);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [cambio, setcambio] = useState(1);\r\n  const [identificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setIdentificationTypeSelected] = useState(undefined);\r\n  const [personTypeSelect, setpersonTypeSelect] = useState(undefined);\r\n  const [tipoIdentificacion, settipoIdentificacion] = useState(null);\r\n  const [campoRequeridoIdentificacion, setcampoRequeridoIdentificacion] = useState(false);\r\n  // Submitimos formulario para busqueda de clientes\r\n  const [Relacion, setRelacion] = useState([]);\r\n  const [relacionSelect, setrelacionSelect] = useState(undefined);\r\n\r\n  const personTypeData = [{ label: props.t(\"Legal\"), value: \"1\" }, { label: props.t(\"Natural\"), value: \"2\" }]\r\n  const { t, i18n } = useTranslation();\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    console.log(props);\r\n    cargarPaises()\r\n    if (props.tipo != \"guardar\") {\r\n      setidentificationType(props.dataSet.personType)\r\n    }\r\n  }, [props.isOpen]);\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    var defaultVal = null;\r\n    setrelacionSelect(undefined)\r\n    // setnacionalidadSelect(undefined)\r\n    // setIdentificationTypeSelected(undefined)\r\n    // setpersonTypeSelect(undefined)\r\n    try {\r\n      if (Relacion.length > 0 && props.dataSet.relationship !== null) {\r\n        defaultVal = Relacion.find(x => x.label === (props.dataSet.relationship));\r\n        if (defaultVal !== undefined) {\r\n          setrelacionSelect(defaultVal);\r\n          // setcodigoRelacion(defaultVal.label);\r\n        }\r\n      } else {\r\n        Relacion?.length > 0 ? setrelacionSelect(Relacion[0]) : setrelacionSelect(undefined);\r\n        // Relacion?.length > 0 ? setcodigoRelacion(Relacion[0].label) : setcodigoRelacion(null);\r\n        // Cargos?.length > 0 ? setCargosSelect(Cargos[0]) : setCargosSelect(undefined);\r\n      }\r\n      if (paises.length > 0 && props.dataSet.nationality !== null) {\r\n        defaultVal = paises.find(x => x.value === props.dataSet.nationality);\r\n        if (defaultVal !== undefined) {\r\n          setCodigoPais(defaultVal)\r\n          setnacionalidadSelect(defaultVal);\r\n        }\r\n      }\r\n      if (personTypeData.length > 0 && props.dataSet.personType !== null) {\r\n        defaultVal = personTypeData.find(x => x.value === props.dataSet.personType);\r\n        if (defaultVal !== undefined) {\r\n\r\n          setTipo(defaultVal.label)\r\n          setpersonTypeSelect(defaultVal);\r\n        }\r\n      }\r\n      if (identificationTypeList.length > 0 && props.dataSet.documentType !== null) {\r\n        defaultVal = identificationTypeList.find(x => x.value === props.dataSet.documentType);\r\n        if (defaultVal !== undefined) {\r\n          setidentificationType(defaultVal.label)\r\n          settipoIdentificacion(defaultVal.label)\r\n          setIdentificationTypeSelected(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n\r\n  }, [props.isOpen, paises, Relacion]);\r\n  function changePais(event) {\r\n    setCodigoPais(event);\r\n  }\r\n  function changeTipo(event) {\r\n    setTipo(event);\r\n    setidentificationType(event.value);\r\n  }\r\n  function cargarPaises() {\r\n    const api = new CoreServices();\r\n    api.getPaisesCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        const optionGroup1 = [\r\n          {\r\n            label: t(\"Selectacountry\"),\r\n            options: json,\r\n          },\r\n\r\n        ];\r\n        setPaises(json);\r\n        setcambio(null)\r\n        setcambio(2)\r\n      });\r\n    const apiServiceBackend = new BackendServices();\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          /*const optionGroup1 = [\r\n            {\r\n              label: t(\"ID Type\"),\r\n              options: json,\r\n            },\r\n          ];*/\r\n          setIdentificationTypeList(json)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n    // getRelacionCatalogo\r\n    api.getRelacionCatalogo()\r\n      .then(response => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        json.push({ label: \"N/A\", value: \"N/A\" })\r\n        for (let i = 0; i < response.Records.length; i++) {\r\n          json.push({ label: response.Records[i][\"Description\"], value: response.Records[i][\"Code\"] })\r\n        }\r\n        // setrelacionSelect(json[0]);\r\n        setRelacion(json);\r\n      });\r\n  }\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit(event, errors, values) {\r\n    if (tipo == null) {\r\n      setcampoRequeridoTipo(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoTipo(false);\r\n    }\r\n    if (codigoPais == null) {\r\n      setcampoRequeridoNacionalidad(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoNacionalidad(false);\r\n    }\r\n    if (tipoIdentificacion == null) {\r\n      setcampoRequeridoIdentificacion(true);\r\n      return;\r\n    } else {\r\n      setcampoRequeridoIdentificacion(false);\r\n    }\r\n    if (sumaParticipacionMessage) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    values.codigoPais = codigoPais;\r\n    values.documentType = identificationTypeSelected?.value ?? \"\";\r\n    values.personType = personTypeSelect?.value ?? \"\";\r\n    values.relationship = relacionSelect?.label ?? \"\";\r\n    props.gestionDatos(values, props.tipo);\r\n\r\n  }\r\n  function handleChangeInputfrmSearch(e) {\r\n    //selectedData[e.target.name] = e.target.value;\r\n    //props.updateDataModel(selectedData);    \r\n\r\n    switch (e.target.name) {\r\n      case \"identificationType\": {\r\n        setidentificationType(e.target.value);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function getSearchForm(tipo) {\r\n    console.log(tipo);\r\n    if (tipo != undefined) {\r\n      if (tipo?.label == \"Jur√≠dica\") {\r\n        return (\r\n          <Col md=\"8\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                value={props.dataSet.firstName}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n        );\r\n      } else {\r\n        return (\r\n          <React.Fragment>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"firstName\"\r\n                  value={props.dataSet.firstName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n                <AvField\r\n                  name=\"secondName\"\r\n                  value={props.dataSet.secondName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n                <AvField\r\n                  name=\"firstLastName\"\r\n                  value={props.dataSet.firstLastName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  className=\"form-control\"\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n                <AvField\r\n                  name=\"secondLastName\"\r\n                  value={props.dataSet.secondLastName}\r\n                  type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                  errorMessage={props.t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}\r\n                  className=\"form-control\" />\r\n              </div>\r\n            </Col>\r\n\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                value={props.dataSet.firstName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n              <AvField\r\n                name=\"secondName\"\r\n                value={props.dataSet.secondName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n                className=\"form-control\" />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                name=\"firstLastName\"\r\n                value={props.dataSet.firstLastName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                className=\"form-control\"\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                name=\"secondLastName\"\r\n                value={props.dataSet.secondLastName}\r\n                type=\"text\" onChange={handleChangeInputfrmSearch}\r\n                errorMessage={props.t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n                className=\"form-control\" />\r\n            </div>\r\n          </Col>\r\n\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    //segun tipo de identiicaci√≥n\r\n    // if (tipo != undefined && tipo.value) {\r\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\r\n    //     if (identificationTypeSelected.value == \"RUC\" || tipo.value == \"1\") {\r\n    //       return (\r\n    //         <Col md=\"8\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName2\"\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               value={props.dataSet.firstName}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //       );\r\n    //     } else {\r\n    //       return (\r\n    //         <React.Fragment>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //               <AvField\r\n    //                 className=\"form-control\"\r\n    //                 name=\"firstName\"\r\n    //                 value={props.dataSet.firstName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondName\"\r\n    //                 value={props.dataSet.secondName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"firstLastName\"\r\n    //                 value={props.dataSet.firstLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 className=\"form-control\"\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondLastName\"\r\n    //                 value={props.dataSet.secondLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n\r\n    //         </React.Fragment>\r\n    //       )\r\n    //     }\r\n    //   } else {\r\n    //     return (\r\n    //       <Col md=\"8\">\r\n    //         <div className=\"mb-3\">\r\n    //           <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //           <AvField\r\n    //             className=\"form-control\"\r\n    //             name=\"firstName2\"\r\n    //             type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //             value={props.dataSet.firstName}\r\n    //             errorMessage={props.t(\"Required Field\")}\r\n    //             validate={{ required: { value: true } }} />\r\n    //         </div>\r\n    //       </Col>\r\n    //     );\r\n    //   }\r\n    // } else {\r\n    //   if (identificationTypeSelected != undefined && identificationTypeSelected.value) {\r\n    //     if (identificationTypeSelected.value == \"RUC\") {\r\n    //       return (\r\n    //         <Col md=\"8\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"SocialReason\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName2\"\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               value={props.dataSet.firstName}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //       );\r\n    //     } else {\r\n    //       return (\r\n    //         <React.Fragment>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //               <AvField\r\n    //                 className=\"form-control\"\r\n    //                 name=\"firstName\"\r\n    //                 value={props.dataSet.firstName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondName\"\r\n    //                 value={props.dataSet.secondName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"firstLastName\"\r\n    //                 value={props.dataSet.firstLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 className=\"form-control\"\r\n    //                 validate={{ required: { value: true } }} />\r\n    //             </div>\r\n    //           </Col>\r\n    //           <Col md=\"4\">\r\n    //             <div className=\"mb-3\">\r\n    //               <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //               <AvField\r\n    //                 name=\"secondLastName\"\r\n    //                 value={props.dataSet.secondLastName}\r\n    //                 type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //                 errorMessage={props.t(\"Required Field\")}\r\n    //                 validate={{ required: { value: true } }}\r\n    //                 className=\"form-control\" />\r\n    //             </div>\r\n    //           </Col>\r\n\r\n    //         </React.Fragment>\r\n    //       )\r\n    //     }\r\n    //   } else {\r\n    //     return (\r\n    //       <React.Fragment>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstName\">{props.t(\"First Name\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"firstName\"\r\n    //               value={props.dataSet.firstName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"secondName\">{props.t(\"SecondName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"secondName\"\r\n    //               value={props.dataSet.secondName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }}\r\n    //               className=\"form-control\" />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"firstLastName\">{props.t(\"FirstLastName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"firstLastName\"\r\n    //               value={props.dataSet.firstLastName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               className=\"form-control\"\r\n    //               validate={{ required: { value: true } }} />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <div className=\"mb-3\">\r\n    //             <Label htmlFor=\"secondLastName\">{props.t(\"SecondLastName\")}</Label>\r\n    //             <AvField\r\n    //               name=\"secondLastName\"\r\n    //               value={props.dataSet.secondLastName}\r\n    //               type=\"text\" onChange={handleChangeInputfrmSearch}\r\n    //               errorMessage={props.t(\"Required Field\")}\r\n    //               validate={{ required: { value: true } }}\r\n    //               className=\"form-control\" />\r\n    //           </div>\r\n    //         </Col>\r\n    //         <Col md=\"4\">\r\n    //           <AvGroup className=\"mb-3\">\r\n    //             <Label htmlFor=\"startDate\">{props.t(\"DBO\")}</Label>\r\n    //             <AvField\r\n    //               className=\"form-control\"\r\n    //               name=\"startDate\"\r\n    //               type=\"date\"\r\n    //               value={props.dataSet.birthDate}\r\n    //               id=\"startDate\" />\r\n    //           </AvGroup>\r\n    //         </Col>\r\n    //       </React.Fragment>\r\n    //     )\r\n    //   }\r\n    // }\r\n  }\r\n  return (\r\n    <Modal\r\n      size=\"xl\"\r\n      isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={props.true}>\r\n      <div className=\"modal-header\">\r\n        <h5 className=\"modal-title mt-0\">{props.t(\"SecondaryBeneficiary\")}</h5>\r\n        <button\r\n          type=\"button\"\r\n          onClick={props.toggle}\r\n          data-dismiss=\"modal\"\r\n          className=\"close\"\r\n          aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"modal-body\" style={{ backgroundColor: \"#f3f5f7\" }}>\r\n\r\n        <Row>\r\n          <Col xl=\"12\">\r\n            <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n              <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{props.t(\"ID Type\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => {\r\n                            setIdentificationTypeSelected(identificationTypeList.find(x => x.value === e.value))\r\n                            settipoIdentificacion(e.value);\r\n                          }}\r\n                          options={identificationTypeList}\r\n                          placeholder={props.t(\"SelectType\")}\r\n                          value={identificationTypeSelected}\r\n                        />\r\n                        {campoRequeridoIdentificacion ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col xl=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idnumber\">{props.t(\"ID Number\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"documentNumber\"\r\n                          type=\"text\"\r\n                          id=\"documentNumber\"\r\n                          validate={{\r\n                            required: { value: true, errorMessage: t(\"Required Field\") },\r\n                            // number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          value={props.dataSet.documentNumber}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"identificationType\">{props.t(\"PersonType\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => { setpersonTypeSelect(personTypeData.find(x => x.value === e.value)); changeTipo(e) }}\r\n                          options={personTypeData}\r\n                          id=\"sustainableCustomer\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={props.t(\"toselect\")}\r\n                          value={personTypeSelect}\r\n                        // value={props.dataSet.shareholderName}\r\n                        />\r\n                        {campoRequeridoTipo ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n\r\n                      </div>\r\n                    </Col>\r\n                    {getSearchForm(personTypeSelect)}\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"nationality\">{props.t(\"Nationality\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => {\r\n                            setnacionalidadSelect(paises.find(x => x.value === e.value))\r\n                            changePais(e);\r\n                          }}\r\n                          options={paises}\r\n                          id=\"paises\"\r\n                          name=\"paises\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={props.t(\"toselect\")}\r\n                          value={nacionalidadSelect}\r\n                        // value={props.dataSet.nationality}\r\n                        // defaultValue={props.datosEmpresa.countryIdentification}\r\n                        />\r\n                        {campoRequeridoNacionalidad ?\r\n                          <p className=\"message-error-parrafo\">{props.t(\"Required Field\")}</p>\r\n                          : null}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"address\">{props.t(\"Address\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"address\"\r\n                          type=\"text\"\r\n                          id=\"address\" value={props.dataSet.address} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"telephone\">{props.t(\"Phone\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"telephone\"\r\n                          type=\"text\"\r\n                          onKeyPress={(e) => { return checkNumber(e) }}\r\n                          id=\"telephone\" value={props.dataSet.telephone} />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"relationship\">{props.t(\"Relationship\")}</Label>\r\n                        <Select noOptionsMessage={() => \"\"}\r\n                          onChange={(e) => { setrelacionSelect(Relacion.find(x => x.label === e.label)); }}\r\n                          options={Relacion}\r\n                          id=\"relationship\"\r\n                          classNamePrefix=\"select2-selection\"\r\n                          placeholder={t(\"Relation\")}\r\n                          value={relacionSelect}\r\n                        />\r\n                        {/* <AvField\r\n                          className=\"form-control\"\r\n                          name=\"relationship\"\r\n                          type=\"text\"\r\n                          id=\"relationship\" value={props.dataSet.relationship} /> */}\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"4\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"percentage\">{props.t(\"Percent\")}</Label>\r\n                        <AvField\r\n                          className=\"form-control\"\r\n                          name=\"percentage\"\r\n                          type=\"number\"\r\n                          max={100}\r\n                          validate={{\r\n                            number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                          }}\r\n                          id=\"percentage\" value={props.dataSet.percentage} />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button id=\"btnNew\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={props.toggle} data-dismiss=\"modal\">\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{props.t(\"Cancel\")}\r\n                  </Button>\r\n                  {props.botones ?\r\n                    <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                      {\" \"} {props.tipo == \"guardar\" ? t(\"Save\") : t(\"Save\")}\r\n                    </Button> : null}\r\n                </CardFooter>\r\n              </Card>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\nModalBeneficiosFideicomiso.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  toggle: PropTypes.func\r\n};\r\nexport default (withTranslation()(ModalBeneficiosFideicomiso));\r\n"]},"metadata":{},"sourceType":"module"}