{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\Dashboard\\\\historical.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\nimport { useTranslation } from 'react-i18next';\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { CardTitle, Button, Card, CardBody, Label, Col } from \"reactstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ModalWatchProces from \"./ModalWacthProcess\";\nimport { translationHelpers } from '../../helpers';\nimport LoadingOverlay from \"react-loading-overlay\";\nimport { BackendServices } from \"../../services\"; //import ActiveDirectoryService from \"../../services/ActiveDirectory\";\n\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { Row, Tab, Tabs } from \"react-bootstrap\";\nimport ModalPreviewHistorical from \"./modal/ModalPreviewHistorical\";\nimport \"flatpickr/dist/themes/material_blue.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport * as OPTs from \"../../helpers/options_helper\";\nimport Switch from \"react-switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\n\nconst Historical = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [tr] = translationHelpers('commercial_credit', 'translation');\n  let COLUMNS_HEADERS = [{\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Procedure\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this),\n    dataField: 'transactId',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Creation Date\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this),\n    dataField: 'creationDate',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Process\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this),\n    dataField: 'bpmProcessDescription',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Activity\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this),\n    dataField: 'bpmActivityDescription',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Fecha de Actividad\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this),\n    dataField: 'activityDate',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"IdType\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this),\n    dataField: 'idType',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"IdNumber\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this),\n    dataField: 'clientDocId',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Responsible\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this),\n    dataField: 'responsible',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Names\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this),\n    dataField: 'names',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Surnames\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this),\n    dataField: 'surnames',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Status\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this),\n    dataField: 'stateDescription',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [t(\"Category\"), \" RAS\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this),\n    dataField: 'va1',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Customer ID\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this),\n    dataField: 'val2',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Proposed amount\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this),\n    dataField: 'val3',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Type Bank\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this),\n    dataField: 'val4',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Economic Activity\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this),\n    dataField: 'val5',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Covenants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this),\n    dataField: 'covenantEnvironmental',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [t(\"Compliance Date\"), \" Covenants\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this),\n    dataField: 'val7',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Autonomy\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this),\n    dataField: 'autonomy',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Approval Autonomy\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this),\n    dataField: 'decAutonomy',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Sustainability Marking\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this),\n    dataField: 'val10',\n    sort: true\n  }, {\n    text: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: t(\"Sustainable Project\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this),\n    dataField: 'val11',\n    sort: true\n  }, {\n    text: \"\",\n    dataField: 'action'\n  }];\n  const [dataBody, setDataBody] = useState([]);\n  const [ShowDisplayModal, setShowDisplayModal] = useState(false);\n  const [ShowDisplayModalPreview, setShowDisplayModalPreview] = useState(false);\n  const [processInstanceId, setProcessInstanceId] = useState(null);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const backendServices = new BackendServices();\n  const [IdentificationTypeList, setIdentificationTypeList] = useState([]);\n  const [IdentificationTypeSelected, setIdentificationTypeSelected] = useState(\"\");\n  const [idTypeValidate, setIdTypeValidate] = useState(false);\n  const [formRef, setFormRef] = useState(false);\n  const [transactId, setTransactId] = useState(undefined);\n  const [instanceId, setInstanceId] = useState(undefined);\n  const [fechas, setfechas] = useState(\"\");\n  const [applyCovenant, setApplyCovenant] = useState([{\n    value: '',\n    label: t('All')\n  }, {\n    value: 'si',\n    label: t('With Covenant')\n  }, {\n    value: 'no',\n    label: t('Without Covenant')\n  }]);\n  const [applyCovenantSelect, setApplyCovenantSelect] = useState(undefined);\n  const [closing, setclosing] = useState([{\n    value: '',\n    label: t('All')\n  }, {\n    value: 'si',\n    label: t('With Closing')\n  }, {\n    value: 'no',\n    label: t('Without Closing')\n  }]);\n  const [closingSelect, setclosingSelect] = useState(undefined);\n  const [closingPreview, setClosingPreview] = useState(false);\n  const [generalSelected, setGeneralSelected] = useState(true);\n  const [environmentsRiskSelected, setEnvironmentsRiskSelected] = useState(false);\n  const [filterTypeSelected, setFilterTypeSelected] = useState('general');\n  const [onlyEnvironmentRisk, setOnlyEnvironmentRisk] = useState(false);\n  const [clientDocIdG, setClientDocIdG] = useState('');\n  const [clientDocIdER, setClientDocIdER] = useState('');\n  useEffect(() => {\n    loadIdentificationTypes();\n    return () => {};\n  }, []);\n  /**\r\n   * *Busca las coincidencias para históricos\r\n   * @param {object} event\r\n   * @param {object} errors\r\n   * @param {object} values\r\n   * @return {void}\r\n   */\n\n  function searchHistorical(event, errors, values) {\n    var _values$transactIdG, _values$clientDocIdG, _values$idTypeG, _IdentificationTypeSe;\n\n    console.log(generalSelected);\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    setIsActiveLoading(true);\n    console.log(IdentificationTypeSelected);\n    let dataHistorical = {\n      transactId: (_values$transactIdG = values.transactIdG) !== null && _values$transactIdG !== void 0 ? _values$transactIdG : \"\",\n      clientDocId: (_values$clientDocIdG = values.clientDocIdG) !== null && _values$clientDocIdG !== void 0 ? _values$clientDocIdG : \"\",\n      idType: (_values$idTypeG = values.idTypeG) !== null && _values$idTypeG !== void 0 ? _values$idTypeG : (_IdentificationTypeSe = IdentificationTypeSelected === null || IdentificationTypeSelected === void 0 ? void 0 : IdentificationTypeSelected.value) !== null && _IdentificationTypeSe !== void 0 ? _IdentificationTypeSe : '',\n      check: onlyEnvironmentRisk\n    };\n    backendServices.getHistoricalSearches(dataHistorical).then(response => {\n      console.log(\"getHistoricalSearches\", response);\n\n      if (response.status == 200) {\n        setDataBody(response.result.summaryProcess.map(($$, index) => {\n          $$.creationDate = formatDate($$.creationDate);\n          $$.activityDate = formatDate($$.activityDate);\n          $$.names = `${$$.name} ${$$.secondName}`;\n          $$.surnames = `${$$.lastName} ${$$.secondLastName}`;\n          $$.closingCompliance = false;\n          $$.val1 = ``;\n          $$.val2 = ``;\n          $$.val3 = ``;\n          $$.val4 = ``;\n          $$.val5 = ``;\n          $$.covenantEnvironmental = $$.covenantEnvironmental ? 'Si' : 'No';\n          $$.val7 = ``;\n          $$.autonomy = $$.autonomyCredit ? $$.autonomyCredit : $$.autonomyBank;\n          $$.decAutonomy = $$.decAutonomyCredit ? $$.decAutonomyCredit === 'APROBADO' ? 'Si' : 'No' : $$.decAutonomyBank === 'APROBADO' ? 'Si' : 'No';\n          $$.val10 = `Si`;\n          $$.val11 = ``;\n          $$.action = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              onClick: e => {\n                showModal($$);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-file-eye-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              onClick: e => {\n                setProcessInstanceId($$.instanceId);\n                toggleModalWatchProcess();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-eye mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n          return $$;\n        }));\n      } else {}\n\n      setIsActiveLoading(false);\n    }).catch(err => {\n      setIsActiveLoading(false);\n      console.log(err);\n    });\n  }\n\n  function showModal($$) {\n    setClosingPreview($$.closingCompliance);\n    setInstanceId($$.instanceId);\n    setTransactId($$.transactId);\n    toggleModalWatchPreview();\n  }\n  /**\r\n   * *Obtiene catálogo de tipo de identificación\r\n   * @param {}\r\n   * @return {void}\r\n   */\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [{\n          label: t(\"None\"),\n          value: \"\"\n        }];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setIdentificationTypeList(json);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY HH:mm:ss\");\n  }\n\n  function toggleModalWatchProcess() {\n    setShowDisplayModal(!ShowDisplayModal);\n  }\n\n  function toggleModalWatchPreview() {\n    setShowDisplayModalPreview(!ShowDisplayModalPreview);\n  }\n\n  function clearForm() {\n    setIdentificationTypeSelected(\"\");\n    setIdTypeValidate(false);\n    setIsActiveLoading(false);\n    setDataBody([]);\n    formRef.reset();\n  }\n\n  function handleSelect(e) {\n    e = +e;\n\n    switch (e) {\n      case 0:\n        setGeneralSelected(true);\n        setEnvironmentsRiskSelected(false);\n        setFilterTypeSelected('general');\n        break;\n\n      case 1:\n        setEnvironmentsRiskSelected(true);\n        setGeneralSelected(false);\n        setFilterTypeSelected('environmentsRisk');\n        break;\n\n      default:\n        setGeneralSelected(true);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: t(\"Dashboard\"),\n        breadcrumbItem: t(\"Historical\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(AvForm, {\n            autoComplete: \"off\",\n            className: \"needs-validation\",\n            onSubmit: searchHistorical,\n            ref: ref => setFormRef(ref),\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"h4 d-flex flex-row justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [t(\"CommercialCredit\"), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: t(\"Historicalofthecommercialcreditprocess\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"warning\",\n                  type: \"button\",\n                  onClick: () => {\n                    clearForm();\n                  },\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-notification-clear-all mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 116\n                  }, this), \" \", t(\"Clear\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  type: \"submit\",\n                  style: {\n                    margin: '5px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-content-save mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this), \" \", t(\"Search\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n              active: isActiveLoading,\n              spinner: true,\n              text: t(\"Processinginformation\"),\n              children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n                keyField: \"id\",\n                data: dataBody,\n                columns: COLUMNS_HEADERS,\n                search: true,\n                children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"m-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                      check: true,\n                      className: \"col-12 col-md-3 form-group d-flex align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        children: t(\"Only Environmental Risk\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                        name: \"preapproval\",\n                        uncheckedIcon: /*#__PURE__*/_jsxDEV(Offsymbol, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 318,\n                          columnNumber: 46\n                        }, this),\n                        checkedIcon: /*#__PURE__*/_jsxDEV(OnSymbol, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 319,\n                          columnNumber: 44\n                        }, this),\n                        onColor: \"#007943\",\n                        className: \"form-label\",\n                        onChange: e => {\n                          if (e) {\n                            setClientDocIdG('');\n                          } else {\n                            setClientDocIdER('');\n                            setfechas('');\n                            setIsActiveLoading(true);\n                            setTimeout(() => {\n                              setIsActiveLoading(false);\n                            }, 1);\n                          }\n\n                          setOnlyEnvironmentRisk(!onlyEnvironmentRisk);\n                          setclosingSelect('');\n                          setApplyCovenantSelect('');\n                        },\n                        checked: onlyEnvironmentRisk\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 29\n                      }, this), '   ']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"mb-4\",\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      className: \"d-flex flex-column flex-md-row align-items-center mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: t(\"Procedure\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 349,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          name: \"transactIdG\",\n                          id: \"transactIdG\",\n                          type: \"text\",\n                          value: \"\",\n                          validate: {\n                            required: {\n                              value: !onlyEnvironmentRisk && !idTypeValidate,\n                              errorMessage: t(\"Required Field\")\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 350,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 348,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: t(\"Date\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 362,\n                          columnNumber: 31\n                        }, this), isActiveLoading == false ? /*#__PURE__*/_jsxDEV(Flatpickr, {\n                          name: \"date\",\n                          id: \"date\",\n                          disabled: !onlyEnvironmentRisk,\n                          className: \"form-control d-block\",\n                          placeholder: OPTs.FORMAT_DATE_SHOW,\n                          options: {\n                            // enableTime: true,\n                            dateFormat: \"d/m/Y\",\n                            // dateFormat: \"d/m/Y H:i\",\n                            mode: \"range\",\n                            defaultDate: fechas //selectClient !== undefined ? moment(selectClient.birthDate) : null\n\n                          },\n                          onChange: (selectedDates, dateStr, instance) => {\n                            // setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\n                            setfechas(dateStr.split('to'));\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 364,\n                          columnNumber: 33\n                        }, this) : null]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: t(\"ID Type\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          noOptionsMessage: () => \"\",\n                          onChange: e => {\n                            setIdentificationTypeSelected(IdentificationTypeList.find(x => x.value === e.value));\n\n                            if (e.value === '') {\n                              setIdTypeValidate(false);\n                            } else {\n                              setIdTypeValidate(true);\n                            }\n                          },\n                          options: IdentificationTypeList,\n                          classNamePrefix: \"select2-selection\",\n                          className: \"w-100\",\n                          value: IdentificationTypeSelected,\n                          name: \"idType\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: t(\"ID Number\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 403,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          name: \"clientDocIdG\",\n                          id: \"clientDocIdG\",\n                          type: \"text\",\n                          disabled: onlyEnvironmentRisk,\n                          value: clientDocIdG,\n                          onKeyPress: event => {\n                            setClientDocIdG(event.target.value);\n                          },\n                          validate: {\n                            required: {\n                              value: !onlyEnvironmentRisk && idTypeValidate,\n                              errorMessage: t(\"Required Field\")\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 404,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: t(\"Customer ID\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 422,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                          className: \"form-control\",\n                          name: \"clientDocIdER\",\n                          id: \"clientDocIdER\",\n                          type: \"text\",\n                          value: clientDocIdER,\n                          onKeyPress: event => {\n                            setClientDocIdER(event.target.value);\n                          },\n                          validate: {\n                            required: {\n                              value: onlyEnvironmentRisk && idTypeValidate,\n                              errorMessage: t(\"Required Field\")\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 423,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 421,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: [t(\"Apply\"), \" Covenants (\", t(\"AmbientalRisk\"), \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 438,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          noOptionsMessage: () => \"\",\n                          onChange: e => {\n                            setApplyCovenantSelect(applyCovenant.find(x => x.value === e.value));\n\n                            if (e.value === '') {\n                              setIdTypeValidate(false);\n                            } else {\n                              setIdTypeValidate(true);\n                            }\n                          },\n                          options: applyCovenant,\n                          classNamePrefix: \"select2-selection\",\n                          className: \"w-100\",\n                          isDisabled: !onlyEnvironmentRisk,\n                          value: applyCovenantSelect,\n                          name: \"idType\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n                        className: \"col-12 col-md-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: \"client\",\n                          children: [t(\"Apply\"), \" \", t(\"Closing\"), \" (\", t(\"AmbientalRisk\"), \")\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 457,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Select, {\n                          noOptionsMessage: () => \"\",\n                          onChange: e => {\n                            setclosingSelect(closing.find(x => x.value === e.value));\n\n                            if (e.value === '') {\n                              setIdTypeValidate(false);\n                            } else {\n                              setIdTypeValidate(true);\n                            }\n                          },\n                          options: closing,\n                          classNamePrefix: \"select2-selection\",\n                          className: \"w-100\",\n                          isDisabled: !onlyEnvironmentRisk,\n                          value: closingSelect,\n                          name: \"idType\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 458,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 456,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                      bootstrap4: true,\n                      bordered: false,\n                      striped: true,\n                      hover: true,\n                      condensed: true,\n                      classes: \"styled-table\",\n                      style: {\n                        cursor: \"pointer\"\n                      },\n                      data: dataBody,\n                      columns: COLUMNS_HEADERS,\n                      ...props.baseProps,\n                      pagination: paginationFactory({\n                        sizePerPage: 30,\n                        sizePerPageList: [30]\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this), (dataBody === null || dataBody === void 0 ? void 0 : dataBody.length) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex justify-content-center m-3\",\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: t(\"NoData\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 498,\n                        columnNumber: 32\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), processInstanceId && /*#__PURE__*/_jsxDEV(ModalWatchProces, {\n      isOpen: ShowDisplayModal,\n      toggle: () => {\n        toggleModalWatchProcess();\n      },\n      processInstanceId: processInstanceId,\n      t: tr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(ModalPreviewHistorical, {\n      title: onlyEnvironmentRisk ? 'Previsualización' : 'Historical Preview',\n      isOpen: ShowDisplayModalPreview,\n      toggle: () => {\n        toggleModalWatchPreview();\n      },\n      transactId: transactId,\n      instanceId: instanceId,\n      closingPreview: closingPreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Historical, \"2PNZSa9w7H0qWsIQV5S07Ibrg/c=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = Historical;\nexport default Historical;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"Historical\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/Dashboard/historical.js"],"names":["React","useEffect","useState","Link","Breadcrumbs","useTranslation","AvForm","AvField","AvGroup","CardTitle","Button","Card","CardBody","Label","Col","BootstrapTable","ToolkitProvider","Search","paginationFactory","ModalWatchProces","translationHelpers","LoadingOverlay","BackendServices","moment","Select","Row","Tab","Tabs","ModalPreviewHistorical","Flatpickr","OPTs","Switch","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","Historical","t","tr","COLUMNS_HEADERS","text","dataField","sort","dataBody","setDataBody","ShowDisplayModal","setShowDisplayModal","ShowDisplayModalPreview","setShowDisplayModalPreview","processInstanceId","setProcessInstanceId","isActiveLoading","setIsActiveLoading","backendServices","IdentificationTypeList","setIdentificationTypeList","IdentificationTypeSelected","setIdentificationTypeSelected","idTypeValidate","setIdTypeValidate","formRef","setFormRef","transactId","setTransactId","undefined","instanceId","setInstanceId","fechas","setfechas","applyCovenant","setApplyCovenant","value","label","applyCovenantSelect","setApplyCovenantSelect","closing","setclosing","closingSelect","setclosingSelect","closingPreview","setClosingPreview","generalSelected","setGeneralSelected","environmentsRiskSelected","setEnvironmentsRiskSelected","filterTypeSelected","setFilterTypeSelected","onlyEnvironmentRisk","setOnlyEnvironmentRisk","clientDocIdG","setClientDocIdG","clientDocIdER","setClientDocIdER","loadIdentificationTypes","searchHistorical","event","errors","values","console","log","preventDefault","length","dataHistorical","transactIdG","clientDocId","idType","idTypeG","check","getHistoricalSearches","then","response","status","result","summaryProcess","map","$$","index","creationDate","formatDate","activityDate","names","name","secondName","surnames","lastName","secondLastName","closingCompliance","val1","val2","val3","val4","val5","covenantEnvironmental","val7","autonomy","autonomyCredit","autonomyBank","decAutonomy","decAutonomyCredit","decAutonomyBank","val10","val11","action","e","showModal","toggleModalWatchProcess","catch","err","toggleModalWatchPreview","consultarCatalogoTipoIdentificacion","data","json","i","push","error","date","format","clearForm","reset","handleSelect","ref","margin","props","setTimeout","required","errorMessage","FORMAT_DATE_SHOW","dateFormat","mode","defaultDate","selectedDates","dateStr","instance","split","find","x","target","cursor","baseProps","sizePerPage","sizePerPageList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\nimport { useTranslation } from 'react-i18next'\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\n\r\nimport {\r\n  CardTitle, Button,\r\n  Card, CardBody, Label, Col\r\n} from \"reactstrap\"\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\n\r\nimport ModalWatchProces from \"./ModalWacthProcess\";\r\nimport { translationHelpers } from '../../helpers';\r\nimport LoadingOverlay from \"react-loading-overlay\";\r\nimport { BackendServices } from \"../../services\";\r\n//import ActiveDirectoryService from \"../../services/ActiveDirectory\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport { Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport ModalPreviewHistorical from \"./modal/ModalPreviewHistorical\";\r\n\r\nimport \"flatpickr/dist/themes/material_blue.css\";\r\nimport Flatpickr from \"react-flatpickr\";\r\nimport * as OPTs from \"../../helpers/options_helper\"\r\n\r\nimport Switch from \"react-switch\";\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst Historical = () => {\r\n  const { t } = useTranslation();\r\n  const [tr] = translationHelpers('commercial_credit', 'translation');\r\n\r\n  let COLUMNS_HEADERS = [\r\n    { text: <strong>{t(\"Procedure\")}</strong>, dataField: 'transactId', sort: true },\r\n    { text: <strong>{t(\"Creation Date\")}</strong>, dataField: 'creationDate', sort: true },\r\n    { text: <strong>{t(\"Process\")}</strong>, dataField: 'bpmProcessDescription', sort: true },\r\n    { text: <strong>{t(\"Activity\")}</strong>, dataField: 'bpmActivityDescription', sort: true },\r\n    { text: <strong>{t(\"Fecha de Actividad\")}</strong>, dataField: 'activityDate', sort: true },\r\n    { text: <strong>{t(\"IdType\")}</strong>, dataField: 'idType', sort: true },\r\n    { text: <strong>{t(\"IdNumber\")}</strong>, dataField: 'clientDocId', sort: true },\r\n    { text: <strong>{t(\"Responsible\")}</strong>, dataField: 'responsible', sort: true },\r\n    { text: <strong>{t(\"Names\")}</strong>, dataField: 'names', sort: true },\r\n    { text: <strong>{t(\"Surnames\")}</strong>, dataField: 'surnames', sort: true },\r\n    { text: <strong>{t(\"Status\")}</strong>, dataField: 'stateDescription', sort: true },\r\n    { text: <strong>{t(\"Category\")} RAS</strong>, dataField: 'va1', sort: true },\r\n    { text: <strong>{t(\"Customer ID\")}</strong>, dataField: 'val2', sort: true },\r\n    { text: <strong>{t(\"Proposed amount\")}</strong>, dataField: 'val3', sort: true },\r\n    { text: <strong>{t(\"Type Bank\")}</strong>, dataField: 'val4', sort: true },\r\n    { text: <strong>{t(\"Economic Activity\")}</strong>, dataField: 'val5', sort: true },\r\n    { text: <strong>Covenants</strong>, dataField: 'covenantEnvironmental', sort: true },\r\n    { text: <strong>{t(\"Compliance Date\")} Covenants</strong>, dataField: 'val7', sort: true },\r\n    { text: <strong>{t(\"Autonomy\")}</strong>, dataField: 'autonomy', sort: true },\r\n    { text: <strong>{t(\"Approval Autonomy\")}</strong>, dataField: 'decAutonomy', sort: true },\r\n    { text: <strong>{t(\"Sustainability Marking\")}</strong>, dataField: 'val10', sort: true },\r\n    { text: <strong>{t(\"Sustainable Project\")}</strong>, dataField: 'val11', sort: true },\r\n    { text: \"\", dataField: 'action' },\r\n  ];\r\n\r\n\r\n  const [dataBody, setDataBody] = useState([]);\r\n  const [ShowDisplayModal, setShowDisplayModal] = useState(false);\r\n  const [ShowDisplayModalPreview, setShowDisplayModalPreview] = useState(false);\r\n  const [processInstanceId, setProcessInstanceId] = useState(null);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const backendServices = new BackendServices();\r\n\r\n  const [IdentificationTypeList, setIdentificationTypeList] = useState([]);\r\n  const [IdentificationTypeSelected, setIdentificationTypeSelected] = useState(\"\");\r\n  const [idTypeValidate, setIdTypeValidate] = useState(false);\r\n  const [formRef, setFormRef] = useState(false);\r\n  const [transactId, setTransactId] = useState(undefined);\r\n  const [instanceId, setInstanceId] = useState(undefined);\r\n\r\n  const [fechas, setfechas] = useState(\"\");\r\n\r\n  const [applyCovenant, setApplyCovenant] = useState([{ value: '', label: t('All') }, { value: 'si', label: t('With Covenant') }, { value: 'no', label: t('Without Covenant') }]);\r\n  const [applyCovenantSelect, setApplyCovenantSelect] = useState(undefined);\r\n\r\n  const [closing, setclosing] = useState([{ value: '', label: t('All') }, { value: 'si', label: t('With Closing') }, { value: 'no', label: t('Without Closing') }]);\r\n  const [closingSelect, setclosingSelect] = useState(undefined);\r\n\r\n  const [closingPreview, setClosingPreview] = useState(false);\r\n  const [generalSelected, setGeneralSelected] = useState(true);\r\n  const [environmentsRiskSelected, setEnvironmentsRiskSelected] = useState(false);\r\n  const [filterTypeSelected, setFilterTypeSelected] = useState('general');\r\n  const [onlyEnvironmentRisk, setOnlyEnvironmentRisk] = useState(false);\r\n  const [clientDocIdG, setClientDocIdG] = useState('');\r\n  const [clientDocIdER, setClientDocIdER] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    loadIdentificationTypes();\r\n    return () => {\r\n    };\r\n  }, []);\r\n\r\n  /**\r\n   * *Busca las coincidencias para históricos\r\n   * @param {object} event\r\n   * @param {object} errors\r\n   * @param {object} values\r\n   * @return {void}\r\n   */\r\n  function searchHistorical(event, errors, values) {\r\n    console.log(generalSelected)\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    setIsActiveLoading(true);\r\n    console.log(IdentificationTypeSelected)\r\n    let dataHistorical = {\r\n      transactId: values.transactIdG ?? \"\",\r\n      clientDocId: values.clientDocIdG ?? \"\",\r\n      idType: values.idTypeG ?? (IdentificationTypeSelected?.value ?? ''),\r\n      check: onlyEnvironmentRisk\r\n    }\r\n\r\n    backendServices.getHistoricalSearches(dataHistorical).then(response => {\r\n      console.log(\"getHistoricalSearches\", response);\r\n\r\n      if (response.status == 200) {\r\n        setDataBody(\r\n          response.result.summaryProcess.map(($$, index) => {\r\n            $$.creationDate = formatDate($$.creationDate);\r\n            $$.activityDate = formatDate($$.activityDate);\r\n            $$.names = `${$$.name} ${$$.secondName}`;\r\n            $$.surnames = `${$$.lastName} ${$$.secondLastName}`;\r\n            $$.closingCompliance = false;\r\n\r\n            $$.val1 = ``;\r\n            $$.val2 = ``;\r\n            $$.val3 = ``;\r\n            $$.val4 = ``;\r\n            $$.val5 = ``;\r\n            $$.covenantEnvironmental = $$.covenantEnvironmental ? 'Si' : 'No';\r\n            $$.val7 = ``;\r\n            $$.autonomy = $$.autonomyCredit ? $$.autonomyCredit : $$.autonomyBank;\r\n            $$.decAutonomy = $$.decAutonomyCredit ? ($$.decAutonomyCredit === 'APROBADO' ? 'Si' : 'No') : ($$.decAutonomyBank === 'APROBADO' ? 'Si' : 'No');\r\n            $$.val10 = `Si`;\r\n            $$.val11 = ``;\r\n            $$.action = (\r\n              <>\r\n                <Link key={index} onClick={(e) => { showModal($$) }}>\r\n                  <i className=\"mdi mdi-file-eye-outline mdi-24px\"></i>\r\n                </Link>\r\n                <Link key={index} onClick={(e) => { setProcessInstanceId($$.instanceId); toggleModalWatchProcess(); }}>\r\n                  <i className=\"mdi mdi-eye mdi-24px\"></i>\r\n                </Link>\r\n              </>\r\n            )\r\n            return $$;\r\n          }));\r\n      } else {\r\n\r\n      }\r\n\r\n      setIsActiveLoading(false);\r\n    }).catch(err => {\r\n      setIsActiveLoading(false);\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  function showModal($$) {\r\n    setClosingPreview($$.closingCompliance);\r\n    setInstanceId($$.instanceId);\r\n    setTransactId($$.transactId);\r\n    toggleModalWatchPreview();\r\n  }\r\n\r\n  /**\r\n   * *Obtiene catálogo de tipo de identificación\r\n   * @param {}\r\n   * @return {void}\r\n   */\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion().then((data) => {\r\n      if (data !== null && data !== undefined) {\r\n        let json = [{ label: t(\"None\"), value: \"\" }];\r\n        for (let i = 0; i < data.length; i++) {\r\n          json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n        }\r\n        setIdentificationTypeList(json)\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY HH:mm:ss\");\r\n  }\r\n\r\n  function toggleModalWatchProcess() {\r\n    setShowDisplayModal(!ShowDisplayModal)\r\n  }\r\n\r\n  function toggleModalWatchPreview() {\r\n    setShowDisplayModalPreview(!ShowDisplayModalPreview)\r\n  }\r\n\r\n  function clearForm() {\r\n    setIdentificationTypeSelected(\"\");\r\n    setIdTypeValidate(false);\r\n    setIsActiveLoading(false);\r\n    setDataBody([]);\r\n    formRef.reset();\r\n  }\r\n\r\n  function handleSelect(e) {\r\n    e = +e;\r\n    switch (e) {\r\n      case 0:\r\n        setGeneralSelected(true)\r\n        setEnvironmentsRiskSelected(false)\r\n        setFilterTypeSelected('general')\r\n        break;\r\n      case 1:\r\n        setEnvironmentsRiskSelected(true)\r\n        setGeneralSelected(false)\r\n        setFilterTypeSelected('environmentsRisk')\r\n        break;\r\n\r\n      default:\r\n        setGeneralSelected(true)\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title={t(\"Dashboard\")} breadcrumbItem={t(\"Historical\")} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n            <AvForm autoComplete=\"off\" className=\"needs-validation\" onSubmit={searchHistorical} ref={ref => (setFormRef(ref))}>\r\n\r\n              <CardTitle className=\"h4 d-flex flex-row justify-content-between align-items-center\">\r\n                <div>\r\n                  {t(\"CommercialCredit\")}\r\n                  <p className=\"card-title-desc\">\r\n                    {t(\"Historicalofthecommercialcreditprocess\")}\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <Button color=\"warning\" type=\"button\" onClick={() => { clearForm(); }} style={{ margin: '5px' }}><i className=\"mdi mdi-notification-clear-all mdi-12px\"></i>\r\n                    {\" \"}{t(\"Clear\")}\r\n                  </Button>\r\n                  <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}>\r\n                    <i className=\"mdi mdi-content-save mid-12px\"></i> {t(\"Search\")}\r\n                  </Button>\r\n                </div>\r\n              </CardTitle>\r\n\r\n              <LoadingOverlay active={isActiveLoading} spinner text={t(\"Processinginformation\")}>\r\n\r\n                <ToolkitProvider\r\n                  keyField=\"id\"\r\n                  data={dataBody}\r\n                  columns={COLUMNS_HEADERS}\r\n                  search\r\n                >\r\n                  {\r\n                    props => (\r\n                      <div className=\"m-3\">\r\n                        {/* <SearchBar className=\"custome-search-field float-end\" delay={1000} placeholder={t(\"Search\")} {...props.searchProps} /> */}\r\n                        <Row>\r\n                          <AvGroup check className=\"col-12 col-md-3 form-group d-flex align-items-center\">\r\n                            <Label>{t(\"Only Environmental Risk\")}</Label>\r\n                            <Switch name=\"preapproval\"\r\n                              uncheckedIcon={<Offsymbol />}\r\n                              checkedIcon={<OnSymbol />}\r\n                              onColor=\"#007943\"\r\n                              className=\"form-label\"\r\n                              onChange={(e) => {\r\n                                if (e) {\r\n                                  setClientDocIdG('')\r\n                                } else {\r\n                                  setClientDocIdER('')\r\n                                  setfechas('')\r\n                                  setIsActiveLoading(true)\r\n                                  setTimeout(() => {\r\n                                    setIsActiveLoading(false)\r\n                                  }, 1);\r\n                                }\r\n                                setOnlyEnvironmentRisk(!onlyEnvironmentRisk);\r\n                                setclosingSelect('');\r\n                                setApplyCovenantSelect('');\r\n                              }}\r\n                              checked={onlyEnvironmentRisk}\r\n                            />\r\n                            {'   '}\r\n                            {/* <Label className=\"form-check-label\" htmlFor=\"isProjectLocatedProtectedNaturalArea\"> {t(\"Is the project located or adjacent to a protected natural area\")}</Label> */}\r\n                          </AvGroup>\r\n\r\n                        </Row>\r\n\r\n\r\n                        <Col className=\"mb-4\">\r\n                          <Row className=\"d-flex flex-column flex-md-row align-items-center mb-4\">\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"Procedure\")}</Label>\r\n                              <AvField\r\n                                className=\"form-control\"\r\n                                name=\"transactIdG\"\r\n                                id=\"transactIdG\"\r\n                                type=\"text\"\r\n                                value=\"\"\r\n                                validate={{\r\n                                  required: { value: !onlyEnvironmentRisk && !idTypeValidate, errorMessage: t(\"Required Field\") },\r\n                                }}\r\n                              />\r\n                            </AvGroup>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"Date\")}</Label>\r\n                              {isActiveLoading == false ?\r\n                                <Flatpickr\r\n                                  name=\"date\"\r\n                                  id=\"date\"\r\n                                  disabled={!onlyEnvironmentRisk}\r\n                                  className=\"form-control d-block\"\r\n                                  placeholder={OPTs.FORMAT_DATE_SHOW}\r\n                                  options={{\r\n                                    // enableTime: true,\r\n                                    dateFormat: \"d/m/Y\",\r\n                                    // dateFormat: \"d/m/Y H:i\",\r\n                                    mode: \"range\",\r\n                                    defaultDate: fechas,//selectClient !== undefined ? moment(selectClient.birthDate) : null\r\n                                  }}\r\n                                  onChange={(selectedDates, dateStr, instance) => {\r\n                                    // setfechaSet2(moment(dateStr, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"));\r\n\r\n                                    setfechas(dateStr.split('to'))\r\n                                  }}\r\n                                /> : null}\r\n                            </AvGroup>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"ID Type\")}</Label>\r\n                              <Select noOptionsMessage={() => \"\"}\r\n                                onChange={(e) => {\r\n                                  setIdentificationTypeSelected(IdentificationTypeList.find(x => x.value === e.value));\r\n                                  if (e.value === '') {\r\n                                    setIdTypeValidate(false);\r\n                                  } else {\r\n                                    setIdTypeValidate(true);\r\n                                  }\r\n                                }}\r\n                                options={IdentificationTypeList}\r\n                                classNamePrefix=\"select2-selection\"\r\n                                className=\"w-100\"\r\n                                value={IdentificationTypeSelected}\r\n                                name=\"idType\"\r\n                              />\r\n                            </AvGroup>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"ID Number\")}</Label>\r\n                              <AvField\r\n                                className=\"form-control\"\r\n                                name=\"clientDocIdG\"\r\n                                id=\"clientDocIdG\"\r\n                                type=\"text\"\r\n                                disabled={onlyEnvironmentRisk}\r\n                                value={clientDocIdG}\r\n                                onKeyPress={(event) => {\r\n                                  setClientDocIdG(event.target.value)\r\n                                }}\r\n                                validate={{\r\n                                  required: { value: !onlyEnvironmentRisk && idTypeValidate, errorMessage: t(\"Required Field\") },\r\n                                }}\r\n                              />\r\n                            </AvGroup>\r\n                          </Row>\r\n                          <Row>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"Customer ID\")}</Label>\r\n                              <AvField\r\n                                className=\"form-control\"\r\n                                name=\"clientDocIdER\"\r\n                                id=\"clientDocIdER\"\r\n                                type=\"text\"\r\n                                value={clientDocIdER}\r\n                                onKeyPress={(event) => {\r\n                                  setClientDocIdER(event.target.value)\r\n                                }}\r\n                                validate={{\r\n                                  required: { value: onlyEnvironmentRisk && idTypeValidate, errorMessage: t(\"Required Field\") },\r\n                                }}\r\n                              />\r\n                            </AvGroup>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"Apply\")} Covenants ({t(\"AmbientalRisk\")})</Label>\r\n                              <Select noOptionsMessage={() => \"\"}\r\n                                onChange={(e) => {\r\n                                  setApplyCovenantSelect(applyCovenant.find(x => x.value === e.value));\r\n                                  if (e.value === '') {\r\n                                    setIdTypeValidate(false);\r\n                                  } else {\r\n                                    setIdTypeValidate(true);\r\n                                  }\r\n                                }}\r\n                                options={applyCovenant}\r\n                                classNamePrefix=\"select2-selection\"\r\n                                className=\"w-100\"\r\n                                isDisabled={!onlyEnvironmentRisk}\r\n                                value={applyCovenantSelect}\r\n                                name=\"idType\"\r\n                              />\r\n                            </AvGroup>\r\n                            <AvGroup className=\"col-12 col-md-3\">\r\n                              <Label htmlFor=\"client\">{t(\"Apply\")} {t(\"Closing\")} ({t(\"AmbientalRisk\")})</Label>\r\n                              <Select noOptionsMessage={() => \"\"}\r\n                                onChange={(e) => {\r\n                                  setclosingSelect(closing.find(x => x.value === e.value));\r\n                                  if (e.value === '') {\r\n                                    setIdTypeValidate(false);\r\n                                  } else {\r\n                                    setIdTypeValidate(true);\r\n                                  }\r\n                                }}\r\n                                options={closing}\r\n                                classNamePrefix=\"select2-selection\"\r\n                                className=\"w-100\"\r\n                                isDisabled={!onlyEnvironmentRisk}\r\n                                value={closingSelect}\r\n                                name=\"idType\"\r\n                              />\r\n                            </AvGroup>\r\n                          </Row>\r\n                        </Col>\r\n\r\n\r\n                        <div className=\"table-responsive\">\r\n                          <BootstrapTable\r\n                            bootstrap4\r\n                            bordered={false}\r\n                            striped\r\n                            hover\r\n                            condensed\r\n                            classes='styled-table'\r\n                            style={{ cursor: \"pointer\" }}\r\n                            data={dataBody} columns={COLUMNS_HEADERS}\r\n                            {...props.baseProps}\r\n                            pagination={paginationFactory({\r\n                              sizePerPage: 30,\r\n                              sizePerPageList: [30]\r\n                            })}\r\n                          />\r\n                        </div>\r\n                        {dataBody?.length === 0 &&\r\n                          <div className=\"d-flex justify-content-center m-3\">\r\n                            <b><h4>{t(\"NoData\")}</h4></b>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                    )\r\n                  }\r\n                </ToolkitProvider>\r\n              </LoadingOverlay>\r\n            </AvForm>\r\n          </CardBody>\r\n        </Card>\r\n\r\n      </div>\r\n      {processInstanceId && (<ModalWatchProces isOpen={ShowDisplayModal} toggle={() => { toggleModalWatchProcess() }} processInstanceId={processInstanceId} t={tr} />)}\r\n      <ModalPreviewHistorical title={onlyEnvironmentRisk ? 'Previsualización' : 'Historical Preview'} isOpen={ShowDisplayModalPreview} toggle={() => { toggleModalWatchPreview() }} transactId={transactId} instanceId={instanceId} closingPreview={closingPreview} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Historical\r\n"]},"metadata":{},"sourceType":"module"}