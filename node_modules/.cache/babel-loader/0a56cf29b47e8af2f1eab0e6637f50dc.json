{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\16_RiesgoAmbiental\\\\riesgoAmbiental\\\\FormAspectosAmbientales.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useContext, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport RiesgoAmbientalContext from '../RiesgoAmbientalContext';\nimport { Card, CardBody, Row, Col, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport AttachmentList from '../../../../components/Attachments/AttachmentList'; //i18n\n\nimport { useTranslation } from 'react-i18next';\nimport ServicioRiesgoAmbiental from '../../../../services/RiesgoAmbiental/RiesgoAmbiental';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleChekQuestion = props => {\n  return /*#__PURE__*/_jsxDEV(AvGroup, {\n    check: true,\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(AvInput, {\n      id: props.name,\n      type: \"checkbox\",\n      name: props.name,\n      checked: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      check: true,\n      htmlFor: props.name,\n      children: [\" \", props.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SimpleChekQuestion;\nSimpleChekQuestion.propTypes = {\n  name: PropTypes.string,\n  question: PropTypes.string,\n  value: PropTypes.bool\n};\n\nconst ComposedQuestion = props => {\n  return /*#__PURE__*/_jsxDEV(AvGroup, {\n    check: true,\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(AvInput, {\n      id: props.name,\n      type: \"checkbox\",\n      name: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      check: true,\n      htmlFor: props.name,\n      children: [\" \", props.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvInput, {\n      type: \"textarea\",\n      name: props.name + 'Comments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ComposedQuestion;\nComposedQuestion.propTypes = {\n  name: PropTypes.string,\n  question: PropTypes.string\n};\nconst FormAspectosAmbientales = /*#__PURE__*/forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [formValid, setFormValid] = useState(false);\n  const [questions, setQuestions] = useState({});\n  const [riskPreClassification, setRiskPreClassification] = useState('Medio');\n  const [riskClassificationConfirmation, setRiskClassificationConfirmation] = useState('Medio'); // services\n\n  const context = useContext(RiesgoAmbientalContext);\n  const servicioRiesgoAmbiental = new ServicioRiesgoAmbiental();\n  const simpleQuestions = [{\n    name: 'natureLocationProject',\n    question: '¿El proyecto está ubicado o es colindante a un área natural protegida?'\n  }, {\n    name: 'physicalResettlement',\n    question: '¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?'\n  }, {\n    name: 'environmentalPermits',\n    question: '¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?'\n  }, {\n    name: 'newProject',\n    question: '¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?'\n  }, {\n    name: 'workersContractors',\n    question: '¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?'\n  }];\n  useEffect(() => {\n    // load data\n    if (!context.transactionId) {\n      return;\n    }\n\n    console.log('load aspectos ambientales', context.transactionId);\n    const {\n      transactionId\n    } = context;\n    servicioRiesgoAmbiental.consultarAspectosAmbientales(transactionId).then(info => {\n      console.log('fetch aspectos ambientales', info);\n      setRiskPreClassification(info.riskPreClassification || 'Medio');\n      setRiskClassificationConfirmation(info.riskClassificationConfirmation || 'Medio');\n      setQuestions({\n        newProject: info.newProject,\n        physicalResettlement: info.physicalResettlement,\n        natureLocationProject: info.natureLocationProject,\n        environmentalPermits: info.environmentalPermits\n      });\n    }).catch(error => {\n      console.error('error fetch aspectos ambientales', error);\n    });\n  }, [context]);\n  useImperativeHandle(ref, () => ({\n    submit: (validate = true) => {\n      const form = document.getElementById('formAspectosAmbientales');\n      form.requestSubmit();\n      return formValid;\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n    const isValid = errors.length === 0;\n    setFormValid(isValid);\n\n    if (isValid) {\n      console.log('submit', values, errors);\n      const {\n        transactionId\n      } = context;\n      servicioRiesgoAmbiental.guardarAspectosAmbientales(transactionId, values).then(result => {\n        console.log('save success', result);\n      }).catch(error => {\n        console.error('Error guardando', error);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        id: \"formAspectosAmbientales\",\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: t(\"EnvironmentalAspects\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvField, {\n          type: \"hidden\",\n          name: \"sustainableCreditRating\",\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"riskPreClassification\",\n                children: t(\"PreClassificationRisk\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"riskPreClassification\",\n                type: \"text\",\n                id: \"riskPreClassification\",\n                value: riskPreClassification,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"riskClassificationConfirmation\",\n                children: t(\"EnvironmentalRiskclassification\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"riskClassificationConfirmation\",\n                type: \"select\",\n                id: \"riskClassificationConfirmation\",\n                value: riskClassificationConfirmation,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Bajo\",\n                  children: \"Bajo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medio\",\n                  children: \"Medio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MedioAlto\",\n                  children: \"Medio Alto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Alto\",\n                  children: \"Alto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: simpleQuestions.map(item => /*#__PURE__*/_jsxDEV(SimpleChekQuestion, {\n              name: item.name,\n              question: item.question,\n              value: questions[item.name] || false\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AttachmentList, {\n              editMode: true,\n              attachments: []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}, \"ssG/8C4lg8bKMyibcKhZrelkbvk=\", false, function () {\n  return [useTranslation, useImperativeHandle];\n}));\n_c4 = FormAspectosAmbientales;\nFormAspectosAmbientales.propTypes = {};\nexport default FormAspectosAmbientales;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SimpleChekQuestion\");\n$RefreshReg$(_c2, \"ComposedQuestion\");\n$RefreshReg$(_c3, \"FormAspectosAmbientales$forwardRef\");\n$RefreshReg$(_c4, \"FormAspectosAmbientales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/16_RiesgoAmbiental/riesgoAmbiental/FormAspectosAmbientales.js"],"names":["PropTypes","useState","useContext","useEffect","useImperativeHandle","forwardRef","RiesgoAmbientalContext","Card","CardBody","Row","Col","Label","AvForm","AvField","AvGroup","AvInput","AvCheckbox","AttachmentList","useTranslation","ServicioRiesgoAmbiental","SimpleChekQuestion","props","name","value","question","propTypes","string","bool","ComposedQuestion","FormAspectosAmbientales","ref","t","i18n","formValid","setFormValid","questions","setQuestions","riskPreClassification","setRiskPreClassification","riskClassificationConfirmation","setRiskClassificationConfirmation","context","servicioRiesgoAmbiental","simpleQuestions","transactionId","console","log","consultarAspectosAmbientales","then","info","newProject","physicalResettlement","natureLocationProject","environmentalPermits","catch","error","submit","validate","form","document","getElementById","requestSubmit","getFormValidation","handleSubmit","event","errors","values","preventDefault","isValid","length","guardarAspectosAmbientales","result","map","item"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useContext, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport RiesgoAmbientalContext from '../RiesgoAmbientalContext';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\"\r\nimport AttachmentList from '../../../../components/Attachments/AttachmentList';\r\n\r\n\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next'\r\nimport ServicioRiesgoAmbiental from '../../../../services/RiesgoAmbiental/RiesgoAmbiental';\r\n\r\n\r\nconst SimpleChekQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={props.name} type=\"checkbox\" name={props.name} checked={props.value} />\r\n      <Label check htmlFor={props.name}> {props.question}</Label>\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nSimpleChekQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string,\r\n  value: PropTypes.bool\r\n};\r\n\r\nconst ComposedQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={props.name} type=\"checkbox\" name={props.value} />\r\n      <Label check htmlFor={props.name}> {props.question}</Label>\r\n      <AvInput type=\"textarea\" name={props.name + 'Comments'} />\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nComposedQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string\r\n};\r\n\r\nconst FormAspectosAmbientales = forwardRef((props, ref) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [questions, setQuestions] = useState({});\r\n  const [riskPreClassification, setRiskPreClassification] = useState('Medio');\r\n  const [riskClassificationConfirmation, setRiskClassificationConfirmation] = useState('Medio');\r\n\r\n\r\n  // services\r\n  const context = useContext(RiesgoAmbientalContext);\r\n  const servicioRiesgoAmbiental = new ServicioRiesgoAmbiental();\r\n\r\n  const simpleQuestions = [\r\n    { name: 'natureLocationProject', question: '¿El proyecto está ubicado o es colindante a un área natural protegida?' },\r\n    { name: 'physicalResettlement', question: '¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?' },\r\n    { name: 'environmentalPermits', question: '¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?' },\r\n    { name: 'newProject', question: '¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?' },\r\n    { name: 'workersContractors', question: '¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?' },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // load data\r\n    if (!context.transactionId) {\r\n      return;\r\n    }\r\n    console.log('load aspectos ambientales', context.transactionId);\r\n    const { transactionId } = context;\r\n    servicioRiesgoAmbiental.consultarAspectosAmbientales(transactionId)\r\n      .then((info) => {\r\n        console.log('fetch aspectos ambientales', info);\r\n        setRiskPreClassification(info.riskPreClassification || 'Medio');\r\n        setRiskClassificationConfirmation(info.riskClassificationConfirmation || 'Medio');\r\n        setQuestions({\r\n          newProject: info.newProject,\r\n          physicalResettlement: info.physicalResettlement,\r\n          natureLocationProject: info.natureLocationProject,\r\n          environmentalPermits: info.environmentalPermits\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('error fetch aspectos ambientales', error);\r\n      })\r\n  }, [context]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: (validate = true) => {\r\n      const form = document.getElementById('formAspectosAmbientales');\r\n      form.requestSubmit();\r\n      return formValid;\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    const isValid = errors.length === 0;\r\n    setFormValid(isValid);\r\n    if (isValid) {\r\n      console.log('submit', values, errors);\r\n      const { transactionId } = context;\r\n      servicioRiesgoAmbiental.guardarAspectosAmbientales(transactionId, values)\r\n        .then((result) => {\r\n          console.log('save success', result);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error guardando', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n\r\n      <CardBody>\r\n\r\n        <AvForm id=\"formAspectosAmbientales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n\r\n          <h4 className=\"card-title\">{t(\"EnvironmentalAspects\")}</h4>\r\n          <p className=\"card-title-desc\"></p>\r\n\r\n          <AvField type=\"hidden\" name=\"sustainableCreditRating\" value=\"\" />\r\n\r\n          <Row className=\"my-2\">\r\n            <Col md=\"6\">\r\n              <AvGroup className=\"mb-3\">\r\n                <Label htmlFor=\"riskPreClassification\">{t(\"PreClassificationRisk\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"riskPreClassification\"\r\n                  type=\"text\"\r\n                  id=\"riskPreClassification\"\r\n                  value={riskPreClassification}\r\n                  disabled={true}></AvField>\r\n              </AvGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <AvGroup className=\"mb-3\">\r\n                <Label htmlFor=\"riskClassificationConfirmation\">{t(\"EnvironmentalRiskclassification\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"riskClassificationConfirmation\"\r\n                  type=\"select\"\r\n                  id=\"riskClassificationConfirmation\"\r\n                  value={riskClassificationConfirmation}>\r\n                  <option value=\"Bajo\">Bajo</option>\r\n                  <option value=\"Medio\">Medio</option>\r\n                  <option value=\"MedioAlto\">Medio Alto</option>\r\n                  <option value=\"Alto\">Alto</option>\r\n                </AvField>\r\n              </AvGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n\r\n              {simpleQuestions.map(item => (\r\n                <SimpleChekQuestion key={item.name}\r\n                  name={item.name}\r\n                  question={item.question}\r\n                  value={questions[item.name] || false} />\r\n              ))\r\n              }\r\n\r\n              {/*\r\n            { composedQuestions.map(item => (\r\n              <ComposedQuestion key={ item.name } name={ item.name } question={ item.question } />\r\n            ))}\r\n */}\r\n            </Col>\r\n\r\n          </Row>\r\n\r\n          <Row className=\"my-4\">\r\n            <Col md=\"12\">\r\n              <AttachmentList editMode={true} attachments={[]} />\r\n            </Col>\r\n          </Row>\r\n\r\n        </AvForm>\r\n\r\n      </CardBody>\r\n\r\n    </Card>\r\n  );\r\n\r\n});\r\n\r\n\r\nFormAspectosAmbientales.propTypes = {\r\n};\r\n\r\nexport default FormAspectosAmbientales;\r\n"]},"metadata":{},"sourceType":"module"}