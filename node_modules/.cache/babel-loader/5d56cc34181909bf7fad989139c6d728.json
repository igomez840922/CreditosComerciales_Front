{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\17_RiesgoCredito\\\\riesgoCredito\\\\Conclusiones.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext, useImperativeHandle, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelper } from '../../../../helpers';\nimport { Card, CardBody, Row, Col, Button, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport RiesgoCreditoContext from '../RiesgoCreditoContext';\nimport ServicioRiesgoCredito from '../../../../services/RiesgoCredito/RiesgoCredito';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormConclusiones = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const t = translationHelper('environmental_risk');\n  const [formValid, setFormValid] = useState(false);\n  const [conclusions, setConclusions] = useState('');\n  const [isUpdatingRecord, setIsUpdatingRecord] = useState(false); // services\n\n  const context = useContext(RiesgoCreditoContext);\n  const servicioRiesgoCredito = new ServicioRiesgoCredito();\n  useImperativeHandle(ref, () => ({\n    submit: () => {\n      const form = document.getElementById('formRiesgoCreditoConclusiones');\n      form.requestSubmit();\n      return formValid;\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  useEffect(() => {\n    // load data\n    if (!context.transactionId) {\n      return;\n    }\n\n    const {\n      transactionId\n    } = context;\n    servicioRiesgoCredito.consultarRiesgoCreditoComercial(transactionId).then(info => {\n      if (info.transactId) {\n        setIsUpdatingRecord(true);\n      }\n\n      setConclusions(info.conclusions);\n    }).catch(error => {\n      console.error('error fetch riesgo credito', error);\n    });\n  }, [context]);\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n    const isValid = errors.length === 0;\n    setFormValid(isValid);\n\n    if (isValid) {\n      console.log('submit', values);\n      const {\n        transactionId\n      } = context;\n      servicioRiesgoCredito.guardarInformacionRiesgoCredito(transactionId, values, isUpdatingRecord).then(result => {\n        console.log('save success', result);\n      }).catch(error => {\n        console.error('save error', error);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: t(\"Conclusiones y Recomendaciones\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-title-desc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n        id: \"formRiesgoCreditoConclusiones\",\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"conclusions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"conclusions\",\n                type: \"textarea\",\n                id: \"conclusions\",\n                value: conclusions,\n                rows: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}, \"beYYsBL2lu1/5MxAx/8HoVxiF5A=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = FormConclusiones;\nFormConclusiones.propTypes = {};\nexport default FormConclusiones;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormConclusiones$forwardRef\");\n$RefreshReg$(_c2, \"FormConclusiones\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/17_RiesgoCredito/riesgoCredito/Conclusiones.js"],"names":["useState","useEffect","useContext","useImperativeHandle","forwardRef","PropTypes","translationHelper","Card","CardBody","Row","Col","Button","Label","AvForm","AvField","AvGroup","RiesgoCreditoContext","ServicioRiesgoCredito","FormConclusiones","props","ref","t","formValid","setFormValid","conclusions","setConclusions","isUpdatingRecord","setIsUpdatingRecord","context","servicioRiesgoCredito","submit","form","document","getElementById","requestSubmit","getFormValidation","transactionId","consultarRiesgoCreditoComercial","then","info","transactId","catch","error","console","handleSubmit","event","errors","values","preventDefault","isValid","length","log","guardarInformacionRiesgoCredito","result","propTypes"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext, useImperativeHandle, forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelper } from '../../../../helpers';\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Label\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport RiesgoCreditoContext from '../RiesgoCreditoContext';\r\nimport ServicioRiesgoCredito from '../../../../services/RiesgoCredito/RiesgoCredito';\r\n\r\nconst FormConclusiones = forwardRef((props, ref) => {\r\n\r\n  const t = translationHelper('environmental_risk');\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [conclusions, setConclusions] = useState('');\r\n  const [isUpdatingRecord, setIsUpdatingRecord] = useState(false);\r\n\r\n  // services\r\n  const context = useContext(RiesgoCreditoContext);\r\n  const servicioRiesgoCredito = new ServicioRiesgoCredito();\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: () => {\r\n      const form = document.getElementById('formRiesgoCreditoConclusiones');\r\n      form.requestSubmit();\r\n      return formValid;\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    // load data\r\n    if (!context.transactionId) {\r\n      return;\r\n    }\r\n    const { transactionId } = context;\r\n    servicioRiesgoCredito.consultarRiesgoCreditoComercial(transactionId)\r\n      .then((info) => {\r\n        if( info.transactId ) {\r\n          setIsUpdatingRecord(true);\r\n        }\r\n        setConclusions(info.conclusions);\r\n      })\r\n      .catch((error) => {\r\n        console.error('error fetch riesgo credito', error);\r\n      });\r\n  }, [context]);\r\n\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    const isValid = errors.length === 0;\r\n    setFormValid(isValid);\r\n    if (isValid) {\r\n      console.log('submit', values);\r\n      const { transactionId } = context;\r\n      servicioRiesgoCredito.guardarInformacionRiesgoCredito(transactionId, values, isUpdatingRecord)\r\n        .then((result) => {\r\n          console.log('save success', result);\r\n        })\r\n        .catch((error) => {\r\n          console.error('save error', error);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <h4 className=\"card-title\">{ t(\"Conclusiones y Recomendaciones\") }</h4>\r\n        <p className=\"card-title-desc\"></p>\r\n        <AvForm id=\"formRiesgoCreditoConclusiones\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n          <Row className=\"my-3\">\r\n            <Col md=\"12\">\r\n              <AvGroup>\r\n                <Label htmlFor=\"conclusions\"></Label>\r\n                <AvField className=\"form-control\"\r\n                  name=\"conclusions\"\r\n                  type=\"textarea\"\r\n                  id=\"conclusions\"\r\n                  value={conclusions}\r\n                  rows=\"4\" />\r\n              </AvGroup>\r\n            </Col>\r\n          </Row>\r\n        </AvForm>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n});\r\n\r\n\r\nFormConclusiones.propTypes = {\r\n};\r\n\r\nexport default FormConclusiones;\r\n"]},"metadata":{},"sourceType":"module"}