{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\SearchClientCore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Row, Col, Card, CardBody, Button, Label, Table, Pagination, PaginationItem, PaginationLink, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport { CoreServices, BackendServices } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchClientCore = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  const [dataRows, setDataRows] = useState([]);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [personTypeList, setPersonTypeList] = useState(undefined);\n  const [personTypeSelected, setPersonTypeSelected] = useState([]);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices()); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    loadInitialData();\n  }, []);\n\n  function loadInitialData() {\n    let json = [{\n      label: t(\"LegalPerson\"),\n      value: 2\n    }, {\n      label: t(\"NaturalPerson\"),\n      value: 1\n    }];\n    setPersonTypeList(json);\n    setPersonTypeSelected(json[0]);\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setPersonTypeList(json);\n        setPersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.personType) : json[0]);\n      }\n    }).catch(error => {});\n  }\n\n  function searchData(values) {\n    setIsActiveLoading(true);\n    const apiCore = new CoreServices();\n    apiCore.getPartiesInformation(values).then(dataList => {\n      var rows = dataList.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.clientname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.idtype\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.idnumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            onClick: () => {\n              props.onClientSelect(data);\n            },\n            title: t(\"Select\"),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-check-box-multiple-outline mdi-24px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 98\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, data.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this));\n      setDataRows(rows);\n    }).catch(error => {\n      console.error('Error fetching documents', error);\n    }).finally(() => {\n      setIsActiveLoading(false);\n    });\n  } // Submitimos formulario para busqueda de clientes\n\n\n  function handleSubmit2(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    values[\"PartyType\"] = personTypeSelected.value === 1 ? \"Natural\" : \"Juridico\";\n    searchData(values);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n    active: isActiveLoading,\n    spinner: true,\n    text: t(\"WaitingPlease\"),\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"SearchClient\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmClientSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit2,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: e => {\n                    setPersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                  },\n                  options: personTypeList,\n                  placeholder: t(\"SelectType\"),\n                  value: personTypeSelected,\n                  name: \"PersonType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: t(\"ID Number\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  type: \"text\",\n                  name: \"PartyId\",\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: \"4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: \"\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 38\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  type: \"submit\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-file-find mdi-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 53\n                  }, this), \" \", t(\"Search\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: dataRows.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"table-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Client Number\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"Client Name\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ID Type\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ID Number\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dataRows\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 9\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchClientCore, \"yjCaA9RYKRYfQBcRzWz0Cue2k4I=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = SearchClientCore;\nSearchClientCore.propTypes = {\n  onClientSelect: PropTypes.func\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default SearchClientCore;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchClientCore\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/SearchClientCore.js"],"names":["React","useState","PropTypes","useTranslation","Select","useLocation","useHistory","LoadingOverlay","Row","Col","Card","CardBody","Button","Label","Table","Pagination","PaginationItem","PaginationLink","CardFooter","AvForm","AvField","Link","CoreServices","BackendServices","SearchClientCore","props","t","i18n","location","dataRows","setDataRows","isActiveLoading","setIsActiveLoading","personTypeList","setPersonTypeList","undefined","personTypeSelected","setPersonTypeSelected","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","useEffect","loadInitialData","json","label","value","loadPersonTypes","consultarCatalogoTipoPersona","then","data","i","length","push","selectClient","find","x","personType","catch","error","searchData","values","apiCore","getPartiesInformation","dataList","rows","map","id","clientname","idtype","idnumber","onClientSelect","console","finally","handleSubmit2","event","errors","preventDefault","e","required","textAlign","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { CoreServices,BackendServices } from '../../services';\r\n\r\nconst SearchClientCore = (props) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation();  \r\n  \r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [personTypeList, setPersonTypeList] = useState(undefined);\r\n  const [personTypeSelected, setPersonTypeSelected] = useState([]);\r\n  \r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    loadInitialData();        \r\n  }, []);\r\n\r\n  function loadInitialData() {\r\n    let json = [{ label: t(\"LegalPerson\"), value: 2 },{ label: t(\"NaturalPerson\"), value: 1 },];\r\n    setPersonTypeList(json);\r\n    setPersonTypeSelected(json[0]);\r\n  }\r\n\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes(){\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                setPersonTypeList(json);                \r\n                setPersonTypeSelected(selectClient!==undefined?json.find(x => x.value === selectClient.personType):json[0]);\r\n            }          \r\n      }).catch((error) => { });    \r\n  }\r\n\r\n  function searchData(values) {\r\n    setIsActiveLoading(true);\r\n    const apiCore = new CoreServices()\r\n    apiCore.getPartiesInformation(values).then((dataList) => {\r\n        \r\n        var rows = dataList.map((data) => (\r\n            <tr key={ data.id }>\r\n              <td>{ data.id }</td>\r\n              <td>{ data.clientname }</td>\r\n              <td>{ data.idtype }</td>\r\n              <td>{ data.idnumber }</td>\r\n              <td>        \r\n                <Link  to={\"#\"} onClick={()=> { props.onClientSelect(data)}} title={t(\"Select\")}><i className=\"mdi mdi-check-box-multiple-outline mdi-24px\"></i></Link>\r\n              </td>\r\n            </tr>)\r\n          );\r\n\r\n          setDataRows(rows);\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching documents', error);\r\n      }).finally (() => {\r\n        setIsActiveLoading(false);\r\n      })\r\n  }\r\n\r\n  // Submitimos formulario para busqueda de clientes\r\n  function handleSubmit2(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }    \r\n    values[\"PartyType\"] = personTypeSelected.value===1?\"Natural\":\"Juridico\";\r\n    searchData(values);\r\n  }\r\n  \r\n\r\n  return (\r\n\r\n    <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <h5>{t(\"SearchClient\")}</h5>\r\n        <p className=\"card-title-desc\">\r\n        </p>\r\n        \r\n        <AvForm id=\"frmClientSearch\" className=\"needs-validation\" onSubmit={handleSubmit2}>\r\n        <Card>\r\n          <CardBody>\r\n\r\n          <Row>\r\n          <Col md=\"4\">\r\n            <div className=\"mb-3\">\r\n              <Label>{t(\"PersonType\")}</Label>\r\n              <Select\r\n                onChange={(e) => {setPersonTypeSelected(personTypeList.find(x => x.value === e.value))}}\r\n                options={personTypeList}\r\n                placeholder={t(\"SelectType\")}\r\n                value={personTypeSelected}\r\n                name=\"PersonType\"/>\r\n              {/*campoRequeridoIdentificacion ?\r\n                <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n              : null*/}\r\n            </div>\r\n          </Col>\r\n          \r\n            <Col md=\"4\">\r\n              <div className=\"mb-3\">\r\n                <Label>{t(\"ID Number\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"PartyId\"\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }}/>                \r\n              </div>              \r\n            </Col>  \r\n\r\n            <Col lg=\"4\"> \r\n            <div className=\"mb-3\"  style={{ textAlign: \"left\" }}>\r\n                <Label>&nbsp;</Label><br></br>                           \r\n              <Button color=\"success\" type=\"submit\"><i className=\"mdi mdi-file-find mdi-12px\"></i> {t(\"Search\")}</Button>               \r\n              </div>              \r\n                \r\n            </Col>\r\n          </Row>\r\n          \r\n          </CardBody>\r\n          <CardBody>\r\n          {dataRows.length > 0?\r\n        <div className=\"table-responsive\">\r\n          <Table className=\"table mb-0\">\r\n            <thead className=\"table-light\">\r\n              <tr>\r\n                <th>{t(\"Client Number\")}</th>\r\n                <th>{t(\"Client Name\")}</th>\r\n                <th>{t(\"ID Type\")}</th>\r\n                <th>{t(\"ID Number\")}</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { dataRows }\r\n            </tbody>\r\n          </Table>\r\n           \r\n        </div>\r\n:null}\r\n          </CardBody>\r\n        </Card>          \r\n          \r\n        </AvForm> \r\n    </LoadingOverlay>\r\n\r\n  )\r\n}\r\n\r\nSearchClientCore.propTypes = {\r\n  onClientSelect:PropTypes.func,\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default SearchClientCore;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}