{"ast":null,"code":"import _objectSpread from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import MockAdapter from\"axios-mock-adapter\";import*as url from\"../url_helper\";import accessToken from\"../jwt-token-access/accessToken\";import ApiServiceAuth from\"../../services/ApiServiceAuth\";import BackendServices from\"../../services/BackendServices/Services\";import toastr from\"toastr\";import\"toastr/build/toastr.min.css\";import LocalStorageHelper from\"../../helpers/LocalStorageHelper\";import*as opt from\"../../helpers/options_helper\";import{calenderTypeEvent,events,tasks}from\"../../common/data\";var users=[{uid:1,username:\"admin\",role:\"admin\",password:\"123456\",email:\"admin@themesbrand.com\"}];var fakeBackend=function fakeBackend(){// This sets the mock adap ter on the default instance\nvar mock=new MockAdapter(axios);var localStorageHelper=new LocalStorageHelper();mock.onPost(url.POST_FAKE_REGISTER).reply(function(config){var user=JSON.parse(config[\"data\"]);users.push(user);return new Promise(function(resolve,reject){setTimeout(function(){resolve([200,user]);});});});mock.onPost(\"/post-fake-login\").reply(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(config){var user,usr,psw,email,auth,header,validatorLogin,instancia,api,dataUser,menberof;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:user=JSON.parse(config[\"data\"]);usr=user.email;psw=user.password;email=user.email;auth={headers:{username:usr,password:psw}};header={login:\"ok\",autorizatrion:\"true\"};validatorLogin=false;instancia=new ApiServiceAuth();api=new BackendServices();_context.next=11;return api.getUserInfo(usr,psw);case 11:dataUser=_context.sent;if(!(dataUser!==undefined)){_context.next=30;break;}if(!(dataUser.status==200)){_context.next=29;break;}if(!(dataUser.result!==null&&dataUser.result!==undefined)){_context.next=26;break;}menberof=dataUser.result.menberOf;email=dataUser.result.userprincipalName.split(':')[1].trim();console.log('dataUser',dataUser,email);if(!(menberof!=null&&menberof.indexOf('OU=RHPAM')>=0)){_context.next=23;break;}_context.next=21;return instancia.post(url.URL_BPM_LOGIN,{},{},auth).then(function(resp){validatorLogin=resp.data.body!=null&&resp.data.body.Autentication==true?true:false;},function(reject){var businessStatus=reject.response.data.businessStatus;if(businessStatus==401){toastr.error(\"El usuario no esta autorizado en el bussines central\",'Error!');}else{toastr.error(reject.response.data.message,'Error!');}validatorLogin=false;});case 21:_context.next=24;break;case 23:toastr.error(\"El usuario no esta configurado en los grupos para acceder a la aplicacion\",'Error!');case 24:_context.next=27;break;case 26:toastr.error(\"Se ha presentado un error al obtener la informacion del usuario\",'Error!');case 27:_context.next=30;break;case 29:toastr.error(dataUser.error.exceptionMessage,'Error!');case 30:if(!(validatorLogin===true)){_context.next=33;break;}if(validatorLogin===true){localStorageHelper.save(opt.VARNAME_USRCREDENTIAL,{usr:usr,psw:psw,email:email});}return _context.abrupt(\"return\",new Promise(function(resolve,reject){toastr.options={positionClass:'toast-top-right',closeButton:true,progressBar:true,showEasing:'swing',hideEasing:'linear',showMethod:'fadeIn',hideMethod:'fadeOut',showDuration:'9599',hideDuration:'500995'};if(validatorLogin){resolve([200,header]);}else{toastr.error('Usuario o contrase√±a no validas','Error!');reject([400,\"Error al ingresar al portal\"]);}}));case 33:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());mock.onPost(\"/post-jwt-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var one=config.headers;var finalToken=one.Authorization;var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){// Verify Jwt token from header.Authorization\nif(finalToken===accessToken){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}}else{reject([400,\"Invalid Token !!\"]);}});});});mock.onPost(\"/post-fake-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}});});});mock.onPost(\"/fake-forget-pwd\").reply(function(config){// User needs to check that user is eXist or not and send mail for Reset New password\nreturn new Promise(function(resolve,reject){setTimeout(function(){resolve([200,\"Check you mail and reset your password.\"]);});});});mock.onPost(\"/post-jwt-register\").reply(function(config){var user=JSON.parse(config[\"data\"]);users.push(user);return new Promise(function(resolve,reject){setTimeout(function(){resolve([200,user]);});});});mock.onPost(\"/post-jwt-login\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.email===user.email&&usr.password===user.password;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){// You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\nvar token=accessToken;// JWT AccessToken\nvar tokenObj={accessToken:token};// Token Obj\nvar validUserObj=_objectSpread(_objectSpread({},validUser[0]),tokenObj);// validUser Obj\nresolve([200,validUserObj]);}else{reject([400,\"Username and password are invalid. Please enter correct username and password\"]);}});});});mock.onPost(\"/post-jwt-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var one=config.headers;var finalToken=one.Authorization;var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){// Verify Jwt token from header.Authorization\nif(finalToken===accessToken){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}}else{reject([400,\"Invalid Token !!\"]);}});});});mock.onPost(\"/post-fake-profile\").reply(function(config){var user=JSON.parse(config[\"data\"]);var validUser=users.filter(function(usr){return usr.uid===user.idx;});return new Promise(function(resolve,reject){setTimeout(function(){if(validUser[\"length\"]===1){var objIndex;//Find index of specific object using findIndex method.\nobjIndex=users.findIndex(function(obj){return obj.uid===user.idx;});//Update object's name property.\nusers[objIndex].username=user.username;// Assign a value to locastorage\nlocalStorage.removeItem(\"authUser\");localStorage.setItem(\"authUser\",JSON.stringify(users[objIndex]));resolve([200,\"Profile Editted successfully\"]);}else{reject([400,\"Something wrong for edit profile\"]);}});});});mock.onPost(\"/jwt-forget-pwd\").reply(function(config){// User needs to check that user is eXist or not and send mail for Reset New password\nreturn new Promise(function(resolve,reject){setTimeout(function(){resolve([200,\"Check you mail and reset your password.\"]);});});});mock.onPost(\"/social-login\").reply(function(config){var user=JSON.parse(config[\"data\"]);return new Promise(function(resolve,reject){setTimeout(function(){if(user&&user.token){// You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\nvar token=accessToken;// JWT AccessToken\nvar tokenObj={accessToken:token};// Token Obj\nvar validUserObj=_objectSpread(_objectSpread({},user[0]),tokenObj);// validUser Obj\nresolve([200,validUserObj]);}else{reject([400,\"Username and password are invalid. Please enter correct username and password\"]);}});});});mock.onGet(url.GET_TASKS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(tasks){// Passing fake JSON data as response\nresolve([200,tasks]);}else{reject([400,\"Cannot get tasks\"]);}});});});mock.onGet(url.GET_EVENTS).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(events){// Passing fake JSON data as response\nresolve([200,events]);}else{reject([400,\"Cannot get events\"]);}});});});mock.onPost(url.ADD_NEW_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot add event\"]);}});});});mock.onPut(url.UPDATE_EVENT).reply(function(event){return new Promise(function(resolve,reject){setTimeout(function(){if(event&&event.data){// Passing fake JSON data as response\nresolve([200,event.data]);}else{reject([400,\"Cannot update event\"]);}});});});mock.onDelete(url.DELETE_EVENT).reply(function(config){return new Promise(function(resolve,reject){setTimeout(function(){if(config&&config.headers){// Passing fake JSON data as response\nresolve([200,config.headers.event]);}else{reject([400,\"Cannot delete event\"]);}});});});mock.onGet(url.GET_CATEGORIES).reply(function(){return new Promise(function(resolve,reject){setTimeout(function(){if(calenderTypeEvent){// Passing fake JSON data as response\nresolve([200,calenderTypeEvent]);}else{reject([400,\"Cannot get categories\"]);}});});});};export default fakeBackend;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/AuthType/fakeBackend.js"],"names":["axios","MockAdapter","url","accessToken","ApiServiceAuth","BackendServices","toastr","LocalStorageHelper","opt","calenderTypeEvent","events","tasks","users","uid","username","role","password","email","fakeBackend","mock","localStorageHelper","onPost","POST_FAKE_REGISTER","reply","config","user","JSON","parse","push","Promise","resolve","reject","setTimeout","usr","psw","auth","headers","header","login","autorizatrion","validatorLogin","instancia","api","getUserInfo","dataUser","undefined","status","result","menberof","menberOf","userprincipalName","split","trim","console","log","indexOf","post","URL_BPM_LOGIN","then","resp","data","body","Autentication","businessStatus","response","error","message","exceptionMessage","save","VARNAME_USRCREDENTIAL","options","positionClass","closeButton","progressBar","showEasing","hideEasing","showMethod","hideMethod","showDuration","hideDuration","one","finalToken","Authorization","validUser","filter","idx","objIndex","findIndex","obj","localStorage","removeItem","setItem","stringify","token","tokenObj","validUserObj","onGet","GET_TASKS","GET_EVENTS","ADD_NEW_EVENT","event","onPut","UPDATE_EVENT","onDelete","DELETE_EVENT","GET_CATEGORIES"],"mappings":"ygBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,eAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,iCAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,yCAA5B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,6BAAP,CAEA,MAAOC,CAAAA,kBAAP,KAA+B,kCAA/B,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,8BAArB,CAEA,OACEC,iBADF,CAEEC,MAFF,CAGEC,KAHF,KAIO,mBAJP,CAMA,GAAIC,CAAAA,KAAK,CAAG,CACV,CACEC,GAAG,CAAE,CADP,CAEEC,QAAQ,CAAE,OAFZ,CAGEC,IAAI,CAAE,OAHR,CAIEC,QAAQ,CAAE,QAJZ,CAKEC,KAAK,CAAE,uBALT,CADU,CAAZ,CAUA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB;AACA,GAAMC,CAAAA,IAAI,CAAG,GAAIlB,CAAAA,WAAJ,CAAgBD,KAAhB,CAAb,CACA,GAAMoB,CAAAA,kBAAkB,CAAG,GAAIb,CAAAA,kBAAJ,EAA3B,CAEAY,IAAI,CAACE,MAAL,CAAYnB,GAAG,CAACoB,kBAAhB,EAAoCC,KAApC,CAA0C,SAAAC,MAAM,CAAI,CAClD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CACAZ,KAAK,CAACgB,IAAN,CAAWH,IAAX,EACA,MAAO,IAAII,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACfF,OAAO,CAAC,CAAC,GAAD,CAAML,IAAN,CAAD,CAAP,CACD,CAFS,CAAV,CAGD,CAJM,CAAP,CAKD,CARD,EAUAN,IAAI,CAACE,MAAL,CAAY,kBAAZ,EAAgCE,KAAhC,0FAAsC,iBAAMC,MAAN,oMAE9BC,IAF8B,CAEvBC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAFuB,CAG9BS,GAH8B,CAGxBR,IAAI,CAACR,KAHmB,CAI9BiB,GAJ8B,CAIxBT,IAAI,CAACT,QAJmB,CAKhCC,KALgC,CAKxBQ,IAAI,CAACR,KALmB,CAM9BkB,IAN8B,CAMvB,CACXC,OAAO,CAAE,CACPtB,QAAQ,CAAEmB,GADH,CAEPjB,QAAQ,CAAEkB,GAFH,CADE,CANuB,CAa9BG,MAb8B,CAarB,CACbC,KAAK,CAAE,IADM,CAEbC,aAAa,CAAE,MAFF,CAbqB,CAkBhCC,cAlBgC,CAkBf,KAlBe,CAmBhCC,SAnBgC,CAmBpB,GAAIrC,CAAAA,cAAJ,EAnBoB,CAqB9BsC,GArB8B,CAqB1B,GAAIrC,CAAAA,eAAJ,EArB0B,wBAsBdqC,CAAAA,GAAG,CAACC,WAAJ,CAAgBV,GAAhB,CAAoBC,GAApB,CAtBc,SAsBhCU,QAtBgC,oBAuBhCA,QAAQ,GAAKC,SAvBmB,gCAwB9BD,QAAQ,CAACE,MAAT,EAAmB,GAxBW,gCAyB7BF,QAAQ,CAACG,MAAT,GAAkB,IAAlB,EAA0BH,QAAQ,CAACG,MAAT,GAAmBF,SAzBhB,2BA0B1BG,QA1B0B,CA0BfJ,QAAQ,CAACG,MAAT,CAAgBE,QA1BD,CA2B9BhC,KAAK,CAAC2B,QAAQ,CAACG,MAAT,CAAgBG,iBAAhB,CAAkCC,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,EAAgDC,IAAhD,EAAN,CACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAuBV,QAAvB,CAAgC3B,KAAhC,EA5B8B,KA6B1B+B,QAAQ,EAAI,IAAZ,EAAoBA,QAAQ,CAACO,OAAT,CAAiB,UAAjB,GAAgC,CA7B1B,kDA8BtBd,CAAAA,SAAS,CAACe,IAAV,CAAetD,GAAG,CAACuD,aAAnB,CAAkC,EAAlC,CAAsC,EAAtC,CAA0CtB,IAA1C,EAAgDuB,IAAhD,CAAqD,SAAAC,IAAI,CAAI,CACjEnB,cAAc,CAAGmB,IAAI,CAACC,IAAL,CAAUC,IAAV,EAAkB,IAAlB,EAA0BF,IAAI,CAACC,IAAL,CAAUC,IAAV,CAAeC,aAAf,EAAgC,IAA1D,CAAiE,IAAjE,CAAwE,KAAzF,CACD,CAFK,CAEH,SAAA/B,MAAM,CAAI,CACX,GAAIgC,CAAAA,cAAc,CAAGhC,MAAM,CAACiC,QAAP,CAAgBJ,IAAhB,CAAqBG,cAA1C,CACA,GAAIA,cAAc,EAAI,GAAtB,CAA2B,CACzBzD,MAAM,CAAC2D,KAAP,CAAa,sDAAb,CAAqE,QAArE,EACD,CAFD,IAEO,CACL3D,MAAM,CAAC2D,KAAP,CAAalC,MAAM,CAACiC,QAAP,CAAgBJ,IAAhB,CAAqBM,OAAlC,CAA2C,QAA3C,EACD,CACD1B,cAAc,CAAG,KAAjB,CACD,CAVK,CA9BsB,wCA0C5BlC,MAAM,CAAC2D,KAAP,CAAa,2EAAb,CAA0F,QAA1F,EA1C4B,uCA6C9B3D,MAAM,CAAC2D,KAAP,CAAa,iEAAb,CAAgF,QAAhF,EA7C8B,uCAiDhC3D,MAAM,CAAC2D,KAAP,CAAarB,QAAQ,CAACqB,KAAT,CAAeE,gBAA5B,CAA8C,QAA9C,EAjDgC,aAuDhC3B,cAAc,GAAK,IAvDa,2BAwDlC,GAAIA,cAAc,GAAK,IAAvB,CAA6B,CAC3BpB,kBAAkB,CAACgD,IAAnB,CAAwB5D,GAAG,CAAC6D,qBAA5B,CAAmD,CAAEpC,GAAG,CAAEA,GAAP,CAAYC,GAAG,CAAEA,GAAjB,CAAsBjB,KAAK,CAAEA,KAA7B,CAAnD,EACD,CA1DiC,gCA4D3B,GAAIY,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCzB,MAAM,CAACgE,OAAP,CAAiB,CACfC,aAAa,CAAE,iBADA,CAEfC,WAAW,CAAE,IAFE,CAGfC,WAAW,CAAE,IAHE,CAIfC,UAAU,CAAE,OAJG,CAKfC,UAAU,CAAE,QALG,CAMfC,UAAU,CAAE,QANG,CAOfC,UAAU,CAAE,SAPG,CAQfC,YAAY,CAAE,MARC,CASfC,YAAY,CAAE,QATC,CAAjB,CAWA,GAAIvC,cAAJ,CAAoB,CAClBV,OAAO,CAAC,CAAC,GAAD,CAAMO,MAAN,CAAD,CAAP,CACD,CAFD,IAEO,CACL/B,MAAM,CAAC2D,KAAP,CAAa,iCAAb,CAAgD,QAAhD,EACAlC,MAAM,CAAC,CACL,GADK,CAEL,6BAFK,CAAD,CAAN,CAID,CACF,CArBM,CA5D2B,yDAAtC,gEAqFAZ,IAAI,CAACE,MAAL,CAAY,mBAAZ,EAAiCE,KAAjC,CAAuC,SAAAC,MAAM,CAAI,CAC/C,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CAEA,GAAMwD,CAAAA,GAAG,CAAGxD,MAAM,CAACY,OAAnB,CAEA,GAAI6C,CAAAA,UAAU,CAAGD,GAAG,CAACE,aAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGvE,KAAK,CAACwE,MAAN,CAAa,SAAAnD,GAAG,QAAIA,CAAAA,GAAG,CAACpB,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAhB,CAAlB,CAEA,MAAO,IAAIxD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf;AACA,GAAIiD,UAAU,GAAK9E,WAAnB,CAAgC,CAC9B,GAAIgF,SAAS,CAAC,QAAD,CAAT,GAAwB,CAA5B,CAA+B,CAC7B,GAAIG,CAAAA,QAAJ,CAEA;AACAA,QAAQ,CAAG1E,KAAK,CAAC2E,SAAN,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAC3E,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAnB,CAAX,CAEA;AACAzE,KAAK,CAAC0E,QAAD,CAAL,CAAgBxE,QAAhB,CAA2BW,IAAI,CAACX,QAAhC,CAEA;AACA2E,YAAY,CAACC,UAAb,CAAwB,UAAxB,EACAD,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAiCjE,IAAI,CAACkE,SAAL,CAAehF,KAAK,CAAC0E,QAAD,CAApB,CAAjC,EAEAxD,OAAO,CAAC,CAAC,GAAD,CAAM,8BAAN,CAAD,CAAP,CACD,CAdD,IAcO,CACLC,MAAM,CAAC,CAAC,GAAD,CAAM,kCAAN,CAAD,CAAN,CACD,CACF,CAlBD,IAkBO,CACLA,MAAM,CAAC,CAAC,GAAD,CAAM,kBAAN,CAAD,CAAN,CACD,CACF,CAvBS,CAAV,CAwBD,CAzBM,CAAP,CA0BD,CAnCD,EAqCAZ,IAAI,CAACE,MAAL,CAAY,oBAAZ,EAAkCE,KAAlC,CAAwC,SAAAC,MAAM,CAAI,CAChD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CAEA,GAAM2D,CAAAA,SAAS,CAAGvE,KAAK,CAACwE,MAAN,CAAa,SAAAnD,GAAG,QAAIA,CAAAA,GAAG,CAACpB,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAhB,CAAlB,CAEA,MAAO,IAAIxD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAImD,SAAS,CAAC,QAAD,CAAT,GAAwB,CAA5B,CAA+B,CAC7B,GAAIG,CAAAA,QAAJ,CAEA;AACAA,QAAQ,CAAG1E,KAAK,CAAC2E,SAAN,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAC3E,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAnB,CAAX,CAEA;AACAzE,KAAK,CAAC0E,QAAD,CAAL,CAAgBxE,QAAhB,CAA2BW,IAAI,CAACX,QAAhC,CAEA;AACA2E,YAAY,CAACC,UAAb,CAAwB,UAAxB,EACAD,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAiCjE,IAAI,CAACkE,SAAL,CAAehF,KAAK,CAAC0E,QAAD,CAApB,CAAjC,EAEAxD,OAAO,CAAC,CAAC,GAAD,CAAM,8BAAN,CAAD,CAAP,CACD,CAdD,IAcO,CACLC,MAAM,CAAC,CAAC,GAAD,CAAM,kCAAN,CAAD,CAAN,CACD,CACF,CAlBS,CAAV,CAmBD,CApBM,CAAP,CAqBD,CA1BD,EA4BAZ,IAAI,CAACE,MAAL,CAAY,kBAAZ,EAAgCE,KAAhC,CAAsC,SAAAC,MAAM,CAAI,CAC9C;AAEA,MAAO,IAAIK,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACfF,OAAO,CAAC,CAAC,GAAD,CAAM,yCAAN,CAAD,CAAP,CACD,CAFS,CAAV,CAGD,CAJM,CAAP,CAKD,CARD,EAUAX,IAAI,CAACE,MAAL,CAAY,oBAAZ,EAAkCE,KAAlC,CAAwC,SAAAC,MAAM,CAAI,CAChD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CACAZ,KAAK,CAACgB,IAAN,CAAWH,IAAX,EAEA,MAAO,IAAII,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACfF,OAAO,CAAC,CAAC,GAAD,CAAML,IAAN,CAAD,CAAP,CACD,CAFS,CAAV,CAGD,CAJM,CAAP,CAKD,CATD,EAWAN,IAAI,CAACE,MAAL,CAAY,iBAAZ,EAA+BE,KAA/B,CAAqC,SAAAC,MAAM,CAAI,CAC7C,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CACA,GAAM2D,CAAAA,SAAS,CAAGvE,KAAK,CAACwE,MAAN,CAChB,SAAAnD,GAAG,QAAIA,CAAAA,GAAG,CAAChB,KAAJ,GAAcQ,IAAI,CAACR,KAAnB,EAA4BgB,GAAG,CAACjB,QAAJ,GAAiBS,IAAI,CAACT,QAAtD,EADa,CAAlB,CAIA,MAAO,IAAIa,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAImD,SAAS,CAAC,QAAD,CAAT,GAAwB,CAA5B,CAA+B,CAC7B;AACA,GAAMU,CAAAA,KAAK,CAAG1F,WAAd,CAEA;AACA,GAAM2F,CAAAA,QAAQ,CAAG,CAAE3F,WAAW,CAAE0F,KAAf,CAAjB,CAAwC;AACxC,GAAME,CAAAA,YAAY,gCAAQZ,SAAS,CAAC,CAAD,CAAjB,EAAyBW,QAAzB,CAAlB,CAAsD;AAEtDhE,OAAO,CAAC,CAAC,GAAD,CAAMiE,YAAN,CAAD,CAAP,CACD,CATD,IASO,CACLhE,MAAM,CAAC,CACL,GADK,CAEL,+EAFK,CAAD,CAAN,CAID,CACF,CAhBS,CAAV,CAiBD,CAlBM,CAAP,CAmBD,CAzBD,EA2BAZ,IAAI,CAACE,MAAL,CAAY,mBAAZ,EAAiCE,KAAjC,CAAuC,SAAAC,MAAM,CAAI,CAC/C,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CAEA,GAAMwD,CAAAA,GAAG,CAAGxD,MAAM,CAACY,OAAnB,CAEA,GAAI6C,CAAAA,UAAU,CAAGD,GAAG,CAACE,aAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGvE,KAAK,CAACwE,MAAN,CAAa,SAAAnD,GAAG,QAAIA,CAAAA,GAAG,CAACpB,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAhB,CAAlB,CAEA,MAAO,IAAIxD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf;AACA,GAAIiD,UAAU,GAAK9E,WAAnB,CAAgC,CAC9B,GAAIgF,SAAS,CAAC,QAAD,CAAT,GAAwB,CAA5B,CAA+B,CAC7B,GAAIG,CAAAA,QAAJ,CAEA;AACAA,QAAQ,CAAG1E,KAAK,CAAC2E,SAAN,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAC3E,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAnB,CAAX,CAEA;AACAzE,KAAK,CAAC0E,QAAD,CAAL,CAAgBxE,QAAhB,CAA2BW,IAAI,CAACX,QAAhC,CAEA;AACA2E,YAAY,CAACC,UAAb,CAAwB,UAAxB,EACAD,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAiCjE,IAAI,CAACkE,SAAL,CAAehF,KAAK,CAAC0E,QAAD,CAApB,CAAjC,EAEAxD,OAAO,CAAC,CAAC,GAAD,CAAM,8BAAN,CAAD,CAAP,CACD,CAdD,IAcO,CACLC,MAAM,CAAC,CAAC,GAAD,CAAM,kCAAN,CAAD,CAAN,CACD,CACF,CAlBD,IAkBO,CACLA,MAAM,CAAC,CAAC,GAAD,CAAM,kBAAN,CAAD,CAAN,CACD,CACF,CAvBS,CAAV,CAwBD,CAzBM,CAAP,CA0BD,CAnCD,EAqCAZ,IAAI,CAACE,MAAL,CAAY,oBAAZ,EAAkCE,KAAlC,CAAwC,SAAAC,MAAM,CAAI,CAChD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CAEA,GAAM2D,CAAAA,SAAS,CAAGvE,KAAK,CAACwE,MAAN,CAAa,SAAAnD,GAAG,QAAIA,CAAAA,GAAG,CAACpB,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAhB,CAAlB,CAEA,MAAO,IAAIxD,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAImD,SAAS,CAAC,QAAD,CAAT,GAAwB,CAA5B,CAA+B,CAC7B,GAAIG,CAAAA,QAAJ,CAEA;AACAA,QAAQ,CAAG1E,KAAK,CAAC2E,SAAN,CAAgB,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAAC3E,GAAJ,GAAYY,IAAI,CAAC4D,GAArB,EAAnB,CAAX,CAEA;AACAzE,KAAK,CAAC0E,QAAD,CAAL,CAAgBxE,QAAhB,CAA2BW,IAAI,CAACX,QAAhC,CAEA;AACA2E,YAAY,CAACC,UAAb,CAAwB,UAAxB,EACAD,YAAY,CAACE,OAAb,CAAqB,UAArB,CAAiCjE,IAAI,CAACkE,SAAL,CAAehF,KAAK,CAAC0E,QAAD,CAApB,CAAjC,EAEAxD,OAAO,CAAC,CAAC,GAAD,CAAM,8BAAN,CAAD,CAAP,CACD,CAdD,IAcO,CACLC,MAAM,CAAC,CAAC,GAAD,CAAM,kCAAN,CAAD,CAAN,CACD,CACF,CAlBS,CAAV,CAmBD,CApBM,CAAP,CAqBD,CA1BD,EA4BAZ,IAAI,CAACE,MAAL,CAAY,iBAAZ,EAA+BE,KAA/B,CAAqC,SAAAC,MAAM,CAAI,CAC7C;AAEA,MAAO,IAAIK,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACfF,OAAO,CAAC,CAAC,GAAD,CAAM,yCAAN,CAAD,CAAP,CACD,CAFS,CAAV,CAGD,CAJM,CAAP,CAKD,CARD,EAUAX,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6BE,KAA7B,CAAmC,SAAAC,MAAM,CAAI,CAC3C,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,CAAC,MAAD,CAAjB,CAAb,CAEA,MAAO,IAAIK,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIP,IAAI,EAAIA,IAAI,CAACoE,KAAjB,CAAwB,CACtB;AACA,GAAMA,CAAAA,KAAK,CAAG1F,WAAd,CAEA;AACA,GAAM2F,CAAAA,QAAQ,CAAG,CAAE3F,WAAW,CAAE0F,KAAf,CAAjB,CAAwC;AACxC,GAAME,CAAAA,YAAY,gCAAQtE,IAAI,CAAC,CAAD,CAAZ,EAAoBqE,QAApB,CAAlB,CAAiD;AAEjDhE,OAAO,CAAC,CAAC,GAAD,CAAMiE,YAAN,CAAD,CAAP,CACD,CATD,IASO,CACLhE,MAAM,CAAC,CACL,GADK,CAEL,+EAFK,CAAD,CAAN,CAID,CACF,CAhBS,CAAV,CAiBD,CAlBM,CAAP,CAmBD,CAtBD,EAwBAZ,IAAI,CAAC6E,KAAL,CAAW9F,GAAG,CAAC+F,SAAf,EAA0B1E,KAA1B,CAAgC,UAAM,CACpC,MAAO,IAAIM,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIrB,KAAJ,CAAW,CACT;AACAmB,OAAO,CAAC,CAAC,GAAD,CAAMnB,KAAN,CAAD,CAAP,CACD,CAHD,IAGO,CACLoB,MAAM,CAAC,CAAC,GAAD,CAAM,kBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaAZ,IAAI,CAAC6E,KAAL,CAAW9F,GAAG,CAACgG,UAAf,EAA2B3E,KAA3B,CAAiC,UAAM,CACrC,MAAO,IAAIM,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAItB,MAAJ,CAAY,CACV;AACAoB,OAAO,CAAC,CAAC,GAAD,CAAMpB,MAAN,CAAD,CAAP,CACD,CAHD,IAGO,CACLqB,MAAM,CAAC,CAAC,GAAD,CAAM,mBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaAZ,IAAI,CAACE,MAAL,CAAYnB,GAAG,CAACiG,aAAhB,EAA+B5E,KAA/B,CAAqC,SAAA6E,KAAK,CAAI,CAC5C,MAAO,IAAIvE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIoE,KAAK,EAAIA,KAAK,CAACxC,IAAnB,CAAyB,CACvB;AACA9B,OAAO,CAAC,CAAC,GAAD,CAAMsE,KAAK,CAACxC,IAAZ,CAAD,CAAP,CACD,CAHD,IAGO,CACL7B,MAAM,CAAC,CAAC,GAAD,CAAM,kBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaAZ,IAAI,CAACkF,KAAL,CAAWnG,GAAG,CAACoG,YAAf,EAA6B/E,KAA7B,CAAmC,SAAA6E,KAAK,CAAI,CAC1C,MAAO,IAAIvE,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIoE,KAAK,EAAIA,KAAK,CAACxC,IAAnB,CAAyB,CACvB;AACA9B,OAAO,CAAC,CAAC,GAAD,CAAMsE,KAAK,CAACxC,IAAZ,CAAD,CAAP,CACD,CAHD,IAGO,CACL7B,MAAM,CAAC,CAAC,GAAD,CAAM,qBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaAZ,IAAI,CAACoF,QAAL,CAAcrG,GAAG,CAACsG,YAAlB,EAAgCjF,KAAhC,CAAsC,SAAAC,MAAM,CAAI,CAC9C,MAAO,IAAIK,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIR,MAAM,EAAIA,MAAM,CAACY,OAArB,CAA8B,CAC5B;AACAN,OAAO,CAAC,CAAC,GAAD,CAAMN,MAAM,CAACY,OAAP,CAAegE,KAArB,CAAD,CAAP,CACD,CAHD,IAGO,CACLrE,MAAM,CAAC,CAAC,GAAD,CAAM,qBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaAZ,IAAI,CAAC6E,KAAL,CAAW9F,GAAG,CAACuG,cAAf,EAA+BlF,KAA/B,CAAqC,UAAM,CACzC,MAAO,IAAIM,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACtCC,UAAU,CAAC,UAAM,CACf,GAAIvB,iBAAJ,CAAuB,CACrB;AACAqB,OAAO,CAAC,CAAC,GAAD,CAAMrB,iBAAN,CAAD,CAAP,CACD,CAHD,IAGO,CACLsB,MAAM,CAAC,CAAC,GAAD,CAAM,uBAAN,CAAD,CAAN,CACD,CACF,CAPS,CAAV,CAQD,CATM,CAAP,CAUD,CAXD,EAaD,CAtYD,CAwYA,cAAeb,CAAAA,WAAf","sourcesContent":["import axios from \"axios\"\r\nimport MockAdapter from \"axios-mock-adapter\"\r\nimport * as url from \"../url_helper\"\r\nimport accessToken from \"../jwt-token-access/accessToken\"\r\nimport ApiServiceAuth from \"../../services/ApiServiceAuth\";\r\nimport BackendServices from \"../../services/BackendServices/Services\";\r\nimport toastr from \"toastr\";\r\nimport \"toastr/build/toastr.min.css\"\r\n\r\nimport LocalStorageHelper from \"../../helpers/LocalStorageHelper\";\r\nimport * as opt from \"../../helpers/options_helper\"\r\n\r\nimport {\r\n  calenderTypeEvent,\r\n  events,\r\n  tasks,\r\n} from \"../../common/data\"\r\n\r\nlet users = [\r\n  {\r\n    uid: 1,\r\n    username: \"admin\",\r\n    role: \"admin\",\r\n    password: \"123456\",\r\n    email: \"admin@themesbrand.com\",\r\n  },\r\n]\r\n\r\nconst fakeBackend = () => {\r\n  // This sets the mock adap ter on the default instance\r\n  const mock = new MockAdapter(axios)\r\n  const localStorageHelper = new LocalStorageHelper();\r\n\r\n  mock.onPost(url.POST_FAKE_REGISTER).reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    users.push(user)\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, user])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-login\").reply(async config => {\r\n\r\n    const user = JSON.parse(config[\"data\"])\r\n    const usr = user.email\r\n    const psw = user.password\r\n    let email = user.email\r\n    const auth = {\r\n      headers: {\r\n        username: usr,\r\n        password: psw\r\n      }\r\n    }\r\n\r\n    const header = {\r\n      login: \"ok\",\r\n      autorizatrion: \"true\"\r\n    }\r\n\r\n    let validatorLogin = false;\r\n    let instancia = new ApiServiceAuth();\r\n\r\n    const api=new BackendServices();    \r\n    var dataUser =  await api.getUserInfo(usr,psw);\r\n    if (dataUser !== undefined) {\r\n      if (dataUser.status == 200) {\r\n        if(dataUser.result!==null && dataUser.result!== undefined){\r\n          var menberof = dataUser.result.menberOf;\r\n          email=dataUser.result.userprincipalName.split(':')[1].trim();\r\n          console.log('dataUser',dataUser,email);\r\n          if (menberof != null && menberof.indexOf('OU=RHPAM') >= 0) {\r\n            await instancia.post(url.URL_BPM_LOGIN, {}, {}, auth).then(resp => {\r\n              validatorLogin = resp.data.body != null && resp.data.body.Autentication == true ? true : false;\r\n            }, reject => {\r\n              var businessStatus = reject.response.data.businessStatus;\r\n              if (businessStatus == 401) {\r\n                toastr.error(\"El usuario no esta autorizado en el bussines central\", 'Error!');\r\n              } else {\r\n                toastr.error(reject.response.data.message, 'Error!');\r\n              }\r\n              validatorLogin = false\r\n            });\r\n          } else {\r\n            toastr.error(\"El usuario no esta configurado en los grupos para acceder a la aplicacion\", 'Error!');\r\n          }\r\n        }else{\r\n          toastr.error(\"Se ha presentado un error al obtener la informacion del usuario\", 'Error!');\r\n        }\r\n\r\n      } else {\r\n        toastr.error(dataUser.error.exceptionMessage, 'Error!');\r\n      }\r\n    }\r\n\r\n    //validatorLogin = true;//Trampa para entrar\r\n\r\n    if (validatorLogin === true) {\r\n      if (validatorLogin === true) {\r\n        localStorageHelper.save(opt.VARNAME_USRCREDENTIAL, { usr: usr, psw: psw, email: email});\r\n      }\r\n\r\n      return new Promise((resolve, reject) => {\r\n        toastr.options = {\r\n          positionClass: 'toast-top-right',\r\n          closeButton: true,\r\n          progressBar: true,\r\n          showEasing: 'swing',\r\n          hideEasing: 'linear',\r\n          showMethod: 'fadeIn',\r\n          hideMethod: 'fadeOut',\r\n          showDuration: '9599',\r\n          hideDuration: '500995'\r\n        }\r\n        if (validatorLogin) {\r\n          resolve([200, header])\r\n        } else {\r\n          toastr.error('Usuario o contrase√±a no validas', 'Error!');\r\n          reject([\r\n            400,\r\n            \"Error al ingresar al portal\",\r\n          ])\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const one = config.headers\r\n\r\n    let finalToken = one.Authorization\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // Verify Jwt token from header.Authorization\r\n        if (finalToken === accessToken) {\r\n          if (validUser[\"length\"] === 1) {\r\n            let objIndex\r\n\r\n            //Find index of specific object using findIndex method.\r\n            objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n            //Update object's name property.\r\n            users[objIndex].username = user.username\r\n\r\n            // Assign a value to locastorage\r\n            localStorage.removeItem(\"authUser\")\r\n            localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n            resolve([200, \"Profile Editted successfully\"])\r\n          } else {\r\n            reject([400, \"Something wrong for edit profile\"])\r\n          }\r\n        } else {\r\n          reject([400, \"Invalid Token !!\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          let objIndex\r\n\r\n          //Find index of specific object using findIndex method.\r\n          objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n          //Update object's name property.\r\n          users[objIndex].username = user.username\r\n\r\n          // Assign a value to locastorage\r\n          localStorage.removeItem(\"authUser\")\r\n          localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n          resolve([200, \"Profile Editted successfully\"])\r\n        } else {\r\n          reject([400, \"Something wrong for edit profile\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/fake-forget-pwd\").reply(config => {\r\n    // User needs to check that user is eXist or not and send mail for Reset New password\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, \"Check you mail and reset your password.\"])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-register\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    users.push(user)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, user])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-login\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n    const validUser = users.filter(\r\n      usr => usr.email === user.email && usr.password === user.password\r\n    )\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          // You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\r\n          const token = accessToken\r\n\r\n          // JWT AccessToken\r\n          const tokenObj = { accessToken: token } // Token Obj\r\n          const validUserObj = { ...validUser[0], ...tokenObj } // validUser Obj\r\n\r\n          resolve([200, validUserObj])\r\n        } else {\r\n          reject([\r\n            400,\r\n            \"Username and password are invalid. Please enter correct username and password\",\r\n          ])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-jwt-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const one = config.headers\r\n\r\n    let finalToken = one.Authorization\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        // Verify Jwt token from header.Authorization\r\n        if (finalToken === accessToken) {\r\n          if (validUser[\"length\"] === 1) {\r\n            let objIndex\r\n\r\n            //Find index of specific object using findIndex method.\r\n            objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n            //Update object's name property.\r\n            users[objIndex].username = user.username\r\n\r\n            // Assign a value to locastorage\r\n            localStorage.removeItem(\"authUser\")\r\n            localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n            resolve([200, \"Profile Editted successfully\"])\r\n          } else {\r\n            reject([400, \"Something wrong for edit profile\"])\r\n          }\r\n        } else {\r\n          reject([400, \"Invalid Token !!\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/post-fake-profile\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    const validUser = users.filter(usr => usr.uid === user.idx)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (validUser[\"length\"] === 1) {\r\n          let objIndex\r\n\r\n          //Find index of specific object using findIndex method.\r\n          objIndex = users.findIndex(obj => obj.uid === user.idx)\r\n\r\n          //Update object's name property.\r\n          users[objIndex].username = user.username\r\n\r\n          // Assign a value to locastorage\r\n          localStorage.removeItem(\"authUser\")\r\n          localStorage.setItem(\"authUser\", JSON.stringify(users[objIndex]))\r\n\r\n          resolve([200, \"Profile Editted successfully\"])\r\n        } else {\r\n          reject([400, \"Something wrong for edit profile\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/jwt-forget-pwd\").reply(config => {\r\n    // User needs to check that user is eXist or not and send mail for Reset New password\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        resolve([200, \"Check you mail and reset your password.\"])\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(\"/social-login\").reply(config => {\r\n    const user = JSON.parse(config[\"data\"])\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (user && user.token) {\r\n          // You have to generate AccessToken by jwt. but this is fakeBackend so, right now its dummy\r\n          const token = accessToken\r\n\r\n          // JWT AccessToken\r\n          const tokenObj = { accessToken: token } // Token Obj\r\n          const validUserObj = { ...user[0], ...tokenObj } // validUser Obj\r\n\r\n          resolve([200, validUserObj])\r\n        } else {\r\n          reject([\r\n            400,\r\n            \"Username and password are invalid. Please enter correct username and password\",\r\n          ])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_TASKS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (tasks) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, tasks])\r\n        } else {\r\n          reject([400, \"Cannot get tasks\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_EVENTS).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (events) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, events])\r\n        } else {\r\n          reject([400, \"Cannot get events\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPost(url.ADD_NEW_EVENT).reply(event => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data])\r\n        } else {\r\n          reject([400, \"Cannot add event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onPut(url.UPDATE_EVENT).reply(event => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (event && event.data) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, event.data])\r\n        } else {\r\n          reject([400, \"Cannot update event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onDelete(url.DELETE_EVENT).reply(config => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (config && config.headers) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, config.headers.event])\r\n        } else {\r\n          reject([400, \"Cannot delete event\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  mock.onGet(url.GET_CATEGORIES).reply(() => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (calenderTypeEvent) {\r\n          // Passing fake JSON data as response\r\n          resolve([200, calenderTypeEvent])\r\n        } else {\r\n          reject([400, \"Cannot get categories\"])\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n}\r\n\r\nexport default fakeBackend\r\n"]},"metadata":{},"sourceType":"module"}