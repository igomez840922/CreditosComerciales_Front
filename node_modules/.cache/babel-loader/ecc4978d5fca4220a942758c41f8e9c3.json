{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\3_Cumplimiento\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as opt from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button, Table, CardHeader } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport { useTranslation } from \"react-i18next\";\nimport LoadingOverlay from 'react-loading-overlay';\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\nimport LogProcess from \"../../../components/LogProcess/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Compliance = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [openNewClient, setopenNewClient] = useState(false); //Datos de la Tabla de Clientes\n\n  const [dataClientList, setdataClientList] = useState([]); //Cliente seleccionado\n\n  const [selectedClient, setselectedClient] = useState(undefined);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [personTypeList, setpersonTypeList] = useState([]); //mostrar el modal para la opciÃ³n de finalizar proceso\n\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices()); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\n        //location.data.transactionId = 0;\n        //checkAndCreateProcedure(location.data);\n        history.push(url.URL_DASHBOARD);\n      } else {\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\n        setLocationData(location.data);\n        fetchData(location.data);\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        setLocationData(result);\n        fetchData(result);\n      }\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadIdentificationTypes();\n    loadPersonTypes();\n    getProcessClients(locationData.transactionId);\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    backendServices.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    backendServices.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n      }\n    }).catch(error => {});\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients(transactionId) {\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId).then(data => {\n      if (data !== null && data !== undefined) {\n        setdataClientList(data);\n\n        if (data.length <= 0) {\n          setselectedClient(new PersonModel());\n          onOpenNewClient();\n        }\n      }\n    }).catch(error => {});\n  } //Abrir formulario Persona\n\n\n  function onOpenNewClient(show = true) {\n    setopenNewClient(show);\n  } //Editar Persona\n\n\n  function onEditClient(dataClient) {\n    setselectedClient(dataClient);\n    onOpenNewClient();\n  } //Eliminar Persona\n\n\n  function onDeleteClient(dataClient) {\n    //eliminarOrquestadoListaPersonaSolicitud\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient).then(data => {\n      getProcessClients(dataClient.transactId);\n    }).catch(error => {});\n  } //retorna el Tipo de Persona\n\n\n  function getPersnoType(pType) {\n    return personTypeList.find(x => x.value === pType);\n  } //retorna el Tipo de identificacion\n\n\n  function getIdentificationType(idType) {\n    return identificationTypeList.find(x => x.value === idType);\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } ////////// PARTE ES LA FINAL DEL PROCESO ///////\n  //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function showModalEndProcess(show = true) {\n    setdisplayModalEndProcess(show);\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    saveJBPMProcess(option);\n  }\n\n  async function saveJBPMProcess(option) {\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId);\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId, locationData.transactionId, opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE, maindebtor === null || maindebtor === void 0 ? void 0 : maindebtor.personId);\n    infoBpmModel.personName = maindebtor !== undefined ? maindebtor.name + \" \" + maindebtor.name2 + \" \" + maindebtor.lastName + \" \" + maindebtor.lastName2 : \"\";\n\n    switch (option) {\n      case opt.PROCESS_CANCELPROCESS:\n        {\n          bpmServices.abortProcess(infoBpmModel.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_CUMPLIMIENTO:\n        {\n          infoBpmModel.processId = opt.PROCESS_CUMPLIMIENTO;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(infoBpmModel.instanceId, values).then(data => {\n            if (data !== undefined) {\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n\n      case opt.PROCESS_LISTAEXCLUSION:\n        {\n          infoBpmModel.processId = opt.PROCESS_LISTAEXCLUSION;\n          infoBpmModel.activityId = opt.ACT_NONE;\n          var values = {\n            \"info\": JSON.stringify(infoBpmModel),\n            \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": opt.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId,\n            \"customerId\": \"\",\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\",\n            \"decision\": \"si\"\n          };\n          bpmServices.completedStatusTask(locationData.taskId, values).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n              showMessage(t(\"TheProcessCouldNotFinish\"));\n            } else {\n              //Mensaje ERROR\n              showMessage(t(\"ErrorSaveMessage\"), true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    //UpdateDataModel(selectedData);\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: t(\"CommercialCredit\"),\n      breadcrumbItem: t(\"Compliance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: t(\"Compliance\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: t(\"This form is official and must be filled out correctly\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 12,\n                  style: {\n                    textAlign: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    style: {\n                      textAlign: \"right\"\n                    },\n                    children: [t(\"Tramit\"), \":\", \" \", \"#\", locationData === null || locationData === void 0 ? void 0 : locationData.transactionId]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), openNewClient ? /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(ClientForm, {\n              transactId: locationData.transactionId,\n              clientSelected: selectedClient,\n              onCancel: () => {\n                onOpenNewClient(false);\n                getProcessClients(locationData.transactionId);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"card-sub-title\",\n                  children: t(\"ParticipantsList\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"12\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"table-responsive\",\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      className: \"table mb-0\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        className: \"table-light\",\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"PersonType\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 310,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"FullName\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 311,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"IdentificationType\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 312,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"IdentificationNumber\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 313,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"Roles\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 314,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            children: t(\"WatchList\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 315,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 316,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: dataClientList.length > 0 ? dataClientList.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getPersnoType(Number(item.personType)).label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 324,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: Number(item.personType) > 1 ? item.name : item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 325,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: getIdentificationType(item.idType).label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 326,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.clientDocumentId\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.roles !== undefined ? item.roles.map((rol, index) => rol.roleDescription + \" - \") : null\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 328,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: item.blacklist !== undefined && item.blacklist.length > 0 ? item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\" : \"No Aplica\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 334,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              textAlign: \"right\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(Link, {\n                              to: \"#\",\n                              onClick: e => {\n                                onEditClient(item);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"mdi mdi-border-color mdi-24px\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 339,\n                                columnNumber: 90\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 339,\n                              columnNumber: 37\n                            }, this), /*#__PURE__*/_jsxDEV(Link, {\n                              to: \"#\",\n                              onClick: e => {\n                                onDeleteClient(item);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                                className: \"mdi mdi-trash-can-outline mdi-24px\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 340,\n                                columnNumber: 92\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 340,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 323,\n                          columnNumber: 33\n                        }, this)) : /*#__PURE__*/_jsxDEV(\"td\", {\n                          colspan: \"7\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"alert alert-info\",\n                            style: {\n                              textAlign: \"center\"\n                            },\n                            children: t(\"NoData\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 344,\n                            columnNumber: 47\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 344,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this), !openNewClient ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(CardFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: \"12\",\n                children: /*#__PURE__*/_jsxDEV(Alert, {\n                  show: msgData.show,\n                  variant: msgData.isError ? \"danger\" : \"success\",\n                  dismissible: true,\n                  onClose: () => {\n                    console.log(\"onClose\");\n                    setmsgData({\n                      show: false,\n                      msg: \"\",\n                      isError: false\n                    });\n                  },\n                  children: msgData.msg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                style: {\n                  textAlign: \"left\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    showModalEndProcess();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-cancel mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 126\n                  }, this), \" \", t(\"Cancel\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: \"6\",\n                style: {\n                  textAlign: \"right\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"success\",\n                  type: \"button\",\n                  style: {\n                    margin: '5px'\n                  },\n                  onClick: () => {\n                    onSaveProcess(opt.PROCESS_LISTAEXCLUSION);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 147\n                  }, this), \" \", t(\"Advance\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), locationData ? /*#__PURE__*/_jsxDEV(LogProcess, {\n      logProcessModel: new LogProcessModel(locationData.instanceId, locationData.transactionId, 0, \"\", \"\", opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 12\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n      onSaveEndProcess: onSaveEndProcess,\n      isOpen: displayModalEndProcess,\n      toggle: () => {\n        showModalEndProcess(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Compliance, \"JT7oSDzLHJv9TZErHKGGANPApOY=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = Compliance;\nexport default Compliance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compliance\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/3_Cumplimiento/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","opt","url","Row","Col","Card","CardBody","Label","CardFooter","Button","Table","CardHeader","Alert","AvForm","AvField","Link","Breadcrumbs","useTranslation","LoadingOverlay","ClientForm","SweetAlert","AttachmentFileCore","ModalEndProcess","PersonModel","InfoBpmModel","BackendServices","CoreServices","BpmServices","LogProcessModel","LogProcess","Compliance","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","openNewClient","setopenNewClient","dataClientList","setdataClientList","selectedClient","setselectedClient","identificationTypeList","setidentificationTypeList","personTypeList","setpersonTypeList","displayModalEndProcess","setdisplayModalEndProcess","msgData","setmsgData","show","msg","isError","backendServices","setbackendServices","bpmServices","setbpmServices","useEffect","data","transactionId","length","push","URL_DASHBOARD","sessionStorage","setItem","JSON","stringify","fetchData","result","getItem","parse","checkAndStartTask","then","iniresult","loadIdentificationTypes","loadPersonTypes","getProcessClients","consultarCatalogoTipoIdentificacion","json","i","label","value","catch","error","consultarCatalogoTipoPersona","consultarOrquestadoListaPersonaSolicitud","onOpenNewClient","onEditClient","dataClient","onDeleteClient","eliminarOrquestadoListaPersonaSolicitud","transactId","getPersnoType","pType","find","x","getIdentificationType","idType","showMessage","message","showModalEndProcess","onSaveProcess","option","saveJBPMProcess","maindebtor","consultPrincipalDebtor","infoBpmModel","instanceId","PROCESS_CUMPLIMIENTO","ACT_NONE","personId","personName","name","name2","lastName","lastName2","PROCESS_CANCELPROCESS","abortProcess","processId","activityId","values","toString","updatevariables","PROCESS_LISTAEXCLUSION","completedStatusTask","taskId","onSaveEndProcess","textAlign","map","item","index","Number","personType","secondName","secondSurname","clientDocumentId","roles","rol","roleDescription","blacklist","blackList","e","console","log","margin"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport * as opt from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n  Table,\r\n  CardHeader,\r\n} from \"reactstrap\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\nimport { useTranslation } from \"react-i18next\";\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ClientForm from \"../1_Presolicitud/ClientForm\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport AttachmentFileCore from \"../../../components/Common/AttachmentFileCore\";\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { InfoBpmModel } from '../../../models/Common/InfoBpmModel';\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\n\r\nimport { LogProcessModel } from '../../../models/Common/LogProcessModel';\r\nimport LogProcess from \"../../../components/LogProcess/index\";\r\n\r\nconst Compliance = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [openNewClient, setopenNewClient] = useState(false);\r\n  //Datos de la Tabla de Clientes\r\n  const [dataClientList, setdataClientList] = useState([]);\r\n  //Cliente seleccionado\r\n  const [selectedClient, setselectedClient] = useState(undefined);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  //mostrar el modal para la opciÃ³n de finalizar proceso\r\n  const [displayModalEndProcess, setdisplayModalEndProcess] = useState(false);\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if (location.data !== null && location.data !== undefined) {\r\n      if (location.data.transactionId === undefined || location.data.transactionId.length <= 0) {\r\n        //location.data.transactionId = 0;\r\n        //checkAndCreateProcedure(location.data);\r\n        history.push(url.URL_DASHBOARD);\r\n      }\r\n      else {\r\n        sessionStorage.setItem('locationData', JSON.stringify(location.data));\r\n        setLocationData(location.data);\r\n        fetchData(location.data);\r\n      }\r\n    }\r\n    else {\r\n      //chequeamos si tenemos guardado en session\r\n      var result = sessionStorage.getItem('locationData');\r\n      if (result !== undefined && result !== null) {\r\n        result = JSON.parse(result);\r\n        setLocationData(result);\r\n        fetchData(result);\r\n      }\r\n    }\r\n  }, []);\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    getProcessClients(locationData.transactionId);\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    backendServices.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    backendServices.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //se buscan todos los clientes de este proceso \r\n  function getProcessClients(transactionId) {\r\n    backendServices.consultarOrquestadoListaPersonaSolicitud(transactionId)\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          setdataClientList(data)\r\n          if (data.length <= 0) {\r\n            setselectedClient(new PersonModel());\r\n            onOpenNewClient();\r\n          }\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Abrir formulario Persona\r\n  function onOpenNewClient(show = true) {\r\n    setopenNewClient(show)\r\n  }\r\n  //Editar Persona\r\n  function onEditClient(dataClient) {\r\n    setselectedClient(dataClient)\r\n    onOpenNewClient();\r\n  }\r\n  //Eliminar Persona\r\n  function onDeleteClient(dataClient) {\r\n    //eliminarOrquestadoListaPersonaSolicitud\r\n    backendServices.eliminarOrquestadoListaPersonaSolicitud(dataClient)\r\n      .then((data) => {\r\n        getProcessClients(dataClient.transactId);\r\n      }).catch((error) => { });\r\n  }\r\n  //retorna el Tipo de Persona\r\n  function getPersnoType(pType) {\r\n    return personTypeList.find(x => x.value === pType);\r\n  }\r\n  //retorna el Tipo de identificacion\r\n  function getIdentificationType(idType) {\r\n    return identificationTypeList.find(x => x.value === idType);\r\n  }\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  ////////// PARTE ES LA FINAL DEL PROCESO ///////\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function showModalEndProcess(show = true) {\r\n    setdisplayModalEndProcess(show);\r\n  }\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n\r\n    saveJBPMProcess(option);\r\n  }\r\n  async function saveJBPMProcess(option) {\r\n\r\n    var maindebtor = await backendServices.consultPrincipalDebtor(locationData.transactionId)\r\n\r\n    var infoBpmModel = new InfoBpmModel(locationData.instanceId,locationData.transactionId,\r\n      opt.PROCESS_CUMPLIMIENTO,opt.ACT_NONE,\r\n      maindebtor?.personId\r\n    );\r\n    infoBpmModel.personName=maindebtor!==undefined?(maindebtor.name + \" \" +maindebtor.name2 + \" \" +maindebtor.lastName + \" \" +maindebtor.lastName2 ):\"\";\r\n    \r\n    switch (option) {\r\n      case opt.PROCESS_CANCELPROCESS: {\r\n        bpmServices.abortProcess(infoBpmModel.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"TheProcessCouldNotFinish\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_CUMPLIMIENTO: {\r\n        infoBpmModel.processId=opt.PROCESS_CUMPLIMIENTO;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_CUMPLIMIENTO.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(infoBpmModel.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case opt.PROCESS_LISTAEXCLUSION: {\r\n        infoBpmModel.processId=opt.PROCESS_LISTAEXCLUSION;\r\n        infoBpmModel.activityId=opt.ACT_NONE;\r\n        \r\n        var values = {\r\n          \"info\":JSON.stringify(infoBpmModel),\r\n          \"processId\": opt.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": opt.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId,\r\n          \"customerId\": \"\",\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          \"decision\": \"si\"\r\n        };\r\n        bpmServices.completedStatusTask(locationData.taskId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n              showMessage(t(\"TheProcessCouldNotFinish\"));\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              showMessage(t(\"ErrorSaveMessage\"), true);\r\n            }\r\n          });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n    //UpdateDataModel(selectedData);\r\n    onSaveProcess(opt.PROCESS_CANCELPROCESS);\r\n  }\r\n  return (\r\n    <div className=\"page-content\">\r\n      <Breadcrumbs title={t(\"CommercialCredit\")} breadcrumbItem={t(\"Compliance\")} />\r\n      <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n        <Card>\r\n            <CardHeader>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <h4 className=\"card-title\">{t(\"Compliance\")}</h4>\r\n                  <p className=\"card-title-desc\">{t(\"This form is official and must be filled out correctly\")}</p>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Row>\r\n                    <Col sm={12} style={{ textAlign: \"right\" }}>\r\n                      <h5 className=\"card-title\" style={{ textAlign: \"right\" }}>{t(\"Tramit\")}:{\" \"}#{locationData?.transactionId}</h5>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>                     \r\n            </CardHeader>\r\n\r\n\r\n            {openNewClient ?\r\n              <Row>\r\n                <Col md=\"12\">\r\n                  <ClientForm transactId={locationData.transactionId} clientSelected={selectedClient} onCancel={() => { onOpenNewClient(false); getProcessClients(locationData.transactionId) }}></ClientForm>\r\n                </Col>\r\n              </Row>\r\n              :\r\n              <React.Fragment>\r\n                {/*<Row>\r\n                  <Col md=\"12\">\r\n                    <SearchClientCore onClientSelect={loadClientDataT24} onNewClientSelect={() => { setselectedClient(undefined); onOpenNewClient() }}/>      \r\n                  </Col>\r\n            </Row>*/}\r\n                <Card>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <h5 className=\"card-sub-title\">{t(\"ParticipantsList\")}</h5>\r\n                    </Col>\r\n                    {/*<Col md={6} style={{ textAlign: \"right\", }}>\r\n                      <h5 className=\"card-sub-title\">\r\n                        <Link to=\"#\" onClick={() => { showSearchClient() }} title={t(\"Search\")}><i className=\"mdi mdi-account-search-outline mdi-24px\"></i>{\" \"}</Link>\r\n                        &nbsp;&nbsp;\r\n                        <Link to=\"#\" onClick={() => { setselectedClient(undefined); onOpenNewClient() }} title={t(\"AddNew\")}><i className=\"mdi mdi-account-plus-outline mdi-24px\"></i>{\" \"}</Link>\r\n                      </h5>\r\n\r\n          </Col>*/}\r\n                  </Row>\r\n                  <CardBody>\r\n                  <Row>\r\n                    <Col md=\"12\">\r\n                      <div className=\"table-responsive\">\r\n                        <Table className=\"table mb-0\">\r\n                          <thead className=\"table-light\">\r\n                            <tr>\r\n                              <th>{t(\"PersonType\")}</th>\r\n                              <th>{t(\"FullName\")}</th>\r\n                              <th>{t(\"IdentificationType\")}</th>\r\n                              <th>{t(\"IdentificationNumber\")}</th>\r\n                              <th>{t(\"Roles\")}</th>\r\n                              <th>{t(\"WatchList\")}</th>\r\n                              <th></th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n\r\n                            {dataClientList.length > 0 ?\r\n                              dataClientList.map((item, index) => (\r\n                                <tr>\r\n                                  <td>{getPersnoType(Number(item.personType)).label}</td>\r\n                                  <td>{Number(item.personType) > 1 ? (item.name) : (item.name + \" \" + item.secondName + \" \" + item.lastName + \" \" + item.secondSurname)}</td>\r\n                                  <td>{getIdentificationType(item.idType).label}</td>\r\n                                  <td>{item.clientDocumentId}</td>\r\n                                  <td>\r\n                                    {item.roles !== undefined ?\r\n                                      item.roles.map((rol, index) => (\r\n                                        rol.roleDescription + \" - \"\r\n                                      )) : null}\r\n                                  </td>\r\n                                  <td>\r\n                                    {item.blacklist !== undefined && item.blacklist.length > 0 ?\r\n                                      (item.blacklist[item.blacklist.length - 1].blackList === true ? \"Aplica\" : \"No Aplica\") : \"No Aplica\"}\r\n                                  </td>\r\n                                  <td style={{ textAlign: \"right\" }}>\r\n                                    <Link to=\"#\" onClick={(e) => { onEditClient(item) }}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n                                    <Link to=\"#\" onClick={(e) => { onDeleteClient(item) }}><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Link>\r\n                                  </td>\r\n                                </tr>\r\n                              )) :\r\n                              <td colspan=\"7\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NoData\")}</div></td>\r\n                            }\r\n                          </tbody>\r\n                        </Table>\r\n                      </div>\r\n\r\n                    </Col>\r\n                  </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </React.Fragment>\r\n            }\r\n\r\n          {!openNewClient ?\r\n            <React.Fragment>\r\n\r\n              <CardFooter>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                      {msgData.msg}\r\n                    </Alert>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col md=\"6\" style={{ textAlign: \"left\" }}>\r\n                    <Button color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={() => { showModalEndProcess() }}><i className=\"mdi mdi-cancel mid-12px\"></i> {t(\"Cancel\")}</Button>\r\n                  </Col>\r\n                  <Col md=\"6\" style={{ textAlign: \"right\" }}>\r\n                    <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(opt.PROCESS_LISTAEXCLUSION) }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {t(\"Advance\")}</Button>\r\n                  </Col>\r\n                </Row>\r\n              </CardFooter>\r\n            </React.Fragment>\r\n            : null\r\n          }  \r\n           \r\n        </Card>\r\n      </LoadingOverlay>\r\n\r\n      {locationData?\r\n           <LogProcess logProcessModel={new LogProcessModel(locationData.instanceId,locationData.transactionId,0,\"\",\"\",opt.PROCESS_CUMPLIMIENTO, opt.ACT_NONE)}/>\r\n          :null}\r\n\r\n      <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { showModalEndProcess(false) }} />\r\n    </div>\r\n  )\r\n}\r\nexport default Compliance"]},"metadata":{},"sourceType":"module"}