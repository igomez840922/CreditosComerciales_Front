{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\ClientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types'; //i18n\n\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table, UncontrolledAlert } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport Switch from \"react-switch\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { BlacklistModel } from '../../../models/Common/BlacklistModel';\nimport BlackListForm from \"./BlackListForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = OnSymbol;\n\nconst ClientForm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [transactId, settransactId] = useState(props.transactId);\n  const [selectClient, setselectClient] = useState(props.clientSelected);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\n  const [roleList, setroleList] = useState([]);\n  const [roleSelected, setroleSelected] = useState(undefined);\n  const [countryList, setcountryList] = useState([]);\n  const [countrySelected, setcountrySelected] = useState(undefined);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  }); //Mostrar el Modal para busqueda en lista negra\n\n  const [showBlackListForm, setshowBlackListForm] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    fetchData();\n  }, []); //Caraga Inicial de datos\n\n  function fetchData() {\n    loadIdentificationTypes();\n    loadPersonTypes();\n    loadRoles();\n    loadCountries();\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n        setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n        setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.personType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de roles\n\n\n  function loadRoles() {\n    apiServiceBackend.retrieveRoleCatalog().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"roleDescription\"]),\n            value: data[i][\"roleId\"]\n          });\n        }\n\n        setroleList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de paises\n\n\n  function loadCountries() {\n    apiCoreServices.getPaisesCatalogo().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.Records.length; i++) {\n          json.push({\n            label: t(data.Records[i][\"Description\"]),\n            value: data.Records[i][\"Code\"]\n          });\n        }\n\n        setcountryList(json);\n        setcountrySelected(selectClient !== undefined ? json.find(x => x.value === selectClient.nationality) : json[0]);\n      }\n    }).catch(error => {});\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormClient(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n    clientPerson[e.target.name] = e.target.value;\n    setselectClient(clientPerson); //si la persona es juridica auto seleccionamos RUC\n\n    if (clientPerson.personType === 2) {\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\n    }\n  } //Actualizar roles de Cliente cada vez que se actualiza un checkbox\n\n\n  function handleChangeInputChkClient(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n\n    if (e.target.checked) {\n      //si es true lo agregamos\n      clientPerson.roles.push(e.target.name);\n    } else {\n      //lo borramos\n      var index = clientPerson.roles.indexOf(e.target.name);\n      clientPerson.roles.splice(index, 1);\n    }\n\n    console.log(clientPerson);\n    setselectClient(clientPerson);\n  } //Guardar el Cliente\n\n\n  function handleSubmitFormClient(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    if (selectClient !== undefined && selectClient !== null) {\n      if (selectClient.roles.length <= 0) {\n        showMessage(\"Debe seleccionar almenos un Rol para este cliente\", true);\n        return;\n      }\n\n      if (selectClient.blacklist.length <= 0) {\n        showMessage(\"Este cliente no ha sido verificado en Listas de Vigilancias\", true);\n        return;\n      }\n\n      if (selectClient.personId <= 0) {\n        //nueva persona\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n          } else {\n            showMessage(\"Los Datos no puedieron ser guardados\", true);\n          }\n        }).catch(err => {});\n      } else {\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n          } else {\n            showMessage(\"Los Datos no puedieron ser guardados\", true);\n          }\n        }).catch(err => {});\n      }\n    } else {\n      showMessage(\"El cliente no es valido\", true);\n    }\n  } //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\n\n\n  function getClientDataFormByPersonType(personType) {\n    if (personType === undefined) {\n      return null;\n    }\n\n    switch (personType.value) {\n      case 1:\n        {\n          //Natural\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"FirstName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"name\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.name : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondName : '' //errorMessage={t(\"Required Field\")}\n                  //validate={{ required: { value: true } }} \n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.lastName : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondSurname\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondSurname\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondSurname : '' //errorMessage={t(\"Required Field\")}\n                  //validate={{ required: { value: true } }} \n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"birthDate\",\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"birthDate\",\n                  type: \"date\",\n                  onChange: e => {\n                    e.target.value = moment(e.target.value).format(\"YYYY-MM-DD\");\n                    handleChangeInputFormClient(e);\n                  },\n                  value: selectClient !== undefined ? selectClient.birthDate : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 18\n          }, this);\n        }\n\n      case 2:\n        {\n          //Juridica\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"name\",\n                type: \"text\",\n                onChange: handleChangeInputFormClient,\n                value: selectClient !== undefined ? selectClient.name : '',\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 11\n          }, this);\n        }\n    }\n\n    return null;\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n\n    if (selectClient !== undefined) {\n      clientPerson.personId = selectClient.personId;\n    }\n\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    setselectClient(clientPerson);\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    msgData.show = false;\n    setmsgData(msgData);\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } //Abrir modal de verificacion en listas de vigilancias\n\n\n  function showWatchListCheck(show = true) {\n    setshowBlackListForm(show);\n  }\n\n  function addWatchListResult(resultWatchList) {\n    if (selectClient !== undefined) {\n      var blacklistmdl = new BlacklistModel();\n      blacklistmdl.backList = resultWatchList.blackList;\n      blacklistmdl.commentsSearchDiscard = resultWatchList.comments;\n      blacklistmdl.transactId = transactId;\n      selectClient.blacklist.push(blacklistmdl);\n      setselectClient(selectClient);\n    }\n  } //Elimina record de la lista de Incidencias de Black Lista\n\n\n  function removeWatchListResult(index) {\n    selectClient.blacklist.splice(index, 1);\n    setselectClient(selectClient);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchClientCore, {\n      onClientSelect: loadClientDataT24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Client\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmClient\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmitFormClient,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"personType\",\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: e => {\n                    setpersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'personType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: personTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: personTypeSelected,\n                  name: \"personType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"customerNumberT24\",\n                  children: t(\"ClientNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"customerNumberT24\",\n                  type: \"number\" //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\n                  ,\n                  value: selectClient !== undefined ? selectClient.customerNumberT24 : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: getClientDataFormByPersonType(personTypeSelected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: t(\"IdType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: e => {\n                    setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'idType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: identificationTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: identificationTypeSelected,\n                  name: \"idType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"idnumber\",\n                  children: t(\"IdNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"clientDocumentId\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: selectClient !== undefined ? selectClient.clientDocumentId : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"nationality\",\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: e => {\n                    setcountrySelected(countryList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'nationality',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: countryList,\n                  classNamePrefix: \"select2-selection\",\n                  value: countrySelected,\n                  name: \"nationality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"phone\",\n                  children: t(\"PhoneNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"phone\",\n                  type: \"number\" //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\n                  ,\n                  value: selectClient !== undefined ? selectClient.phone : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"email\",\n                  children: t(\"Email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"email\",\n                  type: \"email\" //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\n                  ,\n                  value: selectClient !== undefined ? selectClient.email : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-check-label\",\n              children: t(\"Roles\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2002\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 19\n            }, this), roleList.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n              md: \"4\",\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                check: true,\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(AvInput, {\n                  type: \"checkbox\",\n                  name: item.value,\n                  onChange: handleChangeInputChkClient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  check: true,\n                  htmlFor: item.value,\n                  children: [\" \", item.label]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u2002\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                className: \"form-check-label\",\n                children: t(\"BlackListIncidences\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u2002\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"6\",\n              style: {\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"success\",\n                type: \"button\",\n                onClick: showWatchListCheck,\n                style: {\n                  margin: '5px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"mdi mdi-file-find mdi-12px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 116\n                }, this), \" \", t(\"Verify\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 21\n            }, this), selectClient !== undefined && selectClient.blacklist !== undefined && selectClient.blacklist.length > 0 ? /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"table-responsive\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  className: \"table mb-0\",\n                  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                    className: \"table-light\",\n                    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                        children: t(\"WithMatches\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 539,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                        children: t(\"Comments\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                    children: selectClient.blacklist.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.backList ? \"Si\" : \"No\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: item.commentsSearchDiscard\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: /*#__PURE__*/_jsxDEV(Link, {\n                          to: \"#\",\n                          className: \"float-end mx-1\",\n                          title: t(\"Delete\"),\n                          onClick: () => removeWatchListResult(index),\n                          children: /*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"mdi mdi-file-remove-outline mdi-24px\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 550,\n                            columnNumber: 137\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 550,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 549,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 546,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-info\",\n                style: {\n                  textAlign: \"center\"\n                },\n                children: t(\"NotVerified\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                show: msgData.show,\n                variant: msgData.isError ? \"danger\" : \"success\",\n                dismissible: true,\n                onClose: () => {\n                  console.log(\"onClose\");\n                  setmsgData({\n                    show: false,\n                    msg: \"\",\n                    isError: false\n                  });\n                },\n                children: msgData.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: props.onCancel,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 21\n            }, this), \" \", t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"submit\",\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 83\n            }, this), \" \", t(\"Save\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 5\n    }, this), showBlackListForm ? /*#__PURE__*/_jsxDEV(BlackListForm, {\n      clientSelected: selectClient,\n      isOpen: showBlackListForm,\n      toggle: () => {\n        setshowBlackListForm(!showBlackListForm);\n      },\n      watchListResult: addWatchListResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 3\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientForm, \"ASMnOueH2ynEXjSbVGVlxISIZME=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = ClientForm;\nClientForm.propTypes = {\n  onCancel: PropTypes.func,\n  clientSelected: PropTypes.any,\n  transactId: PropTypes.any\n};\nexport default ClientForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"ClientForm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/ClientForm.js"],"names":["React","useState","PropTypes","useTranslation","useLocation","useHistory","OPTs","url","moment","Select","Link","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","UncontrolledAlert","Alert","Switch","BackendServices","CoreServices","BpmServices","AvForm","AvField","AvGroup","AvInput","AvCheckbox","SearchClientCore","PersonModel","BlacklistModel","BlackListForm","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","ClientForm","props","t","i18n","transactId","settransactId","selectClient","setselectClient","clientSelected","identificationTypeList","setidentificationTypeList","identificationTypeSelected","setidentificationTypeSelected","undefined","personTypeList","setpersonTypeList","personTypeSelected","setpersonTypeSelected","roleList","setroleList","roleSelected","setroleSelected","countryList","setcountryList","countrySelected","setcountrySelected","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","msgData","setmsgData","show","msg","isError","showBlackListForm","setshowBlackListForm","useEffect","fetchData","loadIdentificationTypes","loadPersonTypes","loadRoles","loadCountries","consultarCatalogoTipoIdentificacion","then","data","json","i","length","push","label","value","find","x","idType","catch","error","consultarCatalogoTipoPersona","personType","retrieveRoleCatalog","getPaisesCatalogo","Records","nationality","handleChangeInputFormClient","e","clientPerson","target","name","handleChangeInputChkClient","checked","roles","index","indexOf","splice","console","log","handleSubmitFormClient","event","errors","values","preventDefault","showMessage","blacklist","personId","nuevoOrquestadoListaPersonaSolicitud","onCancel","err","actualizarOrquestadoListaPersonaSolicitud","getClientDataFormByPersonType","required","secondName","lastName","secondSurname","format","birthDate","loadClientDataT24","dataClientT24","customerNumberT24","id","clientDocumentId","idnumber","firstname","secondname","lastname","secondlastname","Number","partyType","idtype","message","showWatchListCheck","addWatchListResult","resultWatchList","blacklistmdl","backList","blackList","commentsSearchDiscard","comments","removeWatchListResult","errorMessage","phone","email","map","item","textAlign","margin","propTypes","func","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useLocation,useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Label,\r\n  Table, \r\n  UncontrolledAlert,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport Switch from \"react-switch\";\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../services\";\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox} from \"availity-reactstrap-validation\";\r\nimport SearchClientCore from \"../../../components/Common/SearchClientCore\";\r\nimport {PersonModel} from '../../../models/Common/PersonModel';\r\nimport {BlacklistModel} from '../../../models/Common/BlacklistModel';\r\nimport BlackListForm from \"./BlackListForm\"\r\n\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n      <div\r\n          style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n              fontSize: 12,\r\n              color: \"#fff\",\r\n              paddingRight: 2,\r\n          }}\r\n      >\r\n          {\" \"}\r\n          No\r\n      </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n      <div\r\n          style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n              fontSize: 12,\r\n              color: \"#fff\",\r\n              paddingRight: 2,\r\n          }}\r\n      >\r\n          {\" \"}\r\n          Si\r\n      </div>\r\n  );\r\n};\r\n\r\nconst ClientForm = props => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n  \r\n    const [transactId, settransactId] = useState(props.transactId);\r\n    const [selectClient, setselectClient] = useState(props.clientSelected);\r\n\r\n    const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n    const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\r\n\r\n    const [personTypeList, setpersonTypeList] = useState([]);\r\n    const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\r\n\r\n    const [roleList, setroleList] = useState([]);\r\n    const [roleSelected, setroleSelected] = useState(undefined);\r\n\r\n    const [countryList, setcountryList] = useState([]);\r\n    const [countrySelected, setcountrySelected] = useState(undefined);\r\n      \r\n    const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n    const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n    \r\n    const [msgData, setmsgData] = useState({show:false,msg:\"\",isError:false});\r\n    //Mostrar el Modal para busqueda en lista negra\r\n    const [showBlackListForm, setshowBlackListForm] = useState(false);\r\n  \r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {    \r\n    fetchData();\r\n  }, []);\r\n\r\n  //Caraga Inicial de datos\r\n  function fetchData() {\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    loadRoles();\r\n    loadCountries();\r\n  } \r\n\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes(){\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n                }\r\n                setidentificationTypeList(json)\r\n                setidentificationTypeSelected(selectClient!==undefined?json.find(x => x.value === selectClient.idType):json[0]);\r\n            }          \r\n      }).catch((error) => { });    \r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes(){\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n        .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n                let json = [];\r\n                for (let i = 0; i < data.length; i++) {\r\n                  json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n                }\r\n                setpersonTypeList(json);                \r\n                setpersonTypeSelected(selectClient!==undefined?json.find(x => x.value === selectClient.personType):json[0]);\r\n            }          \r\n      }).catch((error) => { });    \r\n  }\r\n  //cargar lista de roles\r\n  function loadRoles(){\r\n    apiServiceBackend.retrieveRoleCatalog()\r\n        .then((data) => {\r\n          if (data !== null && data !== undefined) {\r\n            let json = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n              json.push({ label: t(data[i][\"roleDescription\"]), value: data[i][\"roleId\"] })\r\n            }\r\n            setroleList(json)\r\n        }         \r\n      }).catch((error) => { });    \r\n  }\r\n  //cargar lista de paises\r\n  function loadCountries(){\r\n    apiCoreServices.getPaisesCatalogo()\r\n        .then((data) => {\r\n          if (data !== null && data !== undefined) {\r\n            let json = [];\r\n            for (let i = 0; i < data.Records.length; i++) {\r\n              json.push({ label: t(data.Records[i][\"Description\"]), value: data.Records[i][\"Code\"] })\r\n            }\r\n            setcountryList(json);            \r\n            setcountrySelected(selectClient!==undefined?json.find(x => x.value === selectClient.nationality):json[0]);\r\n        }         \r\n      }).catch((error) => { });    \r\n  }\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormClient(e) {\r\n\r\n    var clientPerson = selectClient!==undefined?selectClient:new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n        \r\n    clientPerson[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n\r\n    //si la persona es juridica auto seleccionamos RUC\r\n    if(clientPerson.personType === 2){\r\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));          \r\n    }\r\n  }\r\n  //Actualizar roles de Cliente cada vez que se actualiza un checkbox\r\n  function handleChangeInputChkClient(e) {\r\n\r\n    var clientPerson = selectClient!==undefined?selectClient:new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n\r\n    if(e.target.checked){ //si es true lo agregamos\r\n      clientPerson.roles.push(e.target.name);\r\n    }\r\n    else{//lo borramos\r\n      var index = clientPerson.roles.indexOf(e.target.name);\r\n      clientPerson.roles.splice(index, 1);\r\n    }\r\n    console.log(clientPerson);\r\n    setselectClient(clientPerson);    \r\n  }\r\n  //Guardar el Cliente\r\n  function handleSubmitFormClient(event, errors, values){\r\n    \r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n\r\n    if(selectClient!==undefined && selectClient!==null ){\r\n\r\n      if(selectClient.roles.length<=0){\r\n        showMessage(\"Debe seleccionar almenos un Rol para este cliente\",true);\r\n        return;\r\n      }\r\n      \r\n      if(selectClient.blacklist.length<=0){\r\n        showMessage(\"Este cliente no ha sido verificado en Listas de Vigilancias\",true);\r\n        return;\r\n      }\r\n      \r\n      if(selectClient.personId<=0){//nueva persona\r\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              //salir\r\n              props.onCancel();\r\n          }\r\n          else{\r\n            showMessage(\"Los Datos no puedieron ser guardados\",true);\r\n          }         \r\n        }).catch((err) => { });\r\n      }\r\n      else{\r\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              //salir\r\n              props.onCancel();\r\n          }\r\n          else{\r\n            showMessage(\"Los Datos no puedieron ser guardados\",true);\r\n          }         \r\n        }).catch((err) => { });\r\n      }\r\n    }\r\n    else{\r\n      showMessage(\"El cliente no es valido\",true);\r\n    }\r\n\r\n  }\r\n  //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\r\n  function getClientDataFormByPersonType(personType){\r\n    if(personType === undefined){\r\n      return null;\r\n    }\r\n\r\n    switch(personType.value){\r\n        case 1:{//Natural\r\n         return( <React.Fragment>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"FirstName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                  value={selectClient !== undefined?selectClient.name:''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} \r\n                  />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined?selectClient.secondName:''}\r\n                //errorMessage={t(\"Required Field\")}\r\n                //validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"lastName\">{t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined?selectClient.lastName:''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondSurname\">{t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondSurname\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined?selectClient.secondSurname:''}\r\n                //errorMessage={t(\"Required Field\")}\r\n                //validate={{ required: { value: true } }} \r\n                />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\">\r\n                <AvGroup className=\"mb-3\">\r\n                  <Label htmlFor=\"birthDate\">{t(\"DBO\")}</Label>\r\n                  <AvField\r\n                    className=\"form-control\"\r\n                    name=\"birthDate\"\r\n                    type=\"date\" onChange={(e)=>{ e.target.value = moment(e.target.value).format(\"YYYY-MM-DD\"); handleChangeInputFormClient(e)}}\r\n                    value={selectClient !== undefined?selectClient.birthDate:''}\r\n                    />\r\n                </AvGroup>\r\n              </Col>\r\n        </React.Fragment>)\r\n        } \r\n        case 2:{//Juridica\r\n          return(\r\n          <Col md=\"12\">\r\n              <div className=\"mb-3\">\r\n                <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n                <AvField\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  type=\"text\" onChange={handleChangeInputFormClient}\r\n                  value={selectClient !== undefined?selectClient.name:''}\r\n                  errorMessage={t(\"Required Field\")}\r\n                  validate={{ required: { value: true } }} />\r\n              </div>\r\n            </Col>\r\n            )\r\n        } \r\n    }\r\n\r\n    return null;\r\n  }  \r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24){    \r\n    \r\n    var clientPerson = new PersonModel();\r\n    if(selectClient!==undefined){\r\n      clientPerson.personId = selectClient.personId;\r\n    }\r\n    \r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    \r\n    setselectClient(clientPerson);\r\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));  \r\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));  \r\n  }\r\n  //mostrar mensaje \r\n  function showMessage(message,isError=false){\r\n    \r\n    msgData.show=false;\r\n\r\n    setmsgData(msgData);   \r\n   \r\n    setmsgData({show:true,msg:message,isError:isError})   \r\n  }  \r\n  //Abrir modal de verificacion en listas de vigilancias\r\n  function showWatchListCheck(show=true){\r\n    setshowBlackListForm(show);\r\n  }\r\n\r\n  function addWatchListResult(resultWatchList){\r\n    if(selectClient!==undefined){\r\n\r\n      var blacklistmdl = new BlacklistModel();\r\n      blacklistmdl.backList = resultWatchList.blackList;\r\n      blacklistmdl.commentsSearchDiscard = resultWatchList.comments;\r\n      blacklistmdl.transactId = transactId;\r\n\r\n      selectClient.blacklist.push(blacklistmdl); \r\n      setselectClient(selectClient);\r\n\r\n    }\r\n  }\r\n  //Elimina record de la lista de Incidencias de Black Lista\r\n  function removeWatchListResult(index){\r\n    selectClient.blacklist.splice(index, 1);\r\n    setselectClient(selectClient);\r\n  }\r\n\r\n  return (\r\n   \r\n    <React.Fragment>      \r\n    \r\n    <SearchClientCore onClientSelect={loadClientDataT24}/>\r\n\r\n    <h5>{t(\"Client\")}</h5>\r\n    <p className=\"card-title-desc\"></p>\r\n\r\n    <AvForm id=\"frmClient\" className=\"needs-validation\" onSubmit={handleSubmitFormClient}>\r\n        <Card>\r\n                <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setpersonTypeSelected(personTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({target: { name:'personType', value: e.value }}) }}\r\n                          options={personTypeList}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          value={personTypeSelected}\r\n                          name=\"personType\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"customerNumberT24\">{t(\"ClientNumber\")}</Label>\r\n                        <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                          name=\"customerNumberT24\" type=\"number\"\r\n                          //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                          value={selectClient !== undefined?selectClient.customerNumberT24:''}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    {getClientDataFormByPersonType(personTypeSelected)}                      \r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label>{t(\"IdType\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({target: { name:'idType', value: e.value }}) }}\r\n                          options={identificationTypeList}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          value={identificationTypeSelected}\r\n                          name=\"idType\"\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                        <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                          name=\"clientDocumentId\" type=\"text\"\r\n                          validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                          value={selectClient !== undefined?selectClient.clientDocumentId:''}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>                  \r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"nationality\">{t(\"Nationality\")}</Label>\r\n                        <Select\r\n                          onChange={(e) => { setcountrySelected(countryList.find(x => x.value === e.value)); handleChangeInputFormClient({target: { name:'nationality', value: e.value }}) }}\r\n                          options={countryList}\r\n                          classNamePrefix=\"select2-selection\"\r\n                          value={countrySelected}\r\n                          name=\"nationality\"\r\n                        />\r\n                      </div>\r\n                    </Col> \r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"phone\">{t(\"PhoneNumber\")}</Label>\r\n                        <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                          name=\"phone\" type=\"number\"\r\n                          //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                          value={selectClient !== undefined?selectClient.phone:''}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <div className=\"mb-3\">\r\n                        <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n                        <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                          name=\"email\" type=\"email\"\r\n                          //validate={{required: { value: true, errorMessage: t(\"Required Field\") }}}\r\n                          value={selectClient !== undefined?selectClient.email:''}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                  <Label className=\"form-check-label\">{t(\"Roles\")}</Label>\r\n                  <p>&ensp;</p>\r\n                  {roleList.map((item, index) => (\r\n                  <Col md=\"4\">\r\n\r\n                    <AvGroup check className=\"my-2\">\r\n                      <AvInput type=\"checkbox\" name={item.value} onChange={handleChangeInputChkClient}/>\r\n                      <Label check htmlFor={item.value}> {item.label}</Label>\r\n                    </AvGroup>\r\n\r\n                    {/*<AvGroup check className=\"mb-3\">\r\n                      <Switch name={item.value}\r\n                        uncheckedIcon={<Offsymbol />}\r\n                        checkedIcon={<OnSymbol />}\r\n                        onColor=\"#007943\"\r\n                        disabled={false}\r\n                        className=\"form-label\"\r\n                        //checked={data.dataAspectosAmbientales.natureLocationProject}\r\n                        onChange={handleChangeInputFormClient}\r\n                      />\r\n                      {'   '}\r\n                      <Label className=\"form-check-label\" htmlFor={item.value}> {item.label}</Label>\r\n                  </AvGroup>*/}\r\n                  </Col>                   \r\n                  ))}\r\n                  <p>&ensp;</p>\r\n                  </Row>    \r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <Label className=\"form-check-label\">{t(\"BlackListIncidences\")}</Label>\r\n                      <p>&ensp;</p>\r\n                    </Col>\r\n                    <Col md=\"6\" style={{ textAlign: \"right\" }}>\r\n                      <Button color=\"success\" type=\"button\" onClick={showWatchListCheck} style={{ margin: '5px' }}><i className=\"mdi mdi-file-find mdi-12px\"></i>\r\n                        {\" \"}{t(\"Verify\")}\r\n                      </Button>\r\n                    </Col>\r\n                    {selectClient!==undefined && selectClient.blacklist!==undefined && selectClient.blacklist.length > 0?\r\n                    <Col md=\"12\">\r\n                      <div className=\"table-responsive\">\r\n                        <Table className=\"table mb-0\">\r\n                          <thead className=\"table-light\">\r\n                            <tr>\r\n                              <th>{t(\"WithMatches\")}</th>\r\n                              <th>{t(\"Comments\")}</th>\r\n                              <th></th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                          {selectClient.blacklist.map((item, index) => (\r\n                            <tr key={ index }>        \r\n                              <td>{ item.backList?\"Si\":\"No\" }</td>\r\n                              <td>{ item.commentsSearchDiscard }</td>\r\n                              <td>\r\n                                <Link to=\"#\" className=\"float-end mx-1\" title={t(\"Delete\")} onClick={()=> removeWatchListResult(index)}><i className=\"mdi mdi-file-remove-outline mdi-24px\"></i></Link>\r\n                              </td>\r\n                            </tr>            \r\n                          ))}\r\n                          </tbody>\r\n                        </Table>           \r\n                      </div>\r\n                    </Col>\r\n                    :\r\n                    <Col md=\"12\"><div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{ t(\"NotVerified\") }</div></Col>\r\n                    }\r\n                  </Row>  \r\n\r\n                  <Row>\r\n            <Col md=\"12\">            \r\n            <Alert show={msgData.show} variant={msgData.isError?\"danger\":\"success\"} dismissible onClose={() =>{ console.log(\"onClose\"); setmsgData({show:false,msg:\"\",isError:false})}}>\r\n              {msgData.msg}\r\n            </Alert>\r\n            </Col>   \r\n             </Row>    \r\n\r\n                </CardBody>\r\n                <CardFooter style={{ textAlign: \"right\" }}>\r\n                  <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={props.onCancel}>\r\n                    <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n                  </Button>\r\n                  <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                    {\" \"}{t(\"Save\")}\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n      </AvForm>\r\n\r\n{showBlackListForm?\r\n  <BlackListForm clientSelected={ selectClient } isOpen={ showBlackListForm } toggle={ () => { setshowBlackListForm(!showBlackListForm) } } watchListResult={addWatchListResult} />\r\n:null}\r\n      \r\n\r\n\r\n  </React.Fragment>\r\n\r\n       );\r\n};\r\n\r\nClientForm.propTypes = {\r\n  onCancel: PropTypes.func,\r\n  clientSelected:PropTypes.any,\r\n  transactId:PropTypes.any\r\n}\r\n\r\nexport default ClientForm;\r\n"]},"metadata":{},"sourceType":"module"}