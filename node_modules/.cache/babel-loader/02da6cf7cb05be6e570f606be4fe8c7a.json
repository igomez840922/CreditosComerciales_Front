{"ast":null,"code":"import moment from \"moment\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nexport default class previewEscrow {\n  constructor(dataSession) {\n    this.backendServices = new BackendServices();\n    this.bpmServices = new BpmServices();\n    this.validateRoute = false;\n    this.flowType = [{\n      Code: '1',\n      Description: 'Muy Urgente'\n    }, {\n      Code: '2',\n      Description: 'Urgencia Moderada'\n    }, {\n      Code: '3',\n      Description: 'Importante'\n    }, {\n      Code: '4',\n      Description: 'Baja Urgencia'\n    }, {\n      Code: '5',\n      Description: 'Sin Urgencia'\n    }];\n    // super();\n    this.saveDataSession(dataSession);\n  }\n\n  saveDataSession(dataSession) {\n    var _this$location, _this$location2;\n\n    sessionStorage.setItem('locationData', JSON.stringify(dataSession));\n\n    if (((_this$location = this.location) === null || _this$location === void 0 ? void 0 : _this$location.data) !== null && ((_this$location2 = this.location) === null || _this$location2 === void 0 ? void 0 : _this$location2.data) !== undefined) {\n      var _this$location3, _this$location4;\n\n      if (((_this$location3 = this.location) === null || _this$location3 === void 0 ? void 0 : _this$location3.data.transactionId) === undefined || ((_this$location4 = this.location) === null || _this$location4 === void 0 ? void 0 : _this$location4.data.transactionId.length) <= 0) {\n        //this.location?.data.transactionId = 0;\n        //checkAndCreateProcedure(this.location?.data);\n        this.validateRoute = true;\n      } else {\n        var _this$location5, _this$location6, _this$location7;\n\n        sessionStorage.setItem('this.locationData', JSON.stringify((_this$location5 = this.location) === null || _this$location5 === void 0 ? void 0 : _this$location5.data));\n        this.locationData = (_this$location6 = this.location) === null || _this$location6 === void 0 ? void 0 : _this$location6.data;\n        this.dataSession = (_this$location7 = this.location) === null || _this$location7 === void 0 ? void 0 : _this$location7.data;\n      }\n    } else {\n      //chequeamos si tenemos guardado en session\n      var result = sessionStorage.getItem('locationData');\n\n      if (result !== undefined && result !== null) {\n        result = JSON.parse(result);\n        this.locationData = result;\n        this.dataSession = result;\n      }\n    }\n\n    this.LoadNumeroFideicomiso();\n    this.loadCustomerID();\n    this.loadDataGeneral();\n    this.loadDataIGR();\n    this.loadDataEnvironmentAspects();\n  }\n\n  async LoadFiduciario() {\n    return await this.backendServices.consultarSeccionServiciosFiduciario(this.locationData.transactionId);\n  }\n\n  LoadOtherFiduciario() {\n    return this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId);\n  }\n\n  async LoadNumeroFideicomiso() {\n    this.basaFid = await this.backendServices.consultarNumeroFideicomiso(this.locationData.transactionId).then(resp => resp[0].trustName);\n  }\n\n  async loadCustomerID() {\n    this.customerID = await this.backendServices.consultPrincipalDebtor(this.locationData.transactionId).then(resp => resp.customerNumberT24);\n  }\n\n  async loadDataGeneral() {\n    this.dataGeneral = await this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId).then(resp => {\n      var _this$flowType$find;\n\n      return { ...resp[0],\n        requestDate: this.formatDate(resp[0].requestDate),\n        lastRequestDate: this.formatDate(resp[0].lastRequestDate),\n        nextRevisionDate: this.formatDate(resp[0].nextRevisionDate),\n        proposedExpirationDate: this.formatDate(resp[0].proposedExpirationDate),\n        flow: (_this$flowType$find = this.flowType.find(flowType => flowType.Code === resp[0].flow)) === null || _this$flowType$find === void 0 ? void 0 : _this$flowType$find.Description\n      };\n    });\n  }\n\n  async loadDataIGR() {\n    this.dataGeneralIGR = await this.backendServices.consultGeneralDataIGR(this.locationData.transactionId);\n  }\n\n  async loadDataEnvironmentAspects() {\n    this.dataGeneralEnvironmentAspects = await this.backendServices.consultEnvironmentalAspectsIGR(this.locationData.transactionId).then(resp => resp.environmentalAspectsDTO);\n  }\n\n  async saveAutonomy(levelAutonomy) {\n    return await this.bpmServices.saveAutonomy(levelAutonomy).then(resp => resp.body.result['dmn-evaluation-result']['dmn-context'].autonomia.cargo).catch(err => {\n      console.log(err);\n    });\n  }\n\n  async getFacilityHistory() {\n    return new Promise(async (resolve, reject) => {\n      var _this$locationData$tr, _this$locationData;\n\n      await this.backendServices.consultGeneralDataPropCred((_this$locationData$tr = (_this$locationData = this.locationData) === null || _this$locationData === void 0 ? void 0 : _this$locationData.transactionId) !== null && _this$locationData$tr !== void 0 ? _this$locationData$tr : 0).then(async propuesta => {\n        var _propuesta$;\n\n        this.backendServices.consultarFacilidadesT24((_propuesta$ = propuesta[0]) === null || _propuesta$ === void 0 ? void 0 : _propuesta$.requestId).then(async resp => {\n          if (resp.length > 0 && resp != undefined) {\n            resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\n          }\n        });\n        this.backendServices.consultarFacilidades(propuesta[0].requestId).then(resp => {\n          var _resp;\n\n          resp = (_resp = resp) === null || _resp === void 0 ? void 0 : _resp.filter(data => data.debtor != \"  \");\n          console.log('facilidad2', resp);\n\n          if (resp.length > 0) {\n            resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\n          }\n        });\n      });\n    });\n  }\n\n  formatDate(date) {\n    return date ? moment(date).format(\"DD/MM/YYYY\") : '';\n  }\n\n}","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/10_Fideicomiso/Relacionfiduciaria/preview.model.js"],"names":["moment","BackendServices","CoreServices","BpmServices","previewEscrow","constructor","dataSession","backendServices","bpmServices","validateRoute","flowType","Code","Description","saveDataSession","sessionStorage","setItem","JSON","stringify","location","data","undefined","transactionId","length","locationData","result","getItem","parse","LoadNumeroFideicomiso","loadCustomerID","loadDataGeneral","loadDataIGR","loadDataEnvironmentAspects","LoadFiduciario","consultarSeccionServiciosFiduciario","LoadOtherFiduciario","consultarSeccionOtrosServiciosFiduciario","basaFid","consultarNumeroFideicomiso","then","resp","trustName","customerID","consultPrincipalDebtor","customerNumberT24","dataGeneral","consultGeneralDataPropCred","requestDate","formatDate","lastRequestDate","nextRevisionDate","proposedExpirationDate","flow","find","dataGeneralIGR","consultGeneralDataIGR","dataGeneralEnvironmentAspects","consultEnvironmentalAspectsIGR","environmentalAspectsDTO","saveAutonomy","levelAutonomy","body","autonomia","cargo","catch","err","console","log","getFacilityHistory","Promise","resolve","reject","propuesta","consultarFacilidadesT24","requestId","reduce","acc","crr","amount","consultarFacilidades","filter","debtor","date","format"],"mappings":"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","sourcesContent":["import moment from \"moment\";\r\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\r\n\r\nexport default class previewEscrow {\r\n\r\n    backendServices = new BackendServices();\r\n    bpmServices = new BpmServices();\r\n    serviciosFiduciario;\r\n    otherServiciosFiduciario;\r\n    locationData;\r\n    basaFid;\r\n    dataSession;\r\n    validateRoute = false;\r\n    customerID;\r\n    dataGeneral;\r\n    dataGeneralIGR;\r\n    dataGeneralEnvironmentAspects;\r\n    levelAutonomy;\r\n\r\n    flowType = [{ Code: '1', Description: 'Muy Urgente' }, { Code: '2', Description: 'Urgencia Moderada' }, { Code: '3', Description: 'Importante' }, { Code: '4', Description: 'Baja Urgencia' }, { Code: '5', Description: 'Sin Urgencia' }]\r\n\r\n\r\n    constructor(dataSession) {\r\n        // super();\r\n        this.saveDataSession(dataSession)\r\n    }\r\n\r\n    saveDataSession(dataSession) {\r\n        sessionStorage.setItem('locationData', JSON.stringify(dataSession));\r\n        if (this.location?.data !== null && this.location?.data !== undefined) {\r\n            if (this.location?.data.transactionId === undefined || this.location?.data.transactionId.length <= 0) {\r\n                //this.location?.data.transactionId = 0;\r\n                //checkAndCreateProcedure(this.location?.data);\r\n                this.validateRoute = true\r\n            }\r\n            else {\r\n                sessionStorage.setItem('this.locationData', JSON.stringify(this.location?.data));\r\n                this.locationData = this.location?.data;\r\n                this.dataSession = this.location?.data;\r\n            }\r\n        }\r\n        else {\r\n            //chequeamos si tenemos guardado en session\r\n            var result = sessionStorage.getItem('locationData');\r\n            if (result !== undefined && result !== null) {\r\n                result = JSON.parse(result);\r\n                this.locationData = result;\r\n                this.dataSession = result;\r\n            }\r\n        }\r\n        this.LoadNumeroFideicomiso();\r\n        this.loadCustomerID();\r\n        this.loadDataGeneral();\r\n        this.loadDataIGR();\r\n        this.loadDataEnvironmentAspects();\r\n    }\r\n\r\n    async LoadFiduciario() {\r\n        return await this.backendServices.consultarSeccionServiciosFiduciario(this.locationData.transactionId);\r\n    }\r\n\r\n    LoadOtherFiduciario() {\r\n        return this.backendServices.consultarSeccionOtrosServiciosFiduciario(this.locationData.transactionId);\r\n    }\r\n\r\n    async LoadNumeroFideicomiso() {\r\n        this.basaFid = await this.backendServices.consultarNumeroFideicomiso(this.locationData.transactionId).then(resp => resp[0].trustName);\r\n    }\r\n\r\n    async loadCustomerID() {\r\n        this.customerID = await this.backendServices.consultPrincipalDebtor(this.locationData.transactionId).then(resp => resp.customerNumberT24);\r\n    }\r\n\r\n    async loadDataGeneral() {\r\n        this.dataGeneral = await this.backendServices.consultGeneralDataPropCred(this.locationData.transactionId).then(resp => ({ ...resp[0], requestDate: this.formatDate(resp[0].requestDate), lastRequestDate: this.formatDate(resp[0].lastRequestDate), nextRevisionDate: this.formatDate(resp[0].nextRevisionDate), proposedExpirationDate: this.formatDate(resp[0].proposedExpirationDate), flow: this.flowType.find(flowType => flowType.Code === resp[0].flow)?.Description }));\r\n    }\r\n\r\n    async loadDataIGR() {\r\n        this.dataGeneralIGR = await this.backendServices.consultGeneralDataIGR(this.locationData.transactionId);\r\n    }\r\n    async loadDataEnvironmentAspects() {\r\n        this.dataGeneralEnvironmentAspects = await this.backendServices.consultEnvironmentalAspectsIGR(this.locationData.transactionId).then(resp => resp.environmentalAspectsDTO)\r\n    }\r\n\r\n\r\n    async saveAutonomy(levelAutonomy) {\r\n        return await this.bpmServices.saveAutonomy(levelAutonomy).then(resp => resp.body.result['dmn-evaluation-result']['dmn-context'].autonomia.cargo).catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n\r\n    async getFacilityHistory() {\r\n        return new Promise(async (resolve, reject) => {\r\n            await this.backendServices.consultGeneralDataPropCred(this.locationData?.transactionId ?? 0).then(async propuesta => {\r\n                this.backendServices.consultarFacilidadesT24(propuesta[0]?.requestId).then(async resp => {\r\n                    if (resp.length > 0 && resp != undefined) {\r\n                        resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0))\r\n                    }\r\n                });\r\n                this.backendServices.consultarFacilidades(propuesta[0].requestId).then(resp => {\r\n                    resp = resp?.filter(data => data.debtor != \"  \");\r\n                    console.log('facilidad2', resp)\r\n                    if (resp.length > 0) {\r\n                        resolve(+resp.reduce((acc, crr) => acc + crr.amount, 0));\r\n                    }\r\n                });\r\n            })\r\n        })\r\n    }\r\n\r\n    formatDate(date) {\r\n        return date ? moment(date).format(\"DD/MM/YYYY\") : '';\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}