{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\SegurosActualesEmpresa.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalSegurosActualesEmpresa from \"./ModalSegurosActualesEmpresa\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataReciprocity = [{\n  id: 1,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 2,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 3,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}, {\n  id: 4,\n  insuranceCompany: \"120\",\n  insuranceType: \"Incendio\",\n  amount: '200',\n  expiration: ''\n}];\nconst SegurosActualesEmpresa = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*                        Variables de estados para los mensajes de alerta                        */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [dynamic_title, setdynamic_title] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataLocation, setData] = useState(location.data);\n  const [botonValidation, setbotonValidation] = useState(true);\n  const [dataSeguros, setdataSeguros] = useState({\n    \"transactId\": 0,\n    \"company\": \"\",\n    \"insuranceType\": {\n      \"code\": \"\",\n      \"name\": \"\"\n    },\n    \"amount\": 0,\n    \"dueDate\": \"\"\n  });\n  const [tipo, settipo] = useState(\"\");\n  const [formValid, setFormValid] = useState(false);\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmProveedores');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n  const [showModalModalSegurosActualesEmpresa, setShowModalModalSegurosActualesEmpresa] = useState(false);\n  React.useEffect(() => {\n    initializeData();\n  }, []);\n\n  function initializeData() {\n    const api = new BackendServices();\n    api.consultarSegurosEmpresaIGR(dataLocation.transactionId).then(resp => {\n      if (resp != undefined) {\n        setdataReciprocityRows(resp.map(data => data.status ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.company\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.insuranceType.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.dueDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                actualizarDatosSeguros(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 129\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                EliminarDatosSeguros(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 127\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, data.insuranceId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this) : null));\n      } else {\n        setdataReciprocityRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: t(\"NoData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this));\n      }\n    });\n  }\n\n  function verDatosSeguros(data) {\n    setdataSeguros(data);\n    setbotonValidation(false);\n    toggleShowModalSegurosActualesEmpresa();\n  }\n\n  function actualizarDatosSeguros(data) {\n    settipo(\"editar\");\n    setdataSeguros(data);\n    setbotonValidation(true);\n    toggleShowModalSegurosActualesEmpresa();\n  }\n\n  function gestionDatos(data, tipo) {\n    console.log(data);\n    const api = new BackendServices();\n    data.transactId = dataLocation.transactionId;\n\n    if (tipo == \"guardar\") {\n      api.nuevoSegurosEmpresaIGR(data).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModalSegurosActualesEmpresa();\n        } else {\n          toggleShowModalSegurosActualesEmpresa();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    } else {\n      api.actualizarSegurosEmpresaIGR(data).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModalSegurosActualesEmpresa();\n        } else {\n          toggleShowModalSegurosActualesEmpresa();\n          seterror_dlg(true);\n        }\n      }).catch(err => {\n        seterror_dlg(true);\n      });\n    }\n  }\n\n  function EliminarDatosSeguros(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModalSegurosActualesEmpresa() {\n    setShowModalModalSegurosActualesEmpresa(!showModalModalSegurosActualesEmpresa);\n    removeBodyCss();\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    } //props.onSubmit(values);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"CurrentCompanyInsurance\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmSearch\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mt-1\",\n            responsive: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"InsuranceCompany\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"InsuranceType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Amount\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Expiration\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"float-end\",\n                    onClick: () => {\n                      settipo(\"guardar\");\n                      setbotonValidation(true);\n                      setdataSeguros({\n                        \"transactId\": 0,\n                        \"company\": \"\",\n                        \"insuranceType\": {\n                          \"code\": \"\",\n                          \"name\": \"\"\n                        },\n                        \"amount\": 0,\n                        \"dueDate\": \"\"\n                      });\n                      toggleShowModalSegurosActualesEmpresa();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 22\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataReciprocityRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalSegurosActualesEmpresa, {\n      dataSeguros: dataSeguros,\n      gestionDatos: gestionDatos,\n      tipo: tipo,\n      botones: botonValidation,\n      isOpen: showModalModalSegurosActualesEmpresa,\n      toggle: () => {\n        toggleShowModalSegurosActualesEmpresa();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        initializeData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        initializeData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.eliminarSegurosEmpresaIGR({\n          transactId: dataLocation.transactionId,\n          InsuranceId: dataDelete.insuranceId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}, \"jD5eNDtd23xk2LpUaNxfJTGE/4o=\", false, function () {\n  return [useTranslation, useLocation, React.useImperativeHandle];\n}));\n/*\r\nSegurosActualesEmpresa.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\n\n_c2 = SegurosActualesEmpresa;\nexport default SegurosActualesEmpresa;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SegurosActualesEmpresa$React.forwardRef\");\n$RefreshReg$(_c2, \"SegurosActualesEmpresa\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/SegurosActualesEmpresa.js"],"names":["React","useState","useTranslation","withTranslation","PropTypes","Link","useLocation","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalSegurosActualesEmpresa","BackendServices","SweetAlert","dataReciprocity","id","insuranceCompany","insuranceType","amount","expiration","SegurosActualesEmpresa","forwardRef","props","ref","t","i18n","location","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","dynamic_title","setdynamic_title","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataLocation","setData","data","botonValidation","setbotonValidation","dataSeguros","setdataSeguros","tipo","settipo","formValid","setFormValid","dataReciprocityRows","setdataReciprocityRows","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","showModalModalSegurosActualesEmpresa","setShowModalModalSegurosActualesEmpresa","useEffect","initializeData","api","consultarSegurosEmpresaIGR","transactionId","then","resp","undefined","map","status","company","code","dueDate","textAlign","actualizarDatosSeguros","EliminarDatosSeguros","insuranceId","verDatosSeguros","toggleShowModalSegurosActualesEmpresa","gestionDatos","console","log","transactId","nuevoSegurosEmpresaIGR","catch","err","actualizarSegurosEmpresaIGR","removeBodyCss","body","classList","add","handleSubmit","event","errors","values","preventDefault","length","apiBack","eliminarSegurosEmpresaIGR","InsuranceId","statusCode","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation, withTranslation } from \"react-i18next\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nimport ModalSegurosActualesEmpresa from \"./ModalSegurosActualesEmpresa\"\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nconst dataReciprocity = [\r\n  { id: 1, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 2, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 3, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n  { id: 4, insuranceCompany: \"120\", insuranceType: \"Incendio\", amount: '200', expiration: '' },\r\n];\r\nconst SegurosActualesEmpresa = React.forwardRef((props, ref) => {\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*                        Variables de estados para los mensajes de alerta                        */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [dynamic_title, setdynamic_title] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [botonValidation, setbotonValidation] = useState(true);\r\n  const [dataSeguros, setdataSeguros] = useState({\r\n    \"transactId\": 0,\r\n    \"company\": \"\",\r\n    \"insuranceType\": {\r\n      \"code\": \"\",\r\n      \"name\": \"\"\r\n    },\r\n    \"amount\": 0,\r\n    \"dueDate\": \"\"\r\n  });\r\n  const [tipo, settipo] = useState(\"\");\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [dataReciprocityRows, setdataReciprocityRows] = useState(null);\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmProveedores');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n  const [showModalModalSegurosActualesEmpresa, setShowModalModalSegurosActualesEmpresa] = useState(false);\r\n  React.useEffect(() => {\r\n    initializeData();\r\n  }, []);\r\n  function initializeData() {\r\n    const api = new BackendServices();\r\n    api.consultarSegurosEmpresaIGR(dataLocation.transactionId).then(resp => {\r\n      if (resp!=undefined) {\r\n        setdataReciprocityRows(resp.map((data) => (\r\n          data.status?\r\n          <tr key={data.insuranceId}>\r\n            <td>{data.company}</td>\r\n            <td>{data.insuranceType.code}</td>\r\n            <td>{data.amount}</td>\r\n            <td>{data.dueDate}</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { actualizarDatosSeguros(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { EliminarDatosSeguros(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n            </td>\r\n          </tr>:null)\r\n        ));\r\n      } else {\r\n        setdataReciprocityRows(\r\n          <tr key={1}>\r\n            <td colSpan=\"7\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n          </tr>);\r\n      }\r\n    });\r\n  }\r\n  function verDatosSeguros(data) {\r\n    setdataSeguros(data)\r\n    setbotonValidation(false);\r\n    toggleShowModalSegurosActualesEmpresa()\r\n  }\r\n  function actualizarDatosSeguros(data) {\r\n    settipo(\"editar\")\r\n    setdataSeguros(data)\r\n    setbotonValidation(true);\r\n    toggleShowModalSegurosActualesEmpresa()\r\n  }\r\n  function gestionDatos(data, tipo) {\r\n    console.log(data);\r\n    const api = new BackendServices()\r\n    data.transactId = dataLocation.transactionId;\r\n    if (tipo == \"guardar\") {\r\n      api.nuevoSegurosEmpresaIGR(data).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModalSegurosActualesEmpresa();\r\n        } else {\r\n          toggleShowModalSegurosActualesEmpresa();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      api.actualizarSegurosEmpresaIGR(data).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModalSegurosActualesEmpresa();\r\n        } else {\r\n          toggleShowModalSegurosActualesEmpresa();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(err => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n  function EliminarDatosSeguros(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true);\r\n  }\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModalSegurosActualesEmpresa() {\r\n    setShowModalModalSegurosActualesEmpresa(!showModalModalSegurosActualesEmpresa);\r\n    removeBodyCss()\r\n  }\r\n\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    //props.onSubmit(values);\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"CurrentCompanyInsurance\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmSearch\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <Table className=\"table mt-1\" responsive>\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"InsuranceCompany\")}</th>\r\n                  <th>{t(\"InsuranceType\")}</th>\r\n                  <th>{t(\"Amount\")}</th>\r\n                  <th>{t(\"Expiration\")}</th>\r\n                  <th><Link className=\"float-end\" onClick={() => {\r\n                    settipo(\"guardar\");\r\n                    setbotonValidation(true); setdataSeguros({\r\n                      \"transactId\": 0,\r\n                      \"company\": \"\",\r\n                      \"insuranceType\": {\r\n                        \"code\": \"\",\r\n                        \"name\": \"\"\r\n                      },\r\n                      \"amount\": 0,\r\n                      \"dueDate\": \"\"\r\n                    }); toggleShowModalSegurosActualesEmpresa();\r\n                  }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataReciprocityRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </AvForm>\r\n      <ModalSegurosActualesEmpresa dataSeguros={dataSeguros} gestionDatos={gestionDatos} tipo={tipo} botones={botonValidation} isOpen={showModalModalSegurosActualesEmpresa} toggle={() => { toggleShowModalSegurosActualesEmpresa() }} />\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            initializeData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.eliminarSegurosEmpresaIGR({ transactId: dataLocation.transactionId, InsuranceId: dataDelete.insuranceId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n    </React.Fragment>\r\n  );\r\n\r\n});\r\n\r\n/*\r\nSegurosActualesEmpresa.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n*/\r\n\r\nexport default SegurosActualesEmpresa;\r\n"]},"metadata":{},"sourceType":"module"}