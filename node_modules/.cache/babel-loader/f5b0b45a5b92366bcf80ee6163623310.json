{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\ClientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport moment from \"moment\";\nimport Select from \"react-select\";\nimport { Row, Col, Card, CardBody, CardFooter, Button, Label, Table } from \"reactstrap\";\nimport Alert from 'react-bootstrap/Alert';\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\nimport { PersonModel } from '../../../models/Common/PersonModel';\nimport { BlackListHistoryModel } from '../../../models/Common/BlackListHistoryModel';\nimport BlackListForm from \"./BlackListForm\";\nimport checkNumber from \"../../../helpers/checkNumber\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Offsymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"No\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Offsymbol;\n\nconst OnSymbol = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      fontSize: 12,\n      color: \"#fff\",\n      paddingRight: 2\n    },\n    children: [\" \", \"Si\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = OnSymbol;\n\nconst ClientForm = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [transactId, settransactId] = useState(props.transactId);\n  const [selectClient, setselectClient] = useState(props.clientSelected);\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\n  const [personTypeList, setpersonTypeList] = useState([]);\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\n  const [roleList, setroleList] = useState([]);\n  const [roleSelected, setroleSelected] = useState(undefined);\n  const [countryList, setcountryList] = useState([]);\n  const [campoRequeridoCountry, setcampoRequeridoCountry] = useState(false);\n  const [countrySelected, setcountrySelected] = useState(undefined);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [msgData, setmsgData] = useState({\n    show: false,\n    msg: \"\",\n    isError: false\n  });\n  const [showBlackListForm, setshowBlackListForm] = useState(false); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    console.log(\"useEffect\", transactId);\n    fetchData();\n  }, []);\n\n  function fetchData() {\n    loadIdentificationTypes();\n    loadPersonTypes();\n    loadRoles();\n    loadCountries();\n  } //cargar lista de tipo de identificacion\n\n\n  function loadIdentificationTypes() {\n    // consultarCatalogoTipoIdentificacion\n    apiServiceBackend.consultarCatalogoTipoIdentificacion().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"description\"]),\n            value: data[i][\"id\"]\n          });\n        }\n\n        setidentificationTypeList(json);\n        setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de tipo de personas\n\n\n  function loadPersonTypes() {\n    // consultarCatalogoTipoPersona\n    apiServiceBackend.consultarCatalogoTipoPersona().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"label\"]),\n            value: data[i][\"code\"]\n          });\n        }\n\n        setpersonTypeList(json);\n        setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\n      }\n    }).catch(error => {});\n  } //cargar lista de roles\n\n\n  function loadRoles() {\n    apiServiceBackend.retrieveRoleCatalog().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.length; i++) {\n          json.push({\n            label: t(data[i][\"roleDescription\"]),\n            value: data[i][\"roleId\"],\n            checked: false\n          });\n        }\n\n        if (selectClient !== undefined && selectClient.roles.length > 0) {\n          selectClient.roles.map(async function (item, i) {\n            var rol = json.find(rolItem => {\n              return rolItem.value === item.roleId;\n            });\n\n            if (rol !== undefined && rol !== null) {\n              rol.checked = true;\n            }\n          });\n        }\n\n        setroleList(json);\n      }\n    }).catch(error => {});\n  } //cargar lista de paises\n\n\n  function loadCountries() {\n    apiCoreServices.getPaisesCatalogo().then(data => {\n      if (data !== null && data !== undefined) {\n        let json = [];\n\n        for (let i = 0; i < data.Records.length; i++) {\n          json.push({\n            label: t(data.Records[i][\"Description\"]),\n            value: data.Records[i][\"Code\"]\n          });\n        } // console.log(\"loadCountries\", selectClient);\n\n\n        setcountryList(json);\n        setcountrySelected(json.find(x => x.value === selectClient.nationality)); // setcountrySelected(selectClient !== undefined ? json.find(x => x.value === selectClient.nationality) : json[0]);\n      }\n    }).catch(error => {});\n  } //Actualizar valores de Cliente cada vez que se actualiza un campo\n\n\n  function handleChangeInputFormClient(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n    clientPerson[e.target.name] = e.target.value;\n    setselectClient(clientPerson); //si la persona es juridica auto seleccionamos RUC\n\n    if (clientPerson.personType === 2) {\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\n    }\n  } //Actualizar roles de Cliente cada vez que se actualiza un checkbox\n\n\n  function handleChangeInputChkClient(e) {\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\n    clientPerson.transactId = transactId;\n\n    if (e.target.checked) {\n      //si es true lo agregamos\n      clientPerson.roles.push({\n        roleId: e.target.name\n      });\n    } else {\n      //lo borramos\n      clientPerson.roles = clientPerson.roles.filter(rol => rol.roleId !== e.target.name);\n    }\n\n    setselectClient(clientPerson);\n  } //Guardar el Cliente\n\n\n  async function handleSubmitFormClient(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    if (selectClient !== undefined && selectClient !== null) {\n      if (countrySelected == undefined) {\n        setcampoRequeridoCountry(true);\n        return;\n      } else {\n        setcampoRequeridoCountry(false);\n      }\n\n      if (selectClient.roles.length <= 0) {\n        showMessage(t(\"YoumustselectatleasoneRoleforthisclient\"), true);\n        return;\n      }\n\n      if (selectClient.blacklist.length <= 0) {\n        showMessage(t(\"ThisclienthasnotbeenverifiedonWatchLists\"), true);\n        return;\n      }\n\n      if (selectClient.idType.length <= 0) {\n        showMessage(t(\"PleaseselectIdentificationType\"), true);\n        return;\n      }\n\n      if (selectClient.nationality.length <= 0) {\n        showMessage(t(\"PleaseselectNationality\"), true);\n        return;\n      }\n\n      if (selectClient.personId <= 0) {\n        //nueva persona\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n            props.checkDebtorShareholders();\n          } else {\n            showMessage(t(\"Datacouldnotbesaved\"), true);\n          }\n        }).catch(error => {});\n      } else {\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient).then(data => {\n          if (data !== null && data !== undefined) {\n            //salir\n            props.onCancel();\n          } else {\n            showMessage(t(\"Datacouldnotbesaved\"), true);\n          }\n        }).catch(err => {});\n      }\n    } else {\n      showMessage(t(\"Theclientisnotvalid\"), true);\n    }\n  } //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\n\n\n  function getClientDataFormByPersonType(personType) {\n    if (personType === undefined) {\n      return null;\n    }\n\n    switch (personType.value) {\n      case 1:\n        {\n          //Natural\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"name\",\n                  children: t(\"FirstName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"name\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.name : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondName\",\n                  children: t(\"SecondName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondName : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"lastName\",\n                  children: t(\"FirstLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"lastName\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.lastName : '',\n                  errorMessage: t(\"Required Field\"),\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"secondSurname\",\n                  children: t(\"SecondLastName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"secondSurname\",\n                  type: \"text\",\n                  onChange: handleChangeInputFormClient,\n                  value: selectClient !== undefined ? selectClient.secondSurname : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"birthDate\",\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"form-control\",\n                  name: \"birthDate\",\n                  errorMessage: t(\"This client is not of legal age\"),\n                  max: moment().subtract(18, 'years'),\n                  type: \"date\",\n                  onChange: e => {\n                    e.target.value = moment(e.target.value).format(\"YYYY-MM-DD\");\n                    handleChangeInputFormClient(e);\n                  },\n                  value: selectClient !== undefined ? selectClient.birthDate : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this);\n        }\n\n      case 2:\n        {\n          //Juridica\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"name\",\n                children: t(\"SocialReason\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"name\",\n                type: \"text\",\n                onChange: handleChangeInputFormClient,\n                value: selectClient !== undefined ? selectClient.name : '',\n                errorMessage: t(\"Required Field\"),\n                validate: {\n                  required: {\n                    value: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 11\n          }, this);\n        }\n    }\n\n    return null;\n  } //Carga de Datos de Cliente de T24 Seleccionado\n\n\n  function loadClientDataT24(dataClientT24) {\n    var clientPerson = new PersonModel();\n\n    if (selectClient !== undefined) {\n      clientPerson.personId = selectClient.personId;\n    }\n\n    clientPerson.customerNumberT24 = dataClientT24.id;\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\n    clientPerson.name = dataClientT24.firstname;\n    clientPerson.secondName = dataClientT24.secondname;\n    clientPerson.lastName = dataClientT24.lastname;\n    clientPerson.secondSurname = dataClientT24.secondlastname;\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\n    setselectClient(clientPerson);\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));\n  } //mostrar mensaje \n\n\n  function showMessage(message, isError = false) {\n    setmsgData({\n      show: true,\n      msg: message,\n      isError: isError\n    });\n  } //Abrir modal de verificacion en listas de vigilancias\n\n\n  function showWatchListCheck(show = true) {\n    setshowBlackListForm(show);\n  }\n\n  function addWatchListResult(resultWatchList) {\n    if (selectClient !== undefined) {\n      var blacklistmdl = new BlackListHistoryModel(); //new BlacklistModel();\n\n      blacklistmdl.blackList = resultWatchList.blackList;\n      blacklistmdl.comment = resultWatchList.comments;\n      blacklistmdl.transactId = transactId;\n      selectClient.blacklist.push(blacklistmdl);\n      setselectClient(selectClient);\n    }\n  } //Elimina record de la lista de Incidencias de Black Lista\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmClient\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmitFormClient,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"card-sub-title\",\n          children: t(\"ClientData\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"personType\",\n                  children: t(\"PersonType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setpersonTypeSelected(personTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'personType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: personTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: personTypeSelected,\n                  name: \"personType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"customerNumberT24\",\n                  children: t(\"ClientNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"customerNumberT24\",\n                  type: \"number\",\n                  disabled: selectClient !== undefined ? selectClient.isNew : true,\n                  value: selectClient !== undefined ? selectClient.customerNumberT24 : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [getClientDataFormByPersonType(personTypeSelected), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  children: t(\"IdType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'idType',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: identificationTypeList,\n                  classNamePrefix: \"select2-selection\",\n                  value: identificationTypeSelected,\n                  name: \"idType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"idnumber\",\n                  children: t(\"IdNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"clientDocumentId\",\n                  type: \"text\",\n                  validate: {\n                    required: {\n                      value: true,\n                      errorMessage: t(\"Required Field\")\n                    }\n                  },\n                  value: selectClient !== undefined ? selectClient.clientDocumentId : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"nationality\",\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  noOptionsMessage: () => \"\",\n                  onChange: e => {\n                    setcountrySelected(countryList.find(x => x.value === e.value));\n                    handleChangeInputFormClient({\n                      target: {\n                        name: 'nationality',\n                        value: e.value\n                      }\n                    });\n                  },\n                  options: countryList,\n                  classNamePrefix: \"select2-selection\",\n                  value: countrySelected,\n                  name: \"nationality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 19\n                }, this), campoRequeridoCountry ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-error-parrafo\",\n                  children: t(\"Required Field\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"phone\",\n                  children: t(\"PhoneNumber\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"phone\",\n                  type: \"text\",\n                  onKeyPress: e => {\n                    return checkNumber(e);\n                  },\n                  validate: {\n                    number: {\n                      value: true,\n                      errorMessage: t(\"InvalidField\")\n                    }\n                  },\n                  value: selectClient !== undefined ? selectClient.phone : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: \"3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  htmlFor: \"email\",\n                  children: t(\"Email\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  onChange: handleChangeInputFormClient,\n                  className: \"form-control\",\n                  name: \"email\",\n                  type: \"email\",\n                  value: selectClient !== undefined ? selectClient.email : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  class: \"card-sub-title\",\n                  children: t(\"Roles\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: roleList.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxDEV(AvGroup, {\n                        check: true,\n                        className: \"my-2\",\n                        children: [/*#__PURE__*/_jsxDEV(AvInput, {\n                          type: \"checkbox\",\n                          defaultChecked: item.checked,\n                          name: item.value,\n                          onChange: handleChangeInputChkClient\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 479,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Label, {\n                          htmlFor: item.value,\n                          children: [\" \", item.label]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 480,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  children: [/*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                        class: \"card-sub-title\",\n                        children: t(\"BlackListIncidences\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 497,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      md: 6,\n                      style: {\n                        textAlign: \"right\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"btn\",\n                        color: \"success\",\n                        type: \"button\",\n                        style: {\n                          margin: '5px'\n                        },\n                        onClick: showWatchListCheck,\n                        title: t(\"Add\"),\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fas fa-lg fa-plus-circle\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 500,\n                          columnNumber: 147\n                        }, this), \" \", \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 500,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      md: \"12\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"table-responsive styled-table-div\",\n                        children: /*#__PURE__*/_jsxDEV(Table, {\n                          className: \"table table-striped table-hover styled-table table\",\n                          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                                children: t(\"WithMatches\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 509,\n                                columnNumber: 35\n                              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: t(\"Observations\")\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 510,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 508,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 507,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: selectClient !== undefined && selectClient.blacklist !== undefined && selectClient.blacklist.length > 0 ? selectClient.blacklist.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: item.blackList ? \"Si\" : \"No\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 517,\n                                columnNumber: 37\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: item.comment\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 518,\n                                columnNumber: 37\n                              }, this)]\n                            }, index, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 516,\n                              columnNumber: 35\n                            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                                colSpan: 7,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"alert alert-info\",\n                                  style: {\n                                    textAlign: \"center\"\n                                  },\n                                  children: t(\"NotVerified\")\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 523,\n                                  columnNumber: 33\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 522,\n                                columnNumber: 33\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 521,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 513,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 506,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 505,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: \"12\",\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                show: msgData.show,\n                variant: msgData.isError ? \"danger\" : \"success\",\n                dismissible: true,\n                onClose: () => {\n                  console.log(\"onClose\");\n                  setmsgData({\n                    show: false,\n                    msg: \"\",\n                    isError: false\n                  });\n                },\n                children: msgData.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            style: {\n              margin: '5px 0px'\n            },\n            type: \"button\",\n            onClick: props.onCancel,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi mdi-cancel mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), \" \", t(\"Cancel\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"submit\",\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-content-save mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 77\n            }, this), \" \", t(\"Save\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), showBlackListForm ? /*#__PURE__*/_jsxDEV(BlackListForm, {\n      clientSelected: selectClient,\n      isOpen: showBlackListForm,\n      toggle: () => {\n        setshowBlackListForm(!showBlackListForm);\n      },\n      watchListResult: addWatchListResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientForm, \"11V8C3eDvgD0FknL5KnVmhe5z5Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c3 = ClientForm;\nClientForm.propTypes = {\n  onCancel: PropTypes.func,\n  clientSelected: PropTypes.any,\n  transactId: PropTypes.any,\n  checkDebtorShareholders: PropTypes.func\n};\nexport default ClientForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Offsymbol\");\n$RefreshReg$(_c2, \"OnSymbol\");\n$RefreshReg$(_c3, \"ClientForm\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/ClientForm.js"],"names":["React","useState","PropTypes","useTranslation","moment","Select","Row","Col","Card","CardBody","CardFooter","Button","Label","Table","Alert","BackendServices","CoreServices","BpmServices","AvForm","AvField","AvGroup","AvInput","AvCheckbox","PersonModel","BlackListHistoryModel","BlackListForm","checkNumber","Link","Offsymbol","display","justifyContent","alignItems","height","fontSize","color","paddingRight","OnSymbol","ClientForm","props","t","i18n","transactId","settransactId","selectClient","setselectClient","clientSelected","identificationTypeList","setidentificationTypeList","identificationTypeSelected","setidentificationTypeSelected","undefined","personTypeList","setpersonTypeList","personTypeSelected","setpersonTypeSelected","roleList","setroleList","roleSelected","setroleSelected","countryList","setcountryList","campoRequeridoCountry","setcampoRequeridoCountry","countrySelected","setcountrySelected","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","msgData","setmsgData","show","msg","isError","showBlackListForm","setshowBlackListForm","useEffect","console","log","fetchData","loadIdentificationTypes","loadPersonTypes","loadRoles","loadCountries","consultarCatalogoTipoIdentificacion","then","data","json","i","length","push","label","value","find","x","idType","catch","error","consultarCatalogoTipoPersona","Number","personType","retrieveRoleCatalog","checked","roles","map","item","rol","rolItem","roleId","getPaisesCatalogo","Records","nationality","handleChangeInputFormClient","e","clientPerson","target","name","handleChangeInputChkClient","filter","handleSubmitFormClient","event","errors","values","preventDefault","showMessage","blacklist","personId","nuevoOrquestadoListaPersonaSolicitud","onCancel","checkDebtorShareholders","actualizarOrquestadoListaPersonaSolicitud","err","getClientDataFormByPersonType","required","secondName","lastName","secondSurname","subtract","format","birthDate","loadClientDataT24","dataClientT24","customerNumberT24","id","clientDocumentId","idnumber","firstname","secondname","lastname","secondlastname","partyType","idtype","message","showWatchListCheck","addWatchListResult","resultWatchList","blacklistmdl","blackList","comment","comments","isNew","errorMessage","number","phone","email","index","textAlign","margin","propTypes","func","any"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport moment from \"moment\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Label,\r\n  Table,\r\n} from \"reactstrap\"\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport { AvForm, AvField, AvGroup, AvInput, AvCheckbox } from \"availity-reactstrap-validation\";\r\nimport { PersonModel } from '../../../models/Common/PersonModel';\r\nimport { BlackListHistoryModel } from '../../../models/Common/BlackListHistoryModel';\r\nimport BlackListForm from \"./BlackListForm\"\r\nimport checkNumber from \"../../../helpers/checkNumber\";\r\n\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Offsymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      No\r\n    </div>\r\n  );\r\n};\r\n\r\nconst OnSymbol = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingRight: 2,\r\n      }}\r\n    >\r\n      {\" \"}\r\n      Si\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClientForm = props => {\r\n  const { t, i18n } = useTranslation();\r\n  const [transactId, settransactId] = useState(props.transactId);\r\n  const [selectClient, setselectClient] = useState(props.clientSelected);\r\n  const [identificationTypeList, setidentificationTypeList] = useState([]);\r\n  const [identificationTypeSelected, setidentificationTypeSelected] = useState(undefined);\r\n  const [personTypeList, setpersonTypeList] = useState([]);\r\n  const [personTypeSelected, setpersonTypeSelected] = useState(undefined);\r\n  const [roleList, setroleList] = useState([]);\r\n  const [roleSelected, setroleSelected] = useState(undefined);\r\n  const [countryList, setcountryList] = useState([]);\r\n  const [campoRequeridoCountry, setcampoRequeridoCountry] = useState(false);\r\n  const [countrySelected, setcountrySelected] = useState(undefined);\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n  const [msgData, setmsgData] = useState({ show: false, msg: \"\", isError: false });\r\n  const [showBlackListForm, setshowBlackListForm] = useState(false);\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    console.log(\"useEffect\", transactId)\r\n    fetchData();\r\n  }, []);\r\n  function fetchData() {\r\n    loadIdentificationTypes();\r\n    loadPersonTypes();\r\n    loadRoles();\r\n    loadCountries();\r\n  }\r\n  //cargar lista de tipo de identificacion\r\n  function loadIdentificationTypes() {\r\n    // consultarCatalogoTipoIdentificacion\r\n    apiServiceBackend.consultarCatalogoTipoIdentificacion()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"description\"]), value: data[i][\"id\"] })\r\n          }\r\n          setidentificationTypeList(json)\r\n          setidentificationTypeSelected(selectClient !== undefined ? json.find(x => x.value === selectClient.idType) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de tipo de personas\r\n  function loadPersonTypes() {\r\n    // consultarCatalogoTipoPersona\r\n    apiServiceBackend.consultarCatalogoTipoPersona()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"label\"]), value: data[i][\"code\"] })\r\n          }\r\n          setpersonTypeList(json);\r\n          setpersonTypeSelected(selectClient !== undefined ? json.find(x => x.value === Number(selectClient.personType)) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de roles\r\n  function loadRoles() {\r\n    apiServiceBackend.retrieveRoleCatalog()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.length; i++) {\r\n            json.push({ label: t(data[i][\"roleDescription\"]), value: data[i][\"roleId\"], checked: false })\r\n          }\r\n          if (selectClient !== undefined && selectClient.roles.length > 0) {\r\n            selectClient.roles.map(async function (item, i) {\r\n              var rol = json.find((rolItem) => {\r\n                return rolItem.value === item.roleId;\r\n              })\r\n              if (rol !== undefined && rol !== null) {\r\n                rol.checked = true;\r\n              }\r\n            })\r\n          }\r\n          setroleList(json)\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //cargar lista de paises\r\n  function loadCountries() {\r\n    apiCoreServices.getPaisesCatalogo()\r\n      .then((data) => {\r\n        if (data !== null && data !== undefined) {\r\n          let json = [];\r\n          for (let i = 0; i < data.Records.length; i++) {\r\n            json.push({ label: t(data.Records[i][\"Description\"]), value: data.Records[i][\"Code\"] })\r\n          }\r\n          // console.log(\"loadCountries\", selectClient);\r\n          setcountryList(json);\r\n          setcountrySelected(json.find(x => x.value === selectClient.nationality));\r\n          // setcountrySelected(selectClient !== undefined ? json.find(x => x.value === selectClient.nationality) : json[0]);\r\n        }\r\n      }).catch((error) => { });\r\n  }\r\n  //Actualizar valores de Cliente cada vez que se actualiza un campo\r\n  function handleChangeInputFormClient(e) {\r\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n    clientPerson[e.target.name] = e.target.value;\r\n    setselectClient(clientPerson);\r\n    //si la persona es juridica auto seleccionamos RUC\r\n    if (clientPerson.personType === 2) {\r\n      setidentificationTypeSelected(identificationTypeList.find(x => x.value === \"RUC\"));\r\n    }\r\n  }\r\n  //Actualizar roles de Cliente cada vez que se actualiza un checkbox\r\n  function handleChangeInputChkClient(e) {\r\n    var clientPerson = selectClient !== undefined ? selectClient : new PersonModel();\r\n    clientPerson.transactId = transactId;\r\n    if (e.target.checked) { //si es true lo agregamos\r\n      clientPerson.roles.push({ roleId: e.target.name })\r\n    }\r\n    else {//lo borramos\r\n      clientPerson.roles = clientPerson.roles.filter(rol => rol.roleId !== e.target.name)\r\n    }\r\n    setselectClient(clientPerson);\r\n  }\r\n  //Guardar el Cliente\r\n  async function handleSubmitFormClient(event, errors, values) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    if (selectClient !== undefined && selectClient !== null) {\r\n      if (countrySelected == undefined) {\r\n        setcampoRequeridoCountry(true);\r\n        return;\r\n      } else {\r\n        setcampoRequeridoCountry(false)\r\n      }\r\n      if (selectClient.roles.length <= 0) {\r\n        showMessage(t(\"YoumustselectatleasoneRoleforthisclient\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.blacklist.length <= 0) {\r\n        showMessage(t(\"ThisclienthasnotbeenverifiedonWatchLists\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.idType.length <= 0) {\r\n        showMessage(t(\"PleaseselectIdentificationType\"), true);\r\n        return;\r\n      }\r\n      if (selectClient.nationality.length <= 0) {\r\n        showMessage(t(\"PleaseselectNationality\"), true);\r\n        return;\r\n      }\r\n\r\n      if (selectClient.personId <= 0) {//nueva persona\r\n        apiServiceBackend.nuevoOrquestadoListaPersonaSolicitud(selectClient).then((data) => {\r\n          if (data !== null && data !== undefined) {\r\n            //salir\r\n            props.onCancel();\r\n\r\n            props.checkDebtorShareholders();\r\n          }\r\n          else {\r\n            showMessage(t(\"Datacouldnotbesaved\"), true);\r\n          }\r\n        }).catch((error) => { });\r\n      }\r\n      else {\r\n        apiServiceBackend.actualizarOrquestadoListaPersonaSolicitud(selectClient)\r\n          .then((data) => {\r\n            if (data !== null && data !== undefined) {\r\n              //salir\r\n              props.onCancel();\r\n            }\r\n            else {\r\n              showMessage(t(\"Datacouldnotbesaved\"), true);\r\n            }\r\n          }).catch((err) => { });\r\n      }\r\n    }\r\n    else {\r\n      showMessage(t(\"Theclientisnotvalid\"), true);\r\n    }\r\n  }\r\n  //Retorna los campos a mostrar en pantalla segun el tipo de persona seleccionada\r\n  function getClientDataFormByPersonType(personType) {\r\n    if (personType === undefined) {\r\n      return null;\r\n    }\r\n    switch (personType.value) {\r\n      case 1: {//Natural\r\n        return (<React.Fragment>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"FirstName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.name : ''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondName\">{t(\"SecondName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.secondName : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"lastName\">{t(\"FirstLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.lastName : ''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"secondSurname\">{t(\"SecondLastName\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"secondSurname\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.secondSurname : ''}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"birthDate\">{t(\"DBO\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"birthDate\"\r\n                errorMessage={t(\"This client is not of legal age\")}\r\n                max={moment().subtract(18, 'years')}\r\n                type=\"date\" onChange={(e) => { e.target.value = moment(e.target.value).format(\"YYYY-MM-DD\"); handleChangeInputFormClient(e) }}\r\n                value={selectClient !== undefined ? selectClient.birthDate : ''}\r\n              />\r\n            </AvGroup>\r\n          </Col>\r\n        </React.Fragment>)\r\n      }\r\n      case 2: {//Juridica\r\n        return (\r\n          <Col md=\"6\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"name\">{t(\"SocialReason\")}</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\" onChange={handleChangeInputFormClient}\r\n                value={selectClient !== undefined ? selectClient.name : ''}\r\n                errorMessage={t(\"Required Field\")}\r\n                validate={{ required: { value: true } }} />\r\n            </div>\r\n          </Col>\r\n        )\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  //Carga de Datos de Cliente de T24 Seleccionado\r\n  function loadClientDataT24(dataClientT24) {\r\n    var clientPerson = new PersonModel();\r\n    if (selectClient !== undefined) {\r\n      clientPerson.personId = selectClient.personId;\r\n    }\r\n    clientPerson.customerNumberT24 = dataClientT24.id;\r\n    clientPerson.clientDocumentId = dataClientT24.idnumber;\r\n    clientPerson.name = dataClientT24.firstname;\r\n    clientPerson.secondName = dataClientT24.secondname;\r\n    clientPerson.lastName = dataClientT24.lastname;\r\n    clientPerson.secondSurname = dataClientT24.secondlastname;\r\n    clientPerson.personType = personTypeList.find(x => x.value === Number(dataClientT24.partyType)).value;\r\n    clientPerson.idType = identificationTypeList.find(x => x.value === dataClientT24.idtype).value;\r\n    setselectClient(clientPerson);\r\n    setidentificationTypeSelected(identificationTypeList.find(x => x.value === clientPerson.idType));\r\n    setpersonTypeSelected(personTypeList.find(x => x.value === clientPerson.personType));\r\n  }\r\n  //mostrar mensaje \r\n  function showMessage(message, isError = false) {\r\n    setmsgData({ show: true, msg: message, isError: isError })\r\n  }\r\n  //Abrir modal de verificacion en listas de vigilancias\r\n  function showWatchListCheck(show = true) {\r\n    setshowBlackListForm(show);\r\n  }\r\n  function addWatchListResult(resultWatchList) {\r\n    if (selectClient !== undefined) {\r\n      var blacklistmdl = new BlackListHistoryModel(); //new BlacklistModel();\r\n      blacklistmdl.blackList = resultWatchList.blackList;\r\n      blacklistmdl.comment = resultWatchList.comments;\r\n      blacklistmdl.transactId = transactId;\r\n      selectClient.blacklist.push(blacklistmdl);\r\n      setselectClient(selectClient);\r\n    }\r\n  }\r\n\r\n  //Elimina record de la lista de Incidencias de Black Lista\r\n  return (\r\n    <React.Fragment>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmClient\" className=\"needs-validation\" onSubmit={handleSubmitFormClient}>\r\n        <Card>\r\n          <h5 class=\"card-sub-title\">{t(\"ClientData\")}</h5>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"personType\">{t(\"PersonType\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"} \r\n                    onChange={(e) => { setpersonTypeSelected(personTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'personType', value: e.value } }) }}\r\n                    options={personTypeList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={personTypeSelected}\r\n                    name=\"personType\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"customerNumberT24\">{t(\"ClientNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"customerNumberT24\" type=\"number\" disabled={selectClient !== undefined ? selectClient.isNew : true}\r\n                    value={selectClient !== undefined ? selectClient.customerNumberT24 : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {getClientDataFormByPersonType(personTypeSelected)}\r\n\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label>{t(\"IdType\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"} \r\n                    onChange={(e) => { setidentificationTypeSelected(identificationTypeList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'idType', value: e.value } }) }}\r\n                    options={identificationTypeList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={identificationTypeSelected}\r\n                    name=\"idType\"\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"idnumber\">{t(\"IdNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"clientDocumentId\" type=\"text\"\r\n                    validate={{ required: { value: true, errorMessage: t(\"Required Field\") } }}\r\n                    value={selectClient !== undefined ? selectClient.clientDocumentId : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"nationality\">{t(\"Nationality\")}</Label>\r\n                  <Select noOptionsMessage={() => \"\"} \r\n                    onChange={(e) => { setcountrySelected(countryList.find(x => x.value === e.value)); handleChangeInputFormClient({ target: { name: 'nationality', value: e.value } }) }}\r\n                    options={countryList}\r\n                    classNamePrefix=\"select2-selection\"\r\n                    value={countrySelected}\r\n                    name=\"nationality\"\r\n                  />\r\n                  {campoRequeridoCountry ?\r\n                    <p className=\"message-error-parrafo\">{t(\"Required Field\")}</p>\r\n                    : null}\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"phone\">{t(\"PhoneNumber\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"phone\"\r\n                    type=\"text\"\r\n                    onKeyPress={(e) => { return checkNumber(e) }}\r\n                    validate={{\r\n                      number: { value: true, errorMessage: t(\"InvalidField\") },\r\n                    }}\r\n                    value={selectClient !== undefined ? selectClient.phone : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <div className=\"mb-3\">\r\n                  <Label htmlFor=\"email\">{t(\"Email\")}</Label>\r\n                  <AvField onChange={handleChangeInputFormClient} className=\"form-control\"\r\n                    name=\"email\" type=\"email\"\r\n                    value={selectClient !== undefined ? selectClient.email : ''}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <h5 class=\"card-sub-title\">{t(\"Roles\")}</h5>\r\n                  <CardBody>\r\n                    <Row>\r\n                      {roleList.map((item, index) => (\r\n                        <Col md=\"4\">\r\n                          <AvGroup check className=\"my-2\">\r\n                            <AvInput type=\"checkbox\" defaultChecked={item.checked} name={item.value} onChange={handleChangeInputChkClient} />\r\n                            <Label htmlFor={item.value}> {item.label}</Label>\r\n                          </AvGroup>\r\n                        </Col>\r\n                      ))}\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n\r\n            <Row>\r\n              <Col xs={12}>\r\n                <Card>\r\n                  <CardBody>\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <h5 class=\"card-sub-title\">{t(\"BlackListIncidences\")}</h5>\r\n                    </Col>\r\n                    <Col md={6} style={{ textAlign: \"right\", }}>\r\n                    <Button className=\"btn\" color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={showWatchListCheck} title={t(\"Add\")}><i className=\"fas fa-lg fa-plus-circle\"></i> {(\" \")}</Button>\r\n                 </Col>\r\n                  </Row>\r\n                    <Row>\r\n                        <Col md=\"12\">\r\n                          <div className=\"table-responsive styled-table-div\">\r\n                            <Table className=\"table table-striped table-hover styled-table table\">\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>{t(\"WithMatches\")}</th>\r\n                                  <th>{t(\"Observations\")}</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                {selectClient !== undefined && selectClient.blacklist !== undefined && selectClient.blacklist.length > 0? \r\n                                selectClient.blacklist.map((item, index) => (\r\n                                  <tr key={index}>\r\n                                    <td>{item.blackList ? \"Si\" : \"No\"}</td>\r\n                                    <td>{item.comment}</td>\r\n                                  </tr>\r\n                                )):\r\n                                <tr>\r\n                                <td colSpan={7}>\r\n                                <div className=\"alert alert-info\" style={{ textAlign: \"center\" }}>{t(\"NotVerified\")}</div> \r\n                                </td>\r\n                              </tr>\r\n                          \r\n                                }\r\n                              </tbody>\r\n                            </Table>\r\n                          </div>\r\n                        </Col>\r\n                    </Row>\r\n                  </CardBody>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n              <Col md=\"12\">\r\n                <Alert show={msgData.show} variant={msgData.isError ? \"danger\" : \"success\"} dismissible onClose={() => { console.log(\"onClose\"); setmsgData({ show: false, msg: \"\", isError: false }) }}>\r\n                  {msgData.msg}\r\n                </Alert>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n            <Button color=\"danger\" style={{ margin: '5px 0px' }} type=\"button\" onClick={props.onCancel}>\r\n              <i className=\"mdi mdi mdi-cancel mid-12px\"></i>{\" \"}{t(\"Cancel\")}\r\n            </Button>\r\n            <Button color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n              {\" \"}{t(\"Save\")}\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </AvForm>\r\n      {showBlackListForm ?\r\n        <BlackListForm clientSelected={selectClient} isOpen={showBlackListForm} toggle={() => { setshowBlackListForm(!showBlackListForm) }} watchListResult={addWatchListResult} />\r\n        : null}\r\n    </React.Fragment>\r\n  );\r\n};\r\nClientForm.propTypes = {\r\n  onCancel: PropTypes.func,\r\n  clientSelected: PropTypes.any,\r\n  transactId: PropTypes.any,\r\n  checkDebtorShareholders: PropTypes.func\r\n}\r\nexport default ClientForm;"]},"metadata":{},"sourceType":"module"}