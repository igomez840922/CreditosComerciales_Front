{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\18_ListaExclusion\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ExclusionList = Lista de Exclusion*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\";\nimport * as OPTs from \"../../../helpers/options_helper\";\nimport * as url from \"../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport FormResult from \"./FormResultados\";\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\";\nimport ModalCloseOptions from \"./ModalCloseOptions\";\nimport LogProcess from \"../../../components/LogProcess/index\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListaExclusion = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [dataList, setDataList] = useState([]); //items de la lista de exclusion\n\n  const [dataListSelected, setDataListSelected] = useState([]); //items selected de la lista de exclusion       \n\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\n  const [mainDebtor, setmainDebtor] = useState(null); //Servicios\n\n  const [backendServices, setbackendServices] = useState(new BackendServices());\n  const [bpmServices, setbpmServices] = useState(new BpmServices()); //On Mounting (componentDid Mount)\n\n  React.useEffect(() => {}, []);\n  React.useEffect(() => {\n    let lista = document.getElementsByClassName(\"listaExclusion\");\n\n    for (var i = 0; i < lista.length; i++) {\n      for (let j = 0; j < dataListSelected.length; j++) {\n        if (dataListSelected[j].exclusionCatListId == dataList[i].exclusionId) {\n          document.getElementById(dataList[i].exclusionId).checked = true;\n        }\n      }\n    }\n  }, [props, dataListSelected]); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    //chequear si la tarea no ha sido iniciada\n    bpmServices.checkAndStartTask(locationData).then(iniresult => {\n      if (iniresult === false) {\n        history.push(url.URL_DASHBOARD);\n      }\n    });\n    loadMainDebtor(locationData);\n    setLocationData(locationData);\n    initializeData(location.data);\n    startProcess(location.data.status, location.data.taskId);\n  } //Caraga Inicial\n\n\n  function initializeData(locdata) {\n    var processNumber = locdata ? locdata.transactionId : null;\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                     Buscar en Servicio el ExclisionList de este proceso...                     */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    backendServices.queryListExclusion().then(data => {\n      setDataList(data.exclusionCatListDTOList);\n    }).catch(error => {\n      console.error('api error: ', error);\n    }); //{ transactId: location.data.transactionId, processId: location.data.processId, activityId: location.data.activityId }\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                       Obtenemos los datos de la lista de exclusion record                      */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    if (processNumber != null) {\n      backendServices.consultListExclusionChecked({\n        transactId: processNumber\n      }).then(data => {\n        let datos = data.getExclusionApplicationListDTOList;\n        setDataListSelected(datos);\n      }).catch(error => {\n        console.error('api error: ', error);\n      });\n    }\n  }\n\n  function startProcess(status, taskId) {\n    if (status === \"Ready\") {\n      bpmServices.startedStatusTask(taskId).then(resp => {\n        if (resp === undefined) {\n          history.push(url.URL_DASHBOARD);\n        }\n      });\n    }\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  function loadMainDebtor(InputData) {\n    backendServices.consultPrincipalDebtor(InputData.transactionId).then(resp => {\n      //resp.personType\n      //resp.identificationType\n      //resp.customerNumberT24\n      //resp.firstName\n      //resp.secondName\n      //resp.firstLastName\n      //resp.secondLastName\n      //resp.customerDocumentId\n      // dataReturn.nuevoDato = \"\"\n      setmainDebtor(resp);\n    });\n  } //Modal Opciones para avanzar\n\n\n  function toggleModalAdvanceOptions() {\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\n  } //Modal Opciones al Salir\n\n\n  function toggleModalCloseOptions() {\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\n  } //Modal Para mostrar Comentario de Fin de Proceso\n\n\n  function toggleModalEndProcess() {\n    setDisplayModalEndProcess(!displayModalEndProcess);\n  }\n\n  function onSelectOption(e) {\n    console.log(e);\n\n    if (document.getElementById(e.exclusionId).checked) {\n      backendServices.saveListExclusion(locationData.transactionId, e.exclusionId).then(resp => {\n        if (resp === undefined) {\n          //Mensaje ERROR\n          seterror_msg(props.t(\"ErrorSaveMessage\"));\n          seterror_dlg(true);\n          return;\n        }\n      });\n    } else {\n      backendServices.removeCheckedExclusionList(locationData.transactionId, e.exclusionId).then(resp => {\n        if (resp === undefined) {\n          //Mensaje ERROR\n          seterror_msg(props.t(\"ErrorSaveMessage\"));\n          seterror_dlg(true);\n          return;\n        }\n      });\n    }\n  } //Chequear si existen opciones seleccionadas en la lista\n\n\n  function checkSelectedOptions() {\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*              chequear si tiene seleccionada alguna opcion de la lista de exclusion             */\n\n    /*              mostrar mensaje para confirmacion y finalizar proceso                             */\n\n    /* ---------------------------------------------------------------------------------------------- */\n    var checkboxes = document.getElementsByClassName(\"listaExclusion\");\n    let check = 0;\n\n    for (var i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked) {\n        check++;\n      }\n    }\n\n    if (check > 0) {\n      setDisplayModalAdvanceOptions(true);\n    } else {\n      //Avanzamos el Proceso\n      onSaveProcess(OPTs.OPT_ENVIARIGR);\n    }\n  } //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\n\n\n  function onSaveProcess(option) {\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\n      toggleModalEndProcess();\n      return;\n    } //Guardamos la seleccion\n\n\n    var checkboxes = document.getElementsByClassName(\"listaExclusion\");\n\n    for (var i = 0; i < checkboxes.length; i++) {\n      if (checkboxes[i].checked) {}\n    }\n\n    saveJBPMProcess(option);\n  }\n\n  function saveJBPMProcess(option) {\n    switch (option) {\n      case OPTs.OPT_FINALIZARPROCESO:\n        {\n          bpmServices.abortProcess(locationData.instanceId).then(data => {\n            if (data !== undefined) {\n              history.push(url.URL_DASHBOARD);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_SALVAPARCIAL:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\n            \"activityId\": OPTs.ACT_NONE.toString(),\n            \"transactionId\": locationData.transactionId.toString(),\n            \"customerId\": locationData.customerId.toString(),\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"ErrorSaveMessage\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case OPTs.OPT_ENVIARIGR:\n        {\n          var values = {\n            \"processId\": OPTs.PROCESS_INFORMEGESTION.toString(),\n            \"activityId\": OPTs.ACT_DATOSGENERALES.toString(),\n            \"transactionId\": locationData.transactionId.toString(),\n            \"customerId\": locationData.customerId.toString(),\n            \"applicationNumber\": \"\",\n            \"procedureNumber\": \"\" //\"decision\":\"no\"          \n\n          };\n          bpmServices.updatevariables(locationData.instanceId, values).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"ErrorSaveMessage\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    }\n  } //salvar comentario de end process\n\n\n  function onSaveEndProcess(values) {\n    //Salvar los comentarios en Bitacora    \n    locationData[\"endProcessComment\"] = values.txtComment;\n    UpdateDataModel(locationData);\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\n  } //Actualizamos El Modelo de Datos segun va cambiando\n\n\n  function UpdateDataModel(data) {\n    setLocationData(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"ExclusionList\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n        active: isActiveLoading,\n        spinner: true,\n        text: props.t(\"WaitingPlease\"),\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                lg: \"12\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: [mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2 : mainDebtor.name) + \"       \" : \"\", \"           #\", locationData.transactionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  children: [props.t(\"ExclusionList\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 71\n                  }, this), \" \", props.t(\"Process\") + \": #\" + (locationData === null || locationData === void 0 ? void 0 : locationData.instanceId)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-title-desc\",\n                  children: props.t(\"Selectifyoumeetanyofthefollowingpoints\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), dataList.length > 0 && /*#__PURE__*/_jsxDEV(FormResult, {\n              results: dataList,\n              dataCheck: dataListSelected,\n              onSelectOption: onSelectOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"dark\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                toggleModalCloseOptions();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 122\n              }, this), \" \", props.t(\"Exit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"success\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: () => {\n                checkSelectedOptions();\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 122\n              }, this), \" \", props.t(\"Advance\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), locationData !== undefined && locationData.customerId !== null && locationData.customerId !== undefined && locationData.customerId.length > 0 ? /*#__PURE__*/_jsxDEV(LogProcess, {\n          locationData: locationData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 159\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalCloseOptions,\n        toggle: () => {\n          toggleModalCloseOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalAdvanceOptions, {\n        onSaveProcess: onSaveProcess,\n        isOpen: displayModalAdvanceOptions,\n        toggle: () => {\n          toggleModalAdvanceOptions();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalEndProcess, {\n        onSaveEndProcess: onSaveEndProcess,\n        isOpen: displayModalEndProcess,\n        toggle: () => {\n          toggleModalEndProcess();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListaExclusion, \"Tp1CH+gOTwvkE2hYin+OAoht8S4=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = ListaExclusion;\nexport default withTranslation()(ListaExclusion);\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaExclusion\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/18_ListaExclusion/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","LoadingOverlay","ModalEndProcess","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","AvForm","AvField","Link","Breadcrumbs","withTranslation","FormResult","ModalAdvanceOptions","ModalCloseOptions","LogProcess","BackendServices","CoreServices","BpmServices","SweetAlert","ListaExclusion","props","history","location","locationData","setLocationData","undefined","dataList","setDataList","dataListSelected","setDataListSelected","isActiveLoading","setIsActiveLoading","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","displayModalAdvanceOptions","setDisplayModalAdvanceOptions","displayModalCloseOptions","setDisplayModalCloseOptions","displayModalEndProcess","setDisplayModalEndProcess","mainDebtor","setmainDebtor","backendServices","setbackendServices","bpmServices","setbpmServices","useEffect","lista","document","getElementsByClassName","i","length","j","exclusionCatListId","exclusionId","getElementById","checked","fetchData","checkAndStartTask","then","iniresult","push","URL_DASHBOARD","loadMainDebtor","initializeData","data","startProcess","status","taskId","locdata","processNumber","transactionId","queryListExclusion","exclusionCatListDTOList","catch","error","console","consultListExclusionChecked","transactId","datos","getExclusionApplicationListDTOList","startedStatusTask","resp","removeBodyCss","body","classList","add","InputData","consultPrincipalDebtor","toggleModalAdvanceOptions","toggleModalCloseOptions","toggleModalEndProcess","onSelectOption","e","log","saveListExclusion","t","removeCheckedExclusionList","checkSelectedOptions","checkboxes","check","onSaveProcess","OPT_ENVIARIGR","option","OPT_PREFINALIZARPROCESO","saveJBPMProcess","OPT_FINALIZARPROCESO","abortProcess","instanceId","OPT_SALVAPARCIAL","values","PROCESS_LISTAEXCLUSION","toString","ACT_NONE","customerId","updatevariables","PROCESS_INFORMEGESTION","ACT_DATOSGENERALES","onSaveEndProcess","txtComment","UpdateDataModel","typePerson","name","name2","lastName","lastName2","textAlign","margin"],"mappings":"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","sourcesContent":["/*ExclusionList = Lista de Exclusion*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport ModalEndProcess from \"../../../components/EndProcess/ModalEndProcess\"\r\nimport * as OPTs from \"../../../helpers/options_helper\"\r\nimport * as url from \"../../../helpers/url_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport FormResult from \"./FormResultados\"\r\nimport ModalAdvanceOptions from \"./ModalAdvanceOptions\"\r\nimport ModalCloseOptions from \"./ModalCloseOptions\"\r\nimport LogProcess from \"../../../components/LogProcess/index\"\r\nimport { BackendServices, CoreServices, BpmServices, } from \"../../../services\";\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\nconst ListaExclusion = props => {\r\n\r\n\r\n  const history = useHistory();\r\n  const location = useLocation()\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);\r\n\r\n  const [dataList, setDataList] = useState([]); //items de la lista de exclusion\r\n  const [dataListSelected, setDataListSelected] = useState([]); //items selected de la lista de exclusion       \r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [displayModalAdvanceOptions, setDisplayModalAdvanceOptions] = useState(false);\r\n  const [displayModalCloseOptions, setDisplayModalCloseOptions] = useState(false);\r\n  const [displayModalEndProcess, setDisplayModalEndProcess] = useState(false);\r\n  const [mainDebtor, setmainDebtor] = useState(null);\r\n  //Servicios\r\n  const [backendServices, setbackendServices] = useState(new BackendServices());\r\n  const [bpmServices, setbpmServices] = useState(new BpmServices());\r\n\r\n  //On Mounting (componentDid Mount)\r\n  React.useEffect(() => {\r\n    \r\n  }, []);\r\n  React.useEffect(() => {\r\n    let lista = document.getElementsByClassName(\"listaExclusion\");\r\n    for (var i = 0; i < lista.length; i++) {\r\n      for (let j = 0; j < dataListSelected.length; j++) {\r\n        if (dataListSelected[j].exclusionCatListId == dataList[i].exclusionId) {\r\n          document.getElementById(dataList[i].exclusionId).checked = true;\r\n        }\r\n      }\r\n    }\r\n  }, [props, dataListSelected]);\r\n\r\n  //Caraga Inicial de datos\r\n  function fetchData(locationData) {\r\n    //chequear si la tarea no ha sido iniciada\r\n    bpmServices.checkAndStartTask(locationData)\r\n      .then((iniresult) => {\r\n        if (iniresult === false) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      })\r\n      loadMainDebtor(locationData);\r\n      setLocationData(locationData);\r\n      initializeData(location.data);\r\n      startProcess(location.data.status, location.data.taskId);\r\n  }\r\n\r\n\r\n  //Caraga Inicial\r\n  function initializeData(locdata) {\r\n    var processNumber = locdata ? locdata.transactionId : null;\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                     Buscar en Servicio el ExclisionList de este proceso...                     */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    backendServices.queryListExclusion().then((data) => {\r\n      setDataList(data.exclusionCatListDTOList);\r\n    }).catch((error) => {\r\n      console.error('api error: ', error);\r\n    });\r\n    //{ transactId: location.data.transactionId, processId: location.data.processId, activityId: location.data.activityId }\r\n\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                       Obtenemos los datos de la lista de exclusion record                      */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    if (processNumber != null) {\r\n      backendServices.consultListExclusionChecked({ transactId: processNumber }).then((data) => {\r\n        let datos = data.getExclusionApplicationListDTOList;\r\n        setDataListSelected(datos);\r\n\r\n      }).catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n    }\r\n  }\r\n  function startProcess(status, taskId) {\r\n    if (status === \"Ready\") {\r\n      bpmServices.startedStatusTask(taskId).then(resp => {\r\n        if (resp === undefined) {\r\n          history.push(url.URL_DASHBOARD);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n  function loadMainDebtor(InputData) {\r\n    backendServices.consultPrincipalDebtor(InputData.transactionId).then(resp => {\r\n      //resp.personType\r\n      //resp.identificationType\r\n      //resp.customerNumberT24\r\n      //resp.firstName\r\n      //resp.secondName\r\n      //resp.firstLastName\r\n      //resp.secondLastName\r\n      //resp.customerDocumentId\r\n      // dataReturn.nuevoDato = \"\"\r\n      setmainDebtor(resp)\r\n    })\r\n  }\r\n\r\n  //Modal Opciones para avanzar\r\n  function toggleModalAdvanceOptions() {\r\n    setDisplayModalAdvanceOptions(!displayModalAdvanceOptions);\r\n  }\r\n  //Modal Opciones al Salir\r\n  function toggleModalCloseOptions() {\r\n    setDisplayModalCloseOptions(!displayModalCloseOptions);\r\n  }\r\n  //Modal Para mostrar Comentario de Fin de Proceso\r\n  function toggleModalEndProcess() {\r\n    setDisplayModalEndProcess(!displayModalEndProcess);\r\n  }\r\n  function onSelectOption(e) {\r\n    console.log(e);\r\n\r\n    if (document.getElementById(e.exclusionId).checked) {\r\n      backendServices.saveListExclusion(locationData.transactionId, e.exclusionId).then(resp => {\r\n        if (resp === undefined) {\r\n          //Mensaje ERROR\r\n          seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n          seterror_dlg(true)\r\n          return;\r\n        }\r\n      });\r\n    } else {\r\n      backendServices.removeCheckedExclusionList(locationData.transactionId, e.exclusionId).then(resp => {\r\n        if (resp === undefined) {\r\n          //Mensaje ERROR\r\n          seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n          seterror_dlg(true)\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //Chequear si existen opciones seleccionadas en la lista\r\n  function checkSelectedOptions() {\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*              chequear si tiene seleccionada alguna opcion de la lista de exclusion             */\r\n    /*              mostrar mensaje para confirmacion y finalizar proceso                             */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    var checkboxes = document.getElementsByClassName(\"listaExclusion\");\r\n    let check = 0;\r\n    for (var i = 0; i < checkboxes.length; i++) {\r\n      if (checkboxes[i].checked) {\r\n        check++;\r\n      }\r\n    }\r\n\r\n    if (check > 0) {\r\n      setDisplayModalAdvanceOptions(true);\r\n    } else {\r\n      //Avanzamos el Proceso\r\n      onSaveProcess(OPTs.OPT_ENVIARIGR);\r\n    }\r\n  }\r\n\r\n  //Salvando el Proceso y le pasamos una opcion: 1-Finalizar Proceso, 2- Salvarlo, 3- A Cumplimmineto, 4- Avanzar a IGR\r\n  function onSaveProcess(option) {\r\n\r\n    if (option === OPTs.OPT_PREFINALIZARPROCESO) {\r\n      toggleModalEndProcess();\r\n      return;\r\n    }\r\n\r\n    //Guardamos la seleccion\r\n\r\n    var checkboxes = document.getElementsByClassName(\"listaExclusion\");\r\n    for (var i = 0; i < checkboxes.length; i++) {\r\n      if (checkboxes[i].checked) {\r\n      }\r\n    }\r\n\r\n    saveJBPMProcess(option);\r\n\r\n  }\r\n\r\n  function saveJBPMProcess(option) {\r\n\r\n    switch (option) {\r\n      case OPTs.OPT_FINALIZARPROCESO: {\r\n        bpmServices.abortProcess(locationData.instanceId)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              history.push(url.URL_DASHBOARD);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n              seterror_dlg(true)\r\n            }\r\n          });\r\n        break;\r\n      }\r\n      case OPTs.OPT_SALVAPARCIAL: {\r\n        var values = {\r\n          \"processId\": OPTs.PROCESS_LISTAEXCLUSION.toString(),\r\n          \"activityId\": OPTs.ACT_NONE.toString(),\r\n          \"transactionId\": locationData.transactionId.toString(),\r\n          \"customerId\": locationData.customerId.toString(),\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              setsuccessSave_dlg(true);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n              seterror_dlg(true)\r\n            }\r\n          });\r\n\r\n        break;\r\n      }\r\n      case OPTs.OPT_ENVIARIGR: {\r\n        var values = {\r\n          \"processId\": OPTs.PROCESS_INFORMEGESTION.toString(),\r\n          \"activityId\": OPTs.ACT_DATOSGENERALES.toString(),\r\n          \"transactionId\": locationData.transactionId.toString(),\r\n          \"customerId\": locationData.customerId.toString(),\r\n          \"applicationNumber\": \"\",\r\n          \"procedureNumber\": \"\",\r\n          //\"decision\":\"no\"          \r\n        };\r\n        bpmServices.updatevariables(locationData.instanceId, values)\r\n          .then((data) => {\r\n            if (data !== undefined) {\r\n              setsuccessSave_dlg(true);\r\n            }\r\n            else {\r\n              //Mensaje ERROR\r\n              seterror_msg(props.t(\"ErrorSaveMessage\"))\r\n              seterror_dlg(true)\r\n            }\r\n          });\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  //salvar comentario de end process\r\n  function onSaveEndProcess(values) {\r\n\r\n    //Salvar los comentarios en Bitacora    \r\n    locationData[\"endProcessComment\"] = values.txtComment;\r\n\r\n    UpdateDataModel(locationData);\r\n\r\n    onSaveProcess(OPTs.OPT_FINALIZARPROCESO);\r\n  }\r\n\r\n  //Actualizamos El Modelo de Datos segun va cambiando\r\n  function UpdateDataModel(data) {\r\n    setLocationData(data);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"ExclusionList\")} />\r\n        <LoadingOverlay active={isActiveLoading} spinner text={props.t(\"WaitingPlease\")}>\r\n          <Card>\r\n            <CardBody>\r\n              <Row>\r\n                <Col lg=\"12\">\r\n                <h4 className=\"card-title\">{mainDebtor != null ? (mainDebtor.typePerson === \"1\" ? (mainDebtor.name + \" \" + mainDebtor.name2 + \" \" + mainDebtor.lastName + \" \" + mainDebtor.lastName2) : (mainDebtor.name)) + \"       \" : \"\"}           #{locationData.transactionId}</h4>\r\n                <h4 className=\"card-title\">{props.t(\"ExclusionList\")} <br /> {props.t(\"Process\") + \": #\" + locationData?.instanceId}</h4>\r\n                  <p className=\"card-title-desc\">\r\n                    {props.t(\"Selectifyoumeetanyofthefollowingpoints\")}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              {dataList.length > 0 && (\r\n                <FormResult results={dataList} dataCheck={dataListSelected} onSelectOption={onSelectOption} />\r\n              )}\r\n            </CardBody>\r\n            <CardFooter style={{ textAlign: \"right\" }}>\r\n              <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { toggleModalCloseOptions() }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n              <Button color=\"success\" type=\"button\" style={{ margin: '5px' }} onClick={() => { checkSelectedOptions() }}><i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i> {props.t(\"Advance\")}</Button>\r\n            </CardFooter>\r\n          </Card>\r\n\r\n          {(locationData !== undefined && locationData.customerId !== null && locationData.customerId !== undefined && locationData.customerId.length > 0) ? (<LogProcess locationData={locationData} />) : null}\r\n        </LoadingOverlay>\r\n\r\n        <ModalCloseOptions onSaveProcess={onSaveProcess} isOpen={displayModalCloseOptions} toggle={() => { toggleModalCloseOptions() }} />\r\n        <ModalAdvanceOptions onSaveProcess={onSaveProcess} isOpen={displayModalAdvanceOptions} toggle={() => { toggleModalAdvanceOptions() }} />\r\n        <ModalEndProcess onSaveEndProcess={onSaveEndProcess} isOpen={displayModalEndProcess} toggle={() => { toggleModalEndProcess() }} />\r\n\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default (withTranslation()(ListaExclusion))\r\n"]},"metadata":{},"sourceType":"module"}