{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\"; // Calender Redux States\n\nimport { ADD_NEW_EVENT, DELETE_EVENT, GET_CATEGORIES, GET_EVENTS, UPDATE_EVENT, GET_TRAMIT } from \"./actionTypes\";\nimport { getEventsSuccess, getEventsFail, addEventFail, addEventSuccess, updateEventSuccess, updateEventFail, deleteEventSuccess, deleteEventFail, getCategoriesSuccess, getCategoriesFail, getTramitSuccess } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getEvents, addNewEvent, updateEvent, deleteEvent, getCategories, getTramit } from \"../../helpers/fakebackend_helper\";\n\nfunction* fetchEvents() {\n  try {\n    const response = yield call(getEvents);\n    yield put(getEventsSuccess(response));\n  } catch (error) {\n    yield put(getEventsFail(error));\n  }\n}\n\nfunction* onAddNewEvent({\n  payload: event\n}) {\n  try {\n    const response = yield call(addNewEvent, event);\n    yield put(addEventSuccess(response));\n  } catch (error) {\n    yield put(addEventFail(error));\n  }\n}\n\nfunction* onUpdateEvent({\n  payload: event\n}) {\n  try {\n    const response = yield call(updateEvent, event);\n    yield put(updateEventSuccess(response));\n  } catch (error) {\n    yield put(updateEventFail(error));\n  }\n}\n\nfunction* onDeleteEvent({\n  payload: event\n}) {\n  try {\n    const response = yield call(deleteEvent, event);\n    yield put(deleteEventSuccess(response));\n  } catch (error) {\n    yield put(deleteEventFail(error));\n  }\n}\n\nfunction* onGetCategories() {\n  try {\n    const response = yield call(getCategories);\n    yield put(getCategoriesSuccess(response));\n  } catch (error) {\n    yield put(getCategoriesFail(error));\n  }\n}\n\nfunction* onGetTramit() {\n  try {\n    const response = yield call(getTramit);\n    console.group(\"tramits\");\n    console.info(response);\n    console.groupEnd(); // yield put(getCategoriesSuccess(response))\n  } catch (error) {\n    // yield put(getCategoriesFail(error))\n    console.error(error);\n  }\n}\n\nfunction* calendarSaga() {\n  yield takeEvery(GET_EVENTS, fetchEvents);\n  yield takeEvery(ADD_NEW_EVENT, onAddNewEvent);\n  yield takeEvery(UPDATE_EVENT, onUpdateEvent);\n  yield takeEvery(DELETE_EVENT, onDeleteEvent);\n  yield takeEvery(GET_CATEGORIES, onGetCategories);\n  yield takeEvery(GET_TRAMIT, onGetTramit);\n}\n\nexport default calendarSaga;","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/store/calendar/saga.js"],"names":["takeEvery","put","call","ADD_NEW_EVENT","DELETE_EVENT","GET_CATEGORIES","GET_EVENTS","UPDATE_EVENT","GET_TRAMIT","getEventsSuccess","getEventsFail","addEventFail","addEventSuccess","updateEventSuccess","updateEventFail","deleteEventSuccess","deleteEventFail","getCategoriesSuccess","getCategoriesFail","getTramitSuccess","getEvents","addNewEvent","updateEvent","deleteEvent","getCategories","getTramit","fetchEvents","response","error","onAddNewEvent","payload","event","onUpdateEvent","onDeleteEvent","onGetCategories","onGetTramit","console","group","info","groupEnd","calendarSaga"],"mappings":"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","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\"\r\n\r\n// Calender Redux States\r\nimport {\r\n  ADD_NEW_EVENT,\r\n  DELETE_EVENT,\r\n  GET_CATEGORIES,\r\n  GET_EVENTS,\r\n  UPDATE_EVENT,\r\n  GET_TRAMIT,\r\n} from \"./actionTypes\"\r\n\r\nimport {\r\n  getEventsSuccess,\r\n  getEventsFail,\r\n  addEventFail,\r\n  addEventSuccess,\r\n  updateEventSuccess,\r\n  updateEventFail,\r\n  deleteEventSuccess,\r\n  deleteEventFail,\r\n  getCategoriesSuccess,\r\n  getCategoriesFail,\r\n  getTramitSuccess,\r\n} from \"./actions\"\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getEvents,\r\n  addNewEvent,\r\n  updateEvent,\r\n  deleteEvent,\r\n  getCategories,\r\n  getTramit\r\n} from \"../../helpers/fakebackend_helper\"\r\n\r\nfunction* fetchEvents() {\r\n  try {\r\n    const response = yield call(getEvents)\r\n    yield put(getEventsSuccess(response))\r\n  } catch (error) {\r\n    yield put(getEventsFail(error))\r\n  }\r\n}\r\n\r\nfunction* onAddNewEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(addNewEvent, event)\r\n    yield put(addEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(addEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onUpdateEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(updateEvent, event)\r\n    yield put(updateEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(updateEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onDeleteEvent({ payload: event }) {\r\n  try {\r\n    const response = yield call(deleteEvent, event)\r\n    yield put(deleteEventSuccess(response))\r\n  } catch (error) {\r\n    yield put(deleteEventFail(error))\r\n  }\r\n}\r\n\r\nfunction* onGetCategories() {\r\n  try {\r\n    const response = yield call(getCategories)\r\n    yield put(getCategoriesSuccess(response))\r\n  } catch (error) {\r\n    yield put(getCategoriesFail(error))\r\n  }\r\n}\r\n\r\nfunction* onGetTramit() {\r\n  try {\r\n    const response = yield call(getTramit)\r\n    console.group(\"tramits\")\r\n    console.info(response);\r\n    console.groupEnd();\r\n    // yield put(getCategoriesSuccess(response))\r\n  } catch (error) {\r\n    // yield put(getCategoriesFail(error))\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction* calendarSaga() {\r\n  yield takeEvery(GET_EVENTS, fetchEvents)\r\n  yield takeEvery(ADD_NEW_EVENT, onAddNewEvent)\r\n  yield takeEvery(UPDATE_EVENT, onUpdateEvent)\r\n  yield takeEvery(DELETE_EVENT, onDeleteEvent)\r\n  yield takeEvery(GET_CATEGORIES, onGetCategories)\r\n  yield takeEvery(GET_TRAMIT, onGetTramit)\r\n}\r\n\r\nexport default calendarSaga\r\n"]},"metadata":{},"sourceType":"module"}