{"ast":null,"code":"import _createForOfIteratorHelper from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{BackendServices,CoreServices}from\"../services\";var backendServices=new BackendServices();var coreServices=new CoreServices();var AutoSaveData=/*#__PURE__*/function(){function AutoSaveData(){_classCallCheck(this,AutoSaveData);}_createClass(AutoSaveData,[{key:\"saveInitialData\",value://salvamos deudas de un tramite\nfunction(){var _saveInitialData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(transactionId){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:this.saveDebts(transactionId);this.saveAccountMovements(transactionId);this.saveCorporateExhibition(transactionId);this.saveCorporateExhibitionByClients(transactionId);this.saveFacilities(transactionId);case 5:case\"end\":return _context.stop();}}},_callee,this);}));function saveInitialData(_x){return _saveInitialData.apply(this,arguments);}return saveInitialData;}()//salvamos exposicion por tramite\n},{key:\"saveCorporateExhibition\",value:function(){var _saveCorporateExhibition=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transactionId){var dataResult,i,datoSent;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return backendServices.eliminarExposicionCorporativaBD(transactionId);case 3:_context2.next=5;return coreServices.getCorporateExhibition(transactionId);case 5:dataResult=_context2.sent;i=0;case 7:if(!(i<dataResult.length)){_context2.next=14;break;}datoSent={\"transactId\":Number(transactionId),//\"accountNumber\": data.name,\n//\"t24ClientId\": data.customerNumberT24,\n\"description\":dataResult[i].name,\"approved\":dataResult[i].approved,\"currentBalance\":dataResult[i].balance,\"proposed\":dataResult[i].proposal,\"ltv\":0,t24:true,\"difference\":dataResult[i].variation,\"guarantee\":0};_context2.next=11;return backendServices.saveExposicionCorporativaBD(datoSent);case 11:i++;_context2.next=7;break;case 14:_context2.next=18;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,16]]);}));function saveCorporateExhibition(_x2){return _saveCorporateExhibition.apply(this,arguments);}return saveCorporateExhibition;}()//salvamos exposicion por tramite\n},{key:\"saveCorporateExhibitionByClients\",value:function(){var _saveCorporateExhibitionByClients=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transactionId){var debtors,i,partyId,debtorName,dataResult,p,datoSent;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;/*var dataResult = await backendServices.getExposicionCorporativaClienteBD(transactionId);\r\n      if (dataResult !== undefined && dataResult !== null && dataResult.length > 0) {\r\n        return;\r\n      }*/backendServices.eliminarExposicionCorporativaClienteBD(transactionId);_context3.next=4;return backendServices.consultarDeudores(transactionId);case 4:debtors=_context3.sent;if(!(debtors===null||debtors===undefined)){_context3.next=7;break;}return _context3.abrupt(\"return\",undefined);case 7:i=0;case 8:if(!(i<debtors.length)){_context3.next=26;break;}partyId=debtors[i].customerNumberT24;debtorName=debtors[i]!==undefined?debtors[i].typePerson==\"2\"?debtors[i].name:debtors[i].name+\" \"+debtors[i].name2+\" \"+debtors[i].lastName+\" \"+debtors[i].lastName2:\"\";_context3.next=13;return coreServices.getCorporateExhibitionByClients(partyId);case 13:dataResult=_context3.sent;p=0;case 15:if(!(p<dataResult.length)){_context3.next=23;break;}datoSent={\"transactId\":Number(transactionId),\"accountNumber\":debtorName,\"t24ClientId\":partyId,\"description\":dataResult[p].name,\"approved\":dataResult[p].approved,\"currentBalance\":dataResult[p].balance,\"proposed\":dataResult[p].proposal,\"ltv\":0,t24:true,\"difference\":dataResult[p].variation,\"guarantee\":0};console.log(\"saveCorporateExhibitionByClients\",datoSent);_context3.next=20;return backendServices.saveExposicionCorporativaClienteBD(datoSent);case 20:p++;_context3.next=15;break;case 23:i++;_context3.next=8;break;case 26:_context3.next=30;break;case 28:_context3.prev=28;_context3.t0=_context3[\"catch\"](0);case 30:case\"end\":return _context3.stop();}}},_callee3,null,[[0,28]]);}));function saveCorporateExhibitionByClients(_x3){return _saveCorporateExhibitionByClients.apply(this,arguments);}return saveCorporateExhibitionByClients;}()//salvamos facilidades por tramite\n},{key:\"saveFacilities\",value:function(){var _saveFacilities=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transactionId){var request,dataResult,i,_dataResult$i$facilit,_request$0$requestId,datoSent;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return backendServices.consultGeneralDataPropCred(transactionId);case 3:request=_context4.sent;_context4.next=6;return backendServices.consultarFacilidadesT24(request[0].requestId);case 6:dataResult=_context4.sent;/*if (dataResult !== undefined && dataResult !== null && dataResult.length > 0) {\r\n        return;\r\n      }*/ //Borrar de BD todas las Facilidades con \"t24\"= true\nconsole.log(\"saveFacilities\",dataResult);backendServices.eliminarFacilidadesFisica(request[0].requestId);_context4.next=11;return coreServices.getFacilitiesByTransaction(transactionId);case 11:dataResult=_context4.sent;i=0;case 13:if(!(i<dataResult.length)){_context4.next=21;break;}datoSent={\"facilityNumber\":dataResult[i].AcctId,\"cr\":dataResult[i].AcctId,\"amount\":dataResult[i].approvedAmount,\"debtor\":dataResult[i].debtorName,\"clientTypeId\":dataResult[i].debtorId,\"balance\":dataResult[i].actualBalance,\"purpose\":\"\",\"sublimits\":\"\",\"proposalRate\":0,\"noSubsidyRate\":0,\"effectiveRate\":0,\"feci\":false,\"termDays\":0,\"termDescription\":\"\",\"ltv\":0,\"finantialConditions\":\" \",\"environmentRiskCategory\":0,\"covenant\":\" \",\"environmentRiskOpinion\":\" \",\"finantialCovenant\":\" \",\"legalDocumentation\":\"  \",\"otherConditions\":\" \",\"creditRiskOpinion\":\" \",\"provision\":\" \",\"proposalTypeId\":\"\",\"proposalTypeName\":\"\",\"facilityTypeId\":(_dataResult$i$facilit=dataResult[i].facilityType)!==null&&_dataResult$i$facilit!==void 0?_dataResult$i$facilit:\"\",\"termType\":\"\",\"origin\":\"CORE\",\"applyEscrow\":false,\"facilityId\":0,\"requestId\":(_request$0$requestId=request[0].requestId)!==null&&_request$0$requestId!==void 0?_request$0$requestId:\"\",\"startingAmount\":0,t24:true,\"term\":\"\"};_context4.next=17;return backendServices.newFacilityPropCred(datoSent);case 17:console.log(\"saveFacilities\",dataResult);case 18:i++;_context4.next=13;break;case 21:_context4.next=25;break;case 23:_context4.prev=23;_context4.t0=_context4[\"catch\"](0);case 25:case\"end\":return _context4.stop();}}},_callee4,null,[[0,23]]);}));function saveFacilities(_x4){return _saveFacilities.apply(this,arguments);}return saveFacilities;}()//salvamos deudas a Corto y largo Plazo\n},{key:\"saveDebts\",value:function(){var _saveDebts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(transactionId){var checkCP,checkLP,dataResult,dataResultLP,dataResultCore,_iterator,_step,short,record,_short$dateT,_record$codeT,_short$dateT2,dataSet,_short$codeT,_short$dateT3,_dataSet,_short$codeT2,_short$dateT4,_dataSet2,_iterator2,_step2,long,_record,_long$dateT,_short$codeT3,_short$dateT5,_dataSet3,_short$codeT4,_short$dateT6,_dataSet4,_long$codeT,_long$dateT2,_dataSet5;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;checkCP=false;checkLP=false;_context5.next=5;return backendServices.consultBankingRelationsDebtsCP(transactionId);case 5:dataResult=_context5.sent;if(dataResult!==undefined&&dataResult!==null&&dataResult.getBankingRelationCPDTOList.length>0){}else{checkCP=true;}_context5.next=9;return backendServices.consultBankRelationsDebtsLP(transactionId);case 9:dataResultLP=_context5.sent;if(dataResultLP!==undefined&&dataResultLP!==null&&dataResultLP.bankingRelationLPDTOList.length>0){}else{checkLP=true;}if(!(!checkCP&&!checkLP)){_context5.next=13;break;}return _context5.abrupt(\"return\");case 13:_context5.next=15;return coreServices.getAllTermDebtsByTransaction(transactionId);case 15:dataResultCore=_context5.sent;if(!checkCP){_context5.next=52;break;}_iterator=_createForOfIteratorHelper(dataResultCore.shortTermresult);_context5.prev=18;_iterator.s();case 20:if((_step=_iterator.n()).done){_context5.next=44;break;}short=_step.value;console.log(\"shortTermresult\",short);if(!(dataResult!==undefined&&dataResult!==null&&dataResult.getBankingRelationCPDTOList.length>0)){_context5.next=42;break;}dataResult=dataResult.getBankingRelationCPDTOList;record=dataResult.find(function(x){var _ref;return(_ref=x.codeT24==(short===null||short===void 0?void 0:short.codeT24))!==null&&_ref!==void 0?_ref:\"\";});if(!(record!==undefined&&record!=null)){_context5.next=39;break;}if(!((_short$dateT=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT!==void 0?_short$dateT:\"\">record.dateT24)){_context5.next=33;break;}//Verificar si existe un record en dataResult.getBankingRelationCPDTOList con el mismo codeT24 .... si la fecha es mayor, actualizar amount, dateT24\ndataSet={\"facilityType\":record.facilityType,\"amount\":Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\n\"date\":record.startDate,\"expirationDate\":record.endDate,\"debitBalance1\":Number(record.balance.toFixed(2)),\"debitBalance2\":record.debitBalance2,\"debitBalance3\":record.debitBalance3,\"paymentHistory\":record.paymentHistory,\"rate\":record.rate,\"fee\":record.fee,\"bail\":record.bail,\"fundDestiny\":record.fundDestiny,status:true,t24:true,\"bank\":record.bank,\"transactId\":Number(transactionId),\"codeT24\":(_record$codeT=record===null||record===void 0?void 0:record.codeT24)!==null&&_record$codeT!==void 0?_record$codeT:\"\",\"dateT24\":(_short$dateT2=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT2!==void 0?_short$dateT2:\"\",//ACTUALIZA\n\"debtId\":record===null||record===void 0?void 0:record.debtId};_context5.next=31;return backendServices.updateBankRelationsDebtsCP(dataSet);case 31:_context5.next=37;break;case 33:if(!((short===null||short===void 0?void 0:short.dateT24)==\"\"||(short===null||short===void 0?void 0:short.dateT24)==null)){_context5.next=37;break;}//si no tiene fecha actualizar todo\n_dataSet={\"facilityType\":short.facilityType,\"amount\":Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\n\"date\":short.startDate,//ACTUALIZA\n\"expirationDate\":short.endDate,//ACTUALIZA\n\"debitBalance1\":Number(short.balance.toFixed(2)),//ACTUALIZA\n\"debitBalance2\":record.debitBalance2,\"debitBalance3\":record.debitBalance3,\"paymentHistory\":short.paymentHistory,//ACTUALIZA\n\"rate\":record.rate,\"fee\":record.fee,\"bail\":record.bail,\"fundDestiny\":record.fundDestiny,status:true,t24:true,\"bank\":short.bank,//ACTUALIZA\n\"transactId\":Number(transactionId),\"codeT24\":(_short$codeT=short===null||short===void 0?void 0:short.codeT24)!==null&&_short$codeT!==void 0?_short$codeT:\"\",//ACTUALIZA\n\"dateT24\":(_short$dateT3=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT3!==void 0?_short$dateT3:\"\",//ACTUALIZA\n\"debtId\":record===null||record===void 0?void 0:record.debtId};_context5.next=37;return backendServices.updateBankRelationsDebtsCP(_dataSet);case 37:_context5.next=42;break;case 39:// si no existe un record en dataResult.getBankingRelationCPDTOList... siempre agregamos\n_dataSet2={\"facilityType\":short.facilityType,//NUEVO\n\"amount\":Number(short.approvedAmount.toFixed(2)),//NUEVO\n\"date\":short.startDate,//NUEVO\n\"expirationDate\":short.endDate,//NUEVO\n\"debitBalance1\":Number(short.balance.toFixed(2)),//NUEVO\n\"debitBalance2\":0,//NUEVO\n\"debitBalance3\":0,//NUEVO\n\"paymentHistory\":short.paymentHistory,//NUEVO\n\"rate\":0,//NUEVO\n\"fee\":0,//NUEVO\n\"bail\":0,//NUEVO\n\"fundDestiny\":\"\",//NUEVO\nstatus:true,//NUEVO\nt24:true,//NUEVO\n\"bank\":short.bank,//NUEVO\n\"transactId\":Number(transactionId),//NUEVO\n\"codeT24\":(_short$codeT2=short===null||short===void 0?void 0:short.codeT24)!==null&&_short$codeT2!==void 0?_short$codeT2:\"\",//NUEVO\n\"dateT24\":(_short$dateT4=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT4!==void 0?_short$dateT4:\"\"//NUEVO\n};_context5.next=42;return backendServices.newBankingRelationsDebtsCP(_dataSet2);case 42:_context5.next=20;break;case 44:_context5.next=49;break;case 46:_context5.prev=46;_context5.t0=_context5[\"catch\"](18);_iterator.e(_context5.t0);case 49:_context5.prev=49;_iterator.f();return _context5.finish(49);case 52:if(!checkLP){_context5.next=87;break;}_iterator2=_createForOfIteratorHelper(dataResultCore.longTermresult);_context5.prev=54;_iterator2.s();case 56:if((_step2=_iterator2.n()).done){_context5.next=79;break;}long=_step2.value;if(!(dataResultLP!==undefined&&dataResultLP!==null&&dataResultLP.bankingRelationLPDTOList.length>0)){_context5.next=77;break;}dataResultLP=dataResultLP.bankingRelationLPDTOList;_record=dataResult.find(function(x){var _ref2;return(_ref2=x.codeT24==(long===null||long===void 0?void 0:long.codeT24))!==null&&_ref2!==void 0?_ref2:\"\";});if(!(_record!==undefined&&_record!=null)){_context5.next=74;break;}if(!((_long$dateT=long===null||long===void 0?void 0:long.dateT24)!==null&&_long$dateT!==void 0?_long$dateT:\"\">_record.dateT24)){_context5.next=68;break;}//Verificar si existe un record en dataResult.getBankingRelationCPDTOList con el mismo codeT24 .... si la fecha es mayor, actualizar amount, dateT24\n_dataSet3={\"facilityType\":_record.facilityType,\"amount\":Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\n\"date\":_record.startDate,\"expirationDate\":_record.endDate,\"debitBalance1\":Number(_record.balance.toFixed(2)),\"debitBalance2\":_record.debitBalance2,\"debitBalance3\":_record.debitBalance3,\"paymentHistory\":_record.paymentHistory,\"rate\":_record.rate,\"fee\":_record.fee,\"bail\":_record.bail,\"fundDestiny\":_record.fundDestiny,status:true,t24:true,\"bank\":_record.bank,\"transactId\":Number(transactionId),\"codeT24\":(_short$codeT3=short===null||short===void 0?void 0:short.codeT24)!==null&&_short$codeT3!==void 0?_short$codeT3:\"\",//ACTUALIZA\n\"dateT24\":(_short$dateT5=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT5!==void 0?_short$dateT5:\"\",//ACTUALIZA\n\"debtId\":_record===null||_record===void 0?void 0:_record.debtId};_context5.next=66;return backendServices.updateBankRelationsDebtsLP(_dataSet3);case 66:_context5.next=72;break;case 68:if(!((long===null||long===void 0?void 0:long.dateT24)==\"\"||(long===null||long===void 0?void 0:long.dateT24)==null)){_context5.next=72;break;}//si no tiene fecha actualizar todo\n_dataSet4={\"facilityType\":short.facilityType,\"amount\":Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\n\"date\":short.startDate,//ACTUALIZA\n\"expirationDate\":short.endDate,//ACTUALIZA\n\"debitBalance1\":Number(short.balance.toFixed(2)),//ACTUALIZA\n\"debitBalance2\":_record.debitBalance2,\"debitBalance3\":_record.debitBalance3,\"paymentHistory\":short.paymentHistory,//ACTUALIZA\n\"rate\":_record.rate,\"fee\":_record.fee,\"bail\":_record.bail,\"fundDestiny\":_record.fundDestiny,status:true,t24:true,\"bank\":short.bank,//ACTUALIZA\n\"transactId\":Number(transactionId),\"codeT24\":(_short$codeT4=short===null||short===void 0?void 0:short.codeT24)!==null&&_short$codeT4!==void 0?_short$codeT4:\"\",\"dateT24\":(_short$dateT6=short===null||short===void 0?void 0:short.dateT24)!==null&&_short$dateT6!==void 0?_short$dateT6:\"\",//ACTUALIZA\n\"debtId\":_record===null||_record===void 0?void 0:_record.debtId};_context5.next=72;return backendServices.updateBankRelationsDebtsLP(_dataSet4);case 72:_context5.next=77;break;case 74:// si no existe un record en dataResult.getBankingRelationCPDTOList... siempre agregamos\n_dataSet5={\"facilityType\":long.facilityType,\"amount\":Number(long.approvedAmount.toFixed(2)),\"date\":long.startDate,\"expirationDate\":long.endDate,\"debitBalance1\":Number(long.balance.toFixed(2)),\"debitBalance2\":0,\"debitBalance3\":0,\"paymentHistory\":long.paymentHistory,\"rate\":0,\"fee\":0,\"bail\":0,\"fundDestiny\":\"\",status:true,t24:true,\"bank\":long.bank,\"transactId\":Number(transactionId),\"codeT24\":(_long$codeT=long===null||long===void 0?void 0:long.codeT24)!==null&&_long$codeT!==void 0?_long$codeT:\"\",\"dateT24\":(_long$dateT2=long===null||long===void 0?void 0:long.dateT24)!==null&&_long$dateT2!==void 0?_long$dateT2:\"\"};_context5.next=77;return backendServices.newBankingRelationsDebtsLP(_dataSet5);case 77:_context5.next=56;break;case 79:_context5.next=84;break;case 81:_context5.prev=81;_context5.t1=_context5[\"catch\"](54);_iterator2.e(_context5.t1);case 84:_context5.prev=84;_iterator2.f();return _context5.finish(84);case 87:_context5.next=92;break;case 89:_context5.prev=89;_context5.t2=_context5[\"catch\"](0);console.error(\"newBankingRelationsDebts\",_context5.t2);case 92:case\"end\":return _context5.stop();}}},_callee5,null,[[0,89],[18,46,49,52],[54,81,84,87]]);}));function saveDebts(_x5){return _saveDebts.apply(this,arguments);}return saveDebts;}()//salvamos facilidades por tramite\n},{key:\"saveAccountMovements\",value:function(){var _saveAccountMovements=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(transactionId){var dataResult,i,cuenta,j,k,jsonSet;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;//var dataResult = await backendServices.consultMovementsBank(transactionId);\n//if (dataResult !== undefined && dataResult !== null && (dataResult.bankBanesco.length > 0 || dataResult.bankOthersBank.length > 0)) {\n//return;\n//}\n//Borrar de BD todos los Movimientos de Cuenta cuyo \"t24\"= true\nbackendServices.deleteFisicalMovementsAccountsIGR(transactionId);_context6.next=4;return coreServices.getAccountMovementsByTransaction(transactionId);case 4:dataResult=_context6.sent;i=0;case 6:if(!(i<dataResult.length)){_context6.next=25;break;}//aqui cargamos por cuentas\ncuenta=dataResult[i].AcctId;j=0;case 9:if(!(j<dataResult[i].dataByYear.length)){_context6.next=22;break;}console.log(\"data[i].dataByYear\",dataResult[i].dataByYear);k=0;case 12:if(!(k<dataResult[i].dataByYear[j].dataresult.length)){_context6.next=19;break;}jsonSet={\"trasactId\":Number(transactionId),\"year\":dataResult[i].dataByYear[j].dataresult[k].year,\"month\":dataResult[i].dataByYear[j].dataresult[k].month,\"deposits\":dataResult[i].dataByYear[j].dataresult[k].deposits,\"averageBalance\":dataResult[i].dataByYear[j].dataresult[k].amount,\"observations\":\"\",\"accountNumber\":cuenta,\"t24\":true};_context6.next=16;return backendServices.newMovementsAccountsIGR(jsonSet);case 16:k++;_context6.next=12;break;case 19:j++;_context6.next=9;break;case 22:i++;_context6.next=6;break;case 25:_context6.next=29;break;case 27:_context6.prev=27;_context6.t0=_context6[\"catch\"](0);case 29:case\"end\":return _context6.stop();}}},_callee6,null,[[0,27]]);}));function saveAccountMovements(_x6){return _saveAccountMovements.apply(this,arguments);}return saveAccountMovements;}()}]);return AutoSaveData;}();export{AutoSaveData as default};","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/helpers/AutoSaveData.js"],"names":["BackendServices","CoreServices","backendServices","coreServices","AutoSaveData","transactionId","saveDebts","saveAccountMovements","saveCorporateExhibition","saveCorporateExhibitionByClients","saveFacilities","eliminarExposicionCorporativaBD","getCorporateExhibition","dataResult","i","length","datoSent","Number","name","approved","balance","proposal","t24","variation","saveExposicionCorporativaBD","eliminarExposicionCorporativaClienteBD","consultarDeudores","debtors","undefined","partyId","customerNumberT24","debtorName","typePerson","name2","lastName","lastName2","getCorporateExhibitionByClients","p","console","log","saveExposicionCorporativaClienteBD","consultGeneralDataPropCred","request","consultarFacilidadesT24","requestId","eliminarFacilidadesFisica","getFacilitiesByTransaction","AcctId","approvedAmount","debtorId","actualBalance","facilityType","newFacilityPropCred","checkCP","checkLP","consultBankingRelationsDebtsCP","getBankingRelationCPDTOList","consultBankRelationsDebtsLP","dataResultLP","bankingRelationLPDTOList","getAllTermDebtsByTransaction","dataResultCore","shortTermresult","short","record","find","x","codeT24","dateT24","dataSet","toFixed","startDate","endDate","debitBalance2","debitBalance3","paymentHistory","rate","fee","bail","fundDestiny","status","bank","debtId","updateBankRelationsDebtsCP","newBankingRelationsDebtsCP","longTermresult","long","updateBankRelationsDebtsLP","newBankingRelationsDebtsLP","error","deleteFisicalMovementsAccountsIGR","getAccountMovementsByTransaction","cuenta","j","dataByYear","k","dataresult","jsonSet","year","month","deposits","amount","newMovementsAccountsIGR"],"mappings":"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","sourcesContent":["\r\nimport { BackendServices, CoreServices } from \"../services\";\r\n\r\nconst backendServices = new BackendServices();\r\nconst coreServices = new CoreServices();\r\n\r\nexport default class AutoSaveData {\r\n\r\n\r\n  //salvamos deudas de un tramite\r\n  async saveInitialData(transactionId) {\r\n    this.saveDebts(transactionId);\r\n    this.saveAccountMovements(transactionId);\r\n    this.saveCorporateExhibition(transactionId);\r\n    this.saveCorporateExhibitionByClients(transactionId);\r\n    this.saveFacilities(transactionId);\r\n  }\r\n\r\n  //salvamos exposicion por tramite\r\n  async saveCorporateExhibition(transactionId) {\r\n    try {\r\n\r\n      /*var dataResult = await backendServices.getExposicionCorporativaBD(transactionId);\r\n      if (dataResult !== undefined && dataResult !== null && dataResult.length > 0) {\r\n        return;\r\n      }*/\r\n\r\n      //Borrar de BD todas las Exposicion Corporativa con \"t24\"= true\r\n      await backendServices.eliminarExposicionCorporativaBD(transactionId);\r\n\r\n      var dataResult = await coreServices.getCorporateExhibition(transactionId)\r\n      for (let i = 0; i < dataResult.length; i++) {\r\n        let datoSent = {\r\n          \"transactId\": Number(transactionId),\r\n          //\"accountNumber\": data.name,\r\n          //\"t24ClientId\": data.customerNumberT24,\r\n          \"description\": dataResult[i].name,\r\n          \"approved\": dataResult[i].approved,\r\n          \"currentBalance\": dataResult[i].balance,\r\n          \"proposed\": dataResult[i].proposal,\r\n          \"ltv\": 0,\r\n          t24: true,\r\n          \"difference\": dataResult[i].variation,\r\n          \"guarantee\": 0,\r\n        }\r\n        await backendServices.saveExposicionCorporativaBD(datoSent)\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }\r\n\r\n  //salvamos exposicion por tramite\r\n  async saveCorporateExhibitionByClients(transactionId) {\r\n    try {\r\n\r\n      /*var dataResult = await backendServices.getExposicionCorporativaClienteBD(transactionId);\r\n      if (dataResult !== undefined && dataResult !== null && dataResult.length > 0) {\r\n        return;\r\n      }*/\r\n\r\n      backendServices.eliminarExposicionCorporativaClienteBD(transactionId)\r\n\r\n      var debtors = await backendServices.consultarDeudores(transactionId);\r\n      if (debtors === null || debtors === undefined) {\r\n        return undefined;\r\n      }\r\n\r\n      //Borrar de BD todas las Exposicion Corporativa Cliente con \"t24\"= true\r\n\r\n      for (var i = 0; i < debtors.length; i++) {\r\n        var partyId = debtors[i].customerNumberT24;\r\n        var debtorName = debtors[i] !== undefined ? (debtors[i].typePerson == \"2\" ? debtors[i].name : (debtors[i].name + \" \" + debtors[i].name2 + \" \" + debtors[i].lastName + \" \" + debtors[i].lastName2)) : \"\";\r\n        var dataResult = await coreServices.getCorporateExhibitionByClients(partyId)\r\n        for (let p = 0; p < dataResult.length; p++) {\r\n          let datoSent = {\r\n            \"transactId\": Number(transactionId),\r\n            \"accountNumber\": debtorName,\r\n            \"t24ClientId\": partyId,\r\n            \"description\": dataResult[p].name,\r\n            \"approved\": dataResult[p].approved,\r\n            \"currentBalance\": dataResult[p].balance,\r\n            \"proposed\": dataResult[p].proposal,\r\n            \"ltv\": 0,\r\n            t24: true,\r\n            \"difference\": dataResult[p].variation,\r\n            \"guarantee\": 0,\r\n          }\r\n          console.log(\"saveCorporateExhibitionByClients\", datoSent);\r\n          await backendServices.saveExposicionCorporativaClienteBD(datoSent)\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n    catch (err) { }\r\n  }\r\n\r\n  //salvamos facilidades por tramite\r\n  async saveFacilities(transactionId) {\r\n    try {\r\n\r\n      var request = await backendServices.consultGeneralDataPropCred(transactionId);\r\n      var dataResult = await backendServices.consultarFacilidadesT24(request[0].requestId);\r\n      /*if (dataResult !== undefined && dataResult !== null && dataResult.length > 0) {\r\n        return;\r\n      }*/\r\n\r\n      //Borrar de BD todas las Facilidades con \"t24\"= true\r\n      console.log(\"saveFacilities\", dataResult);\r\n      backendServices.eliminarFacilidadesFisica(request[0].requestId);\r\n\r\n      var dataResult = await coreServices.getFacilitiesByTransaction(transactionId)\r\n      for (let i = 0; i < dataResult.length; i++) {\r\n        let datoSent = {\r\n          \"facilityNumber\": dataResult[i].AcctId,\r\n          \"cr\": dataResult[i].AcctId,\r\n          \"amount\": dataResult[i].approvedAmount,\r\n          \"debtor\": dataResult[i].debtorName,\r\n          \"clientTypeId\": dataResult[i].debtorId,\r\n          \"balance\": dataResult[i].actualBalance,\r\n          \"purpose\": \"\",\r\n          \"sublimits\": \"\",\r\n          \"proposalRate\": 0,\r\n          \"noSubsidyRate\": 0,\r\n          \"effectiveRate\": 0,\r\n          \"feci\": false,\r\n          \"termDays\": 0,\r\n          \"termDescription\": \"\",\r\n          \"ltv\": 0,\r\n          \"finantialConditions\": \" \",\r\n          \"environmentRiskCategory\": 0,\r\n          \"covenant\": \" \",\r\n          \"environmentRiskOpinion\": \" \",\r\n          \"finantialCovenant\": \" \",\r\n          \"legalDocumentation\": \"  \",\r\n          \"otherConditions\": \" \",\r\n          \"creditRiskOpinion\": \" \",\r\n          \"provision\": \" \",\r\n          \"proposalTypeId\": \"\",\r\n          \"proposalTypeName\": \"\",\r\n          \"facilityTypeId\": dataResult[i].facilityType ?? \"\",\r\n          \"termType\": \"\",\r\n          \"origin\": \"CORE\",\r\n          \"applyEscrow\": false,\r\n          \"facilityId\": 0,\r\n          \"requestId\": request[0].requestId ?? \"\",\r\n          \"startingAmount\": 0,\r\n          t24: true,\r\n          \"term\": \"\"\r\n        }\r\n        await backendServices.newFacilityPropCred(datoSent)\r\n        console.log(\"saveFacilities\", dataResult);\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }\r\n\r\n  //salvamos deudas a Corto y largo Plazo\r\n  async saveDebts(transactionId) {\r\n    try {\r\n\r\n      var checkCP = false;\r\n      var checkLP = false;\r\n\r\n      var dataResult = await backendServices.consultBankingRelationsDebtsCP(transactionId);\r\n      if (dataResult !== undefined && dataResult !== null && dataResult.getBankingRelationCPDTOList.length > 0) { }\r\n      else {\r\n        checkCP = true;\r\n      }\r\n      var dataResultLP = await backendServices.consultBankRelationsDebtsLP(transactionId);\r\n      if (dataResultLP !== undefined && dataResultLP !== null && dataResultLP.bankingRelationLPDTOList.length > 0) { }\r\n      else {\r\n        checkLP = true;\r\n      }\r\n\r\n      if (!checkCP && !checkLP) {\r\n        return;\r\n      }\r\n\r\n      var dataResultCore = await coreServices.getAllTermDebtsByTransaction(transactionId);\r\n\r\n      if (checkCP) {\r\n        for (var short of dataResultCore.shortTermresult) {\r\n          console.log(\"shortTermresult\", short);\r\n          if (dataResult !== undefined && dataResult !== null && dataResult.getBankingRelationCPDTOList.length > 0) {\r\n            dataResult = dataResult.getBankingRelationCPDTOList;\r\n            let record = dataResult.find(x => x.codeT24 == short?.codeT24 ?? \"\");\r\n            if (record !== undefined && record != null) {\r\n              if (short?.dateT24 ?? \"\" > record.dateT24) {\r\n                //Verificar si existe un record en dataResult.getBankingRelationCPDTOList con el mismo codeT24 .... si la fecha es mayor, actualizar amount, dateT24\r\n                let dataSet = {\r\n                  \"facilityType\": record.facilityType,\r\n                  \"amount\": Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\r\n                  \"date\": record.startDate,\r\n                  \"expirationDate\": record.endDate,\r\n                  \"debitBalance1\": Number(record.balance.toFixed(2)),\r\n                  \"debitBalance2\": record.debitBalance2,\r\n                  \"debitBalance3\": record.debitBalance3,\r\n                  \"paymentHistory\": record.paymentHistory,\r\n                  \"rate\": record.rate,\r\n                  \"fee\": record.fee,\r\n                  \"bail\": record.bail,\r\n                  \"fundDestiny\": record.fundDestiny,\r\n                  status: true,\r\n                  t24: true,\r\n                  \"bank\": record.bank,\r\n                  \"transactId\": Number(transactionId),\r\n                  \"codeT24\": record?.codeT24 ?? \"\",\r\n                  \"dateT24\": short?.dateT24 ?? \"\",//ACTUALIZA\r\n                  \"debtId\": record?.debtId,\r\n                }\r\n                await backendServices.updateBankRelationsDebtsCP(dataSet)\r\n              } else if (short?.dateT24 == \"\" || short?.dateT24 == null) {\r\n                //si no tiene fecha actualizar todo\r\n                let dataSet = {\r\n                  \"facilityType\": short.facilityType,\r\n                  \"amount\": Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\r\n                  \"date\": short.startDate,//ACTUALIZA\r\n                  \"expirationDate\": short.endDate,//ACTUALIZA\r\n                  \"debitBalance1\": Number(short.balance.toFixed(2)),//ACTUALIZA\r\n                  \"debitBalance2\": record.debitBalance2,\r\n                  \"debitBalance3\": record.debitBalance3,\r\n                  \"paymentHistory\": short.paymentHistory,//ACTUALIZA\r\n                  \"rate\": record.rate,\r\n                  \"fee\": record.fee,\r\n                  \"bail\": record.bail,\r\n                  \"fundDestiny\": record.fundDestiny,\r\n                  status: true,\r\n                  t24: true,\r\n                  \"bank\": short.bank,//ACTUALIZA\r\n                  \"transactId\": Number(transactionId),\r\n                  \"codeT24\": short?.codeT24 ?? \"\",//ACTUALIZA\r\n                  \"dateT24\": short?.dateT24 ?? \"\",//ACTUALIZA\r\n                  \"debtId\": record?.debtId,\r\n                }\r\n                await backendServices.updateBankRelationsDebtsCP(dataSet)\r\n              }\r\n            } else {\r\n              // si no existe un record en dataResult.getBankingRelationCPDTOList... siempre agregamos\r\n              let dataSet = {\r\n                \"facilityType\": short.facilityType,//NUEVO\r\n                \"amount\": Number(short.approvedAmount.toFixed(2)),//NUEVO\r\n                \"date\": short.startDate,//NUEVO\r\n                \"expirationDate\": short.endDate,//NUEVO\r\n                \"debitBalance1\": Number(short.balance.toFixed(2)),//NUEVO\r\n                \"debitBalance2\": 0,//NUEVO\r\n                \"debitBalance3\": 0,//NUEVO\r\n                \"paymentHistory\": short.paymentHistory,//NUEVO\r\n                \"rate\": 0,//NUEVO\r\n                \"fee\": 0,//NUEVO\r\n                \"bail\": 0,//NUEVO\r\n                \"fundDestiny\": \"\",//NUEVO\r\n                status: true,//NUEVO\r\n                t24: true,//NUEVO\r\n                \"bank\": short.bank,//NUEVO\r\n                \"transactId\": Number(transactionId),//NUEVO\r\n                \"codeT24\": short?.codeT24 ?? \"\",//NUEVO\r\n                \"dateT24\": short?.dateT24 ?? \"\",//NUEVO\r\n              }\r\n              await backendServices.newBankingRelationsDebtsCP(dataSet)\r\n            }\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      if (checkLP) {\r\n        for (var long of dataResultCore.longTermresult) {\r\n          if (dataResultLP !== undefined && dataResultLP !== null && dataResultLP.bankingRelationLPDTOList.length > 0) {\r\n            dataResultLP = dataResultLP.bankingRelationLPDTOList;\r\n            let record = dataResult.find(x => x.codeT24 == long?.codeT24 ?? \"\");\r\n            if (record !== undefined && record != null) {\r\n              if (long?.dateT24 ?? \"\" > record.dateT24) {\r\n                //Verificar si existe un record en dataResult.getBankingRelationCPDTOList con el mismo codeT24 .... si la fecha es mayor, actualizar amount, dateT24\r\n                let dataSet = {\r\n                  \"facilityType\": record.facilityType,\r\n                  \"amount\": Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\r\n                  \"date\": record.startDate,\r\n                  \"expirationDate\": record.endDate,\r\n                  \"debitBalance1\": Number(record.balance.toFixed(2)),\r\n                  \"debitBalance2\": record.debitBalance2,\r\n                  \"debitBalance3\": record.debitBalance3,\r\n                  \"paymentHistory\": record.paymentHistory,\r\n                  \"rate\": record.rate,\r\n                  \"fee\": record.fee,\r\n                  \"bail\": record.bail,\r\n                  \"fundDestiny\": record.fundDestiny,\r\n                  status: true,\r\n                  t24: true,\r\n                  \"bank\": record.bank,\r\n                  \"transactId\": Number(transactionId),\r\n                  \"codeT24\": short?.codeT24 ?? \"\",//ACTUALIZA\r\n                  \"dateT24\": short?.dateT24 ?? \"\",//ACTUALIZA\r\n                  \"debtId\": record?.debtId,\r\n                }\r\n                await backendServices.updateBankRelationsDebtsLP(dataSet)\r\n              } else if (long?.dateT24 == \"\" || long?.dateT24 == null) {\r\n                //si no tiene fecha actualizar todo\r\n                let dataSet = {\r\n                  \"facilityType\": short.facilityType,\r\n                  \"amount\": Number(short.approvedAmount.toFixed(2)),//ACTUALIZA\r\n                  \"date\": short.startDate,//ACTUALIZA\r\n                  \"expirationDate\": short.endDate,//ACTUALIZA\r\n                  \"debitBalance1\": Number(short.balance.toFixed(2)),//ACTUALIZA\r\n                  \"debitBalance2\": record.debitBalance2,\r\n                  \"debitBalance3\": record.debitBalance3,\r\n                  \"paymentHistory\": short.paymentHistory,//ACTUALIZA\r\n                  \"rate\": record.rate,\r\n                  \"fee\": record.fee,\r\n                  \"bail\": record.bail,\r\n                  \"fundDestiny\": record.fundDestiny,\r\n                  status: true,\r\n                  t24: true,\r\n                  \"bank\": short.bank,//ACTUALIZA\r\n                  \"transactId\": Number(transactionId),\r\n                  \"codeT24\": short?.codeT24 ?? \"\",\r\n                  \"dateT24\": short?.dateT24 ?? \"\",//ACTUALIZA\r\n                  \"debtId\": record?.debtId,\r\n                }\r\n                await backendServices.updateBankRelationsDebtsLP(dataSet)\r\n\r\n              }\r\n            } else {\r\n              // si no existe un record en dataResult.getBankingRelationCPDTOList... siempre agregamos\r\n              let dataSet = {\r\n                \"facilityType\": long.facilityType,\r\n                \"amount\": Number(long.approvedAmount.toFixed(2)),\r\n                \"date\": long.startDate,\r\n                \"expirationDate\": long.endDate,\r\n                \"debitBalance1\": Number(long.balance.toFixed(2)),\r\n                \"debitBalance2\": 0,\r\n                \"debitBalance3\": 0,\r\n                \"paymentHistory\": long.paymentHistory,\r\n                \"rate\": 0,\r\n                \"fee\": 0,\r\n                \"bail\": 0,\r\n                \"fundDestiny\": \"\",\r\n                status: true,\r\n                t24: true,\r\n                \"bank\": long.bank,\r\n                \"transactId\": Number(transactionId),\r\n                \"codeT24\": long?.codeT24 ?? \"\",\r\n                \"dateT24\": long?.dateT24 ?? \"\",\r\n              }\r\n              await backendServices.newBankingRelationsDebtsLP(dataSet)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n    catch (err) { console.error(\"newBankingRelationsDebts\", err) }\r\n  }\r\n\r\n  //salvamos facilidades por tramite\r\n  async saveAccountMovements(transactionId) {\r\n    try {\r\n\r\n      //var dataResult = await backendServices.consultMovementsBank(transactionId);\r\n      //if (dataResult !== undefined && dataResult !== null && (dataResult.bankBanesco.length > 0 || dataResult.bankOthersBank.length > 0)) {\r\n      //return;\r\n      //}\r\n\r\n      //Borrar de BD todos los Movimientos de Cuenta cuyo \"t24\"= true\r\n      backendServices.deleteFisicalMovementsAccountsIGR(transactionId);\r\n\r\n      var dataResult = await coreServices.getAccountMovementsByTransaction(transactionId)\r\n      for (let i = 0; i < dataResult.length; i++) {\r\n        //aqui cargamos por cuentas\r\n        let cuenta = dataResult[i].AcctId;\r\n        for (let j = 0; j < dataResult[i].dataByYear.length; j++) {\r\n          console.log(\"data[i].dataByYear\", dataResult[i].dataByYear);\r\n          for (let k = 0; k < dataResult[i].dataByYear[j].dataresult.length; k++) {\r\n            let jsonSet = {\r\n              \"trasactId\": Number(transactionId),\r\n              \"year\": dataResult[i].dataByYear[j].dataresult[k].year,\r\n              \"month\": dataResult[i].dataByYear[j].dataresult[k].month,\r\n              \"deposits\": dataResult[i].dataByYear[j].dataresult[k].deposits,\r\n              \"averageBalance\": dataResult[i].dataByYear[j].dataresult[k].amount,\r\n              \"observations\": \"\",\r\n              \"accountNumber\": cuenta,\r\n              \"t24\": true\r\n            }\r\n            await backendServices.newMovementsAccountsIGR(jsonSet);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}