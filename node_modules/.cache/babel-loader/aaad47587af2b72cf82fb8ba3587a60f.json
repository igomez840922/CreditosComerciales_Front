{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\financialSummary\\\\History.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from '../../../helpers/translation-helper';\nimport { Table, Card, CardBody, Button } from \"reactstrap\";\nimport ModalNewHistoryDetail from './ModalNewHistoryDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst History = props => {\n  _s();\n\n  const [displayModalNewHistoryDetail, setDisplayModalNewHistoryDetail] = useState(false);\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  const {\n    headers,\n    data,\n    editMode\n  } = props;\n\n  if (!data) {\n    return null;\n  }\n\n  function calculateTotals(headers, data) {\n    const totals = new Array(headers.length);\n    totals.fill(0, 0, headers.length);\n    headers.forEach((header, index) => {\n      totals[index] = data.reduce((total, current) => {\n        return total + current.data[index];\n      }, 0);\n    });\n    return totals;\n  }\n\n  function calculateProportions(headers, data) {\n    const cols = new Array(headers.length);\n    cols.fill(0, 0, headers.length);\n    return cols;\n  }\n\n  const dataHeaders = headers.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n    className: \"text-end\",\n    children: header\n  }, \"header-\" + index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  const dataRows = data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: item.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), item.data.map((data, col) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-end\",\n      children: data\n    }, \"col-\" + col, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, 'row-' + index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)); // Calculate total\n\n  const totals = calculateTotals(headers, data);\n\n  const totalRow = /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"table-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: t(\"Total\").toLocaleUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), totals.map((val, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n      className: \"text-end\",\n      children: val\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this); // Calculate proportions\n\n\n  const proportions = calculateProportions(headers, data);\n\n  const proportionRow = /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: t(\"Proportion\").toLocaleUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), proportions.map((val, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"text-end\",\n      children: val\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  function toggleModalNewHistoryItem() {\n    setDisplayModalNewHistoryDetail(!displayModalNewHistoryDetail);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title clearfix\",\n          children: [t(\"History Details\"), editMode && /*#__PURE__*/_jsxDEV(Button, {\n            id: \"btnNew\",\n            color: \"success\",\n            type: \"button\",\n            className: \"float-end\",\n            style: {\n              margin: '5px'\n            },\n            onClick: toggleModalNewHistoryItem,\n            children: c(\"New\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-responsive mt-2\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Country / Client\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this), dataHeaders]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [dataRows, totalRow, proportionRow]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalNewHistoryDetail, {\n      isOpen: displayModalNewHistoryDetail,\n      toggle: toggleModalNewHistoryItem,\n      onSave: props.addHistoryDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(History, \"YLWyGcmCl3ZA7dbV6nZ3FSqY1u0=\");\n\n_c = History;\nHistory.propTypes = {\n  title: PropTypes.string,\n  headers: PropTypes.array.isRequired,\n  data: PropTypes.array.isRequired,\n  editMode: PropTypes.bool,\n  addHistoryDetail: PropTypes.func\n};\nHistory.defaultProps = {\n  editMode: false\n};\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/financialSummary/History.js"],"names":["useState","PropTypes","translationHelpers","Table","Card","CardBody","Button","ModalNewHistoryDetail","History","props","displayModalNewHistoryDetail","setDisplayModalNewHistoryDetail","t","c","headers","data","editMode","calculateTotals","totals","Array","length","fill","forEach","header","index","reduce","total","current","calculateProportions","cols","dataHeaders","map","dataRows","item","name","col","totalRow","toLocaleUpperCase","val","proportions","proportionRow","toggleModalNewHistoryItem","margin","addHistoryDetail","propTypes","title","string","array","isRequired","bool","func","defaultProps"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AAEA,SACEC,KADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,MAJF,QAKO,YALP;AAOA,OAAOC,qBAAP,MAAkC,yBAAlC;;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEzB,QAAM,CAACC,4BAAD,EAA+BC,+BAA/B,IAAkEX,QAAQ,CAAC,KAAD,CAAhF;AAEA,QAAM,CAACY,CAAD,EAAIC,CAAJ,IAASX,kBAAkB,CAAC,mBAAD,EAAsB,QAAtB,CAAjC;AAEA,QAAM;AAAEY,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA8BP,KAApC;;AAEA,MAAI,CAACM,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,WAASE,eAAT,CAAyBH,OAAzB,EAAkCC,IAAlC,EAAwC;AACtC,UAAMG,MAAM,GAAG,IAAIC,KAAJ,CAAUL,OAAO,CAACM,MAAlB,CAAf;AACAF,IAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAe,CAAf,EAAkBP,OAAO,CAACM,MAA1B;AACAN,IAAAA,OAAO,CAACQ,OAAR,CAAgB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACjCN,MAAAA,MAAM,CAACM,KAAD,CAAN,GAAgBT,IAAI,CAACU,MAAL,CAAY,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC9C,eAAOD,KAAK,GAAGC,OAAO,CAACZ,IAAR,CAAaS,KAAb,CAAf;AACD,OAFe,EAEb,CAFa,CAAhB;AAGD,KAJD;AAKA,WAAON,MAAP;AACD;;AAED,WAASU,oBAAT,CAA8Bd,OAA9B,EAAuCC,IAAvC,EAA6C;AAC3C,UAAMc,IAAI,GAAG,IAAIV,KAAJ,CAAUL,OAAO,CAACM,MAAlB,CAAb;AACAS,IAAAA,IAAI,CAACR,IAAL,CAAU,CAAV,EAAa,CAAb,EAAgBP,OAAO,CAACM,MAAxB;AACA,WAAOS,IAAP;AACD;;AAED,QAAMC,WAAW,GAAGhB,OAAO,CAACiB,GAAR,CAAY,CAACR,MAAD,EAASC,KAAT,kBAC9B;AAA4B,IAAA,SAAS,EAAC,UAAtC;AAAA,cAAkDD;AAAlD,KAAS,YAAYC,KAArB;AAAA;AAAA;AAAA;AAAA,UADkB,CAApB;AAIA,QAAMQ,QAAQ,GAAGjB,IAAI,CAACgB,GAAL,CAAS,CAACE,IAAD,EAAOT,KAAP,kBACxB;AAAA,4BACE;AAAA,gBAAiBS,IAAI,CAACC;AAAtB,OAASV,KAAT;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,IAAI,CAAClB,IAAL,CAAUgB,GAAV,CAAc,CAAChB,IAAD,EAAOoB,GAAP,kBACb;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAAA,gBAA6CpB;AAA7C,OAAS,SAASoB,GAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA,KAAS,SAASX,KAAlB;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB,CAjCyB,CA0CzB;;AACA,QAAMN,MAAM,GAAGD,eAAe,CAACH,OAAD,EAAUC,IAAV,CAA9B;;AACA,QAAMqB,QAAQ,gBACZ;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,4BACE;AAAA,gBAAKxB,CAAC,CAAC,OAAD,CAAD,CAAWyB,iBAAX;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,EAEGnB,MAAM,CAACa,GAAP,CAAW,CAACO,GAAD,EAAMd,KAAN,kBACV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAA,gBAAsCc;AAAtC,OAASd,KAAT;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA5CyB,CAqDzB;;;AACA,QAAMe,WAAW,GAAGX,oBAAoB,CAACd,OAAD,EAAUC,IAAV,CAAxC;;AACA,QAAMyB,aAAa,gBACjB;AAAA,4BACE;AAAA,gBAAK5B,CAAC,CAAC,YAAD,CAAD,CAAgByB,iBAAhB;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,WAAW,CAACR,GAAZ,CAAgB,CAACO,GAAD,EAAMd,KAAN,kBACf;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAA,gBAAsCc;AAAtC,OAASd,KAAT;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AASA,WAASiB,yBAAT,GAAqC;AACnC9B,IAAAA,+BAA+B,CAAC,CAACD,4BAAF,CAA/B;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA,qBACGE,CAAC,CAAC,iBAAD,CADJ,EAEGI,QAAQ,iBACP,QAAC,MAAD;AAAQ,YAAA,EAAE,EAAC,QAAX;AAAoB,YAAA,KAAK,EAAC,SAA1B;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAkD,YAAA,SAAS,EAAC,WAA5D;AAAwE,YAAA,KAAK,EAAE;AAAE0B,cAAAA,MAAM,EAAE;AAAV,aAA/E;AAAkG,YAAA,OAAO,EAAED,yBAA3G;AAAA,sBACG5B,CAAC,CAAC,KAAD;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,YAAjB;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,aAAjB;AAAA,qCACE;AAAA,wCACE;AAAA,4BAAKD,CAAC,CAAC,kBAAD;AAAN;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGkB,WAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE;AAAA,yBACGE,QADH,EAEGI,QAFH,EAGGI,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE,QAAC,qBAAD;AAAuB,MAAA,MAAM,EAAE9B,4BAA/B;AAA6D,MAAA,MAAM,EAAE+B,yBAArE;AAAgG,MAAA,MAAM,EAAEhC,KAAK,CAACkC;AAA9G;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA,kBADF;AAiCD,CArGD;;GAAMnC,O;;KAAAA,O;AAuGNA,OAAO,CAACoC,SAAR,GAAoB;AAClBC,EAAAA,KAAK,EAAE5C,SAAS,CAAC6C,MADC;AAElBhC,EAAAA,OAAO,EAAEb,SAAS,CAAC8C,KAAV,CAAgBC,UAFP;AAGlBjC,EAAAA,IAAI,EAAEd,SAAS,CAAC8C,KAAV,CAAgBC,UAHJ;AAIlBhC,EAAAA,QAAQ,EAAEf,SAAS,CAACgD,IAJF;AAKlBN,EAAAA,gBAAgB,EAAE1C,SAAS,CAACiD;AALV,CAApB;AAQA1C,OAAO,CAAC2C,YAAR,GAAuB;AACrBnC,EAAAA,QAAQ,EAAE;AADW,CAAvB;AAKA,eAAeR,OAAf","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { translationHelpers } from '../../../helpers/translation-helper';\r\n\r\nimport {\r\n  Table,\r\n  Card,\r\n  CardBody,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport ModalNewHistoryDetail from './ModalNewHistoryDetail';\r\n\r\n\r\nconst History = (props) => {\r\n\r\n  const [displayModalNewHistoryDetail, setDisplayModalNewHistoryDetail] = useState(false);\r\n\r\n  const [t, c] = translationHelpers('commercial_credit', 'common');\r\n\r\n  const { headers, data, editMode } = props;\r\n\r\n  if (!data) {\r\n    return null;\r\n  }\r\n\r\n  function calculateTotals(headers, data) {\r\n    const totals = new Array(headers.length);\r\n    totals.fill(0, 0, headers.length);\r\n    headers.forEach((header, index) => {\r\n      totals[index] = data.reduce((total, current) => {\r\n        return total + current.data[index];\r\n      }, 0);\r\n    });\r\n    return totals;\r\n  }\r\n\r\n  function calculateProportions(headers, data) {\r\n    const cols = new Array(headers.length);\r\n    cols.fill(0, 0, headers.length);\r\n    return cols;\r\n  }\r\n\r\n  const dataHeaders = headers.map((header, index) => (\r\n    <th key={\"header-\" + index} className=\"text-end\">{header}</th>\r\n  ));\r\n\r\n  const dataRows = data.map((item, index) => (\r\n    <tr key={'row-' + index}>\r\n      <td key={index}>{item.name}</td>\r\n      {item.data.map((data, col) => (\r\n        <td key={\"col-\" + col} className=\"text-end\">{data}</td>\r\n      ))}\r\n    </tr>)\r\n  );\r\n\r\n  // Calculate total\r\n  const totals = calculateTotals(headers, data);\r\n  const totalRow = (\r\n    <tr className=\"table-info\">\r\n      <th>{t(\"Total\").toLocaleUpperCase()}</th>\r\n      {totals.map((val, index) => (\r\n        <th key={index} className=\"text-end\">{val}</th>\r\n      ))}\r\n    </tr>\r\n  );\r\n\r\n  // Calculate proportions\r\n  const proportions = calculateProportions(headers, data);\r\n  const proportionRow = (\r\n    <tr>\r\n      <td>{t(\"Proportion\").toLocaleUpperCase()}</td>\r\n      {proportions.map((val, index) => (\r\n        <td key={index} className=\"text-end\">{val}</td>\r\n      ))}\r\n    </tr>\r\n  );\r\n\r\n  function toggleModalNewHistoryItem() {\r\n    setDisplayModalNewHistoryDetail(!displayModalNewHistoryDetail);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <h4 className=\"card-title clearfix\">\r\n            {t(\"History Details\")}\r\n            {editMode &&\r\n              <Button id=\"btnNew\" color=\"success\" type=\"button\" className=\"float-end\" style={{ margin: '5px' }} onClick={toggleModalNewHistoryItem}>\r\n                {c(\"New\")}\r\n              </Button>\r\n            }\r\n          </h4>\r\n          <p className=\"card-title-desc\"></p>\r\n          <div className=\"table-responsive mt-2\">\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"Country / Client\")}</th>\r\n                  {dataHeaders}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataRows}\r\n                {totalRow}\r\n                {proportionRow}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n      <ModalNewHistoryDetail isOpen={displayModalNewHistoryDetail} toggle={toggleModalNewHistoryItem} onSave={props.addHistoryDetail} />\r\n    </>\r\n  );\r\n};\r\n\r\nHistory.propTypes = {\r\n  title: PropTypes.string,\r\n  headers: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  editMode: PropTypes.bool,\r\n  addHistoryDetail: PropTypes.func\r\n};\r\n\r\nHistory.defaultProps = {\r\n  editMode: false\r\n};\r\n\r\n\r\nexport default History;\r\n"]},"metadata":{},"sourceType":"module"}