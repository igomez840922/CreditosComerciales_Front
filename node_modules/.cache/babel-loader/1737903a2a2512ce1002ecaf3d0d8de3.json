{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\Common\\\\FacilityHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport Select from \"react-select\";\nimport { useLocation, useHistory } from 'react-router-dom';\nimport LoadingOverlay from 'react-loading-overlay';\nimport { Row, Col, Card, CardBody, Button, Label, Table, Pagination, PaginationItem, PaginationLink, CardFooter, Alert } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { CoreServices, BackendServices } from '../../services';\nimport HeaderSections from './HeaderSections';\nimport Currency from \"../../helpers/currency\";\nimport { translationHelpers } from '../../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FacilityHistory = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [tr] = translationHelpers('translation');\n  const location = useLocation();\n  const [dataRows, setDataRows] = useState([]);\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\n  const [historyDetails, setHistoryDetails] = useState(false);\n  const currencyData = new Currency(); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    fetchData();\n    console.log(\"mainDebtor\", props.mainDebtor);\n  }, []); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    setHistoryDetails(props.historyDetails);\n  }, [props.historyDetails]);\n\n  function fetchData() {\n    loadFacilityHistory();\n  }\n\n  function formatDate(date) {\n    return moment(date).format(\"DD/MM/YYYY\");\n  } //cargar lista de facilidades\n\n\n  async function loadFacilityHistory() {\n    return;\n    setIsActiveLoading(true);\n    await apiServiceBackend.consultarFacilidadesT24(props.transactId).then(async resp => {\n      if (resp.length > 0 && resp != undefined) {\n        //Cargamos las facilidades\n        setDataRows(resp.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"FacilityType\"),\n            children: data === null || data === void 0 ? void 0 : data.facilityTypeId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"DebtorName\"),\n            children: data === null || data === void 0 ? void 0 : data.debtor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"ApprovedAmount\"),\n            children: currencyData.formatTable(data.amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"ApprovedDate\"),\n            children: formatDate(data.approvedDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            \"data-label\": t(\"ActualBalance\"),\n            children: currencyData.formatTable(data.balance)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              title: t(\"View\"),\n              onClick: resp => props === null || props === void 0 ? void 0 : props.editFacilitiesT24(data),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 97\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)));\n      } else {\n        //guardamos\n        await apiCoreServices.getFacilitiesByTransaction(props.transactId).then(async data2 => {\n          if (data2 !== null && data2 !== undefined) {\n            for (let i = 0; i < data2.length; i++) {\n              var _data2$i, _props$mainDebtor, _data2$i2, _data2$i3, _props$requestId;\n\n              let jsonSet = {\n                \"facilityNumber\": \"0\",\n                \"cr\": \"0\",\n                \"amount\": (_data2$i = data2[i]) === null || _data2$i === void 0 ? void 0 : _data2$i.approvedAmount,\n                \"debtor\": props.mainDebtor.name,\n                \"clientTypeId\": props === null || props === void 0 ? void 0 : (_props$mainDebtor = props.mainDebtor) === null || _props$mainDebtor === void 0 ? void 0 : _props$mainDebtor.personId,\n                \"customer\": {\n                  \"id\": \"469303-1-434018\"\n                },\n                \"balance\": (_data2$i2 = data2[i]) === null || _data2$i2 === void 0 ? void 0 : _data2$i2.actualBalance,\n                \"purpose\": \"\",\n                \"sublimits\": \"\",\n                \"proposalRate\": 0,\n                \"noSubsidyRate\": 0,\n                \"effectiveRate\": 0,\n                \"feci\": false,\n                \"termDays\": 0,\n                \"termDescription\": \"\",\n                \"ltv\": 0,\n                \"finantialConditions\": \" \",\n                \"environmentRiskCategory\": 0,\n                \"covenant\": \" \",\n                \"environmentRiskOpinion\": \" \",\n                \"finantialCovenant\": \" \",\n                \"legalDocumentation\": \"  \",\n                \"otherConditions\": \" \",\n                \"creditRiskOpinion\": \" \",\n                \"provision\": \" \",\n                \"proposalTypeId\": \"\",\n                \"proposalTypeName\": \"\",\n                \"facilityTypeId\": (_data2$i3 = data2[i]) === null || _data2$i3 === void 0 ? void 0 : _data2$i3.facilityTypeId,\n                \"termType\": \"\",\n                \"origin\": \"CORE\",\n                \"applyEscrow\": false,\n                \"facilityId\": 0,\n                \"requestId\": (_props$requestId = props === null || props === void 0 ? void 0 : props.requestId) !== null && _props$requestId !== void 0 ? _props$requestId : \"\",\n                \"startingAmount\": 0,\n                \"term\": \"\"\n              };\n              await apiServiceBackend.newFacilityPropCred(jsonSet).then(saveExpo => {});\n            }\n\n            setIsActiveLoading(false);\n            loadFacilityHistory();\n          }\n\n          setIsActiveLoading(false);\n        }).catch(error => {\n          setIsActiveLoading(false);\n        }); // var rows = data.map((data, index) => (\n        //   <tr key={index}>\n        //     <td data-label={t(\"FacilityType\")}>{data?.facilityType ?? data?.facilityTypeId}</td>\n        //     <td data-label={t(\"DebtorName\")}>{props.mainDebtor.name}</td>\n        //     <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.approvedAmount)}</td>\n        //     <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td>\n        //     <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.actualBalance)}</td>\n        //     <td style={{ textAlign: \"right\" }}>\n        //       <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\n        //     </td>\n        //   </tr>)\n        // );\n        // setDataRows(rows);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n    active: isActiveLoading,\n    spinner: true,\n    text: t(\"WaitingPlease\"),\n    children: [!props.design && /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-sub-title\",\n            children: t(\"FacilityHistory\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [historyDetails && /*#__PURE__*/_jsxDEV(Alert, {\n          show: \"true\",\n          dismissible: \"true\",\n          color: \"danger\",\n          onClose: () => {\n            setHistoryDetails(!historyDetails);\n          },\n          children: tr(\"The facility was not found\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            className: \"table-responsive styled-table-div\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: \"table table-striped table-hover styled-table table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"FacilityType\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"DebtorName\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ApprovedAmount\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ApprovedDate\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: t(\"ActualBalance\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: dataRows.length > 0 ? dataRows : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }, this), props.design && /*#__PURE__*/_jsxDEV(CardBody, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderSections, {\n        title: \"FacilityHistory\",\n        t: t\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          className: \"table-responsive styled-table-div\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table table-striped table-hover styled-table table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"FacilityType\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DebtorName\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ApprovedAmount\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ApprovedDate\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ActualBalance\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: dataRows.length > 0 ? dataRows : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FacilityHistory, \"FnO8mAoUQO0EhKguqKWVL8efffY=\", false, function () {\n  return [useTranslation, useLocation];\n});\n\n_c = FacilityHistory;\nFacilityHistory.propTypes = {\n  partyId: PropTypes.string,\n  mainDebtor: PropTypes.any,\n  transactId: PropTypes.any\n}; //export default (withTranslation()(DatosGenerales));\n\nexport default FacilityHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"FacilityHistory\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/Common/FacilityHistory.js"],"names":["React","useState","PropTypes","useTranslation","Select","useLocation","useHistory","LoadingOverlay","Row","Col","Card","CardBody","Button","Label","Table","Pagination","PaginationItem","PaginationLink","CardFooter","Alert","AvForm","AvField","Link","moment","CoreServices","BackendServices","HeaderSections","Currency","translationHelpers","FacilityHistory","props","t","i18n","tr","location","dataRows","setDataRows","isActiveLoading","setIsActiveLoading","apiServiceBackend","setapiServiceBackend","apiCoreServices","setCoreServices","historyDetails","setHistoryDetails","currencyData","useEffect","fetchData","console","log","mainDebtor","loadFacilityHistory","formatDate","date","format","consultarFacilidadesT24","transactId","then","resp","length","undefined","map","data","index","facilityTypeId","debtor","formatTable","amount","approvedDate","balance","textAlign","editFacilitiesT24","getFacilitiesByTransaction","data2","i","jsonSet","approvedAmount","name","personId","actualBalance","requestId","newFacilityPropCred","saveExpo","catch","error","design","propTypes","partyId","string","any"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation } from 'react-i18next'\r\nimport Select from \"react-select\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Table,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  CardFooter,\r\n  Alert,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\nimport moment from \"moment\";\r\nimport { CoreServices, BackendServices } from '../../services';\r\nimport HeaderSections from './HeaderSections';\r\n\r\nimport Currency from \"../../helpers/currency\"\r\nimport { translationHelpers } from '../../helpers';\r\n\r\nconst FacilityHistory = (props) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [tr] = translationHelpers('translation');\r\n\r\n  const location = useLocation();\r\n\r\n  const [dataRows, setDataRows] = useState([]);\r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  const [apiServiceBackend, setapiServiceBackend] = useState(new BackendServices());\r\n  const [apiCoreServices, setCoreServices] = useState(new CoreServices());\r\n  const [historyDetails, setHistoryDetails] = useState(false);\r\n\r\n  const currencyData = new Currency();\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    fetchData();\r\n    console.log(\"mainDebtor\", props.mainDebtor);\r\n  }, []);\r\n\r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    setHistoryDetails(props.historyDetails)\r\n  }, [props.historyDetails]);\r\n\r\n  function fetchData() {\r\n    loadFacilityHistory();\r\n  }\r\n  function formatDate(date) {\r\n    return moment(date).format(\"DD/MM/YYYY\");\r\n  }\r\n  //cargar lista de facilidades\r\n  async function loadFacilityHistory() {\r\n    return\r\n    setIsActiveLoading(true)\r\n    await apiServiceBackend.consultarFacilidadesT24(props.transactId).then(async resp => {\r\n      if (resp.length > 0 && resp != undefined) {\r\n        //Cargamos las facilidades\r\n        setDataRows(resp.map((data, index) => (\r\n          <tr key={index}>\r\n            <td data-label={t(\"FacilityType\")}>{data?.facilityTypeId}</td>\r\n            <td data-label={t(\"DebtorName\")}>{data?.debtor}</td>\r\n            <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.amount)}</td>\r\n            <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td>\r\n            <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.balance)}</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n            </td>\r\n          </tr>)))\r\n      } else {\r\n        //guardamos\r\n        await apiCoreServices.getFacilitiesByTransaction(props.transactId)\r\n          .then(async (data2) => {\r\n            if (data2 !== null && data2 !== undefined) {\r\n              for (let i = 0; i < data2.length; i++) {\r\n                let jsonSet = {\r\n                  \"facilityNumber\": \"0\",\r\n                  \"cr\": \"0\",\r\n                  \"amount\": data2[i]?.approvedAmount,\r\n                  \"debtor\": props.mainDebtor.name,\r\n                  \"clientTypeId\": props?.mainDebtor?.personId,\r\n                  \"customer\": {\r\n                    \"id\": \"469303-1-434018\"\r\n                  },\r\n                  \"balance\": data2[i]?.actualBalance,\r\n                  \"purpose\": \"\",\r\n                  \"sublimits\": \"\",\r\n                  \"proposalRate\": 0,\r\n                  \"noSubsidyRate\": 0,\r\n                  \"effectiveRate\": 0,\r\n                  \"feci\": false,\r\n                  \"termDays\": 0,\r\n                  \"termDescription\": \"\",\r\n                  \"ltv\": 0,\r\n                  \"finantialConditions\": \" \",\r\n                  \"environmentRiskCategory\": 0,\r\n                  \"covenant\": \" \",\r\n                  \"environmentRiskOpinion\": \" \",\r\n                  \"finantialCovenant\": \" \",\r\n                  \"legalDocumentation\": \"  \",\r\n                  \"otherConditions\": \" \",\r\n                  \"creditRiskOpinion\": \" \",\r\n                  \"provision\": \" \",\r\n                  \"proposalTypeId\": \"\",\r\n                  \"proposalTypeName\": \"\",\r\n                  \"facilityTypeId\": data2[i]?.facilityTypeId,\r\n                  \"termType\": \"\",\r\n                  \"origin\": \"CORE\",\r\n                  \"applyEscrow\": false,\r\n                  \"facilityId\": 0,\r\n                  \"requestId\": props?.requestId ?? \"\",\r\n                  \"startingAmount\": 0,\r\n                  \"term\": \"\"\r\n                }\r\n                \r\n                await apiServiceBackend.newFacilityPropCred(jsonSet).then(saveExpo => {\r\n\r\n                })\r\n\r\n              }\r\n              setIsActiveLoading(false)\r\n              loadFacilityHistory()\r\n            }\r\n            setIsActiveLoading(false)\r\n          }).catch((error) => {\r\n            setIsActiveLoading(false)\r\n          });\r\n        // var rows = data.map((data, index) => (\r\n        //   <tr key={index}>\r\n        //     <td data-label={t(\"FacilityType\")}>{data?.facilityType ?? data?.facilityTypeId}</td>\r\n        //     <td data-label={t(\"DebtorName\")}>{props.mainDebtor.name}</td>\r\n        //     <td data-label={t(\"ApprovedAmount\")}>{currencyData.formatTable(data.approvedAmount)}</td>\r\n        //     <td data-label={t(\"ApprovedDate\")}>{formatDate(data.approvedDate)}</td>\r\n        //     <td data-label={t(\"ActualBalance\")}>{currencyData.formatTable(data.actualBalance)}</td>\r\n        //     <td style={{ textAlign: \"right\" }}>\r\n        //       <Link to=\"#\" title={t(\"View\")} onClick={(resp) => props?.editFacilitiesT24(data)}><i className=\"mdi mdi-border-color mdi-24px\"></i></Link>\r\n        //     </td>\r\n        //   </tr>)\r\n        // );\r\n        // setDataRows(rows);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  return (\r\n\r\n    <LoadingOverlay active={isActiveLoading} spinner text={t(\"WaitingPlease\")}>\r\n\r\n      {!props.design && <Card>\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <h5 className=\"card-sub-title\">{t(\"FacilityHistory\")}</h5>\r\n          </Col>\r\n        </Row>\r\n\r\n        <CardBody>\r\n\r\n          {historyDetails && (<Alert show=\"true\" dismissible=\"true\" color=\"danger\" onClose={() => { setHistoryDetails(!historyDetails) }}>\r\n            {tr(\"The facility was not found\")}\r\n          </Alert>)}\r\n\r\n          <Row>\r\n            <Col md=\"12\" className=\"table-responsive styled-table-div\">\r\n              <Table className=\"table table-striped table-hover styled-table table\" >\r\n                <thead>\r\n                  <tr>\r\n                    <th>{t(\"FacilityType\")}</th>\r\n                    <th>{t(\"DebtorName\")}</th>\r\n                    <th>{t(\"ApprovedAmount\")}</th>\r\n                    <th>{t(\"ApprovedDate\")}</th>\r\n                    <th>{t(\"ActualBalance\")}</th>\r\n                    <th></th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataRows.length > 0 ? dataRows : null}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>}\r\n\r\n      {props.design && <CardBody>\r\n        <HeaderSections title={\"FacilityHistory\"} t={t}></HeaderSections>\r\n\r\n        <Row>\r\n          <Col md=\"12\" className=\"table-responsive styled-table-div\">\r\n            <Table className=\"table table-striped table-hover styled-table table\" >\r\n              <thead>\r\n                <tr>\r\n                  <th>{t(\"FacilityType\")}</th>\r\n                  <th>{t(\"DebtorName\")}</th>\r\n                  <th>{t(\"ApprovedAmount\")}</th>\r\n                  <th>{t(\"ApprovedDate\")}</th>\r\n                  <th>{t(\"ActualBalance\")}</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataRows.length > 0 ? dataRows : null}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>}\r\n\r\n    </LoadingOverlay>\r\n\r\n  )\r\n}\r\n\r\nFacilityHistory.propTypes = {\r\n  partyId: PropTypes.string,\r\n  mainDebtor: PropTypes.any,\r\n  transactId: PropTypes.any,\r\n}\r\n\r\n//export default (withTranslation()(DatosGenerales));\r\nexport default FacilityHistory;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}