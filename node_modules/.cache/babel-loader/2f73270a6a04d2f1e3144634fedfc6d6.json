{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\components\\\\PropuestaCreditoComercial\\\\facilities\\\\ModalNewSurety.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { translationHelpers } from '../../../helpers/translation-helper';\nimport { Modal, ModalHeader, ModalBody, Label, Row, Col, Button } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { BackendServices } from '../../../services';\nimport Select from \"react-select\";\nimport { values } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalNewSurety = props => {\n  _s();\n\n  const api = new BackendServices();\n  const [t, c] = translationHelpers('commercial_credit', 'common');\n  const [tipoPropuesta, settipoPropuesta] = useState(null);\n  const [tipoPropuestaSelect, settipoPropuestaSelect] = useState(undefined);\n  const [propuestaSet, setpropuestaSet] = useState(null);\n  const [tipoPropuestaRequerido, settipoPropuestaRequerido] = useState(false);\n\n  function handleSubmit(event, errors, value) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      return;\n    }\n\n    value.typeBail = propuestaSet;\n    props.guardarDatos(value, props.tipo);\n    props.toggle();\n  }\n\n  function handleCancel() {\n    props.toggle();\n  }\n\n  React.useEffect(() => {\n    // Read Api Service data\n    initializeData();\n  }, []);\n  React.useEffect(() => {\n    // Read Api Service data \n    var defaultVal = null;\n    settipoPropuestaSelect(undefined);\n\n    try {\n      if (tipoPropuesta.length > 0 && props.dataSet.typeBail !== null && tipoPropuestaSelect === undefined) {\n        defaultVal = tipoPropuesta.find(x => x.label === props.dataSet.typeBail);\n\n        if (defaultVal !== undefined) {\n          settipoPropuestaSelect(defaultVal);\n        }\n      }\n    } catch (err) {}\n  }, [props]);\n\n  function initializeData() {\n    api.retrieveBailType().then(response => {\n      if (response === null) {\n        return;\n      }\n\n      let json = [];\n\n      for (let i = 0; i < response.length; i++) {\n        json.push({\n          label: response[i][\"description\"],\n          value: response[i][\"id\"]\n        });\n      }\n\n      settipoPropuesta(json);\n    }).catch(error => {\n      console.error('api error: ', error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: props.isOpen,\n    toggle: props.toggle,\n    centered: true,\n    size: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: props.toggle,\n      color: \"primary\",\n      children: t(\"Sureties\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(AvGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"type\",\n            children: t(\"Surety Type\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            noOptionsMessage: () => \"\",\n            onChange: e => {\n              settipoPropuestaSelect(tipoPropuesta.find(x => x.label === e.label));\n              setpropuestaSet(e.label);\n            },\n            options: tipoPropuesta,\n            placeholder: t(\"Select\"),\n            value: tipoPropuestaSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), tipoPropuestaRequerido ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-error-parrafo\",\n            children: t(\"Required\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"description\",\n            children: t(\"Description\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvField, {\n            className: \"form-control\",\n            name: \"observations\",\n            type: \"textarea\",\n            value: props.dataSet.observations,\n            id: \"observations\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-2\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xl: \"12 text-end\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnCancel\",\n              color: \"danger\",\n              type: \"button\",\n              style: {\n                margin: '5px'\n              },\n              onClick: handleCancel,\n              children: c(\"Cancel\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), props.botones ? /*#__PURE__*/_jsxDEV(Button, {\n              id: \"btnSearch\",\n              color: \"success\",\n              type: \"submit\",\n              style: {\n                margin: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-content-save mdi-12px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 96\n              }, this), \" \", \" \", props.tipo == \"COMISION\" ? c(\"Save\") : c(\"Edit\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalNewSurety, \"qxYpittfogU+MdRDwuUfRsHlO0A=\");\n\n_c = ModalNewSurety;\nModalNewSurety.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  toggle: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nexport default ModalNewSurety;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalNewSurety\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/components/PropuestaCreditoComercial/facilities/ModalNewSurety.js"],"names":["React","useState","PropTypes","translationHelpers","Modal","ModalHeader","ModalBody","Label","Row","Col","Button","AvForm","AvField","AvGroup","BackendServices","Select","values","ModalNewSurety","props","api","t","c","tipoPropuesta","settipoPropuesta","tipoPropuestaSelect","settipoPropuestaSelect","undefined","propuestaSet","setpropuestaSet","tipoPropuestaRequerido","settipoPropuestaRequerido","handleSubmit","event","errors","value","preventDefault","length","typeBail","guardarDatos","tipo","toggle","handleCancel","useEffect","initializeData","defaultVal","dataSet","find","x","label","err","retrieveBailType","then","response","json","i","push","catch","error","console","isOpen","e","observations","margin","botones","propTypes","onSave","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { translationHelpers } from '../../../helpers/translation-helper';\r\n\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\nimport { BackendServices } from '../../../services';\r\nimport Select from \"react-select\";\r\nimport { values } from 'lodash';\r\n\r\nconst ModalNewSurety = (props) => {\r\n  const api = new BackendServices();\r\n  const [t, c] = translationHelpers('commercial_credit', 'common');\r\n  const [tipoPropuesta, settipoPropuesta] = useState(null);\r\n  const [tipoPropuestaSelect, settipoPropuestaSelect] = useState(undefined);\r\n  const [propuestaSet, setpropuestaSet] = useState(null);\r\n  const [tipoPropuestaRequerido, settipoPropuestaRequerido] = useState(false);\r\n  function handleSubmit(event, errors, value) {\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      return;\r\n    }\r\n    value.typeBail=propuestaSet;\r\n    props.guardarDatos(value, props.tipo);\r\n    props.toggle();\r\n  }\r\n\r\n  function handleCancel() {\r\n    props.toggle();\r\n  }\r\n  React.useEffect(() => {\r\n    // Read Api Service data\r\n    initializeData();\r\n  }, []);\r\n  React.useEffect(() => {\r\n    // Read Api Service data \r\n    var defaultVal = null;\r\n    settipoPropuestaSelect(undefined);\r\n    try {\r\n      if (tipoPropuesta.length > 0 && props.dataSet.typeBail !== null && tipoPropuestaSelect === undefined) {\r\n        defaultVal = tipoPropuesta.find(x => x.label === props.dataSet.typeBail);\r\n        if (defaultVal !== undefined) {\r\n          settipoPropuestaSelect(defaultVal);\r\n        }\r\n      }\r\n    }\r\n    catch (err) { }\r\n  }, [props]);\r\n  function initializeData() {\r\n    api.retrieveBailType()\r\n      .then((response) => {\r\n        if (response === null) { return; }\r\n        let json = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n          json.push({ label: response[i][\"description\"], value: response[i][\"id\"] })\r\n        }\r\n        settipoPropuesta(json);\r\n      })\r\n      .catch((error) => {\r\n        console.error('api error: ', error);\r\n      });\r\n  }\r\n  return (\r\n    <Modal isOpen={props.isOpen}\r\n      toggle={props.toggle}\r\n      centered={true}\r\n      size=\"md\">\r\n      <ModalHeader toggle={props.toggle} color=\"primary\">{t(\"Sureties\")}</ModalHeader>\r\n      <ModalBody>\r\n        <AvForm className=\"needs-validation\" onSubmit={handleSubmit}>\r\n          <AvGroup className=\"mb-3\">\r\n            <Label htmlFor=\"type\">{t(\"Surety Type\")}</Label>\r\n            {/* <AvField\r\n              className=\"form-control\"\r\n              name=\"typeBail\"\r\n              type=\"text\"\r\n              value={props.dataSet.typeBail}\r\n              id=\"typeBail\" /> */}\r\n            <Select noOptionsMessage={() => \"\"}\r\n              onChange={(e) => {\r\n                settipoPropuestaSelect(tipoPropuesta.find(x => x.label === e.label))\r\n                setpropuestaSet(e.label);\r\n              }}\r\n              options={tipoPropuesta}\r\n              placeholder={t(\"Select\")}\r\n              value={tipoPropuestaSelect}\r\n            />\r\n            {tipoPropuestaRequerido ?\r\n              <p className=\"message-error-parrafo\">{t(\"Required\")}</p>\r\n              : null}\r\n          </AvGroup>\r\n          <AvGroup className=\"mb-3\">\r\n            <Label htmlFor=\"description\">{t(\"Description\")}</Label>\r\n            <AvField\r\n              className=\"form-control\"\r\n              name=\"observations\"\r\n              type=\"textarea\"\r\n              value={props.dataSet.observations}\r\n              id=\"observations\"\r\n              rows=\"4\" />\r\n          </AvGroup>\r\n          <Row className=\"my-2\">\r\n            <Col xl=\"12 text-end\">\r\n              <Button id=\"btnCancel\" color=\"danger\" type=\"button\" style={{ margin: '5px' }} onClick={handleCancel}>\r\n                {c(\"Cancel\")}\r\n              </Button>\r\n              {props.botones ?\r\n                <Button id=\"btnSearch\" color=\"success\" type=\"submit\" style={{ margin: '5px' }}><i className=\"mdi mdi-content-save mdi-12px\"></i>\r\n                  {\" \"} {props.tipo == \"COMISION\" ? c(\"Save\") : c(\"Edit\")}\r\n                </Button> : null}\r\n            </Col>\r\n          </Row>\r\n        </AvForm>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nModalNewSurety.propTypes = {\r\n  onSave: PropTypes.func.isRequired,\r\n  toggle: PropTypes.func,\r\n  isOpen: PropTypes.bool\r\n};\r\n\r\n\r\nexport default ModalNewSurety;\r\n"]},"metadata":{},"sourceType":"module"}