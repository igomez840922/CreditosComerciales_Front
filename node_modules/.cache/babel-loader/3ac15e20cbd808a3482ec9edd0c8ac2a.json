{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\1_Presolicitud\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport * as OPTs from \"../../../../helpers/options_helper\";\nimport * as url from \"../../../../helpers/url_helper\";\nimport { Row, Col, Card, CardBody, Label, CardFooter, Button } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { useTranslation } from \"react-i18next\"; //Import SweetAlert\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { Search, ToolkitProvider } from 'react-bootstrap-table2-toolkit';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport LoadingOverlay from 'react-loading-overlay';\nimport AttachmentFileCore from \"../../../components/Common\";\nimport { BackendServices, CoreServices, BpmServices } from \"../../../../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreRequest = props => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const history = useHistory();\n  const location = useLocation(); //Data que recibimos en el location\n\n  const [locationData, setLocationData] = useState(undefined);\n  const [isActiveLoading, setIsActiveLoading] = useState(false); //Datos de la Tabla de Clientes\n\n  const [dataClientList, setdataClientList] = useState([]);\n  const [tableClientOptions, settableClientOptions] = useState([]);\n  const [tableClientHeader, settableClientHeader] = useState([]);\n  const [tableClientBody, settableClientBody] = useState([]);\n  const backendServices = new BackendServices();\n  const bpmServices = new BpmServices(); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    if (location.data !== null && location.data !== undefined) {\n      setLocationData(location.data);\n      fetchData(location.data);\n    }\n  }, []); //Caraga Inicial de datos\n\n  function fetchData(locationData) {\n    clientTableConfiguration();\n    getProcessClients();\n  } //se configura la tabla de Clientes \n\n\n  function clientTableConfiguration() {\n    //Opciones de la Tabla de Cliente\n    let options = {\n      textLabels: {\n        body: {\n          noMatch: t(\"SorryNoMatchingRecordsWereFfound\"),\n          toolTip: t(\"Order\"),\n          columnHeaderTooltip: column => `${t(\"OrderBy\")} ${column.label}`\n        },\n        pagination: {\n          next: t(\"Next\"),\n          previous: t(\"Prev\"),\n          rowsPerPage: t(\"RowsPerPage\"),\n          displayRows: t(\"From\")\n        },\n        toolbar: {\n          search: t(\"Search\"),\n          downloadCsv: t(\"DownloadCSV\"),\n          print: t(\"Print\"),\n          viewColumns: t(\"ViewColumns\"),\n          filterTable: t(\"FilterTable\")\n        },\n        filter: {\n          all: t(\"All\"),\n          title: t(\"Filter\"),\n          reset: t(\"Restore\")\n        },\n        viewColumns: {\n          title: t(\"ShowColumns\"),\n          titleAria: t(\"ShowHideColumns\")\n        },\n        selectedRows: {\n          text: t(\"SelectedRows\"),\n          delete: t(\"Delete\"),\n          deleteAria: t(\"DeleteSelectedRows\")\n        }\n      }\n    }; //Encabezado de la Tabla de Cliente\n\n    let columns = [{\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"PersonType\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this),\n      dataField: 'personType',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"FullName\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this),\n      dataField: 'fullName',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"IdentificationType\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this),\n      dataField: 'identificationType',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"IdentificationNumber\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this),\n      dataField: 'identificationNumber',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"Roles\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this),\n      dataField: 'roles',\n      sort: true\n    }, {\n      text: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: t(\"BlackList\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this),\n      dataField: 'blackList',\n      sort: true\n    }, {\n      text: \"\",\n      dataField: 'action'\n    }];\n    settableClientHeader(columns);\n    tableClientOptions(options);\n  } //se buscan todos los clientes de este proceso \n\n\n  function getProcessClients() {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      title: props.t(\"CommercialCredit\"),\n      breadcrumbItem: props.t(\"PreRequest\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      active: isActiveLoading,\n      spinner: true,\n      text: props.t(\"WaitingPlease\"),\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n            keyField: \"id\",\n            data: tableClientBody,\n            columns: tableClientHeader,\n            search: true,\n            children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                className: \"custome-search-field float-end\",\n                delay: 1000,\n                placeholder: t(\"Search\"),\n                ...props.searchProps\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n                bootstrap4: true,\n                bordered: false,\n                striped: true,\n                hover: true,\n                condensed: true,\n                style: {\n                  cursor: \"pointer\"\n                },\n                data: tableClientBody,\n                columns: tableClientHeader,\n                ...props.baseProps,\n                pagination: paginationFactory(tableClientOptions)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 6\n  }, this);\n};\n\n_s(PreRequest, \"gIsdB1z56UwN5FMYii0ik5IxfYU=\", false, function () {\n  return [useTranslation, useHistory, useLocation];\n});\n\n_c = PreRequest;\nexport default PreRequest;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreRequest\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/1_Presolicitud/index.js"],"names":["React","useState","PropTypes","useLocation","useHistory","OPTs","url","Row","Col","Card","CardBody","Label","CardFooter","Button","AvForm","AvField","Link","Breadcrumbs","useTranslation","SweetAlert","Search","ToolkitProvider","BootstrapTable","paginationFactory","LoadingOverlay","AttachmentFileCore","BackendServices","CoreServices","BpmServices","PreRequest","props","t","i18n","history","location","locationData","setLocationData","undefined","isActiveLoading","setIsActiveLoading","dataClientList","setdataClientList","tableClientOptions","settableClientOptions","tableClientHeader","settableClientHeader","tableClientBody","settableClientBody","backendServices","bpmServices","useEffect","data","fetchData","clientTableConfiguration","getProcessClients","options","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","label","pagination","next","previous","rowsPerPage","displayRows","toolbar","search","downloadCsv","print","viewColumns","filterTable","filter","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","columns","dataField","sort","searchProps","cursor","baseProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation,useHistory } from 'react-router-dom'\r\nimport * as OPTs from \"../../../../helpers/options_helper\"\r\nimport * as url from \"../../../../helpers/url_helper\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Label,\r\n  CardFooter,\r\n  Button,\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\r\nimport { Link } from \"react-router-dom\"\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../components/Common/Breadcrumb\"\r\n//i18n\r\nimport { useTranslation } from \"react-i18next\";\r\n//Import SweetAlert\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\nimport { Search,ToolkitProvider } from 'react-bootstrap-table2-toolkit';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport AttachmentFileCore from \"../../../components/Common\";\r\n\r\n\r\nimport {BackendServices,CoreServices,BpmServices,} from \"../../../../services\";\r\n\r\nconst PreRequest = props => {\r\n  \r\n  const { t, i18n } = useTranslation();\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  //Data que recibimos en el location\r\n  const [locationData, setLocationData] = useState(undefined);     \r\n  const [isActiveLoading, setIsActiveLoading] = useState(false);\r\n\r\n  //Datos de la Tabla de Clientes\r\n  const [dataClientList, setdataClientList ] = useState([]);\r\n  const [tableClientOptions, settableClientOptions] = useState([]);\r\n  const [tableClientHeader, settableClientHeader] = useState([]);\r\n  const [tableClientBody, settableClientBody] = useState([]);\r\n\r\n  const backendServices = new BackendServices();\r\n  const bpmServices = new BpmServices();\r\n    \r\n  //On Mounting (componentDidMount)\r\n  React.useEffect(() => {\r\n    if(location.data!==null && location.data!==undefined){\r\n      setLocationData(location.data);\r\n      fetchData(location.data);    \r\n    }    \r\n  }, []);\r\n\r\n    //Caraga Inicial de datos\r\n    function fetchData(locationData) { \r\n        \r\n        clientTableConfiguration();\r\n        getProcessClients();\r\n    }   \r\n    \r\n    //se configura la tabla de Clientes \r\n    function clientTableConfiguration(){\r\n      \r\n      //Opciones de la Tabla de Cliente\r\n      let options = {\r\n        textLabels: {\r\n          body: {\r\n            noMatch: t(\"SorryNoMatchingRecordsWereFfound\"),\r\n            toolTip:  t(\"Order\"),\r\n            columnHeaderTooltip: (column) => `${t(\"OrderBy\")} ${column.label}`,\r\n          },\r\n          pagination: {\r\n            next: t(\"Next\"),\r\n            previous: t(\"Prev\"),\r\n            rowsPerPage: t(\"RowsPerPage\"),\r\n            displayRows: t(\"From\"),\r\n          },\r\n          toolbar: {\r\n            search: t(\"Search\"),\r\n            downloadCsv: t(\"DownloadCSV\"),\r\n            print: t(\"Print\"),\r\n            viewColumns: t(\"ViewColumns\"),\r\n            filterTable: t(\"FilterTable\"),\r\n          },\r\n          filter: {\r\n            all: t(\"All\"),\r\n            title: t(\"Filter\"),\r\n            reset: t(\"Restore\"),\r\n          },\r\n          viewColumns: {\r\n            title: t(\"ShowColumns\"),\r\n            titleAria: t(\"ShowHideColumns\"),\r\n          },\r\n          selectedRows: {\r\n            text: t(\"SelectedRows\"),\r\n            delete: t(\"Delete\"),\r\n            deleteAria: t(\"DeleteSelectedRows\"),\r\n          },\r\n        },\r\n      };\r\n  \r\n      //Encabezado de la Tabla de Cliente\r\n      let columns = [\r\n        { text: <strong>{t(\"PersonType\")}</strong>, dataField: 'personType', sort: true },\r\n        { text: <strong>{t(\"FullName\")}</strong>, dataField: 'fullName', sort: true },\r\n        { text: <strong>{t(\"IdentificationType\")}</strong>, dataField: 'identificationType', sort: true },\r\n        { text: <strong>{t(\"IdentificationNumber\")}</strong>, dataField: 'identificationNumber', sort: true },\r\n        { text: <strong>{t(\"Roles\")}</strong>, dataField: 'roles', sort: true },\r\n        { text: <strong>{t(\"BlackList\")}</strong>, dataField: 'blackList', sort: true },\r\n        { text: \"\", dataField: 'action' },\r\n      ];\r\n\r\n      settableClientHeader(columns);\r\n      tableClientOptions(options);\r\n    }\r\n \r\n    //se buscan todos los clientes de este proceso \r\n    function getProcessClients(){\r\n\r\n    }\r\n  \r\n\r\n  return (\r\n     <div className=\"page-content\">\r\n        \r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"PreRequest\")} />\r\n\r\n        <LoadingOverlay active={isActiveLoading} spinner text={props.t(\"WaitingPlease\")}>\r\n        \r\n        <Card>\r\n            <CardBody>\r\n\r\n            <ToolkitProvider\r\n                          keyField=\"id\"\r\n                          data={tableClientBody}\r\n                          columns={tableClientHeader}\r\n                          search>\r\n                          {\r\n                            props => (\r\n                              <div>\r\n                                <Search className=\"custome-search-field float-end\" delay={1000} placeholder={t(\"Search\")} {...props.searchProps} />\r\n                                <BootstrapTable\r\n                                  bootstrap4\r\n                                  bordered={false}\r\n                                  striped\r\n                                  hover\r\n                                  condensed\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  data={tableClientBody} columns={tableClientHeader}\r\n                                  {...props.baseProps}\r\n                                  pagination={paginationFactory(tableClientOptions)}\r\n                                />\r\n                              </div>\r\n                            )\r\n                          }\r\n                        </ToolkitProvider>\r\n\r\n            </CardBody>\r\n        </Card>       \r\n      </LoadingOverlay>       \r\n\r\n      </div>      \r\n    \r\n  )\r\n}\r\n\r\nexport default PreRequest\r\n"]},"metadata":{},"sourceType":"module"}