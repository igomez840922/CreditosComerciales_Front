{"ast":null,"code":"export default class AccountsTransactionsModel {\n  static fromJson(json) {\n    this.results = [];\n    this.searchValue(\"Trn\", json);\n    const items = new AccountsTransactionsModel();\n    items.results = this.results;\n    console.log(\"Results: \" + items.results);\n    return items;\n  }\n\n  static searchValue(mainkey, json) {\n    try {\n      for (let [key, value] of Object.entries(json)) {\n        if (value !== null && value !== undefined) {\n          if (typeof value === \"object\") {\n            if (key !== mainkey) {\n              this.searchValue(mainkey, value);\n            } else {\n              switch (key) {\n                case \"Trn\":\n                  {\n                    this.results.push({\n                      id: this.results.length + 1,\n                      CurBalance: value[this.results.length][\"CurBalance\"],\n                      Desc: value[this.results.length][\"Desc\"],\n                      EffDt: value[this.results.length][\"EffDt\"],\n                      TrnRef: value[this.results.length][\"TrnRef\"],\n                      amt: value[this.results.length][\"TotalCurAmt\"][\"Amt\"],\n                      TrnType: value[this.results.length][\"TrnType\"][\"Type\"]\n                    });\n                    break;\n                  }\n\n                case \"Status\":\n                  {\n                    break;\n                  }\n\n                default:\n                  {\n                    break;\n                  }\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {}\n  }\n\n  static getRequestModel() {\n    const item = {};\n    return item;\n  }\n\n}\nAccountsTransactionsModel.results = [];","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/models/Common/AccountsTransactionsModel.js"],"names":["AccountsTransactionsModel","fromJson","json","results","searchValue","items","console","log","mainkey","key","value","Object","entries","undefined","push","id","length","CurBalance","Desc","EffDt","TrnRef","amt","TrnType","err","getRequestModel","item"],"mappings":"AAAA,eAAe,MAAMA,yBAAN,CAAgC;AAG9B,SAARC,QAAQ,CAACC,IAAD,EAAO;AACpB,SAAKC,OAAL,GAAe,EAAf;AAEA,SAAKC,WAAL,CAAiB,KAAjB,EAAwBF,IAAxB;AAEA,UAAMG,KAAK,GAAG,IAAIL,yBAAJ,EAAd;AACAK,IAAAA,KAAK,CAACF,OAAN,GAAgB,KAAKA,OAArB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,KAAK,CAACF,OAAhC;AAEA,WAAOE,KAAP;AACD;;AAEiB,SAAXD,WAAW,CAACI,OAAD,EAAUN,IAAV,EAAgB;AAChC,QAAI;AACF,WAAK,IAAI,CAACO,GAAD,EAAMC,KAAN,CAAT,IAAyBC,MAAM,CAACC,OAAP,CAAeV,IAAf,CAAzB,EAA+C;AAC7C,YAAIQ,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKG,SAAhC,EAA2C;AACzC,cAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;AAC7B,gBAAID,GAAG,KAAKD,OAAZ,EAAqB;AACnB,mBAAKJ,WAAL,CAAiBI,OAAjB,EAA0BE,KAA1B;AACD,aAFD,MAEO;AACL,sBAAQD,GAAR;AACE,qBAAK,KAAL;AAAY;AACV,yBAAKN,OAAL,CAAaW,IAAb,CAAkB;AAChBC,sBAAAA,EAAE,EAAE,KAAKZ,OAAL,CAAaa,MAAb,GAAsB,CADV;AAEhBC,sBAAAA,UAAU,EAAEP,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,YAA3B,CAFI;AAGhBE,sBAAAA,IAAI,EAAER,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,MAA3B,CAHU;AAIhBG,sBAAAA,KAAK,EAAET,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,OAA3B,CAJS;AAKhBI,sBAAAA,MAAM,EAAEV,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,QAA3B,CALQ;AAMhBK,sBAAAA,GAAG,EAAEX,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,aAA3B,EAA0C,KAA1C,CANW;AAOhBM,sBAAAA,OAAO,EAAEZ,KAAK,CAAC,KAAKP,OAAL,CAAaa,MAAd,CAAL,CAA2B,SAA3B,EAAsC,MAAtC;AAPO,qBAAlB;AAWA;AACD;;AACD,qBAAK,QAAL;AAAe;AAGb;AACD;;AAED;AAAS;AACP;AACD;AAvBH;AAyBD;AACF;AACF;AACF;AACF,KApCD,CAoCE,OAAOO,GAAP,EAAY,CAAE;AACjB;;AAEqB,SAAfC,eAAe,GAAG;AACvB,UAAMC,IAAI,GAAG,EAAb;AAEA,WAAOA,IAAP;AACD;;AA5D4C;AAA1BzB,yB,CACZG,O,GAAU,E","sourcesContent":["export default class AccountsTransactionsModel {\r\n  static results = [];\r\n\r\n  static fromJson(json) {\r\n    this.results = [];\r\n\r\n    this.searchValue(\"Trn\", json);\r\n\r\n    const items = new AccountsTransactionsModel();\r\n    items.results = this.results;\r\n\r\n    console.log(\"Results: \" + items.results);\r\n\r\n    return items;\r\n  }\r\n\r\n  static searchValue(mainkey, json) {\r\n    try {\r\n      for (let [key, value] of Object.entries(json)) {\r\n        if (value !== null && value !== undefined) {\r\n          if (typeof value === \"object\") {\r\n            if (key !== mainkey) {\r\n              this.searchValue(mainkey, value);\r\n            } else {\r\n              switch (key) {\r\n                case \"Trn\": {\r\n                  this.results.push({\r\n                    id: this.results.length + 1,\r\n                    CurBalance: value[this.results.length][\"CurBalance\"],\r\n                    Desc: value[this.results.length][\"Desc\"],\r\n                    EffDt: value[this.results.length][\"EffDt\"],\r\n                    TrnRef: value[this.results.length][\"TrnRef\"],\r\n                    amt: value[this.results.length][\"TotalCurAmt\"][\"Amt\"],\r\n                    TrnType: value[this.results.length][\"TrnType\"][\"Type\"],\r\n                  });\r\n                   \r\n                 \r\n                  break;\r\n                }\r\n                case \"Status\": {\r\n                  \r\n                 \r\n                  break;\r\n                }\r\n\r\n                default: {\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch (err) {}\r\n  }\r\n\r\n  static getRequestModel() {\r\n    const item = {};\r\n\r\n    return item;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}