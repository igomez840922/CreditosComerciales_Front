{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\14_AdminDesembolso\\\\Administracion\\\\Detalle\\\\index.js\",\n    _s = $RefreshSig$();\n\n/*ReinforcedManagementReport = Lista de Informe Reforzado*/\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, Col, Button, CardFooter } from \"reactstrap\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"; //i18n\n\nimport { withTranslation } from \"react-i18next\";\nimport DatosGenerales from \"./DatosGenerales\";\nimport CheckList from \"./CheckList\";\nimport Documentacion from \"./Documentacion\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { BpmServices } from \"../../../../../services\";\nimport * as url from \"../../../../../helpers/url_helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PantallaBusqueda = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    selectedData\n  } = location;\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n\n  function onSaveProcess(option, values = null) {\n    switch (option) {\n      case 1:\n        {\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 3:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          let instanceId = 0;\n          api.abortProcess(instanceId).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n\n      case 4:\n        {\n          let descripcion = 0;\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\n\n          /* ---------------------------------------------------------------------------------------------- */\n\n          const api = new BpmServices(); // let instanceId = location.data.instanceId\n\n          api.abortProcess(descripcion).then(data => {\n            if (data !== undefined) {\n              setsuccessSave_dlg(true);\n            } else {\n              //Mensaje ERROR\n              seterror_msg(props.t(\"TheProcessCouldNotFinish\"));\n              seterror_dlg(true);\n            }\n          });\n          break;\n        }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: props.t(\"CommercialCredit\"),\n        breadcrumbItem: props.t(\"Administration\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(DatosGenerales, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Documentacion, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            type: \"button\",\n            style: {\n              margin: '5px'\n            },\n            onClick: () => {\n              onSaveProcess(2);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-left-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 110\n            }, this), \" \", props.t(\"Exit\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"negative\",\n            type: \"button\",\n            onClick: () => {\n              onSaveProcess(3);\n            },\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-block-helper mdi-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), \" \", props.t(\"Refuse\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"success\",\n            type: \"button\",\n            onClick: () => {\n              onSaveProcess(4);\n            },\n            style: {\n              margin: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"mdi mdi-arrow-right-bold-circle-outline mid-12px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), \" \", \" \", props.t(\"Advance\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        title: props.t(\"SuccessDialog\"),\n        onConfirm: () => {\n          setsuccessSave_dlg(false);\n          history.push(url.URL_DASHBOARD);\n        },\n        children: props.t(\"SuccessSaveMessage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n        error: true,\n        title: props.t(\"ErrorDialog\"),\n        onConfirm: () => {\n          seterror_dlg(false);\n        },\n        children: error_msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PantallaBusqueda, \"U+ynXNhQ+RxgbHwTaGZEFfsf6B8=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = PantallaBusqueda;\nPantallaBusqueda.propTypes = {\n  selectedId: PropTypes.any,\n  onClose: PropTypes.func.isRequired\n};\nexport default withTranslation()(PantallaBusqueda);\n\nvar _c;\n\n$RefreshReg$(_c, \"PantallaBusqueda\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/14_AdminDesembolso/Administracion/Detalle/index.js"],"names":["React","useState","PropTypes","useHistory","useLocation","Link","Card","CardBody","Col","Button","CardFooter","Breadcrumbs","withTranslation","DatosGenerales","CheckList","Documentacion","SweetAlert","BpmServices","url","PantallaBusqueda","props","history","location","selectedData","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","onSaveProcess","option","values","api","instanceId","abortProcess","then","data","undefined","t","descripcion","textAlign","margin","push","URL_DASHBOARD","propTypes","selectedId","any","onClose","func","isRequired"],"mappings":"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","sourcesContent":["/*ReinforcedManagementReport = Lista de Informe Reforzado*/\r\nimport React, { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Button,\r\n  CardFooter,\r\n} from \"reactstrap\"\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../../../../components/Common/Breadcrumb\"\r\n\r\n//i18n\r\nimport { withTranslation } from \"react-i18next\"\r\n\r\nimport DatosGenerales from \"./DatosGenerales\"\r\nimport CheckList from \"./CheckList\"\r\nimport Documentacion from \"./Documentacion\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\nimport { BpmServices } from \"../../../../../services\"\r\nimport * as url from \"../../../../../helpers/url_helper\";\r\n\r\nconst PantallaBusqueda = props => {\r\n  const history = useHistory();\r\n\r\n  const location = useLocation()\r\n  const { selectedData } = location;\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  function onSaveProcess(option, values = null) {\r\n    switch (option) {\r\n      case 1: {\r\n\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 3: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        let instanceId = 0\r\n        api.abortProcess(instanceId).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n      case 4: {\r\n        let descripcion = 0;\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                    Cerramos el proceso y retornamos a la bandeja de entrada                    */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        const api = new BpmServices();\r\n        // let instanceId = location.data.instanceId\r\n        api.abortProcess(descripcion).then((data) => {\r\n          if (data !== undefined) {\r\n            setsuccessSave_dlg(true)\r\n          }\r\n          else {\r\n            //Mensaje ERROR\r\n            seterror_msg(props.t(\"TheProcessCouldNotFinish\"))\r\n            seterror_dlg(true)\r\n          }\r\n        });\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"page-content\">\r\n\r\n        <Breadcrumbs title={props.t(\"CommercialCredit\")} breadcrumbItem={props.t(\"Administration\")} />\r\n\r\n        <Card>\r\n          <CardBody>\r\n\r\n            <DatosGenerales />\r\n            <CheckList />\r\n            <Documentacion />\r\n\r\n          </CardBody>\r\n          <CardFooter style={{ textAlign: \"right\" }}>\r\n\r\n          <Button color=\"dark\" type=\"button\" style={{ margin: '5px' }} onClick={() => { onSaveProcess(2); }}><i className=\"mdi mdi-arrow-left-bold-circle-outline mid-12px\"></i> {props.t(\"Exit\")}</Button>\r\n\r\n            <Button color=\"negative\" type=\"button\" onClick={() => { onSaveProcess(3); }} style={{ margin: '5px' }}>\r\n              <i className=\"mdi mdi-block-helper mdi-12px\"></i>{\" \"}{props.t(\"Refuse\")}\r\n            </Button>\r\n\r\n            <Button color=\"success\" type=\"button\" onClick={() => { onSaveProcess(4); }} style={{ margin: '5px' }}>\r\n            <i className=\"mdi mdi-arrow-right-bold-circle-outline mid-12px\"></i>{\" \"} {props.t(\"Advance\")}\r\n            </Button>\r\n\r\n          </CardFooter>\r\n\r\n        </Card>\r\n        {successSave_dlg ? (\r\n          <SweetAlert\r\n            success\r\n            title={props.t(\"SuccessDialog\")}\r\n            onConfirm={() => {\r\n              setsuccessSave_dlg(false)\r\n\r\n              history.push(url.URL_DASHBOARD);\r\n            }}\r\n          >\r\n            {props.t(\"SuccessSaveMessage\")}\r\n          </SweetAlert>\r\n        ) : null}\r\n\r\n        {error_dlg ? (\r\n          <SweetAlert\r\n            error\r\n            title={props.t(\"ErrorDialog\")}\r\n            onConfirm={() => {\r\n              seterror_dlg(false)\r\n            }}\r\n          >\r\n            {error_msg}\r\n          </SweetAlert>\r\n        ) : null}\r\n      </div>\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nPantallaBusqueda.propTypes = {\r\n  selectedId: PropTypes.any,\r\n  onClose: PropTypes.func.isRequired\r\n}\r\n\r\nexport default (withTranslation()(PantallaBusqueda))\r\n"]},"metadata":{},"sourceType":"module"}