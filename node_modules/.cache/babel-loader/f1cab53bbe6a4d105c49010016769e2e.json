{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\16_RiesgoAmbiental\\\\riesgoAmbiental\\\\FormAspectosAmbientales.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useContext, useImperativeHandle, forwardRef } from 'react';\nimport RiesgoAmbientalContext from '../RiesgoAmbientalContext';\nimport { Card, CardBody, Row, Col, Label } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup, AvInput } from \"availity-reactstrap-validation\";\nimport AttachmentList from '../../../../components/Attachments/AttachmentList'; //i18n\n\nimport { useTranslation } from 'react-i18next';\nimport ServicioRiesgoAmbiental from '../../../../services/RiesgoAmbiental/RiesgoAmbiental';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleChekQuestion = props => {\n  return /*#__PURE__*/_jsxDEV(AvGroup, {\n    check: true,\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(AvInput, {\n      id: props.name,\n      type: \"checkbox\",\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      check: true,\n      htmlFor: props.name,\n      children: [\" \", props.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SimpleChekQuestion;\nSimpleChekQuestion.propTypes = {\n  name: PropTypes.string,\n  question: PropTypes.string\n};\n\nconst ComposedQuestion = props => {\n  return /*#__PURE__*/_jsxDEV(AvGroup, {\n    check: true,\n    className: \"my-2\",\n    children: [/*#__PURE__*/_jsxDEV(AvInput, {\n      id: props.name,\n      type: \"checkbox\",\n      name: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      check: true,\n      htmlFor: props.name,\n      children: [\" \", props.question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvInput, {\n      type: \"textarea\",\n      name: props.name + 'Comments'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ComposedQuestion;\nComposedQuestion.propTypes = {\n  name: PropTypes.string,\n  question: PropTypes.string\n};\nconst FormAspectosAmbientales = /*#__PURE__*/forwardRef(_c3 = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [formValid, setFormValid] = useState(false); // services\n\n  const context = useContext(RiesgoAmbientalContext);\n  const servicioRiesgoAmbiental = new ServicioRiesgoAmbiental();\n  const simpleQuestions = [{\n    name: 'natureLocationProject',\n    question: '¿El proyecto está ubicado o es colindante a un área natural protegida?'\n  }, {\n    name: 'physicalResettlement',\n    question: '¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?'\n  }, {\n    name: 'environmentalPermits',\n    question: '¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?'\n  }, {\n    name: 'newProject',\n    question: '¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?'\n  }, {\n    name: 'workersContractors',\n    question: '¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?'\n  }];\n  useImperativeHandle(ref, () => ({\n    submit: (validate = true) => {\n      const form = document.getElementById('formAspectosAmbientales');\n      form.requestSubmit();\n      return formValid;\n    },\n    getFormValidation: () => {\n      return formValid;\n    }\n  }));\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n    const isValid = errors.length === 0;\n    setFormValid(isValid);\n\n    if (isValid) {\n      console.log('submit', values, errors);\n      const {\n        transactionId\n      } = context;\n      servicioRiesgoAmbiental.guardarAspectosAmbientales(transactionId, values).then(result => {\n        console.log('result', result);\n      }).catch(error => {\n        console.error('Error guardando', error);\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardBody, {\n      children: /*#__PURE__*/_jsxDEV(AvForm, {\n        id: \"formAspectosAmbientales\",\n        className: \"needs-validation\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: t(\"EnvironmentalAspects\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-title-desc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-2\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"riskPreClassification\",\n                children: t(\"PreClassificationRisk\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"preclassification\",\n                type: \"text\",\n                id: \"riskPreClassification\",\n                value: \"Medio\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"6\",\n            children: /*#__PURE__*/_jsxDEV(AvGroup, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                htmlFor: \"sustainableCreditRating\",\n                children: t(\"EnvironmentalRiskclassification\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                className: \"form-control\",\n                name: \"sustainableCreditRating\",\n                type: \"select\",\n                id: \"sustainableCreditRating\",\n                value: \"MedioAlto\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Bajo\",\n                  children: \"Bajo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Medio\",\n                  children: \"Medio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"MedioAlto\",\n                  children: \"Medio Alto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Alto\",\n                  children: \"Alto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: simpleQuestions.map(item => /*#__PURE__*/_jsxDEV(SimpleChekQuestion, {\n              name: item.name,\n              question: item.question\n            }, item.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-4\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: \"12\",\n            children: /*#__PURE__*/_jsxDEV(AttachmentList, {\n              editMode: true,\n              attachments: []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}, \"Crx6/iKGvD/8nh5H39j8z9JiQI4=\", false, function () {\n  return [useTranslation, useImperativeHandle];\n}));\n_c4 = FormAspectosAmbientales;\nFormAspectosAmbientales.propTypes = {};\nexport default FormAspectosAmbientales;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SimpleChekQuestion\");\n$RefreshReg$(_c2, \"ComposedQuestion\");\n$RefreshReg$(_c3, \"FormAspectosAmbientales$forwardRef\");\n$RefreshReg$(_c4, \"FormAspectosAmbientales\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/16_RiesgoAmbiental/riesgoAmbiental/FormAspectosAmbientales.js"],"names":["PropTypes","useState","useContext","useImperativeHandle","forwardRef","RiesgoAmbientalContext","Card","CardBody","Row","Col","Label","AvForm","AvField","AvGroup","AvInput","AttachmentList","useTranslation","ServicioRiesgoAmbiental","SimpleChekQuestion","props","name","question","propTypes","string","ComposedQuestion","FormAspectosAmbientales","ref","t","i18n","formValid","setFormValid","context","servicioRiesgoAmbiental","simpleQuestions","submit","validate","form","document","getElementById","requestSubmit","getFormValidation","handleSubmit","event","errors","values","preventDefault","isValid","length","console","log","transactionId","guardarAspectosAmbientales","then","result","catch","error","map","item"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useContext, useImperativeHandle, forwardRef } from 'react';\r\nimport RiesgoAmbientalContext from '../RiesgoAmbientalContext';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Label\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup, AvInput } from \"availity-reactstrap-validation\"\r\nimport AttachmentList from '../../../../components/Attachments/AttachmentList';\r\n\r\n\r\n\r\n//i18n\r\nimport { useTranslation } from 'react-i18next'\r\nimport ServicioRiesgoAmbiental from '../../../../services/RiesgoAmbiental/RiesgoAmbiental';\r\n\r\n\r\nconst SimpleChekQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={ props.name } type=\"checkbox\" name={ props.name } />\r\n      <Label check htmlFor={ props.name }> { props.question }</Label>\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nSimpleChekQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string\r\n};\r\n\r\nconst ComposedQuestion = props => {\r\n  return (\r\n    <AvGroup check className=\"my-2\">\r\n      <AvInput id={ props.name } type=\"checkbox\" name={ props.name } />\r\n      <Label check htmlFor={ props.name }> { props.question }</Label>\r\n      <AvInput type=\"textarea\" name={ props.name + 'Comments' } />\r\n    </AvGroup>\r\n  );\r\n};\r\n\r\nComposedQuestion.propTypes = {\r\n  name: PropTypes.string,\r\n  question: PropTypes.string\r\n};\r\n\r\nconst FormAspectosAmbientales = forwardRef((props, ref) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  // services\r\n  const context = useContext(RiesgoAmbientalContext);\r\n  const servicioRiesgoAmbiental = new ServicioRiesgoAmbiental();\r\n\r\n  const simpleQuestions = [\r\n    { name: 'natureLocationProject', question: '¿El proyecto está ubicado o es colindante a un área natural protegida?' },\r\n    { name: 'physicalResettlement', question: '¿El proyecto involucra reasentamiento físico y/o económico de más de 100 personas?' },\r\n    { name: 'environmentalPermits', question: '¿Se necesita la presentación de permisos ambientales para la ejecución del proyecto?' },\r\n    { name: 'newProject', question: '¿El proyecto es nuevo e involucra el uso de más de 35 Hectáreas de terreno?' },\r\n    { name: 'workersContractors', question: '¿La actividad emplea más de 50 trabajadores y manejan más de 15 contratistas?' },\r\n  ];\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    submit: (validate = true) => {\r\n      const form = document.getElementById('formAspectosAmbientales');\r\n      form.requestSubmit();\r\n      return formValid;\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }\r\n  }));\r\n\r\n  function handleSubmit(event, errors, values) {\r\n    event.preventDefault();\r\n    const isValid = errors.length === 0;\r\n    setFormValid(isValid);\r\n    if( isValid ) {\r\n      console.log('submit', values, errors);\r\n      const { transactionId } = context;\r\n      servicioRiesgoAmbiental.guardarAspectosAmbientales(transactionId, values)\r\n        .then((result) => {\r\n          console.log('result', result);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error guardando', error);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n\r\n      <CardBody>\r\n\r\n        <AvForm id=\"formAspectosAmbientales\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n\r\n        <h4 className=\"card-title\">{ t(\"EnvironmentalAspects\") }</h4>\r\n        <p className=\"card-title-desc\"></p>\r\n\r\n        <Row className=\"my-2\">\r\n          <Col md=\"6\">\r\n\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"riskPreClassification\">{ t(\"PreClassificationRisk\") }</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"preclassification\"\r\n                type=\"text\"\r\n                id=\"riskPreClassification\"\r\n                value=\"Medio\"\r\n                disabled={true}></AvField>\r\n            </AvGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n            <AvGroup className=\"mb-3\">\r\n              <Label htmlFor=\"sustainableCreditRating\">{ t(\"EnvironmentalRiskclassification\") }</Label>\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"sustainableCreditRating\"\r\n                type=\"select\"\r\n                id=\"sustainableCreditRating\"\r\n                value=\"MedioAlto\">\r\n                <option value=\"Bajo\">Bajo</option>\r\n                <option value=\"Medio\">Medio</option>\r\n                <option value=\"MedioAlto\">Medio Alto</option>\r\n                <option value=\"Alto\">Alto</option>\r\n              </AvField>\r\n            </AvGroup>\r\n            </Col>\r\n            <Col md=\"12\">\r\n\r\n            { simpleQuestions.map(item => (\r\n                <SimpleChekQuestion key={ item.name } name={ item.name } question={ item.question } />\r\n              ))\r\n            }\r\n\r\n{/*\r\n            { composedQuestions.map(item => (\r\n              <ComposedQuestion key={ item.name } name={ item.name } question={ item.question } />\r\n            ))}\r\n */}\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n        <Row className=\"my-4\">\r\n          <Col md=\"12\">\r\n            <AttachmentList editMode={ true } attachments={[]} />\r\n          </Col>\r\n        </Row>\r\n\r\n        </AvForm>\r\n\r\n      </CardBody>\r\n\r\n    </Card>\r\n  );\r\n\r\n});\r\n\r\n\r\nFormAspectosAmbientales.propTypes = {\r\n};\r\n\r\nexport default FormAspectosAmbientales;\r\n"]},"metadata":{},"sourceType":"module"}