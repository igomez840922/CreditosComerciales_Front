{"ast":null,"code":"var _jsxFileName = \"D:\\\\_PROJECTS\\\\_SOAINT\\\\JBPM\\\\App\\\\banescocreditoscomerciales\\\\src\\\\pages\\\\CommercialCredit\\\\4_InformeGestionReforzado\\\\FormularioIGR\\\\Secciones\\\\InformacionAccionosta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Row, Col, Card, CardBody, Button, Label, Input, CardHeader, Table, CardFooter } from \"reactstrap\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\";\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\nimport { BackendServices } from \"../../../../../services\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InformacionAccionista = /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const location = useLocation();\n  React.useImperativeHandle(ref, () => ({\n    validateForm: () => {\n      const form = document.getElementById('frmInformacionAccionista');\n      form.requestSubmit();\n    },\n    getFormValidation: () => {\n      return formValid;\n    },\n    dataReturn\n  }));\n  const [formValid, setFormValid] = useState(false);\n\n  function handleChange(e) {\n    setFormValid(false);\n  } // Form Submission\n\n\n  function handleSubmit(event, errors, values) {\n    event.preventDefault();\n\n    if (errors.length > 0) {\n      setFormValid(false);\n      return;\n    }\n\n    setFormValid(true);\n    props.onSubmit();\n  }\n\n  const [botonValidation, setbotonValidation] = useState(false);\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\n  const [dataLocation, setData] = useState(location.data);\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\n  const [shareholderRows, setShareholderRows] = useState([]);\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\n  const [error_dlg, seterror_dlg] = useState(false);\n  const [error_msg, seterror_msg] = useState(\"\");\n  const [info_dlg, setinfo_dlg] = useState(false);\n  const [info_msg, setinfo_msg] = useState(\"\");\n  const [tipo, settipo] = useState(\"\");\n  const [confirm_alert, setconfirm_alert] = useState(false);\n  const [success_dlg, setsuccess_dlg] = useState(false);\n  const [dynamic_description, setdynamic_description] = useState(\"\");\n  const [dataDelete, setDataDelete] = useState([]);\n  const [dataAcciones, setdataAcciones] = useState({\n    transactId: 0,\n    personType: \"\",\n    identificationType: \"\",\n    identificationNumber: \"\",\n    shareholderFirstName: \"\",\n    shareholderMiddleName: \"\",\n    shareholderFirstSurname: \"\",\n    shareholderSecondSurname: \"\",\n    nationality: {\n      code: \"\",\n      name: \"\"\n    },\n    birthDate: 0,\n    participation: 0,\n    yearsExperience: 0\n  }); //On Mounting (componentDidMount)\n\n  React.useEffect(() => {\n    // Read Api Service data  \n    loadInitialData();\n    setDataReturn(props.jsonAccionistas);\n  }, [props.jsonAccionistas]);\n\n  function loadInitialData() {\n    const api = new BackendServices();\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    api.consultarDatosAccionistas(dataLocation.transactionId).then(resp => {\n      if (resp.length > 0) {\n        setdataGeneralIA(resp);\n        dataReturn.datosTablaAccionistas = resp;\n        setDataReturn(dataReturn);\n        setShareholderRows(resp.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.identificationNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.shareholderFirstName + \" \" + data.shareholderFirstSurname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.nationality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.birthDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.participation, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [data.yearsExperience, \" \", t(\"Year\"), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                editarDatosAccionista(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-border-color mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 128\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              color: \"link\",\n              onClick: resp => {\n                eliminarAccionista(data);\n              },\n              className: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"mdi mdi-trash-can-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 125\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, data.shareholderIdentification, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)));\n      } else {\n        setShareholderRows( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: t(\"NoData\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this));\n      }\n    }).catch(error => {}); // api.getShareholderList()\n    //   .then((response) => {\n    //     setDataList(response);\n    //     setShareholderList(shareholderList);\n    //     ));\n    //   })\n    //   .catch((error) => {\n    //     console.error('Error fetching documents', error);\n    // });\n  }\n  /* ---------------------------------------------------------------------------------------------- */\n\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\n\n  /* ---------------------------------------------------------------------------------------------- */\n\n\n  function agregarAccionista(values, tipo) {\n    dataReturn.age = values.yearsExprience;\n    dataReturn.sectorExperience = values.yearsExprience;\n    dataReturn.birthDate = values.startDate;\n    dataReturn.nationality = values.codigoPais.label;\n    dataReturn.nationalityIdentification = 2; // dataReturn.nationalityIdentification=values.codigoPa is.value;\n\n    dataReturn.shareholderIdentification = Math.floor(Math.random() * 100);\n    dataReturn.shareholderName = values.name;\n    dataReturn.shareholding = 3;\n    dataReturn.transactId = Number(dataLocation.transactionId);\n    dataReturn.status = true;\n    setDataReturn(dataReturn);\n    let dato = {\n      transactId: Number(dataLocation.transactionId),\n      nationalityIdentification: values.codigoPais.value,\n      nationality: values.codigoPais.label,\n      shareholding: Number(values.participation),\n      sectorExperience: Number(values.yearsExprience)\n    };\n\n    if (values.identificationType != \"RUC\") {\n      dato.shareholderName = values.firstName + \" \" + values.secondName + \" \" + values.firstLastName + \" \" + values.secondLastName;\n      dato.birthDate = values.startDate;\n    } else {\n      dato.shareholderName = values.firstName;\n      dato.birthDate = \"2000-01-01\";\n    }\n\n    let dataSet = {\n      transactId: Number(dataLocation.transactionId),\n      personType: values.personType,\n      identificationType: values.identificationType,\n      identificationNumber: values.identificationNumber,\n      shareholderFirstName: values.firstName ? values.firstName : values.firstName2 ? values.firstName2 : \"\",\n      shareholderMiddleName: values.secondName ? values.secondName : \"\",\n      shareholderFirstSurname: values.firstLastName ? values.firstLastName : \"\",\n      shareholderSecondSurname: values.secondLastName ? values.secondLastName : \"\",\n      nationality: {\n        code: values.codigoPais.value,\n        name: values.codigoPais.label\n      },\n      birthDate: dato.birthDate ? dato.birthDate : \"2000-01-01\",\n      participation: Number(values.participation),\n      yearsExperience: Number(values.yearsExprience)\n    };\n    /* ---------------------------------------------------------------------------------------------- */\n\n    /*                               Procedemos a guardar el accionista                               */\n\n    /* ---------------------------------------------------------------------------------------------- */\n\n    const apiBack = new BackendServices();\n\n    if (tipo == \"guardar\") {\n      apiBack.nuevoAccionista(dataSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    } else {\n      dataSet.shareholderId = values.shareholderId;\n      apiBack.actualizarAccionista(dataSet).then(resp => {\n        if (resp !== null && resp !== undefined) {\n          setsuccessSave_dlg(true);\n          toggleShowModelAttachment();\n        } else {\n          toggleShowModelAttachment();\n          seterror_dlg(true);\n        }\n      }).catch(error => {\n        seterror_dlg(true);\n      });\n    }\n  } //abrimos modal para adjunar archivos\n\n\n  function toggleShowModelAttachment() {\n    setShowModelAttachment(!showModelAttachment);\n    removeBodyCss();\n  }\n\n  function verDatosAccionista(data) {\n    setdataAcciones(data);\n    setbotonValidation(false);\n    toggleShowModelAttachment();\n  }\n\n  function editarDatosAccionista(data) {\n    setdataAcciones(data);\n    settipo(\"editar\");\n    setbotonValidation(true);\n    toggleShowModelAttachment();\n  }\n\n  function procesarDatosTabla(option, value) {\n    switch (option) {\n      case 1:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                       Aqui procedemos a agregar un accionista a la lista                       */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          // console.log(value);\n          break;\n        }\n\n      case 2:\n        {\n          /* ---------------------------------------------------------------------------------------------- */\n\n          /*                         Procedemos a eliminar el accionista de la lista                        */\n\n          /* ---------------------------------------------------------------------------------------------- */\n          break;\n        }\n    }\n  }\n\n  function eliminarAccionista(data) {\n    setDataDelete(data);\n    setconfirm_alert(true);\n  }\n\n  function removeBodyCss() {\n    document.body.classList.add(\"no_padding\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: t(\"Shareholder Information\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-title-desc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n      id: \"frmInformacionAccionista\",\n      className: \"needs-validation\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"table mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              className: \"table-light\",\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"ID Number\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Name\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Nationality\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"DBO\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"Participation\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: t(\"YearsExprience\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    className: \"float-end\",\n                    onClick: () => {\n                      setbotonValidation(true);\n                      setdataAcciones({\n                        transactId: 0,\n                        personType: \"\",\n                        identificationType: \"\",\n                        identificationNumber: \"\",\n                        shareholderFirstName: \"\",\n                        shareholderMiddleName: \"\",\n                        shareholderFirstSurname: \"\",\n                        shareholderSecondSurname: \"\",\n                        nationality: {\n                          code: \"\",\n                          name: \"\"\n                        },\n                        birthDate: 0,\n                        participation: 0,\n                        yearsExperience: 0\n                      });\n                      settipo(\"guardar\");\n                      toggleShowModelAttachment();\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"mdi mdi-plus-box-multiple-outline mdi-24px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 22\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: shareholderRows\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              htmlFor: \"companyHistoryDetails\",\n              children: t(\"Details\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AvField, {\n              onChange: e => {\n                dataReturn.observations = e.target.value;\n                setDataReturn(dataReturn);\n              },\n              className: \"form-control\",\n              name: \"informacionAccionistaDetails\",\n              id: \"informacionAccionistaDetails\",\n              type: \"textarea\",\n              rows: \"7\",\n              value: props.jsonAccionistas.observations\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), successSave_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      success: true,\n      title: t(\"SuccessDialog\"),\n      onConfirm: () => {\n        setsuccessSave_dlg(false);\n        loadInitialData();\n      },\n      children: t(\"SuccessSaveMessage\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this) : null, error_dlg ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      error: true,\n      title: t(\"ErrorDialog\"),\n      onConfirm: () => {\n        seterror_dlg(false);\n        loadInitialData();\n      },\n      children: error_msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this) : null, confirm_alert ? /*#__PURE__*/_jsxDEV(SweetAlert, {\n      title: t(\"Areyousure\"),\n      warning: true,\n      showCancel: true,\n      confirmButtonText: t(\"Yesdeleteit\"),\n      confirmBtnBsStyle: \"success\",\n      cancelBtnBsStyle: \"danger\",\n      onConfirm: () => {\n        const apiBack = new BackendServices();\n        apiBack.eliminarAccionista({\n          transactId: dataDelete.transactId,\n          shareholderId: dataDelete.shareholderId\n        }).then(resp => {\n          if (resp.statusCode == \"500\") {\n            setconfirm_alert(false);\n            seterror_dlg(true);\n          } else {\n            setconfirm_alert(false);\n            setsuccessSave_dlg(true);\n          }\n        }).catch(error => {\n          setconfirm_alert(false);\n          seterror_dlg(true);\n        });\n      },\n      onCancel: () => setconfirm_alert(false),\n      children: t(\"Youwontbeabletorevertthis\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(ModalInfoAccionistas, {\n      dataGeneralIA: dataGeneralIA,\n      tipo: tipo,\n      agregarAccionista: agregarAccionista,\n      botones: botonValidation,\n      dataAcciones: dataAcciones,\n      procesarDatosTabla: procesarDatosTabla,\n      isOpen: showModelAttachment,\n      toggle: () => {\n        toggleShowModelAttachment();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}, \"94Ncriazpqb/nqribXlm2KdrI9g=\", false, function () {\n  return [useTranslation, useLocation, React.useImperativeHandle];\n}));\n_c2 = InformacionAccionista;\nInformacionAccionista.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default InformacionAccionista;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InformacionAccionista$React.forwardRef\");\n$RefreshReg$(_c2, \"InformacionAccionista\");","map":{"version":3,"sources":["D:/_PROJECTS/_SOAINT/JBPM/App/banescocreditoscomerciales/src/pages/CommercialCredit/4_InformeGestionReforzado/FormularioIGR/Secciones/InformacionAccionosta.js"],"names":["React","useState","useTranslation","PropTypes","Link","useLocation","Row","Col","Card","CardBody","Button","Label","Input","CardHeader","Table","CardFooter","AvForm","AvField","AvGroup","ModalInfoAccionistas","ApiServicesCommon","BackendServices","SweetAlert","InformacionAccionista","forwardRef","props","ref","t","i18n","location","useImperativeHandle","validateForm","form","document","getElementById","requestSubmit","getFormValidation","formValid","dataReturn","setFormValid","handleChange","e","handleSubmit","event","errors","values","preventDefault","length","onSubmit","botonValidation","setbotonValidation","dataGeneralIA","setdataGeneralIA","dataLocation","setData","data","showModelAttachment","setShowModelAttachment","shareholderRows","setShareholderRows","accionistasJSON","setAccionistasJson","jsonAccionistas","setDataReturn","successSave_dlg","setsuccessSave_dlg","error_dlg","seterror_dlg","error_msg","seterror_msg","info_dlg","setinfo_dlg","info_msg","setinfo_msg","tipo","settipo","confirm_alert","setconfirm_alert","success_dlg","setsuccess_dlg","dynamic_description","setdynamic_description","dataDelete","setDataDelete","dataAcciones","setdataAcciones","transactId","personType","identificationType","identificationNumber","shareholderFirstName","shareholderMiddleName","shareholderFirstSurname","shareholderSecondSurname","nationality","code","name","birthDate","participation","yearsExperience","useEffect","loadInitialData","api","consultarDatosAccionistas","transactionId","then","resp","datosTablaAccionistas","map","textAlign","editarDatosAccionista","eliminarAccionista","shareholderIdentification","catch","error","agregarAccionista","age","yearsExprience","sectorExperience","startDate","codigoPais","label","nationalityIdentification","Math","floor","random","shareholderName","shareholding","Number","status","dato","value","firstName","secondName","firstLastName","secondLastName","dataSet","firstName2","apiBack","nuevoAccionista","undefined","toggleShowModelAttachment","shareholderId","actualizarAccionista","removeBodyCss","verDatosAccionista","procesarDatosTabla","option","body","classList","add","observations","target","statusCode","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\r\nimport { useTranslation } from 'react-i18next'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Label,\r\n  Input,\r\n  CardHeader,\r\n  Table,\r\n  CardFooter\r\n} from \"reactstrap\"\r\n\r\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\"\r\n\r\nimport ModalInfoAccionistas from \"./ModalInfoAccionistas\"\r\n\r\nimport ApiServicesCommon from \"../../../../../services/Common/ApiServicesCommon\";\r\nimport { BackendServices } from \"../../../../../services\"\r\nimport SweetAlert from \"react-bootstrap-sweetalert\"\r\n\r\nconst InformacionAccionista = React.forwardRef((props, ref) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const location = useLocation()\r\n  React.useImperativeHandle(ref, () => ({\r\n    validateForm: () => {\r\n      const form = document.getElementById('frmInformacionAccionista');\r\n      form.requestSubmit();\r\n    },\r\n    getFormValidation: () => {\r\n      return formValid;\r\n    }, dataReturn\r\n  }))\r\n\r\n  const [formValid, setFormValid] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    setFormValid(false);\r\n  }\r\n\r\n  // Form Submission\r\n  function handleSubmit(event, errors, values) {\r\n\r\n    event.preventDefault();\r\n    if (errors.length > 0) {\r\n      setFormValid(false);\r\n      return;\r\n    }\r\n    setFormValid(true);\r\n    props.onSubmit();\r\n  }\r\n\r\n  const [botonValidation, setbotonValidation] = useState(false);\r\n  const [dataGeneralIA, setdataGeneralIA] = useState(null);\r\n  const [dataLocation, setData] = useState(location.data);\r\n  const [showModelAttachment, setShowModelAttachment] = useState(false);\r\n  const [shareholderRows, setShareholderRows] = useState([]);\r\n  const [accionistasJSON, setAccionistasJson] = useState(props.jsonAccionistas);\r\n  const [dataReturn, setDataReturn] = useState(props.jsonAccionistas);\r\n  const [successSave_dlg, setsuccessSave_dlg] = useState(false);\r\n  const [error_dlg, seterror_dlg] = useState(false);\r\n  const [error_msg, seterror_msg] = useState(\"\");\r\n  const [info_dlg, setinfo_dlg] = useState(false)\r\n  const [info_msg, setinfo_msg] = useState(\"\")\r\n  const [tipo, settipo] = useState(\"\")\r\n  const [confirm_alert, setconfirm_alert] = useState(false)\r\n  const [success_dlg, setsuccess_dlg] = useState(false)\r\n  const [dynamic_description, setdynamic_description] = useState(\"\")\r\n  const [dataDelete, setDataDelete] = useState([]);\r\n  const [dataAcciones, setdataAcciones] = useState({\r\n    transactId: 0,\r\n    personType: \"\",\r\n    identificationType: \"\",\r\n    identificationNumber: \"\",\r\n    shareholderFirstName: \"\",\r\n    shareholderMiddleName: \"\",\r\n    shareholderFirstSurname: \"\",\r\n    shareholderSecondSurname: \"\",\r\n    nationality: {\r\n      code: \"\",\r\n      name: \"\"\r\n    },\r\n    birthDate: 0,\r\n    participation: 0,\r\n    yearsExperience: 0\r\n  });\r\n\r\n  //On Mounting (componentDidMount)\r\n \r\n  React.useEffect(() => {\r\n    // Read Api Service data  \r\n    loadInitialData();\r\n    setDataReturn(props.jsonAccionistas)\r\n  }, [props.jsonAccionistas]);\r\n\r\n\r\n  function loadInitialData() {\r\n\r\n    const api = new BackendServices()\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*           Cargamos la lista de accionistas pasandole como parametro el transactionId           */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    api.consultarDatosAccionistas(dataLocation.transactionId).then(resp => {\r\n      if (resp.length > 0) {\r\n        setdataGeneralIA(resp);\r\n        dataReturn.datosTablaAccionistas = resp;\r\n        setDataReturn(dataReturn)\r\n        setShareholderRows(resp.map((data) => (\r\n          <tr key={data.shareholderIdentification}>\r\n            <td>{data.identificationNumber}</td>\r\n            <td>{data.shareholderFirstName + \" \" + data.shareholderFirstSurname}</td>\r\n            <td>{data.nationality}</td>\r\n            <td>{data.birthDate}</td>\r\n            <td>{data.participation}%</td>\r\n            <td>{data.yearsExperience} {t(\"Year\")}s</td>\r\n            <td style={{ textAlign: \"right\" }}>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { editarDatosAccionista(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-border-color mdi-24px\"></i></Button>\r\n              <Button type=\"button\" color=\"link\" onClick={(resp) => { eliminarAccionista(data) }} className=\"btn btn-link\" ><i className=\"mdi mdi-trash-can-outline mdi-24px\"></i></Button>\r\n            </td>\r\n          </tr>)))\r\n      } else {\r\n        setShareholderRows(\r\n          <tr key={1}>\r\n            <td colSpan=\"5\" style={{ textAlign: 'center' }}><h5>{t(\"NoData\")}</h5></td>\r\n          </tr>);\r\n\r\n      }\r\n\r\n    }).catch((error) => {\r\n\r\n    });\r\n\r\n    // api.getShareholderList()\r\n    //   .then((response) => {\r\n    //     setDataList(response);\r\n    //     setShareholderList(shareholderList);\r\n\r\n    //     ));\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.error('Error fetching documents', error);\r\n    // });\r\n\r\n  }\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  /*         Procedemos a guardar el accionista al servicio y despues renderizar esta parte         */\r\n  /* ---------------------------------------------------------------------------------------------- */\r\n  function agregarAccionista(values, tipo) {\r\n    dataReturn.age = values.yearsExprience;\r\n    dataReturn.sectorExperience = values.yearsExprience;\r\n    dataReturn.birthDate = values.startDate;\r\n    dataReturn.nationality = values.codigoPais.label;\r\n    dataReturn.nationalityIdentification = 2;\r\n    // dataReturn.nationalityIdentification=values.codigoPa is.value;\r\n    dataReturn.shareholderIdentification = Math.floor(Math.random() * (100));\r\n    dataReturn.shareholderName = values.name;\r\n    dataReturn.shareholding = 3;\r\n    dataReturn.transactId = Number(dataLocation.transactionId);\r\n    dataReturn.status = true;\r\n    setDataReturn(dataReturn);\r\n    let dato = {\r\n      transactId: Number(dataLocation.transactionId),\r\n      nationalityIdentification: values.codigoPais.value,\r\n      nationality: values.codigoPais.label,\r\n      shareholding: Number(values.participation),\r\n      sectorExperience: Number(values.yearsExprience),\r\n    }\r\n    if (values.identificationType != \"RUC\") {\r\n      dato.shareholderName = values.firstName + \" \" + values.secondName + \" \" + values.firstLastName + \" \" + values.secondLastName;\r\n      dato.birthDate = values.startDate;\r\n    } else {\r\n      dato.shareholderName = values.firstName;\r\n      dato.birthDate = \"2000-01-01\";\r\n    }\r\n    let dataSet = {\r\n      transactId: Number(dataLocation.transactionId),\r\n      personType: values.personType,\r\n      identificationType: values.identificationType,\r\n      identificationNumber: values.identificationNumber,\r\n      shareholderFirstName: values.firstName ? values.firstName : (values.firstName2 ? values.firstName2 : \"\"),\r\n      shareholderMiddleName: values.secondName ? values.secondName : \"\",\r\n      shareholderFirstSurname: values.firstLastName ? values.firstLastName : \"\",\r\n      shareholderSecondSurname: values.secondLastName ? values.secondLastName : \"\",\r\n      nationality: {\r\n        code: values.codigoPais.value,\r\n        name: values.codigoPais.label\r\n      },\r\n      birthDate: dato.birthDate?dato.birthDate:\"2000-01-01\",\r\n      participation: Number(values.participation),\r\n      yearsExperience: Number(values.yearsExprience)\r\n    }\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    /*                               Procedemos a guardar el accionista                               */\r\n    /* ---------------------------------------------------------------------------------------------- */\r\n    const apiBack = new BackendServices();\r\n    if (tipo == \"guardar\") {\r\n\r\n      apiBack.nuevoAccionista(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    } else {\r\n      dataSet.shareholderId = values.shareholderId;\r\n      apiBack.actualizarAccionista(dataSet).then(resp => {\r\n        if (resp !== null && resp !== undefined) {\r\n          setsuccessSave_dlg(true)\r\n          toggleShowModelAttachment();\r\n        } else {\r\n          toggleShowModelAttachment();\r\n          seterror_dlg(true);\r\n        }\r\n      }).catch(error => {\r\n        seterror_dlg(true);\r\n      })\r\n    }\r\n  }\r\n\r\n  //abrimos modal para adjunar archivos\r\n  function toggleShowModelAttachment() {\r\n\r\n    setShowModelAttachment(!showModelAttachment);\r\n    removeBodyCss()\r\n  }\r\n  function verDatosAccionista(data) {\r\n    setdataAcciones(data)\r\n    setbotonValidation(false);\r\n    toggleShowModelAttachment()\r\n  }\r\n  function editarDatosAccionista(data) {\r\n    setdataAcciones(data)\r\n    settipo(\"editar\");\r\n    setbotonValidation(true);\r\n    toggleShowModelAttachment()\r\n  }\r\n  function procesarDatosTabla(option, value) {\r\n    switch (option) {\r\n      case 1: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                       Aqui procedemos a agregar un accionista a la lista                       */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        // console.log(value);\r\n        break;\r\n      }\r\n      case 2: {\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        /*                         Procedemos a eliminar el accionista de la lista                        */\r\n        /* ---------------------------------------------------------------------------------------------- */\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  function eliminarAccionista(data) {\r\n    setDataDelete(data)\r\n    setconfirm_alert(true)\r\n\r\n  }\r\n  function removeBodyCss() {\r\n    document.body.classList.add(\"no_padding\")\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h5>\r\n        {t(\"Shareholder Information\")}\r\n      </h5>\r\n      <p className=\"card-title-desc\"></p>\r\n      <AvForm id=\"frmInformacionAccionista\" className=\"needs-validation\" onSubmit={handleSubmit}>\r\n        <Row>\r\n          <Col md=\"12\">\r\n\r\n            <Table className=\"table mb-0\">\r\n              <thead className=\"table-light\">\r\n                <tr>\r\n                  <th>{t(\"ID Number\")}</th>\r\n                  <th>{t(\"Name\")}</th>\r\n                  <th>{t(\"Nationality\")}</th>\r\n                  <th>{t(\"DBO\")}</th>\r\n                  <th>{t(\"Participation\")}</th>\r\n                  <th>{t(\"YearsExprience\")}</th>\r\n                  <th><Link className=\"float-end\" onClick={() => {\r\n                    setbotonValidation(true); setdataAcciones({\r\n                      transactId: 0,\r\n                      personType: \"\",\r\n                      identificationType: \"\",\r\n                      identificationNumber: \"\",\r\n                      shareholderFirstName: \"\",\r\n                      shareholderMiddleName: \"\",\r\n                      shareholderFirstSurname: \"\",\r\n                      shareholderSecondSurname: \"\",\r\n                      nationality: {\r\n                        code: \"\",\r\n                        name: \"\"\r\n                      },\r\n                      birthDate: 0,\r\n                      participation: 0,\r\n                      yearsExperience: 0\r\n                    }); settipo(\"guardar\"); toggleShowModelAttachment()\r\n                  }}><i className=\"mdi mdi-plus-box-multiple-outline mdi-24px\"></i></Link></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {shareholderRows}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <div className=\"mb-3\">\r\n              <Label htmlFor=\"companyHistoryDetails\">{t(\"Details\")}</Label>\r\n              <AvField onChange={(e) => { dataReturn.observations = e.target.value; setDataReturn(dataReturn); }}\r\n                className=\"form-control\"\r\n                name=\"informacionAccionistaDetails\"\r\n                id=\"informacionAccionistaDetails\"\r\n                type=\"textarea\"\r\n                rows=\"7\"\r\n                value={props.jsonAccionistas.observations}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n      </AvForm>\r\n      {successSave_dlg ? (\r\n        <SweetAlert\r\n          success\r\n          title={t(\"SuccessDialog\")}\r\n          onConfirm={() => {\r\n            setsuccessSave_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {t(\"SuccessSaveMessage\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n\r\n      {error_dlg ? (\r\n        <SweetAlert\r\n          error\r\n          title={t(\"ErrorDialog\")}\r\n          onConfirm={() => {\r\n            seterror_dlg(false)\r\n            loadInitialData();\r\n          }}\r\n        >\r\n          {error_msg}\r\n        </SweetAlert>\r\n      ) : null}\r\n      {confirm_alert ? (\r\n        <SweetAlert\r\n          title={t(\"Areyousure\")}\r\n          warning\r\n          showCancel\r\n          confirmButtonText={t(\"Yesdeleteit\")}\r\n          confirmBtnBsStyle=\"success\"\r\n          cancelBtnBsStyle=\"danger\"\r\n          onConfirm={() => {\r\n            const apiBack = new BackendServices();\r\n            apiBack.eliminarAccionista({ transactId: dataDelete.transactId, shareholderId: dataDelete.shareholderId }).then(resp => {\r\n              if (resp.statusCode == \"500\") {\r\n                setconfirm_alert(false)\r\n                seterror_dlg(true)\r\n              } else {\r\n                setconfirm_alert(false)\r\n                setsuccessSave_dlg(true)\r\n              }\r\n            }).catch(error => {\r\n              setconfirm_alert(false)\r\n              seterror_dlg(true)\r\n            })\r\n          }}\r\n          onCancel={() => setconfirm_alert(false)}\r\n        >\r\n          {t(\"Youwontbeabletorevertthis\")}\r\n        </SweetAlert>\r\n      ) : null}\r\n      <ModalInfoAccionistas dataGeneralIA={dataGeneralIA} tipo={tipo} agregarAccionista={agregarAccionista} botones={botonValidation} dataAcciones={dataAcciones} procesarDatosTabla={procesarDatosTabla} isOpen={showModelAttachment} toggle={() => { toggleShowModelAttachment() }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n})\r\n\r\nInformacionAccionista.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default InformacionAccionista;\r\n"]},"metadata":{},"sourceType":"module"}